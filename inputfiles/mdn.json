[
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/instantiate_static",
    "pageType": "webassembly-function",
    "summary": "The WebAssembly.instantiate() static method allows you to\ncompile and instantiate WebAssembly code. This function has two overloads:"
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Global",
    "pageType": "webassembly-interface",
    "summary": "A WebAssembly.Global object represents a global variable instance, accessible from both JavaScript and importable/exportable across one or more WebAssembly.Module instances. This allows dynamic linking of multiple modules."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Global/Global",
    "pageType": "webassembly-constructor",
    "summary": "A WebAssembly.Global() constructor creates a new Global object representing a global variable instance, accessible from both JavaScript and importable/exportable across one or more WebAssembly.Module instances.\nThis allows dynamic linking of multiple modules."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/instantiateStreaming_static",
    "pageType": "webassembly-function",
    "summary": "The WebAssembly.instantiateStreaming() static method compiles\nand instantiates a WebAssembly module directly from a streamed underlying source. This\nis the most efficient, optimized way to load Wasm code."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Memory",
    "pageType": "webassembly-interface",
    "summary": "The WebAssembly.Memory object is a resizable ArrayBuffer or SharedArrayBuffer that holds raw bytes of memory accessed by a WebAssembly.Instance."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Memory/Memory",
    "pageType": "webassembly-constructor",
    "summary": "The WebAssembly.Memory() constructor creates a new Memory object whose buffer property is a resizable ArrayBuffer or SharedArrayBuffer that holds the raw bytes of memory accessed by a WebAssembly.Instance."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Memory/buffer",
    "pageType": "webassembly-instance-property",
    "summary": "The read-only buffer prototype property of the WebAssembly.Memory object returns the buffer contained in the memory. Depending on whether or not the memory was constructed with shared: true, the buffer is either an ArrayBuffer or a SharedArrayBuffer."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Memory/grow",
    "pageType": "webassembly-instance-method",
    "summary": "The grow() prototype method of the WebAssembly.Memory object increases the size of the memory instance by a specified number of WebAssembly pages."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/CompileError",
    "pageType": "webassembly-interface",
    "summary": "The WebAssembly.CompileError object indicates an error during WebAssembly decoding or validation."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/CompileError/CompileError",
    "pageType": "webassembly-constructor",
    "summary": "The WebAssembly.CompileError() constructor creates a new\nWebAssembly CompileError object, which indicates an error during\nWebAssembly decoding or validation."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Table",
    "pageType": "webassembly-interface",
    "summary": "The WebAssembly.Table object is a JavaScript wrapper object — an array-like structure representing a WebAssembly table, which stores homogeneous references. A table created by JavaScript or in WebAssembly code will be accessible and mutable from both JavaScript and WebAssembly."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Table/Table",
    "pageType": "webassembly-constructor",
    "summary": "The WebAssembly.Table() constructor creates a new Table object of the given size and element type, filled with the provided value."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Table/set",
    "pageType": "webassembly-instance-method",
    "summary": "The set() prototype method of the WebAssembly.Table object mutates a reference stored at a given index to a different value."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Table/get",
    "pageType": "webassembly-instance-method",
    "summary": "The get() prototype method of the WebAssembly.Table() object retrieves the element stored at a given index."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Table/length",
    "pageType": "webassembly-instance-property",
    "summary": "The read-only length prototype property of the WebAssembly.Table object returns the length of the table, i.e., the number of elements in the table."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Table/grow",
    "pageType": "webassembly-instance-method",
    "summary": "The grow() prototype method of the WebAssembly.Table object increases the size of the Table instance by a specified number of elements, filled with the provided value."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/validate_static",
    "pageType": "webassembly-function",
    "summary": "The WebAssembly.validate() static method validates a given typed array of WebAssembly binary\ncode, returning whether the bytes form a valid Wasm module (true) or not\n(false)."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/LinkError",
    "pageType": "webassembly-interface",
    "summary": "The WebAssembly.LinkError object indicates an error during module instantiation (besides traps from the start function)."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/LinkError/LinkError",
    "pageType": "webassembly-constructor",
    "summary": "The WebAssembly.LinkError() constructor creates a new\nWebAssembly LinkError object, which indicates an error during module\ninstantiation (besides traps\nfrom the start function)."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/compileStreaming_static",
    "pageType": "webassembly-function",
    "summary": "The WebAssembly.compileStreaming() static method compiles a WebAssembly.Module directly from a streamed underlying source.\nThis function is useful if it is necessary to compile a module before it can be instantiated (otherwise, the WebAssembly.instantiateStreaming() function should be used)."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/RuntimeError",
    "pageType": "webassembly-interface",
    "summary": "The WebAssembly.RuntimeError object is the error type that is thrown whenever WebAssembly specifies a trap."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/RuntimeError/RuntimeError",
    "pageType": "webassembly-constructor",
    "summary": "The WebAssembly.RuntimeError() constructor creates a new\nWebAssembly RuntimeError object — the type that is thrown whenever\nWebAssembly specifies a trap."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/compile_static",
    "pageType": "webassembly-function",
    "summary": "The WebAssembly.compile() static method compiles WebAssembly binary code into a WebAssembly.Module object.\nThis function is useful if it is necessary to compile a module before it can be instantiated (otherwise, the WebAssembly.instantiate() function should be used)."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Exception",
    "pageType": "webassembly-interface",
    "summary": "The WebAssembly.Exception object represents a runtime exception thrown from WebAssembly to JavaScript, or thrown from JavaScript to a WebAssembly exception handler."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Exception/getArg",
    "pageType": "webassembly-instance-method",
    "summary": "The getArg() prototype method of the Exception object can be used to get the value of a specified item in the exception's data arguments."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Exception/stack",
    "pageType": "webassembly-instance-property",
    "summary": "The read-only stack property of an object instance of type WebAssembly.Exception may contain a stack trace."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Exception/is",
    "pageType": "webassembly-instance-method",
    "summary": "The is() prototype method of the Exception object can be used to test if the Exception matches a given tag."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Exception/Exception",
    "pageType": "webassembly-constructor",
    "summary": "The WebAssembly.Exception() constructor is used to create a new WebAssembly.Exception."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Module",
    "pageType": "webassembly-interface",
    "summary": "A WebAssembly.Module object contains stateless WebAssembly code that has already been compiled by the browser — this can be efficiently shared with Workers, and instantiated multiple times."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Module/imports_static",
    "pageType": "webassembly-static-method",
    "summary": "The WebAssembly.Module.imports() static method returns an array\ncontaining descriptions of all the declared imports of the given Module."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Module/customSections_static",
    "pageType": "webassembly-static-method",
    "summary": "The WebAssembly.Module.customSections() static method returns a copy\nof the contents of all custom sections in the given module with the given string name."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Module/exports_static",
    "pageType": "webassembly-static-method",
    "summary": "The WebAssembly.Module.exports() static method returns an\narray containing descriptions of all the declared exports of the given\nModule."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Module/Module",
    "pageType": "webassembly-constructor",
    "summary": "A WebAssembly.Module() constructor creates a new Module\nobject containing stateless WebAssembly code that has already been compiled by the\nbrowser and can be efficiently shared with Workers, and instantiated multiple times."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Tag",
    "pageType": "webassembly-interface",
    "summary": "The WebAssembly.Tag object defines a type of a WebAssembly exception that can be thrown to/from WebAssembly code."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Tag/type",
    "pageType": "webassembly-instance-method",
    "summary": "The type() prototype method of the Tag object can be used to get the sequence of data types associated with the tag."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Tag/Tag",
    "pageType": "webassembly-constructor",
    "summary": "The WebAssembly.Tag() constructor creates a new WebAssembly.Tag object."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Instance",
    "pageType": "webassembly-interface",
    "summary": "A WebAssembly.Instance object is a stateful, executable instance of a WebAssembly.Module. Instance objects contain all the Exported WebAssembly functions that allow calling into WebAssembly code from JavaScript."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Instance/exports",
    "pageType": "webassembly-instance-property",
    "summary": "The exports read-only property of the\nWebAssembly.Instance object prototype returns an object containing as its\nmembers all the functions exported from the WebAssembly module instance, to allow them\nto be accessed and used by JavaScript."
  },
  {
    "mdn_url": "/en-US/docs/WebAssembly/Reference/JavaScript_interface/Instance/Instance",
    "pageType": "webassembly-constructor",
    "summary": "The WebAssembly.Instance() constructor creates a new\nInstance object which is a stateful, executable instance of a\nWebAssembly.Module."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/angle",
    "pageType": "css-type",
    "summary": "The <angle> CSS data type represents an angle value expressed in degrees, gradians, radians, or turns. It is used, for example, in <gradient>s and in some transform functions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:only-of-type",
    "pageType": "css-pseudo-class",
    "summary": "The :only-of-type CSS pseudo-class represents an element that has no siblings of the same type (tag name)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:has-slotted",
    "pageType": "css-pseudo-class",
    "summary": "The :has-slotted CSS pseudo-class matches when the content of a <slot> element is not empty or not using the default value (see Using templates and slots for more information)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:has",
    "pageType": "css-pseudo-class",
    "summary": "The functional :has() CSS pseudo-class represents an element if any of the relative selectors that are passed as an argument match at least one element when anchored against this element. This pseudo-class presents a way of selecting a parent element or a previous sibling element with respect to a reference element by taking a relative selector list as an argument."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-meter-even-less-good-value",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-meter-even-less-good-value styles the <meter> element when the value and the optimum attributes fall outside the low-high range, but in opposite zones. To illustrate, it applies when value < low < high < optimum or value > high > low > optimum."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_scroll_snap",
    "pageType": "css-module",
    "summary": "The CSS scroll snap module provides properties that let you control the panning and scrolling behavior by defining snap positions. Content can be snapped into position as the user scrolls overflowing content within a scroll container, providing paging and scroll positioning."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_scroll_snap/Basic_concepts",
    "pageType": "guide",
    "summary": "The properties in the CSS scroll snap module enable you to define how scrolling snaps to specific points as a user scrolls through a document."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_scroll_snap/Using_scroll_snap_events",
    "pageType": "guide",
    "summary": "The CSS scroll snap module defines two scroll snap events: scrollsnapchanging and scrollsnapchange. These enable running JavaScript in response to the browser determining that new scroll snap targets are pending and selected, respectively."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Pseudo-elements",
    "pageType": "landing-page",
    "summary": "A CSS pseudo-element is a keyword added to a selector that lets you style a specific part of the selected element(s)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Descendant_combinator",
    "pageType": "css-combinator",
    "summary": "The descendant combinator — typically represented by a single space (\" \") character — combines two selectors such that elements matched by the second selector are selected if they have an ancestor (parent, parent's parent, parent's parent's parent, etc.) element matching the first selector. Selectors that utilize a descendant combinator are called descendant selectors."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/progress",
    "pageType": "css-function",
    "summary": "The progress() CSS function returns a <number> value representing the position of one value (the progress value) relative to two other values (the progress start and end values)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/rem",
    "pageType": "css-function",
    "summary": "The rem() CSS function returns a remainder left over when the first parameter is divided by the second parameter, similar to the JavaScript remainder operator (%). The remainder is the value left over when one operand, the dividend, is divided by a second operand, the divisor. It always takes the sign of the dividend."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/atan",
    "pageType": "css-function",
    "summary": "The atan() CSS function is a trigonometric function that returns the inverse tangent of a number between -∞ and +∞. The function contains a single calculation that returns the number of radians representing an <angle> between -90deg and 90deg."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_sizing",
    "pageType": "css-module",
    "summary": "The CSS box sizing module enables you to specify how elements fit their content or fit into a particular layout context. It defines sizing, minimum sizing, and maximum sizing properties, and also extends the CSS sizing properties with keywords that represent content-based intrinsic size and context-based extrinsic size."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_sizing/Understanding_aspect-ratio",
    "pageType": "guide",
    "summary": "Every element rendered to the page has a height and a width, and, therefore, an aspect ratio, which is the ratio between the width and height. The natural dimensions of a media object, which are its size without any sizing, scaling, zooming, or borders applied, are known as its natural or intrinsic size. An element's intrinsic size is determined by the element itself, not by applying formatting such as box sizing or setting border, margin, or padding widths."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-user-disabled",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-user-disabled CSS pseudo-class is a Mozilla extension that matches elements representing images that were not loaded because images have been entirely disabled by the user's preferences."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:any-link",
    "pageType": "css-pseudo-class",
    "summary": "The :any-link CSS pseudo-class selector represents an element that acts as the source anchor of a hyperlink, independent of whether it has been visited. In other words, it matches every <a> or <area> element that has an href attribute. Thus, it matches all elements that match :link or :visited."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::slotted",
    "pageType": "css-pseudo-element",
    "summary": "The ::slotted() CSS pseudo-element represents any element that has been placed into a slot inside an HTML template (see Using templates and slots for more information)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-moz-focus-inner",
    "pageType": "css-pseudo-element",
    "summary": "The ::-moz-focus-inner CSS pseudo-element is a Mozilla extension that represents an inner focus ring of the <button> element as well as the button, submit, reset, and color types of the <input> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/fit-content",
    "pageType": "css-keyword",
    "summary": "The fit-content sizing keyword represents an element size that adapts to its content while staying within the limits of its container.\nThe keyword ensures that the element is never smaller than its minimum intrinsic size (min-content) or larger than its maximum intrinsic size (max-content)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::scroll-marker",
    "pageType": "css-pseudo-element",
    "summary": "The ::scroll-marker CSS pseudo-element can be generated inside any element and represents its scroll marker. All elements can have a ::scroll-marker pseudo-element, which is placed into the ::scroll-marker-group of the nearest scroll container ancestor. A scroll marker behaves like an anchor (<a> element) whose scroll target is the marker's originating element — and scrolls the scroll container to that element when activated."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:optional",
    "pageType": "css-pseudo-class",
    "summary": "The :optional CSS pseudo-class represents any <input>, <select>, or <textarea> element that does not have the required attribute set on it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_properties_and_values_API",
    "pageType": "css-module",
    "summary": "The CSS properties and values API module defines a method for registering new CSS properties, defining the property's data type, inheritance behavior, and, optionally, an initial value.\nThis API expands on CSS custom properties for cascading variables module, which allows authors to define custom properties in CSS using two dash syntax (--).\nThe CSS properties and values API is part of the CSS Houdini umbrella of APIs."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_properties_and_values_API/Houdini",
    "pageType": "guide",
    "summary": "CSS Houdini is a set of APIs that expose parts of the CSS engine. This makes it easier for developers to create extensions for CSS. These extensions might be to polyfill features that are not yet available in a browser, experiment with new ways of doing layout, or add creative borders or other effects."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/percentage",
    "pageType": "css-type",
    "summary": "The <percentage> CSS data type represents a percentage value. It is often used to define a size as relative to an element's parent object. Numerous properties can use percentages, such as width, height, margin, padding, and font-size."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_paged_media",
    "pageType": "css-module",
    "summary": "The CSS paged media module defines the properties that control the presentation of content for print or any other media that splits content into discrete pages. It allows you to set page breaks, control printable areas, and style left and right pages differently."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/oklab",
    "pageType": "css-function",
    "summary": "The oklab() functional notation expresses a given color in the Oklab color space, which attempts to mimic how color is perceived by the human eye."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value",
    "pageType": "css-type",
    "summary": "The <color> CSS data type represents a color.\nA <color> may also include an alpha-channel transparency value, indicating how the color should composite with its background."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/contrast-color",
    "pageType": "css-function",
    "summary": "The contrast-color() CSS function takes a color value and returns a contrasting color. The function commonly ensures the WCAG AA minimum contrast. The browsers may use different and better algorithms."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/color",
    "pageType": "css-function",
    "summary": "The color() functional notation allows a color to be specified in a particular, specified color space rather than the implicit sRGB color space that most of the other color functions operate in."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/hwb",
    "pageType": "css-function",
    "summary": "The hwb() functional notation expresses a color in the sRGB color space according to its hue, whiteness, and blackness. An optional alpha component represents the color's transparency."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/oklch",
    "pageType": "css-function",
    "summary": "The oklch() functional notation expresses a given color in the Oklab color space. oklch() is the cylindrical form of oklab(), using the same L axis, but with polar Chroma (C) and Hue (h) coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/lch",
    "pageType": "css-function",
    "summary": "The lch() functional notation expresses a given color using the LCH color space, which represents lightness, chroma, and hue. It uses the same L axis as the lab() color function of the CIELab color space, but it uses the polar coordinates C (Chroma) and H (Hue)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/device-cmyk",
    "pageType": "css-function",
    "summary": "The device-cmyk() functional notation is used to express CMYK colors in a device dependent way, specifying the cyan, magenta, yellow, and black components."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/color-mix",
    "pageType": "css-function",
    "summary": "The color-mix() functional notation takes two <color> values and returns the result of mixing them in a given colorspace by a given amount."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/hsl",
    "pageType": "css-function",
    "summary": "The hsl() functional notation expresses a color in the sRGB color space according to its hue, saturation, and lightness components. An optional alpha component represents the color's transparency."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/rgb",
    "pageType": "css-function",
    "summary": "The rgb() functional notation expresses a color in the sRGB color space according to its red, green, and blue components. An optional alpha component represents the color's transparency."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/lab",
    "pageType": "css-function",
    "summary": "The lab() functional notation expresses a given color in the CIE L*a*b* color space."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color_value/light-dark",
    "pageType": "css-function",
    "summary": "The light-dark() CSS <color> function enables setting two colors for a property - returning one of the two colors options by detecting if the developer has set a light or dark color scheme or the user has requested light or dark color theme - without needing to encase the theme colors within a prefers-color-scheme media feature query.\nUsers are able to indicate their color-scheme preference through their operating system settings (e.g., light or dark mode) or their user agent settings. The light-dark() function enables providing two color values where any <color> value is accepted. The light-dark() CSS color function returns the first value if the user's preference is set to light or if no preference is set and the second value if the user's preference is set to dark."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/ray",
    "pageType": "css-function",
    "summary": "The ray() CSS function defines the offset-path line segment that an animated element can follow. The line segment is referred to as \"ray\". The ray begins from an offset-position and extends in the direction of the specified angle. The length of a ray can be constrained by specifying a size and using the contain keyword."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::cue",
    "pageType": "css-pseudo-element",
    "summary": "The ::cue CSS pseudo-element matches WebVTT cues within a selected element.\nThis can be used to style captions and other cues in media with VTT tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:heading_function",
    "pageType": "css-pseudo-class",
    "summary": "The :heading() CSS pseudo-class function represents all heading elements that match a value calculated using the An+B notation. This allows you to style elements at specific heading levels at once, rather than matching and styling them individually."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::first-line",
    "pageType": "css-pseudo-element",
    "summary": "The ::first-line CSS pseudo-element applies styles to the first line of a block container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:lang",
    "pageType": "css-pseudo-class",
    "summary": "The :lang() CSS pseudo-class matches elements based on the language they are determined to be in."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/ID_selectors",
    "pageType": "css-selector",
    "summary": "The CSS ID selector matches an element based on the value of the element's id attribute. In order for the element to be selected, its id attribute must match exactly the value given in the selector."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:buffering",
    "pageType": "css-pseudo-class",
    "summary": "The :buffering CSS pseudo-class selector represents an element that is playable, such as <audio> or <video>, when the playable element is buffering a media resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_scroll_anchoring",
    "pageType": "css-module",
    "summary": "The CSS scroll anchoring module defines a mechanism to prevent page movement due to DOM changes above the visible region of a scrolling box while the user is consuming the visible content."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_scroll_anchoring/Scroll_anchoring",
    "pageType": "guide",
    "summary": "As a user of the web, you are probably familiar with the problem that scroll anchoring solves. You browse to a long page on a slow connection and begin to scroll to read the content; while you are busy reading, the part of the page you are looking at suddenly jumps. This has happened because large images or some other elements have just loaded further up in the content."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:past",
    "pageType": "css-pseudo-class",
    "summary": "The :past CSS pseudo-class selector is a time-dimensional pseudo-class that will match for any element which appears entirely before an element that matches :current. For example in a video with captions which are being displayed by WebVTT."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/dashed-ident",
    "pageType": "css-type",
    "summary": "The <dashed-ident> CSS data type denotes an arbitrary string used as an identifier."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/display-legacy",
    "pageType": "css-type",
    "summary": "CSS 2 used a single-keyword syntax for the display property, requiring separate keywords for block-level and inline-level variants of the same layout mode. This page details those values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/var",
    "pageType": "css-function",
    "summary": "The var() CSS function can be used to insert the value of a custom property (sometimes called a \"CSS variable\") instead of any part of a value of another property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_cascading_variables",
    "pageType": "css-module",
    "summary": "The CSS custom properties for cascading variables module adds support for cascading variables in CSS properties and lets you create custom properties to define these variables along with the mechanisms to use custom properties as the values for other CSS properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_cascading_variables/Using_CSS_custom_properties",
    "pageType": "guide",
    "summary": "Custom properties (sometimes referred to as CSS variables or cascading variables) are entities defined by CSS authors that represent specific values to be reused throughout a document. They are set using the @property at-rule or by custom property syntax (e.g., --primary-color: blue;). Custom properties are accessed using the CSS var() function (e.g., color: var(--primary-color);)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::after",
    "pageType": "css-pseudo-element",
    "summary": "In CSS, ::after creates a pseudo-element that is the last child of the selected element. It is often used to add cosmetic content to an element with the content property. It is inline by default."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:seeking",
    "pageType": "css-pseudo-class",
    "summary": "The :seeking CSS pseudo-class selector represents an element that is playable, such as <audio> or <video>, when the playable element is seeking a playback position in the media resource.\nA resource is considered to be seeking if the user has requested playback of a specific position in the media resource, but the media element has not yet reached that position."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/attr",
    "pageType": "css-function",
    "summary": "The attr() CSS function is used to retrieve the value of an attribute of the selected element and use it in a property value, similar to how the var() function substitutes a custom property value. It can also be used with pseudo-elements, in which case the attribute's value on the pseudo-element's originating element is returned."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/resolution",
    "pageType": "css-type",
    "summary": "The <resolution> CSS data type, used for describing resolutions in media queries, denotes the pixel density of an output device, i.e., its resolution."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/length-percentage",
    "pageType": "css-type",
    "summary": "The <length-percentage> CSS data type represents a value that can be either a <length> or a <percentage>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::target-text",
    "pageType": "css-pseudo-element",
    "summary": "The ::target-text CSS pseudo-element represents the text that has been scrolled to if the browser supports text fragments. It allows authors to choose how to highlight that section of text."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_colors",
    "pageType": "css-module",
    "summary": "The CSS colors module defines colors, color types, color blending, opacity, and how you can apply these colors and effects to HTML content."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_colors/Applying_color",
    "pageType": "guide",
    "summary": "With CSS, there are lots of ways to add color to your HTML elements to create the look you want. This guide is a primer introducing how CSS can be used to apply colors to HTML elements. This guide includes lists of the CSS properties that set color in their values and how to use colors both in stylesheets and in other ways."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_colors/Color_values",
    "pageType": "guide",
    "summary": "To represent a color in CSS, you have to find a way to translate the analog concept of \"color\" into a digital form that a computer can use. This is typically done by breaking the color down into components, such as amounts of different primary colors to mix together, or brightness and hue. Defined color models ensure that colors will appear the same no matter where they are rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_colors/Using_color_wisely",
    "pageType": "guide",
    "summary": "Choosing the right colors for a website can be tricky, especially if you aren't well-grounded in art, design, or at least basic color theory. The wrong color choice can render your site unattractive, or worse, leave the content unreadable due to problems with contrast or conflicting colors. Using the wrong colors can result in your content being outright unusable by people with certain vision problems, particularly color blindness."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_colors/Relative_colors",
    "pageType": "guide",
    "summary": "The CSS colors module defines relative color syntax, which allows a CSS <color> value to be defined relative to another color. This is a powerful feature that enables easy creation of complements to existing colors — such as lighter, darker, saturated, semi-transparent, or inverted variants — enabling more effective color palette creation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_colors/Color_mixer",
    "pageType": "guide",
    "summary": "This tool lets you mix two colors in any color space using the color-mix() function and copy the resulting color in any CSS color format."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_colors/Color_format_converter",
    "pageType": "guide",
    "summary": "This tool lets you enter or pick a color and copy its corresponding value in any CSS color format. You can use the generated color value anywhere the <color> data type is supported in CSS. This tool can also help you understand the syntax of the different color notations."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:first",
    "pageType": "css-pseudo-class",
    "summary": "The :first CSS pseudo-class, used with the @page at-rule, represents the first page of a printed document. (See :first-child for general first element of a node.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:host-context",
    "pageType": "css-pseudo-class",
    "summary": "The :host-context() CSS pseudo-class allows you to style elements within a shadow DOM differently based on the selector of the shadow host (the element that has the shadow root) and its DOM ancestors."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/color-interpolation-method",
    "pageType": "css-type",
    "summary": "The <color-interpolation-method> CSS data type represents the color space used for interpolation between <color> values. It can be used to override the default interpolation color space for color-related functional notations such as color-mix() and linear-gradient()."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_generated_content",
    "pageType": "css-module",
    "summary": "The CSS generated content module defines how an element's content can be replaced and content can be added to a document with CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:modal",
    "pageType": "css-pseudo-class",
    "summary": "The :modal CSS pseudo-class matches an element that is in a state in which it excludes all interaction with elements outside it until the interaction has been dismissed. Multiple elements can be selected by the :modal pseudo-class at the same time, but only one of them will be active and able to receive input."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/alpha-value",
    "pageType": "css-type",
    "summary": "The <alpha-value> CSS data type represents a value that can be either a <number> or a <percentage>, specifying the alpha channel or transparency of a color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:focus-within",
    "pageType": "css-pseudo-class",
    "summary": "The :focus-within CSS pseudo-class matches an element if the element or any of its descendants are focused. In other words, it represents an element that is itself matched by the :focus pseudo-class or has a descendant that is matched by :focus. (This includes descendants in shadow trees.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@keyframes",
    "pageType": "css-at-rule",
    "summary": "The @keyframes CSS at-rule controls the intermediate steps in a CSS animation sequence by defining styles for keyframes (or waypoints) along the animation sequence. This gives more control over the intermediate steps of the animation sequence than transitions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_media_queries",
    "pageType": "css-module",
    "summary": "The CSS media queries module enables testing and querying of viewport values and browser or device features, to conditionally apply CSS styles based on the current user environment. Media queries are used in the CSS @media rule and other contexts and languages such as HTML and JavaScript."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries",
    "pageType": "guide",
    "summary": "Media queries allow you to apply CSS styles depending on a device's media type (such as print vs. screen) or other features or characteristics such as screen resolution or orientation, aspect ratio, browser viewport width or height, user preferences such as preferring reduced motion, data usage, or transparency."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries_for_accessibility",
    "pageType": "guide",
    "summary": "CSS media queries can be used to help users with disabilities better experience your website."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_media_queries/Testing_media_queries",
    "pageType": "guide",
    "summary": "The DOM provides features that can test the results of a media query programmatically, via the MediaQueryList interface and its methods and properties. Once you've created a MediaQueryList object, you can check the result of the query or receive notifications when the result changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_media_queries/Printing",
    "pageType": "guide",
    "summary": "There may be times in which your website or application would like to improve the user's experience when printing content. There are several possible scenarios:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Universal_selectors",
    "pageType": "css-selector",
    "summary": "The CSS universal selector (*) matches elements of any type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_shapes/Overview_of_shapes",
    "pageType": "guide",
    "summary": "The CSS Shapes module describes geometric shapes in CSS. This article provides an overview of how you can use shapes to wrap text around floated elements that are not necessarily rectangular."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_shapes",
    "pageType": "css-module",
    "summary": "The CSS shapes module describes geometric shapes. It also defines CSS properties that can use the shapes to control the geometry of an element's float area; this area can then be applied to exclusions, or specify an element's content area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_shapes/Basic_shapes",
    "pageType": "guide",
    "summary": "CSS shapes can be defined using the <basic-shape> type. In this guide, we discuss creating rectangles, circles, ellipses, and polygons with the shape-outside property. These are features defined in the CSS shapes module."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_shapes/From_box_values",
    "pageType": "guide",
    "summary": "A straightforward way to create a shape is to use a value from the CSS box model module. This article explains how to do this."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_shapes/Shapes_from_images",
    "pageType": "guide",
    "summary": "In this guide, we will take a look at how we can create a shape from an image file with an alpha channel or even from a CSS Gradient. This is a very flexible way to create shapes. Rather than drawing a path with a complex polygon in CSS, you can create the shape in a graphics program and then use the path created by the pixels less opaque than a threshold value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_shapes/Shape_generator",
    "pageType": "guide",
    "summary": "This shape generator tool can be used to define the coordinates and syntax for features that use <basic-shape>"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/hypot",
    "pageType": "css-function",
    "summary": "The hypot() CSS function is an exponential function that returns the square root of the sum of squares of its parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/overflow_value",
    "pageType": "css-type",
    "summary": "The <overflow> enumerated value type represents the keyword values for the overflow-block, overflow-inline, overflow-x, and overflow-y longhand properties and the overflow shorthand property. These properties apply to block containers, flex containers, and grid containers."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/ratio",
    "pageType": "css-type",
    "summary": "The <ratio> CSS data type describes the proportional relationship between two values. It mostly represents the aspect ratio, which relates width to height. For example, the <ratio> is used as a value for the aspect-ratio media feature in @media media queries, the aspect-ratio size feature in @container container queries, and as a value for the CSS aspect-ratio property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-loading",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-loading CSS pseudo-class is a Mozilla extension that matches elements that can't be displayed because they have not started loading, such as images that haven't started to arrive yet. Note that images that are in the process of loading are not matched by this pseudo-class."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_pseudo-elements",
    "pageType": "css-module",
    "summary": "The CSS pseudo-element module defines abstract elements that are not directly present in the document tree. These abstract elements, called pseudo-elements, represent portions of the render tree that can be selected and styled. Pseudo-elements are used to create abstractions about the document tree beyond those provided by the document tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::selection",
    "pageType": "css-pseudo-element",
    "summary": "The ::selection CSS pseudo-element applies styles to the part of a document that has been highlighted by the user (such as clicking and dragging the mouse across text)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::part",
    "pageType": "css-pseudo-element",
    "summary": "The ::part CSS pseudo-element represents any element within a shadow tree that has a matching part attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_model",
    "pageType": "css-module",
    "summary": "The CSS box model module defines the margin and padding properties, which along with the height, width and border properties, make up the CSS box model."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_model/Mastering_margin_collapsing",
    "pageType": "guide",
    "summary": "The top and bottom margins of blocks are sometimes combined (collapsed) into a single margin whose size is the largest of the individual margins (or just one of them, if they are equal), a behavior known as margin collapsing. Note that the margins of floating and absolutely positioned elements never collapse."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_model/Introduction_to_the_CSS_box_model",
    "pageType": "guide",
    "summary": "When laying out a document, the browser's rendering engine represents each element as a rectangular box according to the standard CSS basic box model. CSS determines the size, position, and properties (color, background, border size, etc.) of these boxes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/number",
    "pageType": "css-type",
    "summary": "The <number> CSS data type represents a number, being either an integer, a number with a fractional component, or a base-ten exponent in scientific notation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/-moz-image-rect",
    "pageType": "css-function",
    "summary": "The -moz-image-rect value for CSS background-image lets you use a portion of a larger image as a background."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:state",
    "pageType": "css-pseudo-class",
    "summary": "The :state() CSS pseudo-class matches custom elements that have the specified custom state."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/type",
    "pageType": "css-function",
    "summary": "The type() CSS function allows you to specify a particular data type, and is used by the following CSS features:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:popover-open",
    "pageType": "css-pseudo-class",
    "summary": "The :popover-open CSS pseudo-class represents a popover element (i.e., one with a popover attribute) that is in the showing state. You can use this to apply style to popover elements only when they are shown."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-slider-thumb",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-slider-thumb CSS pseudo-element represents the \"thumb\" that the user can move within the \"groove\" of an <input> of type=\"range\" to alter its numerical value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:heading",
    "pageType": "css-pseudo-class",
    "summary": "The :heading CSS pseudo-class matches all heading elements in a document. This allows you to style all headings at once, rather than matching and styling them individually."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_multicol_layout",
    "pageType": "css-module",
    "summary": "The CSS multi-column layout module lets you divide content across multiple columns. By using the properties in this module, you can define the preferred number and width of columns, the gap size between columns, and the visual appearance of the optional column dividing lines (known as column rules). You can also define how content should flow from column to column and how to break content between columns."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_multicol_layout/Styling_columns",
    "pageType": "guide",
    "summary": "As column boxes created inside multi-column (multicol) containers are anonymous boxes, styling individual columns is not possible, but we can style the gaps between the columns and the container in general. This guide explains how to change the gap and style rules between columns."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_multicol_layout/Handling_overflow_in_multicol_layout",
    "pageType": "guide",
    "summary": "In this guide, we look at how to deal with overflow in a multi-column (multicol) layout, both inside the column boxes and in situations where there is more content than will fit into the container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_multicol_layout/Using_multicol_layouts",
    "pageType": "guide",
    "summary": "The properties defined in the CSS multi-column layout module extend the block layout mode, enabling the easy definition of multiple columns of text. People have trouble reading text if lines are too long. If it takes too long for the eyes to move from the end of one line to the beginning of the next, readers can lose track of which line they were on. To provide for a better user experience when reading text making use of a large screen, you should limit the width of text by using columns of text placed side by side, just as newspapers do."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_multicol_layout/Basic_concepts",
    "pageType": "guide",
    "summary": "Multi-column layout, usually referred to as multicol layout, is a specification for laying out content into a set of column boxes much like columns in a newspaper. This guide explains how the specification works with some common use case examples."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_multicol_layout/Spanning_balancing_columns",
    "pageType": "guide",
    "summary": "In this guide, we look at how to make elements span across columns inside the multi-column (multicol) container and how to control how the columns are filled."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_multicol_layout/Handling_content_breaks_in_multicol_layout",
    "pageType": "guide",
    "summary": "Content between column boxes in a multicol layout breaks in the same way that it breaks between pages in paged media. In both contexts, you can control where and how content breaks by using properties of the CSS fragmentation module. In this guide, we see how fragmentation works in a multi-column container or multicol container for short."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:where",
    "pageType": "css-pseudo-class",
    "summary": "The :where() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:placeholder-shown",
    "pageType": "css-pseudo-class",
    "summary": "The :placeholder-shown CSS pseudo-class represents any <input> or <textarea> element that is currently displaying placeholder text."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_syntax/At-rule",
    "pageType": "guide",
    "summary": "At-rules are CSS statements that instruct CSS how to behave. They begin with an at-sign, @ (U+0040 COMMERCIAL AT), followed by an identifier. They include everything from the at-keyword up to the next semicolon, ; (U+003B SEMICOLON), or the next CSS block, whichever comes first."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_syntax",
    "pageType": "css-module",
    "summary": "The CSS syntax module describes, in general terms, the structure and syntax of cascading stylesheets, or CSS. It defines CSS as the language for describing the rendering of structured documents (such as HTML and XML), on the web and elsewhere."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_syntax/Comments",
    "pageType": "guide",
    "summary": "A CSS comment is used to add explanatory notes to the code or to prevent the browser from interpreting specific parts of the style sheet. By design, comments have no effect on the layout of a document."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_syntax/Error_handling",
    "pageType": "guide",
    "summary": "When an error exists in CSS, such as an invalid value or a missing semicolon, instead of throwing an error like in JavaScript, the browser (or other user agent) will gracefully recover. Browsers don't provide CSS-related alerts or otherwise indicate errors have occurred in styles. They just discard invalid content and parse subsequent valid styles. This is a feature of CSS, not a bug."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_syntax/At-rule_functions",
    "pageType": "guide",
    "summary": "CSS at-rule functions are at-rule statements that represent complex rules or can invoke special data processing or calculations."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_syntax/Syntax",
    "pageType": "guide",
    "summary": "The basic goal of the Cascading Stylesheet (CSS) language is to allow a browser engine to paint elements of the page with specific features, like colors, positioning, or decorations. The CSS syntax reflects this goal and its basic building blocks are:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/log",
    "pageType": "css-function",
    "summary": "The log() CSS function is an exponential function that returns the logarithm of a number."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_view_transitions",
    "pageType": "css-module",
    "summary": "The CSS view transitions module defines the behavior of the View Transition API, which allows developers to create animated transitions between different states within a document and across documents. This module also defines the CSS properties and pseudo-elements for styling these transitions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/box-edge",
    "pageType": "css-type",
    "summary": "The <box-edge> value types represent a box edge keyword, such as content-box and border-box. The box-edge keywords are used to define different aspects of an element's box model and how elements are positioned and rendered on screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/time",
    "pageType": "css-type",
    "summary": "The <time> CSS data type represents a time value expressed in seconds or milliseconds. It is used in animation, transition, and related properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:visited",
    "pageType": "css-pseudo-class",
    "summary": "The :visited CSS pseudo-class applies once the link has been visited by the user. For privacy reasons, the styles that can be modified using this selector are very limited. The :visited pseudo-class applies only to <a> and <area> elements that have an href attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_transitions",
    "pageType": "css-module",
    "summary": "The CSS transitions module specifies functionality for creating gradual transitions between different CSS property values. The behavior of these transitions can be controlled by specifying their easing function, duration, and other values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_transitions/Using_CSS_transitions",
    "pageType": "guide",
    "summary": "CSS transitions provide a way to control animation speed when changing CSS properties. Instead of having property changes take effect immediately, you can cause the changes in a property to take place over a period of time. For example, if you change the color of an element from white to black, usually the change is instantaneous. With CSS transitions enabled, changes occur at time intervals that follow an acceleration curve, all of which can be customized."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/anchor-size",
    "pageType": "css-function",
    "summary": "The anchor-size() CSS function enables setting anchor-positioned element's size, position, and margins relative to the dimensions of anchor elements. It returns the <length> of a specified side of the target anchor element. anchor-size() is only valid when used within the value of anchor-positioned elements' sizing, inset, and margin properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:is",
    "pageType": "css-pseudo-class",
    "summary": "The :is() CSS pseudo-class function takes a selector list as its argument, and selects any element that can be selected by one of the selectors in that list. This is useful for writing large selectors in a more compact form."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:nth-of-type",
    "pageType": "css-pseudo-class",
    "summary": "The :nth-of-type() CSS pseudo-class matches elements based on their position among siblings of the same type (tag name)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/display-internal",
    "pageType": "css-type",
    "summary": "Some layout models such as table and ruby have a complex internal structure, with several different roles that their children and descendants can fill. This page defines those \"internal\" display values, which only have meaning within that particular layout mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Tutorials",
    "pageType": "landing-page",
    "summary": "Learning CSS may be a daunting task.\nIn order to help you, we have written numerous tutorials about CSS.\nSome are aimed at complete beginners, while others present complex features to be used by more experienced users."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_custom_functions_and_mixins",
    "pageType": "css-module",
    "summary": "The CSS custom functions and mixins module allows developers to create reusable blocks of CSS code that can accept arguments, contain complex logic (defined using features such as CSS if() functions and @media at-rules), and return values based on that logic."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_custom_functions_and_mixins/Using_custom_functions",
    "pageType": "guide",
    "summary": "CSS custom functions enable you to create reusable blocks of CSS code that can accept arguments, contain complex logic (defined using features such as CSS if() functions and @media at-rules), and return values based on that logic. They work similarly to CSS custom properties, but provide more flexibility."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:read-write",
    "pageType": "css-pseudo-class",
    "summary": "The :read-write CSS pseudo-class represents an element (such as input or textarea) that is editable by the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::scroll-button",
    "pageType": "css-pseudo-element",
    "summary": "The ::scroll-button() CSS pseudo-element represents a button for controlling the scrolling of a scroll container. They are generated on scroll containers when their content value is not none. The direction of the scrolling is determined by the parameter value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/content-distribution",
    "pageType": "css-type",
    "summary": "The <content-distribution> enumerated value type is used by justify-content and align-content properties, and the place-content shorthand, to distribute a container's extra space among its alignment subjects."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:target",
    "pageType": "css-pseudo-class",
    "summary": "The :target CSS pseudo-class selects the target element of the document. When the document is loaded, the target element is derived using the document's URL fragment identifier."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/self-position",
    "pageType": "css-type",
    "summary": "The <self-position> enumerated value data type is used by the justify-self and align-self properties, and the place-self shorthand, to align the box within its alignment container. It is also used by the justify-items and align-items properties, and the place-items shorthand, to specify default values for justify-self and align-self."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/tan",
    "pageType": "css-function",
    "summary": "The tan() CSS function is a trigonometric function that returns the tangent of a number, which is a value between −infinity and infinity. The function contains a single calculation that must resolve to either a <number> or an <angle> by interpreting the result of the argument as radians."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/image",
    "pageType": "css-type",
    "summary": "The <image> CSS data type represents a two-dimensional image."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/image/image",
    "pageType": "css-function",
    "summary": "The image() CSS function defines an <image> in a similar fashion to the url() function, but with added functionality including specifying the image's directionality, displaying just a part of that image defined by a media fragment, and specifying a solid color as a fallback in case none of the specified images are able to be rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/image/image-set",
    "pageType": "css-function",
    "summary": "The image-set() CSS functional notation is a method of letting the browser pick the most appropriate CSS image from a given set, primarily for high pixel density screens."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/image/paint",
    "pageType": "css-function",
    "summary": "The paint() CSS function defines an <image> value generated with a PaintWorklet."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::before",
    "pageType": "css-pseudo-element",
    "summary": "In CSS, ::before creates a pseudo-element that is the first child of the selected element. It is often used to add cosmetic content to an element with the content property. It is inline by default."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-last-node",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-last-node CSS pseudo-class is a Mozilla extension that represents any element that is the last child node of some other element. It differs from :last-child because it does not match a last-child element with (non-whitespace) text after it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function",
    "pageType": "css-type",
    "summary": "The <filter-function> CSS data type represents a graphical effect that can change the appearance of an input image. It is used in the filter and backdrop-filter properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/blur",
    "pageType": "css-function",
    "summary": "The blur() CSS function applies a Gaussian blur to the input image. Its result is a <filter-function>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/opacity",
    "pageType": "css-function",
    "summary": "The opacity() CSS function applies transparency to the samples in the input image. Its result is a <filter-function>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/drop-shadow",
    "pageType": "css-function",
    "summary": "The drop-shadow() CSS function applies a drop shadow effect to the input image. Its result is a <filter-function>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/brightness",
    "pageType": "css-function",
    "summary": "The brightness() CSS <filter-function> applies a linear multiplier value on an element or an input image, making the image appear brighter or darker."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/hue-rotate",
    "pageType": "css-function",
    "summary": "The hue-rotate() CSS function rotates the hue of an element and its contents. Its result is a <filter-function>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/saturate",
    "pageType": "css-function",
    "summary": "The saturate() CSS function super-saturates or desaturates the input image. Its result is a <filter-function>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/invert",
    "pageType": "css-function",
    "summary": "The invert() CSS function inverts the color samples in the input image. Its result is a <filter-function>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/sepia",
    "pageType": "css-function",
    "summary": "The sepia() CSS function converts the input image to sepia, giving it a warmer, more yellow/brown appearance. Its result is a <filter-function>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/grayscale",
    "pageType": "css-function",
    "summary": "The grayscale() CSS function converts the input image to grayscale. Its result is a <filter-function>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/filter-function/contrast",
    "pageType": "css-function",
    "summary": "The contrast() CSS function adjusts the contrast of the input image. Its result is a <filter-function>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:local-link",
    "pageType": "css-pseudo-class",
    "summary": "The :local-link CSS pseudo-class represents a link to the same document. Therefore an element that is the source anchor of a hyperlink whose target's absolute URL matches the element's own document URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@charset",
    "pageType": "css-at-rule",
    "summary": "The @charset CSS rule specifies the character encoding used in the style sheet. This syntax is useful when using non-ASCII characters in some CSS properties, like content. Although the first character in @charset is the @ symbol, it is not an at-rule. It is a specific byte sequence that can only be placed at the very beginning of a stylesheet. No other characters, except the Unicode byte-order mark, are allowed before it. It also does not follow normal CSS syntax rules such as use of quotes or whitespace."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-meter-bar",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-meter-bar CSS pseudo-element is a WebKit extension that represents the background of a <meter> element. It is used for selecting and applying styles to the container of a meter gauge."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/mod",
    "pageType": "css-function",
    "summary": "The mod() CSS function returns a modulus left over when the first parameter is divided by the second parameter, similar to the JavaScript remainder operator (%). The modulus is the value left over when one operand, the dividend, is divided by a second operand, the divisor. It always takes the sign of the divisor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:root",
    "pageType": "css-pseudo-class",
    "summary": "The :root CSS pseudo-class matches the root element of a tree representing the document. In HTML, :root represents the <html> element and is identical to the selector html, except that its specificity is higher."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/initial",
    "pageType": "css-keyword",
    "summary": "The initial CSS keyword applies the initial (or default) value of a property to an element. It can be applied to any CSS property, including the CSS shorthand property all. With all set to initial, all CSS properties can be restored to their respective initial values in one go instead of restoring each one separately."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::view-transition-group",
    "pageType": "css-pseudo-element",
    "summary": "The ::view-transition-group() CSS pseudo-element represents a single view transition snapshot group."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/font-feature-settings",
    "pageType": "css-at-rule-descriptor",
    "summary": "The font-feature-settings CSS descriptor allows you to define the initial settings to use for the font defined by the @font-face at-rule. You can further use this descriptor to control typographic font features such as ligatures, small caps, and swashes, for the font defined by @font-face. The values for this descriptor are the same as the font-feature-settings property, except for the global keyword values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face",
    "pageType": "css-at-rule",
    "summary": "The @font-face CSS at-rule specifies a custom font with which to display text; the font can be loaded from either a remote server or a locally-installed font on the user's own computer."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/src",
    "pageType": "css-at-rule-descriptor",
    "summary": "The src CSS descriptor for the @font-face at-rule specifies the resource containing font data. It is required for the @font-face rule to be valid."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/unicode-range",
    "pageType": "css-at-rule-descriptor",
    "summary": "The unicode-range CSS descriptor sets the specific range of characters to be used from a font defined using the @font-face at-rule and made available for use on the current page. If the page doesn't use any character in this range, the font is not downloaded; if it uses at least one, the whole font is downloaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/ascent-override",
    "pageType": "css-at-rule-descriptor",
    "summary": "The ascent-override CSS descriptor for the @font-face at-rule defines the ascent metric for the font. The ascent metric is the height above the baseline that CSS uses to lay out line boxes in an inline formatting context."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/size-adjust",
    "pageType": "css-at-rule-descriptor",
    "summary": "The size-adjust CSS descriptor for the @font-face at-rule defines a multiplier for glyph outlines and metrics associated with this font. This makes it easier to harmonize the designs of various fonts when rendered at the same font size."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/descent-override",
    "pageType": "css-at-rule-descriptor",
    "summary": "The descent-override CSS descriptor for the @font-face at-rule defines the descent metric for the font. The descent metric is the height below the baseline that CSS uses to lay out line boxes in an inline formatting context."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/font-style",
    "pageType": "css-at-rule-descriptor",
    "summary": "The font-style CSS descriptor allows authors to specify font styles for the fonts specified in the @font-face at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/font-display",
    "pageType": "css-at-rule-descriptor",
    "summary": "The font-display descriptor for the @font-face at-rule determines how a font face is displayed based on whether and when it is downloaded and ready to use."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/font-weight",
    "pageType": "css-at-rule-descriptor",
    "summary": "The font-weight CSS @font-face descriptor enables authors to specify a single font weight, or a range of font weights, for the font specified in a @font-face at-rule. This is then used by the browser to select the appropriate font when a CSS rule sets a desired font weight."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/line-gap-override",
    "pageType": "css-at-rule-descriptor",
    "summary": "The line-gap-override CSS descriptor for the @font-face at-rule defines the line-gap metric for the font. The line-gap metric is the font recommended line-gap or external leading."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/font-variation-settings",
    "pageType": "css-at-rule-descriptor",
    "summary": "The font-variation-settings CSS descriptor allows authors to specify low-level OpenType or TrueType font variations in the @font-face at-rule. The values for this descriptor are the same as the font-variation-settings property, except for the global keyword values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/font-family",
    "pageType": "css-at-rule-descriptor",
    "summary": "The font-family CSS descriptor sets the font family for a font specified in an @font-face at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-face/font-stretch",
    "pageType": "css-at-rule-descriptor",
    "summary": "The font-stretch CSS descriptor allows authors to specify a normal, condensed, or expanded face for the fonts specified in the @font-face at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_logical_properties_and_values",
    "pageType": "css-module",
    "summary": "The CSS logical properties and values module defines logical properties and values that can control layout through logical rather than physical direction and dimension mappings. Logical properties define direction‐relative equivalents to their corresponding physical properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_logical_properties_and_values/Basic_concepts_of_logical_properties_and_values",
    "pageType": "guide",
    "summary": "The CSS logical properties and values module defines flow-relative mappings for many of the physical properties and values in CSS. This article discusses this module, and explains flow relative values and properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_logical_properties_and_values/Sizing",
    "pageType": "guide",
    "summary": "In this guide, we will explain the flow-relative mappings between physical dimension properties and logical properties used for sizing elements on our pages."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_logical_properties_and_values/Floating_and_positioning",
    "pageType": "guide",
    "summary": "The CSS logical properties and values module contains logical mappings for the physical values of float and clear, and also for the positioning properties used with positioned layout. This guide takes a look at how to use these."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_logical_properties_and_values/Margins_borders_padding",
    "pageType": "guide",
    "summary": "The CSS logical properties and values module defines flow-relative mappings for the various margin, border, and padding properties and their shorthands. In this guide, we take a look at these."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Namespace_separator",
    "pageType": "css-combinator",
    "summary": "The namespace separator (|) separates the selector from the namespace, identifying the namespace, or lack thereof, for a type selector."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/element",
    "pageType": "css-function",
    "summary": "The element() CSS function defines an <image> value generated from an arbitrary HTML element. This image is live, meaning that if the HTML element is changed, the CSS properties using the resulting value are automatically updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-moz-range-thumb",
    "pageType": "css-pseudo-element",
    "summary": "The ::-moz-range-thumb CSS pseudo-element is a Mozilla extension that represents the thumb (i.e., virtual knob) of an <input> of type=\"range\". The user can move the thumb along the input's track to alter its numerical value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:nth-child",
    "pageType": "css-pseudo-class",
    "summary": "The :nth-child() CSS pseudo-class matches elements based on the indexes of the elements in the child list of their parents. In other words, the :nth-child() selector selects child elements according to their position among all the sibling elements within a parent element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/frequency-percentage",
    "pageType": "css-type",
    "summary": "The <frequency-percentage> CSS data type represents a value that can be either a <frequency> or a <percentage>. Frequency values, e.g., the pitch of a speaking voice, are not currently used in any CSS properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::checkmark",
    "pageType": "css-pseudo-element",
    "summary": "The ::checkmark CSS pseudo-element targets the checkmark placed inside the currently-selected <option> element of a customizable select element. It can be used to provide a visual indication of which option is selected."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Selector_list",
    "pageType": "css-combinator",
    "summary": "The CSS selector list (,) selects all the matching nodes. A selector list is a comma-separated list of selectors."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_text",
    "pageType": "css-module",
    "summary": "The CSS text module defines how to perform text manipulation, like line breaking, justification and alignment, white space handling, and text transformation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_text/Wrapping_breaking_text",
    "pageType": "guide",
    "summary": "This guide explains the various ways in which overflowing text can be managed in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_text/Whitespace",
    "pageType": "guide",
    "summary": "The presence of whitespace in the DOM can cause layout problems and make manipulation of the content tree difficult in unexpected ways, depending on where it is located. This article explores when difficulties can occur, and looks at what can be done to mitigate resulting problems."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/text-edge",
    "pageType": "css-type",
    "summary": "The <text-edge> enumerated data type defines keywords that specify font metrics representing specific regions on a font's block-start edge and block-end edge. Each keyword specifies a position of a font's over and/or under edge."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/counters",
    "pageType": "css-function",
    "summary": "The counters() CSS function enables combining markers when nesting counters. The function returns a string that concatenates the current values of the named and nested counters, if any are present, with the string provided. The third, optional parameter enables defining the list style."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:current",
    "pageType": "css-pseudo-class",
    "summary": "The :current CSS pseudo-class selector is a time-dimensional pseudo-class that represents an element or the ancestor of an element that is currently being displayed. For example, this pseudo-class can be used to represent a video that is being displayed with captions by WebVTT."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Nesting_selector",
    "pageType": "css-selector",
    "summary": "The CSS & nesting selector explicitly states the relationship between parent and child rules when using CSS nesting. It makes the nested child rule selectors relative to the parent element. Without the & nesting selector, the child rule selector selects child elements. The child rule selectors have the same specificity weight as if they were within :is()."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-progress-bar",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-progress-bar CSS pseudo-element represents the entire bar of a <progress> element. Normally it's only visible as the unfilled portion of the bar, since by default it's rendered below the ::-webkit-progress-value pseudo-element. It is a child of the ::-webkit-progress-inner-element pseudo-element and the parent of the ::-webkit-progress-value pseudo-element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_overscroll_behavior",
    "pageType": "css-module",
    "summary": "The CSS overscroll behavior module provides properties to control the behavior of a scroll container when its scroll position reaches the scroll boundary. Controlling this aspect is particularly useful in scenarios where embedded scrollable areas should not trigger scrolling of the parent container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:last-child",
    "pageType": "css-pseudo-class",
    "summary": "The :last-child CSS pseudo-class represents the last element among a group of sibling elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/position-area_value",
    "pageType": "css-type",
    "summary": "The <position-area> CSS data type defines the cell or spanned cells of a position-area grid, a 3x3 grid whose center cell is an anchor element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@layer",
    "pageType": "css-at-rule",
    "summary": "The @layer CSS at-rule is used to declare a cascade layer and can also be used to define the order of precedence in case of multiple cascade layers."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_compositing_and_blending",
    "pageType": "css-module",
    "summary": "The CSS compositing and blending module defines how an element's background layers can be blended together, how an element can be blended with its container, and whether the element must create a new stacking context."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/min",
    "pageType": "css-function",
    "summary": "The min() CSS function lets you set the smallest (most negative) value from a list of comma-separated expressions as the value of a CSS property value. The min() function can be used anywhere a <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> is allowed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:autofill",
    "pageType": "css-pseudo-class",
    "summary": "The :autofill CSS pseudo-class matches when an <input> element has its value autofilled by the browser. The class stops matching if the user edits the field."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::picker",
    "pageType": "css-pseudo-element",
    "summary": "The ::picker() CSS pseudo-element targets the picker part of an element, for example the drop-down picker of a customizable select element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::grammar-error",
    "pageType": "css-pseudo-element",
    "summary": "The ::grammar-error CSS pseudo-element represents a text segment which the user agent has flagged as grammatically incorrect."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-moz-list-bullet",
    "pageType": "css-pseudo-element",
    "summary": "The ::-moz-list-bullet CSS pseudo-element is a Mozilla extension that represents the marker (typically a bullet) of a list item (<li>) in an unordered list (<ul>)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:host",
    "pageType": "css-pseudo-class",
    "summary": "The :host CSS pseudo-class selects the shadow host of the shadow DOM containing the CSS it is used inside — in other words, this allows you to select a custom element from inside its shadow DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:required",
    "pageType": "css-pseudo-class",
    "summary": "The :required CSS pseudo-class represents any <input>, <select>, or <textarea> element that has the required attribute set on it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::highlight",
    "pageType": "css-pseudo-element",
    "summary": "The ::highlight() CSS pseudo-element applies styles to a custom highlight."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_alignment",
    "pageType": "css-module",
    "summary": "The CSS box alignment module specifies CSS features relating to the alignment of boxes within their containers. It defines the alignment of the various CSS box layout models including block layout, table layout, flexible box layout (flexbox), and grid layout, creating a consistent alignment method across all of CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_alignment/Box_alignment_in_block_abspos_tables",
    "pageType": "guide",
    "summary": "The CSS box alignment module details how alignment works in various layout methods. In this guide, we explore how box alignment works in the context of block layout, including floated, positioned, and table elements. As this guide aims to detail things which are specific to block layout and box alignment, it should be read in conjunction with the box alignment guide, which details the common features of box alignment across layout methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_alignment/Box_alignment_in_multi-column_layout",
    "pageType": "guide",
    "summary": "The CSS box alignment module details how alignment works in various layout methods; in this guide, we explore how box alignment works in the context of multi-column layout. As this guide aims to detail things that are specific to both modules, it should be read in conjunction with the box alignment overview guide, which details the common features of box alignment across layout methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_alignment/Box_alignment_in_grid_layout",
    "pageType": "guide",
    "summary": "The CSS box alignment module details how alignment works in various layout methods. On this page, we explore how box alignment works in the context of CSS grid layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_alignment/Box_alignment",
    "pageType": "guide",
    "summary": "The CSS box alignment module specifies CSS features that relate to the alignment of boxes in the various CSS box layout models. The module aims to create a consistent method of alignment across all of CSS. The CSS box alignment properties provide full horizontal and vertical alignment capabilities."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_box_alignment/Box_alignment_in_flexbox",
    "pageType": "guide",
    "summary": "The box alignment module details how alignment works in various layout methods. In this guide, we explore how box alignment works in the context of flexbox. As this guide aims to detail things which are specific to flexbox and box alignment, it should be read in conjunction with the box alignment overview guide, which details the common features of box alignment across layout methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::backdrop",
    "pageType": "css-pseudo-element",
    "summary": "The ::backdrop CSS pseudo-element is a box the size of the viewport, which is rendered immediately beneath any element being presented in the top layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:playing",
    "pageType": "css-pseudo-class",
    "summary": "The :playing CSS pseudo-class selector represents the playback state of an element that is playable, such as <audio> or <video>, when that element is \"playing\".\nAn element is considered to be playing if it is currently playing the media resource, or if it has temporarily stopped for reasons other than user intent (such as :buffering or :stalled)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/dimension",
    "pageType": "css-type",
    "summary": "The <dimension> CSS data type represents a <number> with a unit attached to it, for example 10px."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-meter-optimum-value",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-meter-optimum-value CSS pseudo-element styles the <meter> element when its value is inside the low-high range, or when the value is equivalent to the optimum value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/max",
    "pageType": "css-function",
    "summary": "The max() CSS function lets you set the largest (most positive) value from a list of comma-separated expressions as the value of a CSS property value. The max() function can be used anywhere a <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> is allowed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/system-color",
    "pageType": "css-type",
    "summary": "The <system-color> CSS data type usually reflects the default color choices used for the different parts of a web page."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_values_and_units",
    "pageType": "css-module",
    "summary": "Every CSS declaration consists of a property/value pair. The value can take various forms depending on the property, such as a single integer, keyword, function, or a combination of different items; some values have units, while others do not. Every property also accepts the CSS-wide values. The CSS values and units module defines the data types — values and units — that CSS properties accept. This module also defines the CSS value definition syntax, or formal grammar, used to define the set of valid values for every CSS property and function."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_values_and_units/Using_CSS_typed_arithmetic",
    "pageType": "guide",
    "summary": "CSS typed arithmetic refers to permitted calculations performed with typed CSS values via functions such as calc(), and specifically, to the behavior defined in the CSS values and units module. CSS typed arithmetic enables dividing a value with one unit by a value with a different unit of the same data type, resulting in unitless quotients."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_values_and_units/Value_definition_syntax",
    "pageType": "guide",
    "summary": "CSS value definition syntax, a formal grammar, is used to define the set of valid values for a CSS property or function. In addition to this syntax, the set of valid values can be further restricted by semantic constraints (for example, for a number to be strictly positive)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_values_and_units/CSS_data_types",
    "pageType": "guide",
    "summary": "CSS data types define typical values (including keywords and units) accepted by CSS properties and functions. They are a special kind of component value type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_values_and_units/Textual_data_types",
    "pageType": "guide",
    "summary": "Every CSS declaration consists of a property/value pair. The value can include various data types depending on the property, such as a single keyword, integer, function, or a combination of different types; some values have units, while others do not. This guide provides an overview of the textual data types. Refer to the page for each value type for more detailed information."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_values_and_units/Numeric_data_types",
    "pageType": "guide",
    "summary": "Every CSS declaration consists of a property/value pair. The value can include various data types depending on the property, such as a single number, keyword, function, or a combination of different types; some values have units, while others do not. Numeric data types include <integer>, <number>, <dimension>, and <percentage> values. This guide is an overview of numeric data types. Refer to the page for each value type for more detailed information."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_values_and_units/Using_CSS_math_functions",
    "pageType": "guide",
    "summary": "CSS math functions allow a property value - such as the height, animation-duration, or font-size of an element - to be written as a mathematical expression."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_values_and_units/CSS_value_functions",
    "pageType": "guide",
    "summary": "CSS value functions are statements that invoke special data processing or calculations to return a CSS value for a CSS property. CSS value functions represent more complex data types and they may take some input arguments to calculate the return value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/if",
    "pageType": "css-function",
    "summary": "The if() CSS function allows different values to be set for a property depending on the result of a conditional test. The test can be based on a style query, a media query, or a feature query."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/position_value",
    "pageType": "css-type",
    "summary": "The <position> CSS data type denotes a two-dimensional coordinate used to set a location relative to an element box. It is used in the background-position, object-position, mask-position offset-position, offset-anchor and transform-origin properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:active",
    "pageType": "css-pseudo-class",
    "summary": "The :active CSS pseudo-class represents an element (such as a button) that is being activated by the user. When using a mouse, \"activation\" typically starts when the user presses down the primary mouse button."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-progress-inner-element",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-progress-inner-element CSS pseudo-element represents the outermost container of the <progress> element. It is the parent of the ::-webkit-progress-bar pseudo-element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-scrollbar",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-scrollbar CSS pseudo-element affects the style of an element's scrollbar when it has scrollable overflow."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_lists",
    "pageType": "css-module",
    "summary": "The CSS lists and counters module enables styling and positioning of list item bullets and manipulating their values with a combination of strings, counters, and other features."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_lists/Consistent_list_indentation",
    "pageType": "guide",
    "summary": "One of the most common style changes made to lists is a change in the indentation distance—that is, how far the list items are pushed over to the right. This article will help you understand indenting list items so that list item markers are visible."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-meter-inner-element",
    "pageType": "css-pseudo-element",
    "summary": "::-webkit-meter-inner-element is a proprietary WebKit CSS pseudo-element for selecting and applying styles to the outer containing element of a <meter> element. Additional markup to render the meter element as read-only."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/atan2",
    "pageType": "css-function",
    "summary": "The atan2() CSS function is a trigonometric function that returns the inverse tangent of two values between -infinity and infinity. The function accepts two arguments and returns the number of radians representing an <angle> between -180deg and 180deg."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_scoping",
    "pageType": "css-module",
    "summary": "The CSS scoping module defines the CSS scoping and encapsulation mechanisms, focusing on the Shadow DOM scoping mechanism."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_positioned_layout",
    "pageType": "css-module",
    "summary": "The CSS positioned layout module defines the coordinate-based positioning and offsetting schemes available in CSS and the properties used to position and stack elements on a web page. The module is best known for defining the basic positioning methods, including relative positioning, sticky positioning, absolute positioning, and fixed positioning. It also defines how positioned elements are painted and layered, clarifying stacking behavior and visual order."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_positioned_layout/Stacking_without_z-index",
    "pageType": "guide",
    "summary": "When the z-index property is not specified on any element, elements are stacked in the following order (from bottom to top):"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_positioned_layout/Using_z-index",
    "pageType": "guide",
    "summary": "The first article of this guide, Stacking without the z-index property, explains how stacking is arranged by default. If you want to create a custom stacking order, you can use the z-index property on a positioned element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_positioned_layout/Understanding_z-index",
    "pageType": "guide",
    "summary": "In the most basic cases, when text, images, and other elements are arranged on the page without overlapping, HTML pages can be considered two-dimensional. In such cases, there is a single rendering flow, and all elements are aware of the space taken by others. CSS isn't that simple — CSS positioning, transformation, containment, and other features can cause elements to overlap. In this guide, we introduce the z-index property, which lets you place elements in front or behind other elements in the same stacking context."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_positioned_layout/Stacking_context/Stacking_context_example_3",
    "pageType": "guide",
    "summary": "This example shows problems that arise when mixing several positioned elements in a multi-level HTML hierarchy and when z-index values are assigned using class selectors."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_positioned_layout/Stacking_context/Stacking_context_example_1",
    "pageType": "guide",
    "summary": "Let's start with a basic example. In the root stacking context, there are two relatively positioned <div> elements (DIV #1 and DIV #3) without z-index properties. Inside DIV #1, there is an absolutely positioned DIV #2, while in DIV #3, there is an absolutely positioned DIV #4, both without z-index properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_positioned_layout/Stacking_context",
    "pageType": "guide",
    "summary": "Stacking context is a three-dimensional conceptualization of HTML elements along an imaginary z-axis relative to the user, who is assumed to be facing the viewport or the webpage. The stacking context determines how elements are layered on top of one another along the z-axis (think of it as the \"depth\" dimension on your screen). Stacking context determines the visual order of how overlapping content is rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_positioned_layout/Stacking_context/Stacking_context_example_2",
    "pageType": "guide",
    "summary": "This is a basic example, but it is the key for understanding the concept of stacking context. There are the same four DIVs of the previous example, but now z-index properties are assigned on both levels of the hierarchy."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_positioned_layout/Stacking_floating_elements",
    "pageType": "guide",
    "summary": "For floating elements, the stacking order is a bit different. Floating elements are placed between non-positioned elements and positioned elements:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout",
    "pageType": "css-module",
    "summary": "The CSS grid layout module excels at dividing a page into major regions or defining the relationship in terms of size, position, and layering between parts of a control built from HTML primitives."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Subgrid",
    "pageType": "guide",
    "summary": "The CSS grid layout module includes a subgrid value for grid-template-columns and grid-template-rows. This guide details what subgrid does and gives some use cases and design patterns that the feature solves."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Grid_layout_and_accessibility",
    "pageType": "guide",
    "summary": "HTML is the content layer of a website where we create semantic, well-structured documents. CSS is the presentation layer; we apply CSS to create, among other things, the desired layout for our content. Two-dimensional grid structures are defined using CSS grid layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Grid_template_areas",
    "pageType": "guide",
    "summary": "In the grid layout using line-based placement guide, we looked at grid lines and how to position items against those lines. When you use CSS grid layout, you always have lines, and this can be a straightforward way to place items on your grid. However, there is an alternate method to use for positioning items on the grid which you can use alone or in combination with line-based placement. This method involves placing our items using named template areas. You will see very quickly why we sometimes call this the ascii-art method of grid layout!"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Auto-placement_in_grid_layout",
    "pageType": "guide",
    "summary": "CSS grid layout contains rules that control what happens when you create a grid and do not explicitly place some or all of the child items within the grid. When you don't need explicit control over content placement, this \"auto-placement\" is the simplest way of creating a grid for a set of items."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Grid_layout_using_named_grid_lines",
    "pageType": "guide",
    "summary": "In previous guides, we've looked at placing items on the lines created by defining grid tracks and also how to place items using named template areas. In this guide, we look at how these two things work together when we use named lines."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Grid_layout_using_line-based_placement",
    "pageType": "guide",
    "summary": "In the basic concepts of grid layout guide, we took a brief look at positioning items on a grid using line numbers. In this guide, we will fully explore how this fundamental feature of the specification works."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Basic_concepts_of_grid_layout",
    "pageType": "guide",
    "summary": "CSS grid layout introduces a two-dimensional grid system to CSS. Grids can be used to lay out major page areas or small user interface elements. This guide introduces the CSS grid layout and the terminology that is part of the CSS grid layout specification. The features shown in this overview will then be explained in greater detail in the other guides in this series."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Grids_logical_values_and_writing_modes",
    "pageType": "guide",
    "summary": "One of the most important features of CSS grid layout is the support for different writing modes built into the specification. In this guide, we look at this feature of CSS grid layout and other modern layout methods, learning a little about writing modes and logical vs. physical properties as we do so."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Realizing_common_layouts_using_grids",
    "pageType": "guide",
    "summary": "To round off this set of CSS grid layout guides, we're going to walk through a few different layouts, which demonstrate some of the techniques you can use when designing with grid layout. We will look at an example using grid-template-areas, a 12-column flexible grid system, and also a product listing using auto-placement. As you can see from this set of examples, there is often more than one way to get the results you want with CSS grid layout. Choose the method you find most helpful for the problems that you are solving and the designs that you need to implement."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Relationship_of_grid_layout_with_other_layout_methods",
    "pageType": "guide",
    "summary": "CSS grid layout is designed to work alongside other parts of CSS, as part of a complete system for doing the layout. This guide explains how grid layout fits together with other techniques."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Box_alignment_in_grid_layout",
    "pageType": "guide",
    "summary": "CSS grid layout implements CSS box alignment, which is the same standard flexbox uses for aligning items in its flex container. The alignment module details how alignment should work in all the layout methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_grid_layout/Masonry_layout",
    "pageType": "guide",
    "summary": "Level 3 of the CSS grid layout specification includes a masonry value for grid-template-columns and grid-template-rows. This guide details what masonry layout is and how to use it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:user-valid",
    "pageType": "css-pseudo-class",
    "summary": "The :user-valid CSS pseudo-class represents any validated form element whose value validates correctly based on its validation constraints. However, unlike :valid it only matches once the user has interacted with it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/cross-fade",
    "pageType": "css-function",
    "summary": "The cross-fade() CSS function can be used to blend two or more images at a defined transparency.\nIt can be used for many basic image manipulations, such as tinting an image with a solid color or highlighting a particular area of the page by combining an image with a radial gradient."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_motion_path",
    "pageType": "css-module",
    "summary": "The CSS motion path module allows authors to animate any graphical object along a custom path."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/calc-sum",
    "pageType": "css-type",
    "summary": "The <calc-sum> CSS data type represents an expression which performs a calculation in any CSS math function. The expression executes a basic arithmetic operation of addition and subtraction between two values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/asin",
    "pageType": "css-function",
    "summary": "The asin() CSS function is a trigonometric function that returns the inverse sine of a number between -1 and 1. The function contains a single calculation that returns the number of radians representing an <angle> between -90deg and 90deg."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Type_selectors",
    "pageType": "css-selector",
    "summary": "The CSS type selector matches elements by node name. In other words, it selects all elements of the given type within a document."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/content-position",
    "pageType": "css-type",
    "summary": "The <content-position> enumerated value type is used by justify-content and align-content properties, and the place-content shorthand, to align the box's contents within itself."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::details-content",
    "pageType": "css-pseudo-element",
    "summary": "The ::details-content CSS pseudo-element represents the expandable/collapsible contents of a <details> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/calc",
    "pageType": "css-function",
    "summary": "The calc() CSS function lets you perform calculations when specifying CSS property values. It can be used with <length>, <frequency>, <angle>, <time>, <percentage>, <number>, <integer>, and <color-function> values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_containment",
    "pageType": "css-module",
    "summary": "The CSS containment module defines containment and container queries."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_containment/Using_CSS_containment",
    "pageType": "guide",
    "summary": "CSS containment improves the performance of web pages by allowing the browser to isolate a subtree of the page from the rest of the page. If the browser knows that a part of the page is independent from the rest of the content, rendering can be optimized and performance improved."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_containment/Container_queries",
    "pageType": "guide",
    "summary": "Container queries enable you to apply styles to an element based on certain attributes of its container:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_containment/Container_size_and_style_queries",
    "pageType": "guide",
    "summary": "Container queries enable you to apply styles to elements nested within a specific container based on the features of that container. The query returns true or false depending on whether the query condition is true for the container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@supports",
    "pageType": "css-at-rule",
    "summary": "The @supports CSS at-rule lets you specify CSS declarations that depend on a browser's support for CSS features.\nUsing this at-rule is commonly called a feature query.\nThe rule must be placed at the top level of your code or nested inside any other conditional group at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::file-selector-button",
    "pageType": "css-pseudo-element",
    "summary": "The ::file-selector-button CSS pseudo-element represents the button of an <input> of type=\"file\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::view-transition-new",
    "pageType": "css-pseudo-element",
    "summary": "The ::view-transition-new() CSS pseudo-element represents the \"new\" view state of a view transition — a snapshot live representation of the state after the transition."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/min-content",
    "pageType": "css-keyword",
    "summary": "The min-content sizing keyword represents the minimum intrinsic size of an element.\nThe keyword shrinks the element to the smallest possible size without causing avoidable overflow of its content.\nFor text content, this keyword causes the content to wrap at every opportunity (such as spaces between words), and the element will be only as wide as the longest word."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/frequency",
    "pageType": "css-type",
    "summary": "The <frequency> CSS data type represents a frequency dimension, such as the pitch of a speaking voice. It is not currently used in any CSS properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-moz-range-progress",
    "pageType": "css-pseudo-element",
    "summary": "The ::-moz-range-progress CSS pseudo-element is a Mozilla extension that represents the lower portion of the track (i.e., groove) in which the indicator slides in an <input> of type=\"range\". This portion corresponds to values lower than the value currently selected by the thumb (i.e., virtual knob)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-palette-values",
    "pageType": "css-at-rule",
    "summary": "The @font-palette-values CSS at-rule allows you to customize the default values of font-palette created by the font-maker."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-palette-values/base-palette",
    "pageType": "css-at-rule-descriptor",
    "summary": "The base-palette CSS descriptor is used to specify the name or index of a pre-defined palette to be used for creating a new palette. If the specified base-palette does not exist, then the palette defined at index 0 will be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-palette-values/override-colors",
    "pageType": "css-at-rule-descriptor",
    "summary": "The override-colors CSS descriptor is used to override colors in the chosen base-palette for a color font."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-palette-values/font-family",
    "pageType": "css-at-rule-descriptor",
    "summary": "The @font-palette-values descriptor font-family is used to specify which font-family palette values are to be applied to. This need to match exactly the values used when setting the CSS font-family."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_anchor_positioning",
    "pageType": "css-module",
    "summary": "The CSS anchor positioning module defines features that allow you to tether elements together. Certain elements are defined as anchor elements; anchor-positioned elements can then have their size and position set based on the size and location of the anchor elements to which they are bound."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_anchor_positioning/Try_options_hiding",
    "pageType": "guide",
    "summary": "When using CSS anchor positioning, an important consideration is ensuring that anchor-positioned elements always appear in a convenient place for the user to interact with them, if at all possible, regardless of where the anchor is positioned. For example, when you scroll the page, anchors and their associated positioned elements will move toward the edge of the viewport. When a positioned element starts to overflow the viewport, you will want to change its position to put it back on the screen again, for example on the opposite side of the anchor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_anchor_positioning/Using",
    "pageType": "guide",
    "summary": "The CSS anchor positioning module defines features that allow you to tether elements together. Elements can be defined as anchor elements and anchor-positioned elements. Anchor-positioned elements can be bound to anchor elements. The anchor-positioned elements can then have their size and position set relative to the size and location of the anchor elements to which they are bound."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:hover",
    "pageType": "css-pseudo-class",
    "summary": "The :hover CSS pseudo-class matches an element when a user interacts with it using a pointing device. The pseudo-class is generally triggered when the user moves the cursor (mouse pointer) over an element without pressing the mouse button."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_borders_and_box_decorations",
    "pageType": "css-module",
    "summary": "The CSS borders and box decorations module provides properties for adding borders, shaped corners, and box shadows to elements. This module extends borders and box decorations introduced in the CSS backgrounds and borders module, adding corner-shape and border-shape properties, logical border-radius properties, longhand properties for the box-shadow property, and properties to create partial borders."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:in-range",
    "pageType": "css-pseudo-class",
    "summary": "The :in-range CSS pseudo-class represents an <input> element whose current value is within the range limits specified by the min and max attributes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-feature-values",
    "pageType": "css-at-rule",
    "summary": "The @font-feature-values CSS at-rule lets you use a common name in the font-variant-alternates property for features activated differently in OpenType. This can help simplify your CSS when using multiple fonts."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@font-feature-values/font-display",
    "pageType": "css-at-rule-descriptor",
    "summary": "The font-display descriptor for the @font-feature-values at-rule sets the default value of how a font face is displayed based on whether and when it is downloaded. Setting a value for the font-display descriptor within a @font-feature-values block sets the default value of the font-display descriptor for the @font-face at-rule for all the fonts with the same font-family value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_ruby_layout",
    "pageType": "css-module",
    "summary": "The CSS ruby layout module provides the rendering model and formatting controls related to the display of ruby annotations. Ruby annotations are a form of interlinear annotation, consisting of short runs of text alongside the base text. They are typically used in East Asian documents to indicate pronunciation or define meaning."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_animations",
    "pageType": "css-module",
    "summary": "The CSS animations module lets you animate the values of CSS properties, such as background-position and transform, over time by using keyframes. Each keyframe describes how the animated element should render at a given time during the animation sequence. You can use the properties in the animations module to control the duration, number of repetitions, delayed start, and other aspects of an animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_animations/Using_CSS_animations",
    "pageType": "guide",
    "summary": "CSS animations make it possible to animate transitions from one CSS style configuration to another. Animations consist of two components: a style describing the CSS animation and a set of keyframes that indicate the start and end states of the animation's style, as well as possible intermediate waypoints."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/sibling-index",
    "pageType": "css-function",
    "summary": "The sibling-index() CSS function returns an integer representing the position of the current element in the DOM tree relative to all its sibling elements. The returned value is the index number of the contextual child's position among all the sibling elements within a parent element, with the first child returning 1 and the last child, returning the length of Element.children."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/flex_value",
    "pageType": "css-type",
    "summary": "The <flex> CSS data type denotes a flexible length within a grid container. It is used in grid-template-columns, grid-template-rows and other related properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/length",
    "pageType": "css-type",
    "summary": "The <length> CSS data type represents a distance value. Lengths can be used in numerous CSS properties, such as width, height, margin, padding, border-width, font-size, and text-shadow."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-moz-range-track",
    "pageType": "css-pseudo-element",
    "summary": "The ::-moz-range-track CSS pseudo-element is a Mozilla extension that represents the track (i.e., groove) in which the indicator slides in an <input> of type=\"range\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_nesting",
    "pageType": "css-module",
    "summary": "The CSS nesting module defines a syntax for nesting selectors, providing the ability to nest one style rule inside another, with the selector of the child rule relative to the selector of the parent rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_nesting/Nesting_and_specificity",
    "pageType": "guide",
    "summary": "The specificity of the & nesting selector is calculated using the largest specificity in the associated selector list. This is identical to how specificity is calculated when using the :is() function."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_nesting/Nesting_at-rules",
    "pageType": "guide",
    "summary": "Any at-rule whose body contains style rules can be nested inside another style rule using CSS nesting. Style rules nested inside at-rules take their nesting selector definition from the nearest ancestor style rule. Properties can be directly included inside a nested at-rule, acting as if they were nested in a & {...} block."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_nesting/Using_CSS_nesting",
    "pageType": "guide",
    "summary": "The CSS nesting module allows you to write your stylesheets so that they are easier to read, more modular, and more maintainable. As you are not constantly repeating selectors, the file size can also be reduced."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Guides",
    "pageType": "guide",
    "summary": "There are a number of methods that you can use to lay out your web pages and applications. MDN contains a number of in-depth guides to the different methods, and this page provides an overview of them all."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:scope",
    "pageType": "css-pseudo-class",
    "summary": "The :scope CSS pseudo-class represents elements that are a reference point, or scope, for selectors to match against."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::first-letter",
    "pageType": "css-pseudo-element",
    "summary": "The ::first-letter CSS pseudo-element applies styles to the first letter of the first line of a block container, but only when not preceded by other content (such as images or inline tables)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:invalid",
    "pageType": "css-pseudo-class",
    "summary": "The :invalid CSS pseudo-class represents any <form>, <fieldset>, <input> or other <form> element whose contents fail to validate."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_table",
    "pageType": "css-module",
    "summary": "The CSS table module helps you define how to lay out table data."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/exp",
    "pageType": "css-function",
    "summary": "The exp() CSS function is an exponential function that takes a number as an argument and returns the mathematical constant e raised to the power of the given number."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_font_loading",
    "pageType": "css-module",
    "summary": "The CSS font loading module describes events and interfaces used for dynamically loading font resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_environment_variables",
    "pageType": "css-module",
    "summary": "The CSS environment variables module defines the concept of environment variables and the env() function. Environment variables work similarly to custom properties and the var() function, except that they are globally defined; they are global variables scoped to the entire document. They are user agent values, provided by the browser or operating system, you can access using the env() function enabling you to adapt your styles to the user's device or context."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_environment_variables/Using_environment_variables",
    "pageType": "guide",
    "summary": "The CSS environment variables module introduces the concept of environment variables in CSS and defines the env() function to enable using environment variables. In this guide, we look at what environment variables are, the environment variables defined by the browser, and how to use environment variables with the env() function."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::column",
    "pageType": "css-pseudo-element",
    "summary": "The ::column CSS pseudo-element represents the individual columns generated when a container is set to display its content in multiple columns via CSS multi-column layout. The ::column pseudo-element enables applying styles that do not affect the layout to these generated fragments."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:defined",
    "pageType": "css-pseudo-class",
    "summary": "The :defined CSS pseudo-class represents any element that has been defined. This includes any standard element built into the browser and custom elements that have been successfully defined (i.e., with the CustomElementRegistry.define() method)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@import",
    "pageType": "css-at-rule",
    "summary": "The @import CSS at-rule is used to import style rules from other valid stylesheets.\nAn @import rule must be defined at the top of the stylesheet, before any other at-rule (except @charset and @layer) and style declarations, or it will be ignored."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@import/layer_function",
    "pageType": "css-function",
    "summary": "The layer() CSS function is used along with the @import at-rule to put the imported resource in a separate named cascade layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:right",
    "pageType": "css-pseudo-class",
    "summary": "The :right CSS pseudo-class, used with the @page at-rule, represents all right-hand pages of a printed document."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-progress-value",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-progress-value CSS pseudo-element represents the filled-in portion of the bar of a <progress> element. It is a child of the ::-webkit-progress-bar pseudo-element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::placeholder",
    "pageType": "css-pseudo-element",
    "summary": "The ::placeholder CSS pseudo-element represents the placeholder text in an <input> or <textarea> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-submit-invalid",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-submit-invalid CSS pseudo-class is a Mozilla extension that represents any submit <button> on forms whose contents aren't valid based on their validation constraints."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/abs",
    "pageType": "css-function",
    "summary": "The abs() CSS function returns the absolute value of the argument, as the same type as the input."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/baseline-position",
    "pageType": "css-type",
    "summary": "The <baseline-position> enumerated value type represents the baseline keyword values and first and last modifiers, used for the align-content, align-items, align-self, justify-items and justify-self properties as well as the place-content, place-items, and place-self shorthand properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:focus",
    "pageType": "css-pseudo-class",
    "summary": "The :focus CSS pseudo-class represents an element (such as a form input) that has received focus. It is generally triggered when the user clicks or taps on an element or selects it with the keyboard's Tab key."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_shadow_parts",
    "pageType": "css-module",
    "summary": "The CSS shadow parts module defines the ::part() pseudo-element that can be set on a shadow host. Using this pseudo-element, you can enable shadow hosts to expose the selected element in the shadow tree to the outside page for styling purposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/integer",
    "pageType": "css-type",
    "summary": "The <integer> CSS data type is a special type of <number> that represents a positive or negative whole number. Integers can be used in numerous CSS properties and descriptors, such as the column-count, counter-increment, grid-column, grid-row, and z-index properties and the range descriptor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/basic-shape",
    "pageType": "css-type",
    "summary": "The <basic-shape> CSS data type represents a shape used in the clip-path, shape-outside, and offset-path properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/basic-shape/path",
    "pageType": "css-function",
    "summary": "The path() CSS function accepts an SVG path string, and is used in the CSS shapes and CSS motion path modules to enable a shape to be drawn. The path() function is a <basic-shape> data type value. It can be used in the CSS offset-path and clip-path properties and in the SVG d attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/basic-shape/ellipse",
    "pageType": "css-function",
    "summary": "The ellipse() CSS function is one of the <basic-shape> data types."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/basic-shape/rect",
    "pageType": "css-function",
    "summary": "The rect() CSS function creates a rectangle at the specified distance from the top and left edges of the containing block. It is a basic shape function of the <basic-shape> data type. You can use the rect() function in CSS properties such as offset-path to create the rectangular path along which an element moves and in clip-path to define the shape of the clipping region."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/basic-shape/inset",
    "pageType": "css-function",
    "summary": "The inset() CSS function defines a rectangle at the specified inset distances from each side of the reference box. It is a basic shape function used to define one of the <basic-shape> data types."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/basic-shape/circle",
    "pageType": "css-function",
    "summary": "The circle() CSS function defines a circle using a radius and a position. It is one of the <basic-shape> data types."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/basic-shape/xywh",
    "pageType": "css-function",
    "summary": "The xywh() CSS function creates a rectangle using the specified distances from the left (x) and top (y) edges of the containing block and the specified width (w) and height (h) of the rectangle. It is a basic shape function of the <basic-shape> data type. You can use the xywh() function in CSS properties such as offset-path to create the rectangular path along which an element moves and in clip-path to define the shape of the clipping region."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/basic-shape/shape",
    "pageType": "css-function",
    "summary": "The shape() CSS function is used to define a shape for the clip-path and offset-path properties. It combines an initial starting point with a series of shape commands that define the path of the shape. The shape() function is a member of the <basic-shape> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/basic-shape/polygon",
    "pageType": "css-function",
    "summary": "The polygon() CSS function is one of the <basic-shape> data types. It's used to draw a polygon by providing one or more pairs of coordinates, each of which represents a vertex of the shape."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_animated_properties",
    "pageType": "landing-page",
    "summary": "CSS Animations and Transitions rely on the concept of animatable properties, and all CSS properties are animatable unless otherwise specified. Each property's animation type determines how values combine - interpolate, add, or accumulate - for this property. Transitions only involve interpolation, whereas animations may use all three combination methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/calc-keyword",
    "pageType": "css-type",
    "summary": "The <calc-keyword> CSS data type represents well-defined constants such as e and pi. Rather than require authors to manually type out several digits of these mathematical constants or calculate them, a few of them are provided directly by CSS for convenience."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/round",
    "pageType": "css-function",
    "summary": "The round() CSS function returns a rounded number based on a selected rounding strategy."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:not",
    "pageType": "css-pseudo-class",
    "summary": "The :not() CSS pseudo-class represents elements that do not match a list of selectors. Since it prevents specific items from being selected, it is known as the negation pseudo-class."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_transforms",
    "pageType": "css-module",
    "summary": "The CSS transforms module defines how elements styled with CSS can be transformed in two-dimensional or three-dimensional space."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_transforms/Using_CSS_transforms",
    "pageType": "guide",
    "summary": "By modifying the coordinate space, CSS transforms change the shape and position of the affected content without disrupting the normal document flow. This guide provides an introduction to using transforms."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/symbols",
    "pageType": "css-function",
    "summary": "The symbols() CSS function enables defining counter styles inline, directly as a value of properties such as list-style, providing a less powerful but simpler alternative to the @counter-style method of defining a counter style."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/angle-percentage",
    "pageType": "css-type",
    "summary": "The <angle-percentage> CSS data type represents a value that can be either an <angle> or a <percentage>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/blend-mode",
    "pageType": "css-type",
    "summary": "The <blend-mode> CSS data type describes how colors should appear when elements overlap. It is used in the background-blend-mode and mix-blend-mode properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@namespace",
    "pageType": "css-at-rule",
    "summary": "@namespace is an at-rule that defines XML namespaces to be used in a CSS style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:stalled",
    "pageType": "css-pseudo-class",
    "summary": "The :stalled CSS pseudo-class selector represents an element that is playable, such as <audio> or <video>, when playback is stalled.\nA resource is considered to be stalled if the user has requested playback of a specific position in the media resource, but it has failed to receive any data for some amount of time.\nThis is different from :buffering in that the media element is unexpectedly not loading data when stalled (e.g., due to a network error) for around 3 seconds (the exact time is user agent dependent)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/important",
    "pageType": "css-keyword",
    "summary": "A ! delimiter followed by the important keyword marks the declaration as important. The !important flag alters the rules selecting declarations inside the cascade. A declaration that is not important is called normal."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/dynamic-range-limit-mix",
    "pageType": "css-function",
    "summary": "The dynamic-range-limit-mix() CSS function creates a custom maximum luminance limit by mixing different dynamic-range-limit keywords in specified amounts."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::picker-icon",
    "pageType": "css-pseudo-element",
    "summary": "The ::picker-icon CSS pseudo-element targets the picker icon inside form controls that have an icon associated with them. In the case of a customizable select element, it selects the arrow icon shown on the <select> element that points down when it is closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:target-current",
    "pageType": "css-pseudo-class",
    "summary": "The :target-current CSS pseudo-class selects the active scroll marker — the ::scroll-marker pseudo-element of a scroll-marker-group that is currently scrolled to. This selector can be used to style the active navigation position within a scroll marker group."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::view-transition-image-pair",
    "pageType": "css-pseudo-element",
    "summary": "The ::view-transition-image-pair() CSS pseudo-element represents a container for a view transition's \"old\" and \"new\" view states — before and after the transition."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@property",
    "pageType": "css-at-rule",
    "summary": "The @property CSS at-rule is part of the CSS Houdini set of APIs. It allows developers to explicitly define CSS custom properties, allowing for property type checking and constraining, setting default values, and defining whether a custom property can inherit values or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@property/inherits",
    "pageType": "css-at-rule-descriptor",
    "summary": "The inherits CSS descriptor of the @property at-rule controls whether or not the registered CSS custom property inherits by default.\nIt is a required descriptor; if missing or invalid, the entire @property rule is invalid and ignored."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@property/initial-value",
    "pageType": "css-at-rule-descriptor",
    "summary": "The initial-value descriptor of the @property at-rule specifies the initial value for the registered CSS custom property.\nIt is a required descriptor unless the syntax descriptor value is the universal syntax (*).\nIf required but missing or invalid, the entire @property rule is invalid and ignored."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@property/syntax",
    "pageType": "css-at-rule-descriptor",
    "summary": "The syntax descriptor of the @property at-rule defines the allowed value types for the registered CSS custom property.\nIt controls how the property's specified value is processed to derive the computed value.\nIt is a required descriptor; if missing or invalid, the entire @property rule is invalid and ignored."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/inherit",
    "pageType": "css-keyword",
    "summary": "The inherit CSS keyword causes the element to take the computed value of the property from its parent element. It can be applied to any CSS property, including the CSS shorthand property all."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/max-content",
    "pageType": "css-keyword",
    "summary": "The max-content sizing keyword represents the maximum intrinsic size of an element.\nThe keyword expands the element to the largest size needed to display its content without any soft wraps.\nFor text content, this keyword does not wrap the content at all, even if it causes overflow."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/sqrt",
    "pageType": "css-function",
    "summary": "The sqrt() CSS function is an exponential function that returns the square root of a number."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_easing_functions",
    "pageType": "css-module",
    "summary": "The CSS easing functions module defines easing functions, which provide a means to control the transformation of values. The functions defined include linear, cubic bezier, and step easing functions. These easing functions can be applied to animations and transitions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Column_combinator",
    "pageType": "css-combinator",
    "summary": "The column combinator (||) is placed between two CSS selectors. It matches only those elements matched by the second selector that belong to the column elements matched by the first."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/hue",
    "pageType": "css-type",
    "summary": "The <hue> CSS data type represents the hue angle of a color.\nIt is used in the color functions that accept hue expressed as a single value, specifically hsl(), hwb(), lch(), and oklch() functional notations."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:host_function",
    "pageType": "css-pseudo-class",
    "summary": "The :host() CSS pseudo-class function selects the shadow host of the shadow DOM containing the CSS it is used inside (so you can select a custom element from inside its shadow DOM) — but only if the selector given as the function's parameter matches the shadow host. :host() has no effect when used outside a shadow DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@page",
    "pageType": "css-at-rule",
    "summary": "The @page at-rule is a CSS at-rule used to modify different aspects of printed pages. It targets and modifies the page's dimensions, orientation, and margins. The @page at-rule can be used to target all pages in a print-out or a subset using its various pseudo-classes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@page/size",
    "pageType": "css-at-rule-descriptor",
    "summary": "The size CSS at-rule descriptor, used with the @page at-rule, defines the size and orientation of the box which is used to represent a page. Most of the time, this size corresponds to the target size of the printed page if applicable."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@page/page-orientation",
    "pageType": "css-at-rule-descriptor",
    "summary": "The page-orientation CSS descriptor for the @page at-rule controls the rotation of a printed page. It handles the flow of content across pages when the orientation of a page is changed. This behavior differs from the size descriptor in that a user can define the direction in which to rotate the page."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/easing-function",
    "pageType": "css-type",
    "summary": "The <easing-function> CSS data type represents a mathematical function that describes the rate at which a value changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/easing-function/cubic-bezier",
    "pageType": "css-function",
    "summary": "The cubic-bezier() CSS function creates a smooth transition using a cubic Bézier curve.\nAs an <easing-function>, it can be used to smooth out the start and end of the interpolation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/easing-function/linear",
    "pageType": "css-function",
    "summary": "The linear() CSS function creates a transition curve that progresses uniformly between points.\nAs an <easing-function>, it creates transitions where the interpolation occurs at a constant rate from beginning to end."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/easing-function/steps",
    "pageType": "css-function",
    "summary": "The steps() CSS function defines a transition that divides the input time into a specified number of intervals that are equal in length. This subclass of step functions are sometimes also called staircase functions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/sibling-count",
    "pageType": "css-function",
    "summary": "The sibling-count() CSS function returns an integer representing the total number of sibling DOM elements (direct children of the parent) of the element on which it is used, including itself."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:first-child",
    "pageType": "css-pseudo-class",
    "summary": "The :first-child CSS pseudo-class represents the first element among a group of sibling elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_writing_modes",
    "pageType": "css-module",
    "summary": "The CSS writing modes module defines support for various international writing modes and their combinations, including left-to-right and right-to-left text ordering as well as horizontal and vertical orientations."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_writing_modes/Vertical_controls",
    "pageType": "guide",
    "summary": "The guide explains how to use the CSS writing-mode and direction properties to create and configure vertical form controls. This includes:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_writing_modes/Writing_mode_systems",
    "pageType": "guide",
    "summary": "CSS supports different content directionalities, or writing modes, including right-to-left, left-to-right, and top-to-bottom. The guide provides a brief overview of writing mode systems and their directionalities."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_namespaces",
    "pageType": "css-module",
    "summary": "The CSS namespaces module defines the syntax for using namespaces in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:disabled",
    "pageType": "css-pseudo-class",
    "summary": "The :disabled CSS pseudo-class represents any disabled element. An element is disabled if it can't be activated (selected, clicked on, typed into, etc.) or accept focus. The element also has an enabled state, in which it can be activated or accept focus."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:fullscreen",
    "pageType": "css-pseudo-class",
    "summary": "The :fullscreen CSS pseudo-class matches every element that is currently in fullscreen mode. If multiple elements have been put into fullscreen mode, this selects them all."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:default",
    "pageType": "css-pseudo-class",
    "summary": "The :default CSS pseudo-class selects form elements that are the default in a group of related elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_scroll-driven_animations",
    "pageType": "css-module",
    "summary": "The CSS scroll-driven animations module provides functionality that builds on top of the CSS animations module and Web Animations API. It allows you to animate property values based on a progression along a scroll-based timeline instead of the default time-based document timeline. This means that you can animate an element by scrolling a scrollable element, rather than just by the passing of time."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_fragmentation",
    "pageType": "css-module",
    "summary": "The CSS fragmentation module defines how content is displayed when it is broken (fragmented) and flows across multiple pages, regions, or columns. This module defines features for pagination, breaking variable fragment size and orientation, widows and orphans."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/display-outside",
    "pageType": "css-type",
    "summary": "The <display-outside> keywords specify the element's outer display type, which is essentially its role in flow layout. These keywords are used as values of the display property, and can be used for legacy purposes as a single keyword, or as defined in the Level 3 specification alongside a value from the <display-inside> keywords."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_filter_effects",
    "pageType": "css-module",
    "summary": "The properties in the CSS filter effects module let you define a way of processing an element's rendering before the element is displayed in the document. Examples of such effects include blurring and changing the intensity of the color of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_filter_effects/Using_filter_effects",
    "pageType": "guide",
    "summary": "Have you ever hovered over a black-and-white or sepia image and the full-color image came into view instantly? Have you ever encountered a background image with a small blurred-out section that makes the text on top more legible? In the past, these manipulations required image editing software, time, and additional HTTP requests."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/display-inside",
    "pageType": "css-type",
    "summary": "These keywords specify the element's inner display type, which defines the type of formatting context that lays out its contents (assuming it is a non-replaced element). These keywords are used as values of the display property, and can be used for legacy purposes as a single keyword, or as defined in the Level 3 specification alongside a value from the <display-outside> keywords."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/revert-layer",
    "pageType": "css-keyword",
    "summary": "The revert-layer CSS-wide keyword rolls back the value of a property in a cascade layer to the value of the property in a CSS rule matching the element in a previous cascade layer. The value of a property with this keyword is recalculated as if no rules were specified on the target element in the current cascade layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/url_value",
    "pageType": "css-type",
    "summary": "The <url> CSS data type is a pointer to a resource. The resource could be an image, a video, a CSS file, a font file, an SVG feature etc."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_basic_user_interface",
    "pageType": "css-module",
    "summary": "The CSS basic user interface module allows you to define the rendering and functionality of features related to the user interface, including outline properties, visual feedback for pointing devices and keyboards, and modifying the default appearance of UI widgets."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/display-box",
    "pageType": "css-type",
    "summary": "These keywords define whether an element generates display boxes at all."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:link",
    "pageType": "css-pseudo-class",
    "summary": "The :link CSS pseudo-class represents an element that has not yet been visited. It matches every unvisited <a> or <area> element that has an href attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/line-style",
    "pageType": "css-type",
    "summary": "The <line-style> enumerated value type represents keyword values that define the style of a line, or the lack of a line. The <line-style> keyword values are used in the following longhand and shorthand border and column properties:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-only-whitespace",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-only-whitespace CSS pseudo-class matches elements that only contain text nodes that only contain whitespace. (This includes elements with empty text nodes and elements with no child nodes.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/display-listitem",
    "pageType": "css-type",
    "summary": "The list-item keyword causes the element to generate a ::marker pseudo-element with the content specified by its list-style properties (for example a bullet point) together with a principal box of the specified type for its own contents."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-handler-blocked",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-handler-blocked CSS pseudo-class is a Mozilla extension that matches elements that can't be displayed because their handlers have been blocked."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-first-node",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-first-node CSS pseudo-class is a Mozilla extension that represents any element that is the first child node of some other element. It differs from :first-child because it does not match a first-child element with (non-whitespace) text before it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/sign",
    "pageType": "css-function",
    "summary": "The sign() CSS function contains one calculation, and returns -1 if the numeric value of the argument is negative, +1 if the numeric value of the argument is positive, 0⁺ if the numeric value of the argument is 0⁺, and 0⁻ if the numeric value of the argument is 0⁻."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:blank",
    "pageType": "css-pseudo-class",
    "summary": "The :blank CSS pseudo-class selects empty user input elements (e.g., <input> or <textarea>)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-locale-dir_ltr",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-locale-dir(ltr) CSS pseudo-class is a Mozilla extension that matches an element if the user interface is being displayed left-to-right. This is determined by the preference intl.uidirection.locale (where locale is the current locale) being set to \"ltr\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@position-try",
    "pageType": "css-at-rule",
    "summary": "The @position-try CSS at-rule is used to define a custom position try fallback option, which can be used to define positioning and alignment for anchor-positioned elements. One or more sets of position try fallback options can be applied to the anchored element via the position-try-fallbacks property or position-try shorthand. When the positioned element is moved to a position where it starts to overflow its containing block or the viewport, the browser will select the first position try fallback option it finds that places the positioned element fully back on-screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-search-cancel-button",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-search-cancel-button CSS pseudo-element represents a button (the \"cancel button\") at the edge of an <input> of type=\"search\" which clears away the current value of the <input> element. This button and pseudo-element are non-standard, supported only in WebKit and Blink, hence the vendor prefix. The clear button is only shown on non-empty search <input> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference",
    "pageType": "landing-page",
    "summary": "Use this CSS reference to browse an alphabetical index of all of the standard CSS properties, pseudo-classes, pseudo-elements, data types, functional notations and at-rules. You can also browse key CSS concepts and a list of selectors organized by type. Also included is a brief DOM-CSS / CSSOM reference."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Mozilla_extensions",
    "pageType": "landing-page",
    "summary": "A vendor prefix is used to indicate that a feature is specific to a certain browser.\nFirefox supports several extensions to CSS, which are prefixed with -moz-."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Webkit_extensions",
    "pageType": "landing-page",
    "summary": "A vendor prefix is used to indicate that a feature is specific to a certain browser.\nUser agents based on WebKit or Blink (such as Safari and Chrome) support several extensions to CSS, which are prefixed with -webkit-."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/outline",
    "pageType": "css-shorthand-property",
    "summary": "The outline CSS shorthand property sets most of the outline properties in a single declaration."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/white-space-collapse",
    "pageType": "css-property",
    "summary": "The white-space-collapse CSS property controls how white space inside an element is collapsed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-snap-type",
    "pageType": "css-property",
    "summary": "The scroll-snap-type CSS property is set on a scroll container, opting it into scroll snapping by setting the direction and strictness of snap point enforcement within the snap port."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-style",
    "pageType": "css-property",
    "summary": "The border-inline-style CSS property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/container-type",
    "pageType": "css-property",
    "summary": "An element can be established as a query container using the container-type CSS property. container-type is used to define the type of container context used in a container query. The available container contexts are:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-feature-settings",
    "pageType": "css-property",
    "summary": "The font-feature-settings CSS property controls advanced typographic features in OpenType fonts."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-left",
    "pageType": "css-property",
    "summary": "The scroll-margin-left property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-bottom-right-shape",
    "pageType": "css-property",
    "summary": "The corner-bottom-right-shape CSS property specifies the shape of a box's bottom-right corner, within its border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border",
    "pageType": "css-shorthand-property",
    "summary": "The border shorthand CSS property sets an element's border. It sets the values of border-width, border-style, and border-color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/order",
    "pageType": "css-property",
    "summary": "The order CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending order value and then by their source code order. Items not given an explicit order value are assigned the default value of 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-width",
    "pageType": "css-property",
    "summary": "The border-block-width CSS property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/list-style-type",
    "pageType": "css-property",
    "summary": "The list-style-type CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-clip",
    "pageType": "css-property",
    "summary": "The background-clip CSS property sets whether an element's background extends underneath its border box, padding box, or content box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/offset-rotate",
    "pageType": "css-property",
    "summary": "The offset-rotate CSS property defines the orientation/direction of the element as it is positioned along the offset-path."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties",
    "pageType": "landing-page",
    "summary": "A CSS property is a parameter used in a CSS declaration that lets you style certain aspects of selected elements.\nFor example, the opacity property is used to set the opacity of a selected element, allowing you to control if content behind that element is visible:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-width",
    "pageType": "css-shorthand-property",
    "summary": "The border-width shorthand CSS property sets the width of an element's border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/touch-action",
    "pageType": "css-property",
    "summary": "The touch-action CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/ruby-align",
    "pageType": "css-property",
    "summary": "The ruby-align CSS property defines the distribution of the different ruby elements over the base."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-start-start-radius",
    "pageType": "css-property",
    "summary": "The border-start-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-bottom",
    "pageType": "css-property",
    "summary": "The padding-bottom CSS property sets the height of the padding area on the bottom of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/aspect-ratio",
    "pageType": "css-property",
    "summary": "The aspect-ratio CSS property allows you to define the desired width-to-height ratio of an element's box. This means that even if the parent container or viewport size changes, the browser will adjust the element's dimensions to maintain the specified width-to-height ratio. The specified aspect ratio is used in the calculation of auto sizes and some other layout functions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-image",
    "pageType": "css-shorthand-property",
    "summary": "The border-image CSS property draws an image around a given element. It replaces the element's regular border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/view-timeline-inset",
    "pageType": "css-property",
    "summary": "The view-timeline-inset CSS property is used to specify one or two values representing an adjustment to the position of the scrollport (see Scroll container for more details) in which the subject element of a named view progress timeline animation is deemed to be visible. Put another way, this allows you to specify start and/or end inset (or outset) values that offset the position of the timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-block",
    "pageType": "css-shorthand-property",
    "summary": "The scroll-margin-block shorthand property sets the scroll margins of an element in the block dimension."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-spacing",
    "pageType": "css-property",
    "summary": "The border-spacing CSS property sets the distance between the borders of adjacent cells in a <table>. This property applies only when border-collapse is separate."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/ry",
    "pageType": "css-property",
    "summary": "The ry CSS property defines the y-axis, or vertical, radius of an SVG <ellipse> and the vertical curve of the corners of an SVG <rect> rectangle. If present, it overrides the shape's ry attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/contain-intrinsic-block-size",
    "pageType": "css-property",
    "summary": "The contain-intrinsic-block-size CSS logical property defines the block size of an element that a browser can use for layout when the element is subject to size containment."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-fill-mode",
    "pageType": "css-property",
    "summary": "The animation-fill-mode CSS property sets how a CSS animation applies styles to its target before and after its execution."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/caption-side",
    "pageType": "css-property",
    "summary": "The caption-side CSS property puts the content of a table's <caption> on the specified side. The values are relative to the writing-mode of the table."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scrollbar-width",
    "pageType": "css-property",
    "summary": "The scrollbar-width property allows the author to set the desired thickness of an element's scrollbars when they are shown."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/contain",
    "pageType": "css-property",
    "summary": "The contain CSS property indicates that an element and its contents are, as much as possible, independent from the rest of the document tree.\nContainment enables isolating a subsection of the DOM, providing performance benefits by limiting calculations of layout, style, paint, size, or any combination to a DOM subtree rather than the entire page. Containment can also be used to scope CSS counters and quotes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transition-behavior",
    "pageType": "css-property",
    "summary": "The transition-behavior CSS property specifies whether transitions will be started for properties whose animation behavior is discrete."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/reading-flow",
    "pageType": "css-property",
    "summary": "The reading-flow CSS property enables modifying the reading order of child elements of a block, flex, or grid layout. This affects the order in which they are rendered to speech and navigated to when using sequential navigation such as tabbing to links or buttons."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-image",
    "pageType": "css-property",
    "summary": "The background-image CSS property sets one or more background images on an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/fill-opacity",
    "pageType": "css-property",
    "summary": "The fill-opacity CSS property defines the opacity of the painting operation (color, gradient, pattern, etc.) applied to SVG shapes or text content elements to fill the element. The property defines the opacity of the element's fill only; it does not affect the stroke. If present, it overrides the element's fill-opacity attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/color-interpolation",
    "pageType": "css-property",
    "summary": "The color-interpolation CSS property is used in SVG to specify which color space to use for <linearGradient> and <radialGradient> SVG elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-color",
    "pageType": "css-property",
    "summary": "The border-block-color CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-inline-end",
    "pageType": "css-property",
    "summary": "The scroll-padding-inline-end property defines offsets for the end edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stroke-opacity",
    "pageType": "css-property",
    "summary": "The stroke-opacity CSS property defines the opacity of an SVG shape's stroke. The effect is identical to that of opacity, except it is applied only to the stroke, not to the entire element. If present, it overrides the element's stroke-opacity attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-duration",
    "pageType": "css-property",
    "summary": "The animation-duration CSS property sets the length of time that an animation takes to complete one cycle."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-block-end",
    "pageType": "css-property",
    "summary": "The padding-block-end CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-image-slice",
    "pageType": "css-property",
    "summary": "The border-image-slice CSS property divides the image specified by border-image-source into regions. These regions form the components of an element's border image."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/page-break-after",
    "pageType": "css-property",
    "summary": "The page-break-after CSS property adjusts page breaks after the current element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-end-width",
    "pageType": "css-property",
    "summary": "The border-block-end-width CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/counter-increment",
    "pageType": "css-property",
    "summary": "The counter-increment CSS property can be used to increase or decrease the value of the named CSS counters by the specified values, or to prevent all counters or an individual counter's value from being changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-size",
    "pageType": "css-property",
    "summary": "The background-size CSS property sets the size of the element's background image.\nThe image can be left to its natural size, stretched, or constrained to fit the available space."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-row",
    "pageType": "css-shorthand-property",
    "summary": "The grid-row CSS shorthand property specifies a grid item's size and location within a grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/word-spacing",
    "pageType": "css-property",
    "summary": "The word-spacing CSS property sets the length of space between words and between tags."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/word-break",
    "pageType": "css-property",
    "summary": "The word-break CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/column-rule-width",
    "pageType": "css-property",
    "summary": "The column-rule-width CSS property sets the width of the line drawn between columns in a multi-column layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/perspective",
    "pageType": "css-property",
    "summary": "The perspective CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-mask-repeat-y",
    "pageType": "css-property",
    "summary": "The -webkit-mask-repeat-y property sets whether and how a mask image is repeated (tiled) vertically."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/user-select",
    "pageType": "css-property",
    "summary": "The user-select CSS property controls whether the user can select text. This doesn't have any effect on content loaded as part of a browser's user interface (its chrome), except in textboxes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/flex-flow",
    "pageType": "css-shorthand-property",
    "summary": "The flex-flow CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-text-fill-color",
    "pageType": "css-property",
    "summary": "The -webkit-text-fill-color CSS property specifies the fill color of characters of text. If this property is not set, the value of the color property is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/color",
    "pageType": "css-property",
    "summary": "The color CSS property sets the foreground color value of an element's text and text decorations, and sets the currentColor value. currentColor may be used as an indirect value on other properties and is the default for other color properties, such as border-color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-start",
    "pageType": "css-shorthand-property",
    "summary": "The border-block-start CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/break-after",
    "pageType": "css-property",
    "summary": "The break-after CSS property sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-end-end-radius",
    "pageType": "css-property",
    "summary": "The border-end-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/counter-set",
    "pageType": "css-property",
    "summary": "The counter-set CSS property sets CSS counters on the element to the given values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-right",
    "pageType": "css-shorthand-property",
    "summary": "The border-right shorthand CSS property sets all the properties of an element's right border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/white-space",
    "pageType": "css-property",
    "summary": "The white-space CSS property sets how white space inside an element is handled."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/position-try-order",
    "pageType": "css-property",
    "summary": "The position-try-order CSS property allows you to specify various fallback options that result in an available position-try fallback being used to set an anchor-positioned element's position, instead of its initial position settings."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-top",
    "pageType": "css-property",
    "summary": "The scroll-padding-top property defines offsets for the top of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-shape",
    "pageType": "css-shorthand-property",
    "summary": "The corner-shape shorthand CSS property specifies the shape of a box's corners, within the area specified by its border-radius property value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-moz-force-broken-image-icon",
    "pageType": "css-property",
    "summary": "The -moz-force-broken-image-icon extended CSS property can be used to force the broken image icon to be shown even when a broken image has an alt attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-box-edge",
    "pageType": "css-property",
    "summary": "The text-box-edge CSS property specifies an amount of space to trim from a text element's block container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-inline-start",
    "pageType": "css-property",
    "summary": "The padding-inline-start CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/marker-start",
    "pageType": "css-property",
    "summary": "The marker-start CSS property points to a marker that will be drawn on the first vertex of the element's path; that is, at its starting vertex. The marker must have been defined using an SVG <marker> element, and can only be referenced with a <url> value. The value of the CSS property overrides any values of the marker-start attribute in the SVG."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-position",
    "pageType": "css-property",
    "summary": "The mask-position CSS property sets the initial position, relative to the mask position layer set by mask-origin, for each defined mask image."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/interactivity",
    "pageType": "css-property",
    "summary": "The interactivity CSS property specifies whether an element and its descendant nodes are set to be inert."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-top",
    "pageType": "css-property",
    "summary": "The padding-top CSS property sets the height of the padding area on the top of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/letter-spacing",
    "pageType": "css-property",
    "summary": "The letter-spacing CSS property sets the horizontal spacing behavior between text characters. This value is added to the natural spacing between characters while rendering the text. Positive values of letter-spacing causes characters to spread farther apart, while negative values of letter-spacing bring characters closer together."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-delay",
    "pageType": "css-property",
    "summary": "The animation-delay CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stop-opacity",
    "pageType": "css-property",
    "summary": "The stop-opacity CSS property defines the opacity of a given color gradient stop in the SVG <stop> element within an SVG gradient. If present, it overrides the element's stop-opacity attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-orientation",
    "pageType": "css-property",
    "summary": "The text-orientation CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when writing-mode is not horizontal-tb). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/field-sizing",
    "pageType": "css-property",
    "summary": "The field-sizing CSS property enables you to control the sizing behavior of elements that are given a default preferred size, such as form control elements. This property enables you to override the default sizing behavior, allowing form controls to adjust in size to fit their contents."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/place-self",
    "pageType": "css-shorthand-property",
    "summary": "The place-self CSS shorthand property allows you to align an individual item in both the block and inline directions at once (i.e., the align-self and justify-self properties). This property applies to block-level boxes, absolutely-positioned boxes, and grid items. If the second value is not present, the first value is also used for it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/offset",
    "pageType": "css-shorthand-property",
    "summary": "The offset CSS shorthand property sets all the properties required for animating an element along a defined path. The offset properties together help to define an offset transform, a transform that aligns a point in an element (offset-anchor) to an offset position (offset-position) on a path (offset-path) at various points along the path (offset-distance) and optionally rotates the element (offset-rotate) to follow the direction of the path."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/display",
    "pageType": "css-property",
    "summary": "The display CSS property sets whether an element is treated as a block or inline box and the layout used for its children, such as flow layout, grid or flex."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-kerning",
    "pageType": "css-property",
    "summary": "The font-kerning CSS property sets the use of the kerning information stored in a font."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/gap",
    "pageType": "css-shorthand-property",
    "summary": "The gap CSS shorthand property sets the gaps (also called gutters) between rows and columns. This property applies to multi-column, flex, and grid containers."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/column-gap",
    "pageType": "css-property",
    "summary": "The column-gap CSS property sets the size of the gap (gutter) between an element's columns."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask",
    "pageType": "css-shorthand-property",
    "summary": "The mask CSS shorthand property hides an element (partially or fully) by masking or clipping a specified area of the image. It is a shorthand for all the mask-* properties. The property accepts one or more comma-separated values, where each value corresponds to a <mask-layer>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-timeline-name",
    "pageType": "css-property",
    "summary": "The scroll-timeline-name CSS property is used to define the name of a named scroll progress timeline, which is progressed through by scrolling a scrollable element (scroller) between top and bottom (or left and right). scroll-timeline-name is set on the scroller that will provide the timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-bottom",
    "pageType": "css-property",
    "summary": "The scroll-padding-bottom property defines offsets for the bottom of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scale",
    "pageType": "css-property",
    "summary": "The scale CSS property allows you to specify scale transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/position-anchor",
    "pageType": "css-property",
    "summary": "The position-anchor CSS property specifies the anchor name of the anchor element (i.e., an element that has an anchor name set on it via the anchor-name property) a positioned element is associated with."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/x",
    "pageType": "css-property",
    "summary": "The x CSS property defines the x-axis coordinate of the top left corner of the SVG <rect> shape, <image> image, <foreignObject> viewport or nested <svg> viewport relative to the nearest <svg> ancestor's user coordinate system. If present, it overrides the element's x attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-indent",
    "pageType": "css-property",
    "summary": "The text-indent CSS property sets the length of empty space (indentation) that is put before lines of text in a block."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-underline-position",
    "pageType": "css-property",
    "summary": "The text-underline-position CSS property specifies the position of the underline which is set using the text-decoration property's underline value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/writing-mode",
    "pageType": "css-property",
    "summary": "The writing-mode CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (html element for HTML documents)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-right",
    "pageType": "css-property",
    "summary": "The scroll-margin-right property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/column-rule-style",
    "pageType": "css-property",
    "summary": "The column-rule-style CSS property sets the style of the line drawn between columns in a multi-column layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-autospace",
    "pageType": "css-property",
    "summary": "The text-autospace CSS property allows you to specify the space applied between Chinese/Japanese/Korean (CJK) and non-CJK characters."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/object-position",
    "pageType": "css-property",
    "summary": "The object-position CSS property specifies the alignment of the selected replaced element's contents within the element's box. Areas of the box which aren't covered by the replaced element's object will show the element's background."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-align",
    "pageType": "css-property",
    "summary": "The text-align CSS property sets the horizontal alignment of the inline-level content inside a block element or table-cell box. This means it works like vertical-align but in the horizontal direction."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/filter",
    "pageType": "css-property",
    "summary": "The filter CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/left",
    "pageType": "css-property",
    "summary": "The left CSS property participates in specifying the horizontal position of a positioned element. This inset property has no effect on non-positioned elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-end-start-radius",
    "pageType": "css-property",
    "summary": "The border-end-start-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/dynamic-range-limit",
    "pageType": "css-property",
    "summary": "The dynamic-range-limit CSS property specifies the maximum luminance allowed for High Dynamic Range (HDR) content."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-tap-highlight-color",
    "pageType": "css-property",
    "summary": "-webkit-tap-highlight-color is a non-standard CSS property that sets the color of the highlight that appears over a link while it's being tapped. The highlighting indicates to the user that their tap is being successfully recognized, and indicates which element they're tapping on."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-overflow",
    "pageType": "css-property",
    "summary": "The text-overflow CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis (…), or display a custom string."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-synthesis-small-caps",
    "pageType": "css-property",
    "summary": "The font-synthesis-small-caps CSS property lets you specify whether or not the browser may synthesize small-caps typeface when it is missing in a font family. Small-caps glyphs typically use the form of uppercase letters but are reduced to the size of lowercase letters."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-right",
    "pageType": "css-property",
    "summary": "The padding-right CSS property sets the width of the padding area on the right of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/z-index",
    "pageType": "css-property",
    "summary": "The z-index CSS property sets the z-order of a positioned element and its descendants or flex and grid items. Overlapping elements with a larger z-index cover those with a smaller one."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/marker-mid",
    "pageType": "css-property",
    "summary": "The marker-mid CSS property points to a marker that will be drawn on the middle vertices of the element's path; that is, at each of its vertices between the start and end vertices. The marker must have been defined using an SVG <marker> element, and can only be referenced with a <url> value. The value of the CSS property overrides any values of the marker-mid attribute in the SVG."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/content-visibility",
    "pageType": "css-property",
    "summary": "The content-visibility CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. It enables the user agent to skip an element's rendering work (including layout and painting) until it is needed — which makes the initial page load much faster."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-block-start",
    "pageType": "css-property",
    "summary": "The scroll-padding-block-start property defines offsets for the start edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/position-area",
    "pageType": "css-property",
    "summary": "The position-area CSS property enables an anchor-positioned element to be positioned relative to the edges of its associated anchor element by placing the positioned element on one or more tiles of an implicit 3x3 grid, where the anchoring element is the center cell."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stroke-linecap",
    "pageType": "css-property",
    "summary": "The stroke-linecap CSS property defines the shape to be used at the end of open subpaths of SVG elements' unclosed strokes. If present, it overrides the element's stroke-linecap attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/view-transition-class",
    "pageType": "css-property",
    "summary": "The view-transition-class CSS property provides the selected elements with an identifying class (a <custom-ident>), providing an additional method of styling the view transitions for those elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-mask-position-x",
    "pageType": "css-property",
    "summary": "The -webkit-mask-position-x CSS property sets the initial horizontal position of a mask image."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/inset-inline-end",
    "pageType": "css-property",
    "summary": "The inset-inline-end CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-style",
    "pageType": "css-property",
    "summary": "The font-style CSS property sets whether a font should be styled with a normal, italic, or oblique face from its font-family."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-inline-start",
    "pageType": "css-property",
    "summary": "The margin-inline-start CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. It corresponds to the margin-top, margin-right, margin-bottom, or margin-left property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding",
    "pageType": "css-shorthand-property",
    "summary": "The padding CSS shorthand property sets the padding area on all four sides of an element at once."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-left",
    "pageType": "css-property",
    "summary": "The scroll-padding-left property defines offsets for the left of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-top",
    "pageType": "css-shorthand-property",
    "summary": "The border-top shorthand CSS property sets all the properties of an element's top border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-synthesis-style",
    "pageType": "css-property",
    "summary": "The font-synthesis-style CSS property lets you specify whether or not the browser may synthesize the oblique typeface when it is missing in a font family."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/reading-order",
    "pageType": "css-property",
    "summary": "The reading-order CSS property enables changing the order in which a child of a reading flow container is read relative to its element siblings."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-end-style",
    "pageType": "css-property",
    "summary": "The border-block-end-style CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stroke-dashoffset",
    "pageType": "css-property",
    "summary": "The stroke-dashoffset CSS property defines an offset for the starting point of the rendering of an SVG element's associated dash array. If present, it overrides the element's stroke-dashoffset attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-decoration-skip",
    "pageType": "css-property",
    "summary": "The text-decoration-skip CSS property sets what parts of an element's content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/column-fill",
    "pageType": "css-property",
    "summary": "The column-fill CSS property controls how an element's contents are balanced when broken into columns."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-size",
    "pageType": "css-property",
    "summary": "The mask-size CSS property specifies the sizes of specified mask images. Mask image sizes can be fully or partially constrained to preserve their intrinsic aspect ratios."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/shape-rendering",
    "pageType": "css-property",
    "summary": "The shape-rendering CSS property provides hints to the renderer about what tradeoffs to make when rendering shapes like paths, circles, or rectangles.\nIt only has an effect on the <circle>, <ellipse>, <line>, <path>, <polygon>, <polyline>, and <rect> elements. If explicitly declared, the value of the CSS property overrides the any values of the element's shape-rendering attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-end-color",
    "pageType": "css-property",
    "summary": "The border-block-end-color CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/flex-wrap",
    "pageType": "css-property",
    "summary": "The flex-wrap CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-direction",
    "pageType": "css-property",
    "summary": "The animation-direction CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/opacity",
    "pageType": "css-property",
    "summary": "The opacity CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overflow-anchor",
    "pageType": "css-property",
    "summary": "The overflow-anchor CSS property provides a way to opt out of the browser's scroll anchoring behavior, which adjusts scroll position to minimize content shifts."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-start-color",
    "pageType": "css-property",
    "summary": "The border-block-start-color CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/image-resolution",
    "pageType": "css-property",
    "summary": "The image-resolution CSS property specifies the intrinsic resolution of all raster images used in or on the element. It affects content images such as replaced elements and generated content, and decorative images such as background-image images."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-start-style",
    "pageType": "css-property",
    "summary": "The border-inline-start-style CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-right-width",
    "pageType": "css-property",
    "summary": "The border-right-width CSS property sets the width of the right border of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-radius",
    "pageType": "css-shorthand-property",
    "summary": "The border-radius CSS property rounds the corners of an element's outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/ruby-overhang",
    "pageType": "css-property",
    "summary": "The ruby-overhang CSS property specifies whether or not a <ruby> annotation overhangs any surrounding text."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-block",
    "pageType": "css-shorthand-property",
    "summary": "The padding-block CSS shorthand property defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-snap-stop",
    "pageType": "css-property",
    "summary": "The scroll-snap-stop CSS property defines whether or not the scroll container is allowed to \"pass over\" possible snap positions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin",
    "pageType": "css-shorthand-property",
    "summary": "The scroll-margin shorthand property sets all of the scroll margins of an element at once, assigning values much like the margin property does for margins of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-top-left-radius",
    "pageType": "css-property",
    "summary": "The border-top-left-radius CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/cx",
    "pageType": "css-property",
    "summary": "The cx CSS property defines the x-axis center point of an SVG <circle> or <ellipse> element. If present, it overrides the element's cx attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-position",
    "pageType": "css-property",
    "summary": "The background-position CSS property sets the initial position for each background image. The position is relative to the position layer set by background-origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/d",
    "pageType": "css-property",
    "summary": "The d CSS property defines a path to be drawn by the SVG <path> element. If present, it overrides the element's d attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-language-override",
    "pageType": "css-property",
    "summary": "The font-language-override CSS property controls the use of language-specific glyphs in a typeface."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-emphasis",
    "pageType": "css-shorthand-property",
    "summary": "The text-emphasis CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for text-emphasis-style and text-emphasis-color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-left-shape",
    "pageType": "css-property",
    "summary": "The corner-left-shape CSS property specifies the shape of both the corners on a box's left-hand edge, within their border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stop-color",
    "pageType": "css-property",
    "summary": "The stop-color CSS property defines the color to use for an SVG <stop> element within a gradient. If present, it overrides the element's stop-color attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-variant-east-asian",
    "pageType": "css-property",
    "summary": "The font-variant-east-asian CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-timeline",
    "pageType": "css-property",
    "summary": "The animation-timeline CSS property specifies the timeline that is used to control the progress of a CSS animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-timeline/view",
    "pageType": "css-function",
    "summary": "The view() CSS function can be used with animation-timeline to indicate a subject element that will provide an anonymous view progress timeline to animate. The view progress timeline is progressed through by a change in visibility of the subject element inside the nearest ancestor scroller. The visibility of the subject inside the scroller is tracked — by default, the timeline is at 0% when the subject is first visible at one edge of the scroller, and 100% when it reaches the opposite edge."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-timeline/scroll",
    "pageType": "css-function",
    "summary": "The scroll() CSS function can be used with animation-timeline to indicate a scrollable element (scroller) and scrollbar axis that will provide an anonymous scroll progress timeline for animating the current element. The scroll progress timeline is progressed through by scrolling the scroller between top and bottom (or left and right). The position in the scroll range is converted into a percentage of progress — 0% at the start and 100% at the end."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/backface-visibility",
    "pageType": "css-property",
    "summary": "The backface-visibility CSS property sets whether the back face of an element is visible when turned towards the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overflow-wrap",
    "pageType": "css-property",
    "summary": "The overflow-wrap CSS property applies to text, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/translate",
    "pageType": "css-property",
    "summary": "The translate CSS property allows you to specify translation transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/all",
    "pageType": "css-shorthand-property",
    "summary": "The all shorthand CSS property resets all of an element's properties except unicode-bidi, direction, and CSS Custom Properties. It can set properties to their initial or inherited values, or to the values specified in another cascade layer or stylesheet origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/shape-image-threshold",
    "pageType": "css-property",
    "summary": "The shape-image-threshold CSS property sets the alpha channel threshold used to extract the shape using an image as the value for shape-outside."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-top-left-shape",
    "pageType": "css-property",
    "summary": "The corner-top-left-shape CSS property specifies the shape of a box's top-left corner, within its border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/isolation",
    "pageType": "css-property",
    "summary": "The isolation CSS property determines whether an element must create a new stacking context."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-top-right-radius",
    "pageType": "css-property",
    "summary": "The border-top-right-radius CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overflow-clip-margin",
    "pageType": "css-property",
    "summary": "The overflow-clip-margin CSS property determines how far outside its bounds an element with overflow: clip may be painted before being clipped. The bound defined by this property is called the overflow clip edge of the box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-top",
    "pageType": "css-property",
    "summary": "The scroll-margin-top property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/speak-as",
    "pageType": "css-property",
    "summary": "The speak-as CSS property is used to define how HTML content is spoken. The one to three enumerated key terms determine the manner by which elements and text get rendered by aural technologies, such as screen readers and digital assistants."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stroke",
    "pageType": "css-property",
    "summary": "The stroke CSS property defines the color or SVG paint server used to draw an element's stroke. As such, stroke only has an effect on elements that can be given a stroke (for example, <rect> or <ellipse>); see the page on the SVG stroke attribute for a complete list. When declared, the CSS value overrides any value of the element's stroke SVG attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-text-stroke-color",
    "pageType": "css-property",
    "summary": "The -webkit-text-stroke-color CSS property specifies the stroke color of characters of text. If this property is not set, the value of the color property is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/image-rendering",
    "pageType": "css-property",
    "summary": "The image-rendering CSS property sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/break-inside",
    "pageType": "css-property",
    "summary": "The break-inside CSS property sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/container-name",
    "pageType": "css-property",
    "summary": "The container-name CSS property specifies a list of query container names used by the @container at-rule in a container query.\nA container query will apply styles to elements based on the size or scroll-state of the nearest ancestor with a containment context.\nWhen a containment context is given a name, it can be specifically targeted using the @container at-rule instead of the nearest ancestor with containment."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-range-end",
    "pageType": "css-property",
    "summary": "The animation-range-end CSS property is used to set the end of an animation's attachment range along its timeline, i.e., where along the timeline an animation will end."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/outline-style",
    "pageType": "css-property",
    "summary": "The outline-style CSS property sets the style of an element's outline. An outline is a line that is drawn around an element, outside the border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-shadow",
    "pageType": "css-property",
    "summary": "The box-shadow CSS property adds shadow effects around an element's frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-rendering",
    "pageType": "css-property",
    "summary": "The text-rendering CSS property provides information to the rendering engine about what to optimize for when rendering text."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transition-duration",
    "pageType": "css-property",
    "summary": "The transition-duration CSS property sets the length of time a transition animation should take to complete. By default, the value is 0s, meaning that no animation will occur."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/fill",
    "pageType": "css-property",
    "summary": "The fill CSS property defines how SVG text content and the interior canvas of SVG shapes are filled or painted. If present, it overrides the element's fill attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline",
    "pageType": "css-shorthand-property",
    "summary": "The border-inline CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/flex",
    "pageType": "css-shorthand-property",
    "summary": "The flex CSS shorthand property sets how a flex item will grow or shrink to fit the space available in its flex container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/content",
    "pageType": "css-property",
    "summary": "The content CSS property replaces content with a generated value. It can be used to define what is rendered inside an element or pseudo-element. For elements, the content property specifies whether the element renders normally (normal or none) or is replaced with an image (and associated \"alt\" text). For pseudo-elements and margin boxes, content defines the content as images, text, both, or none, which determines whether the element renders at all."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/will-change",
    "pageType": "css-property",
    "summary": "The will-change CSS property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-box-trim",
    "pageType": "css-property",
    "summary": "The text-box-trim CSS property specifies which of the over and under edges of text content to trim from a text element's block container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-mask-composite",
    "pageType": "css-property",
    "summary": "The -webkit-mask-composite property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the -webkit-mask-image property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-justify",
    "pageType": "css-property",
    "summary": "The text-justify CSS property sets what type of justification should be applied to text when text-align: justify; is set on an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-shadow",
    "pageType": "css-property",
    "summary": "The text-shadow CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and any of its decorations. Each shadow is described by some combination of X and Y offsets from the element, blur radius, and color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-block-start",
    "pageType": "css-property",
    "summary": "The padding-block-start CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transform-style",
    "pageType": "css-property",
    "summary": "The transform-style CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-area",
    "pageType": "css-shorthand-property",
    "summary": "The grid-area CSS shorthand property specifies a grid item's size and location within a grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/outline-color",
    "pageType": "css-property",
    "summary": "The outline-color CSS property sets the color of an element's outline."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-width",
    "pageType": "css-property",
    "summary": "The border-inline-width CSS property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width and border-bottom-width, or border-left-width, and border-right-width property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/max-height",
    "pageType": "css-property",
    "summary": "The max-height CSS property sets the maximum height of an element. It prevents the used value of the height property from becoming larger than the value specified for max-height."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/position",
    "pageType": "css-property",
    "summary": "The position CSS property sets how an element is positioned in a document. The top, right, bottom, and left physical properties and the inset-block-start, inset-block-end, inset-inline-start, and inset-inline-end flow-relative logical properties can be used to determine the final location of positioned elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/user-modify",
    "pageType": "css-property",
    "summary": "The user-modify property has no effect in Firefox. It was originally planned to determine whether or not the content of an element can be edited by a user."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-bottom-width",
    "pageType": "css-property",
    "summary": "The border-bottom-width CSS property sets the width of the bottom border of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-moz-orient",
    "pageType": "css-property",
    "summary": "The -moz-orient CSS property specifies the orientation of the element to which it's applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/place-items",
    "pageType": "css-shorthand-property",
    "summary": "The CSS place-items shorthand property aligns items along both the block and inline directions at once. It sets the values of the align-items and justify-items properties. If the second value is not set, the first value is also used for it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-size",
    "pageType": "css-property",
    "summary": "The font-size CSS property sets the size of the font. Changing the font size also updates the sizes of the font size-relative <length> units, such as em, ex, and so forth."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/offset-position",
    "pageType": "css-property",
    "summary": "The offset-position CSS property defines the initial position of an element along a path. This property is typically used in combination with the offset-path property to create a motion effect. The value of offset-position determines where the element gets placed initially for moving along an offset path if an offset-path function such as path() does not specify its own starting position."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/hyphens",
    "pageType": "css-property",
    "summary": "The hyphens CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-position-y",
    "pageType": "css-property",
    "summary": "The background-position-y CSS property sets the initial vertical position for each background image. The position is relative to the position layer set by background-origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-start-start-shape",
    "pageType": "css-property",
    "summary": "The corner-start-start-shape CSS property specifies the shape of a box's block-start and inline-start corner, within its border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/image-orientation",
    "pageType": "css-property",
    "summary": "The image-orientation CSS property specifies a layout-independent correction to the orientation of an image."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-right",
    "pageType": "css-property",
    "summary": "The scroll-padding-right property defines offsets for the right of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/contain-intrinsic-width",
    "pageType": "css-property",
    "summary": "The contain-intrinsic-width CSS property sets the width of an element that a browser will use for layout when the element is subject to size containment."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-combine-upright",
    "pageType": "css-property",
    "summary": "The text-combine-upright CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation",
    "pageType": "css-shorthand-property",
    "summary": "The animation shorthand CSS property applies an animation between styles. It is a shorthand for animation-name, animation-duration, animation-timing-function, animation-delay, animation-iteration-count, animation-direction, animation-fill-mode, animation-play-state, and animation-timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-image-source",
    "pageType": "css-property",
    "summary": "The border-image-source CSS property sets the source image used to create an element's border image."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-synthesis-weight",
    "pageType": "css-property",
    "summary": "The font-synthesis-weight CSS property lets you specify whether or not the browser may synthesize the bold typeface when it is missing in a font family."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-bottom-right-radius",
    "pageType": "css-property",
    "summary": "The border-bottom-right-radius CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/contain-intrinsic-height",
    "pageType": "css-property",
    "summary": "The contain-intrinsic-height CSS property sets the height of an element that a browser can use for layout when the element is subject to size containment."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-start-end-shape",
    "pageType": "css-property",
    "summary": "The corner-start-end-shape CSS property specifies the shape of a box's block-start and inline-end corner, within its border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/flex-basis",
    "pageType": "css-property",
    "summary": "The flex-basis CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with box-sizing."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background",
    "pageType": "css-shorthand-property",
    "summary": "The background shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method. Component properties not set in the background shorthand property value declaration are set to their default values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-decoration-thickness",
    "pageType": "css-property",
    "summary": "The text-decoration-thickness CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/color-scheme",
    "pageType": "css-property",
    "summary": "The color-scheme CSS property allows an element to indicate which color schemes it can comfortably be rendered in. User agents change the following aspects of the UI chrome to match the used color scheme:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/interpolate-size",
    "pageType": "css-property",
    "summary": "The interpolate-size CSS property allows you to enable animations and transitions between a <length-percentage> value and an intrinsic size value such as auto, fit-content, or max-content."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/flood-color",
    "pageType": "css-property",
    "summary": "The flood-color CSS property defines the color of the current filter primitive subregion in <feFlood> and <feDropShadow> elements within a <filter>. If present, it overrides the element's flood-color attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scrollbar-color",
    "pageType": "css-property",
    "summary": "The scrollbar-color CSS property sets the color of the scrollbar track and thumb."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-origin",
    "pageType": "css-property",
    "summary": "The mask-origin CSS property sets the origin of a mask. This property determines the mask positioning area: the area within which a mask image is positioned. HTML elements can have masks contained within their content border box, padding box, or content box, whereas SVG elements (which don't have the associated CSS layout boxes) can have masks contained inside their fill, stroke, or view box.\nFor elements rendered as multiple boxes, such as a <span> of text that spans more than one line, the mask-origin property specifies which boxes the box-decoration-break property operates on to determine the mask positioning area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-border-outset",
    "pageType": "css-property",
    "summary": "The mask-border-outset CSS property specifies the distance by which an element's mask border is set out from its border box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-timing-function",
    "pageType": "css-property",
    "summary": "The animation-timing-function CSS property sets how an animation progresses through the duration of each cycle."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/inline-size",
    "pageType": "css-property",
    "summary": "The inline-size CSS property defines the size of an element's block along the inline axis. If the writing-mode is horizontal, it corresponds to the width; if the writing mode is vertical, it corresponds to the height. A related property is block-size, which defines the other dimension of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-end-start-shape",
    "pageType": "css-property",
    "summary": "The corner-end-start-shape CSS property specifies the shape of a box's block-end and inline-start corner, within its border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/--*",
    "pageType": "css-property",
    "summary": "Property names that are prefixed with --, like --example-name, represent custom properties that contain a value that can be used in other declarations using the var() function."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-inline-end-shape",
    "pageType": "css-property",
    "summary": "The corner-inline-end-shape CSS property specifies the shape of both the corners on a box's inline-end edge, within their border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/object-fit",
    "pageType": "css-property",
    "summary": "The object-fit CSS property sets how the content of a replaced element, such as an <img> or <video>, should be resized to fit its container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-play-state",
    "pageType": "css-property",
    "summary": "The animation-play-state CSS property sets whether an animation is running or paused."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-column-start",
    "pageType": "css-property",
    "summary": "The grid-column-start CSS property specifies a grid item's start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/caret-shape",
    "pageType": "css-property",
    "summary": "The caret-shape CSS property sets the shape of the insertion caret, the visible marker that appears in editable elements to indicate where the next character will be inserted or deleted."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/r",
    "pageType": "css-property",
    "summary": "The r CSS property defines the radius of a circle. It can only be used with the SVG <circle> element. If present, it overrides the circle's r attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-left-width",
    "pageType": "css-property",
    "summary": "The border-left-width CSS property sets the width of the left border of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-end-style",
    "pageType": "css-property",
    "summary": "The border-inline-end-style CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-pack",
    "pageType": "css-property",
    "summary": "The -moz-box-pack and -webkit-box-pack CSS properties specify how a -moz-box or -webkit-box packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scrollbar-gutter",
    "pageType": "css-property",
    "summary": "The scrollbar-gutter CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn't needed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-left-color",
    "pageType": "css-property",
    "summary": "The border-left-color CSS property sets the color of an element's left border. It can also be set with the shorthand CSS properties border-color or border-left."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/align-content",
    "pageType": "css-property",
    "summary": "The CSS align-content property sets the distribution of space between and around content items along a flexbox's cross axis, or a grid or block-level element's block axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-composition",
    "pageType": "css-property",
    "summary": "The animation-composition CSS property specifies the composite operation to use when multiple animations affect the same property simultaneously."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/min-block-size",
    "pageType": "css-property",
    "summary": "The min-block-size CSS property defines the minimum horizontal or vertical size of an element's block, depending on its writing mode. It corresponds to either the min-width or the min-height property, depending on the value of writing-mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/min-height",
    "pageType": "css-property",
    "summary": "The min-height CSS property sets the minimum height of an element. It prevents the used value of the height property from becoming smaller than the value specified for min-height."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/dominant-baseline",
    "pageType": "css-property",
    "summary": "The dominant-baseline CSS property specifies the specific baseline used to align the box's text and inline-level contents. It also indicates the default alignment baseline of any boxes participating in baseline alignment in the box's alignment context. If present, it overrides the shape's dominant-baseline attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-left-style",
    "pageType": "css-property",
    "summary": "The border-left-style CSS property sets the line style of an element's left border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding",
    "pageType": "css-shorthand-property",
    "summary": "The scroll-padding shorthand property sets scroll padding on all sides of an element at once, much like the padding property does for padding on an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/flex-shrink",
    "pageType": "css-property",
    "summary": "The flex-shrink CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, the flex items can shrink to fit according to their flex-shrink value. Each flex line's negative free space is distributed between the line's flex items that have a flex-shrink value greater than 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/line-height",
    "pageType": "css-property",
    "summary": "The line-height CSS property sets the height of a line box in horizontal writing modes. In vertical writing modes, it sets the width of a line box. It's commonly used to set the distance between lines of text. On block-level elements in horizontal writing modes, it specifies the preferred height of line boxes within the element, and on non-replaced inline elements, it specifies the height that is used to calculate line box height."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/visibility",
    "pageType": "css-property",
    "summary": "The visibility CSS property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a <table>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/max-inline-size",
    "pageType": "css-property",
    "summary": "The max-inline-size CSS property defines the horizontal or vertical maximum size of an element's block, depending on its writing mode. It corresponds to either the max-width or the max-height property, depending on the value of writing-mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-decoration-break",
    "pageType": "css-property",
    "summary": "The box-decoration-break CSS property specifies how an element's fragments should be rendered when broken across multiple lines, columns, or pages."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/view-timeline-name",
    "pageType": "css-property",
    "summary": "The view-timeline-name CSS property is used to define the name of a named view progress timeline, which is progressed through based on the change in visibility of an element (known as the subject) inside a scrollable element (scroller). view-timeline is set on the subject."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block",
    "pageType": "css-shorthand-property",
    "summary": "The border-block CSS property is a shorthand property for setting the individual logical block border property values in a single place in the style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/right",
    "pageType": "css-property",
    "summary": "The right CSS property participates in specifying the horizontal position of a positioned element. This inset property has no effect on non-positioned elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/anchor-name",
    "pageType": "css-property",
    "summary": "The anchor-name CSS property enables defining an element as an anchor element by giving it one or more identifying anchor names. Each name can then be set as the value of a positioned element's position-anchor property to associate it with the anchor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/position-try-fallbacks",
    "pageType": "css-property",
    "summary": "The position-try-fallbacks CSS property enables you to specify a list of one or more alternative position try fallback options for anchor-positioned elements to be placed relative to their associated anchor elements. When the element would otherwise overflow its inset-modified containing block, the browser will try placing the positioned element in these different fallback positions, in the order provided, until it finds a value that stops it from overflowing its container or the viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-start-style",
    "pageType": "css-property",
    "summary": "The border-block-start-style CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style, border-right-style, border-bottom-style, or border-left-style property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-repeat",
    "pageType": "css-property",
    "summary": "The mask-repeat CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-range-start",
    "pageType": "css-property",
    "summary": "The animation-range-start CSS property is used to set the start of an animation's attachment range along its timeline, i.e., where along the timeline an animation will start."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/marker",
    "pageType": "css-property",
    "summary": "The marker CSS property points to a marker that will be drawn on the first, middle, and last vertices of the element's path; that is, at all of its vertices. The marker must have been defined using an SVG <marker> element, and can only be referenced with a <url> value. The value of the CSS property overrides any values of the marker-start, marker, and marker-end attributes in the SVG."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/align-self",
    "pageType": "css-property",
    "summary": "The align-self CSS property overrides a grid or flex item's align-items value. In grid, it aligns the item inside the grid area. In flexbox, it aligns the item on the cross axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/inset",
    "pageType": "css-shorthand-property",
    "summary": "The inset CSS property is a shorthand that corresponds to the top, right, bottom, and/or left properties. It has the same multi-value syntax of the margin shorthand."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/min-inline-size",
    "pageType": "css-property",
    "summary": "The min-inline-size CSS property defines the horizontal or vertical minimal size of an element's block, depending on its writing mode. It corresponds to either the min-width or the min-height property, depending on the value of writing-mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/row-gap",
    "pageType": "css-property",
    "summary": "The row-gap CSS property sets the size of the gap (gutter) between an element's rows."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-smooth",
    "pageType": "css-property",
    "summary": "The font-smooth CSS property controls the application of anti-aliasing when fonts are rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/accent-color",
    "pageType": "css-property",
    "summary": "The accent-color CSS property sets the accent color for user-interface controls generated by some elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-flex-group",
    "pageType": "css-property",
    "summary": "The box-flex-group CSS property assigns the flexbox's child elements to a flex group."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/column-rule",
    "pageType": "css-shorthand-property",
    "summary": "The column-rule shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-attachment",
    "pageType": "css-property",
    "summary": "The background-attachment CSS property sets whether a background image's position is fixed within the viewport, or scrolls with its containing block."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/contain-intrinsic-inline-size",
    "pageType": "css-property",
    "summary": "The contain-intrinsic-inline-size CSS logical property defines the inline-size of an element that a browser can use for layout when the element is subject to size containment."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/marker-end",
    "pageType": "css-property",
    "summary": "The marker-end CSS property points to a marker that will be drawn on the last vertex of the element's path; that is, at its ending vertex. The marker must have been defined using an SVG <marker> element, and can only be referenced with a <url> value. The value of the CSS property overrides any values of the marker-end attribute in the SVG."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-image",
    "pageType": "css-property",
    "summary": "The mask-image CSS property sets the image that is used as the mask layer for an element, hiding sections of the element on which the masking image is set based on the alpha channel of the mask image and, depending on the mask-mode property value, the luminance of the mask image's colors."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-block-end",
    "pageType": "css-property",
    "summary": "The scroll-margin-block-end property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-image-repeat",
    "pageType": "css-property",
    "summary": "The border-image-repeat CSS property defines how the images for the sides and the middle part of the border image are scaled and tiled. The middle region can be displayed by using the keyword \"fill\" in the border-image-slice property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/zoom",
    "pageType": "css-property",
    "summary": "The zoom CSS property can be used to control the magnification level of an element.\ntransform: scale() can be used as an alternative to this property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-block",
    "pageType": "css-shorthand-property",
    "summary": "The margin-block CSS shorthand property defines the logical block start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-moz-user-focus",
    "pageType": "css-property",
    "summary": "The -moz-user-focus CSS property is used to indicate whether an element can have the focus."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stroke-miterlimit",
    "pageType": "css-property",
    "summary": "The stroke-miterlimit CSS property defines a limit on the ratio of the miter length to the stroke-width when the shape to be used at the corners of an SVG element's stroked path is a mitered join. If the limit defined by this property is exceeded, the join is converted from miter to bevel, thus making the corner appear truncated."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-bottom-left-radius",
    "pageType": "css-property",
    "summary": "The border-bottom-left-radius CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/place-content",
    "pageType": "css-shorthand-property",
    "summary": "The place-content CSS shorthand property allows you to align content along both the block and inline directions at once (i.e., the align-content and justify-content properties) in a relevant layout system such as Grid or Flexbox."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/hanging-punctuation",
    "pageType": "css-property",
    "summary": "The hanging-punctuation CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/inset-inline-start",
    "pageType": "css-property",
    "summary": "The inset-inline-start CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/resize",
    "pageType": "css-property",
    "summary": "The resize CSS property sets whether an element is resizable, and if so, in which directions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/rx",
    "pageType": "css-property",
    "summary": "The rx CSS property defines the x-axis, or horizontal, radius of an SVG <ellipse> and the horizontal curve of the corners of an SVG <rect> rectangle. If present, it overrides the shape's rx attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/inset-inline",
    "pageType": "css-shorthand-property",
    "summary": "The inset-inline CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/unicode-bidi",
    "pageType": "css-property",
    "summary": "The unicode-bidi CSS property, together with the direction property, determines how bidirectional text in a document is handled. For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text. The unicode-bidi property overrides this algorithm and allows the developer to control the text embedding."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-left",
    "pageType": "css-property",
    "summary": "The padding-left CSS property sets the width of the padding area to the left of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-image-outset",
    "pageType": "css-property",
    "summary": "The border-image-outset CSS property sets the distance by which an element's border image is set out from its border box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-timeline-axis",
    "pageType": "css-property",
    "summary": "The scroll-timeline-axis CSS property is used to specify the scrollbar direction that will be used to provide the timeline for a named scroll progress timeline animation, which is progressed through by scrolling a scrollable element (scroller) between top and bottom (or left and right). scroll-timeline is set on the scroller that will provide the timeline. See CSS scroll-driven animations for more details."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-name",
    "pageType": "css-property",
    "summary": "The animation-name CSS property specifies the names of one or more @keyframes at-rules that describe the animation to apply to an element. Multiple @keyframes at-rules are specified as a comma-separated list of names. If the specified name does not match any @keyframes at-rule, no properties are animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-template-rows",
    "pageType": "css-property",
    "summary": "The grid-template-rows CSS property defines the line names and track sizing functions of the grid rows."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-inline-start",
    "pageType": "css-property",
    "summary": "The scroll-padding-inline-start property defines offsets for the start edge in the inline dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-border-width",
    "pageType": "css-property",
    "summary": "The mask-border-width CSS property sets the width of an element's mask border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/line-break",
    "pageType": "css-property",
    "summary": "The line-break CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-bottom-style",
    "pageType": "css-property",
    "summary": "The border-bottom-style CSS property sets the line style of an element's bottom border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-template-areas",
    "pageType": "css-property",
    "summary": "The grid-template-areas CSS property specifies named grid areas, establishing the cells in the grid and assigning them names."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/column-width",
    "pageType": "css-property",
    "summary": "The column-width CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the column-width value. If the width of the container is narrower than the specified value, the single column's width will be smaller than the declared column width."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/math-depth",
    "pageType": "css-property",
    "summary": "The math-depth property describes a notion of depth for each element of a mathematical formula, with respect to the top-level container of that formula. This is used to scale the computed value of the font-size of elements when font-size: math is applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/cursor",
    "pageType": "css-property",
    "summary": "The cursor CSS property sets the mouse cursor, if any, to show when the mouse pointer is over an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-right-shape",
    "pageType": "css-property",
    "summary": "The corner-right-shape CSS property specifies the shape of both the corners on a box's right-hand edge, within their border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-block-end",
    "pageType": "css-property",
    "summary": "The scroll-padding-block-end property defines offsets for the end edge in the block dimension of the optimal viewing region of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/view-timeline",
    "pageType": "css-shorthand-property",
    "summary": "The view-timeline CSS shorthand property is used to define a named view progress timeline, which is progressed through based on the change in visibility of an element (known as the subject) inside a scrollable element (scroller). view-timeline is set on the subject."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/rotate",
    "pageType": "css-property",
    "summary": "The rotate CSS property allows you to specify rotation transforms individually and independently of the transform property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the transform property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/fill-rule",
    "pageType": "css-property",
    "summary": "The fill-rule CSS property defines the rule used to determine which parts of the SVG shape's canvas are included inside a shape to be filled. If present, it overrides the element's fill-rule attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-inline-end",
    "pageType": "css-property",
    "summary": "The margin-inline-end CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation. In other words, it corresponds to the margin-top, margin-right, margin-bottom or margin-left property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-palette",
    "pageType": "css-property",
    "summary": "The font-palette CSS property allows specifying one of the many palettes contained in a color font that a user agent may use for the font. Users can also override the values in a palette or create a new palette by using the @font-palette-values at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-palette/palette-mix",
    "pageType": "css-function",
    "summary": "The palette-mix() CSS function can be used to create a new font-palette value by blending together two font-palette values by specified percentages and color interpolation methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-column-end",
    "pageType": "css-property",
    "summary": "The grid-column-end CSS property specifies a grid item's end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/backdrop-filter",
    "pageType": "css-property",
    "summary": "The backdrop-filter CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything behind the element, to see the effect the element or its background needs to be transparent or partially transparent."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/block-size",
    "pageType": "css-property",
    "summary": "The block-size CSS property defines the size of an element's block along the block axis. If the writing-mode is horizontal, it corresponds to the height; if the writing mode is vertical, it corresponds to the width. A related property is inline-size, which defines the other dimension of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-block-start",
    "pageType": "css-property",
    "summary": "The margin-block-start CSS property defines the logical block start margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/line-clamp",
    "pageType": "css-property",
    "summary": "The line-clamp CSS property allows limiting of the contents of a block to the specified number of lines."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-block-start-shape",
    "pageType": "css-property",
    "summary": "The corner-block-start-shape CSS property specifies the shape of both the corners on a box's block-start edge, within their border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-start-end-radius",
    "pageType": "css-property",
    "summary": "The border-start-end-radius CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element's writing-mode, direction, and text-orientation. This is useful when building styles to work regardless of the text orientation and writing mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/top",
    "pageType": "css-property",
    "summary": "The top CSS property sets the vertical position of a positioned element. This inset property has no effect on non-positioned elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/height",
    "pageType": "css-property",
    "summary": "The height CSS property specifies the height of an element. By default, the property defines the height of the content area. If box-sizing is set to border-box, however, it instead determines the height of the border area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/justify-content",
    "pageType": "css-property",
    "summary": "The CSS justify-content property defines how the browser distributes space between and around content items along the main axis of a flex container and the inline axis of grid and multicol containers."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-anchor",
    "pageType": "css-property",
    "summary": "The text-anchor CSS property aligns a box containing a string of text where the wrapping area is determined from the inline-size property, and the text is then placed relative to the anchor point of the element, which is defined using the x and y (or dx and dy) attributes. If present, the value of the CSS property overrides any value of the element's text-anchor attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-variant-emoji",
    "pageType": "css-property",
    "summary": "The font-variant-emoji CSS property specifies the default presentation style for displaying emojis."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-start-color",
    "pageType": "css-property",
    "summary": "The border-inline-start-color CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/y",
    "pageType": "css-property",
    "summary": "The y CSS property defines the y-axis coordinate of the top left corner of the SVG <rect> shape, <image> image, <foreignObject> viewport and nested <svg> viewport relative to the nearest <svg> ancestor's user coordinate system. If present, it overrides the element's y attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-bottom-shape",
    "pageType": "css-property",
    "summary": "The corner-bottom-shape CSS property specifies the shape of both the corners on a box's bottom edge, within their border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/appearance",
    "pageType": "css-property",
    "summary": "The appearance CSS property specifies the rendered appearance of replaced UI widget elements such as form controls. Most commonly, such elements are given native, platform-specific styling based on the operating system's theme, or a primitive appearance with styles that can be overridden using CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-row-end",
    "pageType": "css-property",
    "summary": "The grid-row-end CSS property specifies a grid item's end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-mask-repeat-x",
    "pageType": "css-property",
    "summary": "The -webkit-mask-repeat-x property specifies whether and how a mask image is repeated (tiled) horizontally."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/ruby-position",
    "pageType": "css-property",
    "summary": "The ruby-position CSS property defines the position of a ruby element relative to its base element. It can be positioned over the element (over), under it (under), or between the characters on their right side (inter-character)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/page",
    "pageType": "css-property",
    "summary": "The page CSS property is used to specify the named page, a specific type of page defined by the @page at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/list-style",
    "pageType": "css-shorthand-property",
    "summary": "The list-style CSS shorthand property allows you to set all the list style properties at once."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/object-view-box",
    "pageType": "css-property",
    "summary": "The object-view-box CSS property defines a rectangle as a viewable area (viewbox) within a replaced element, enabling the content of the replaced element to be zoomed or panned. It works similarly to the SVG viewBox attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-start-width",
    "pageType": "css-property",
    "summary": "The border-block-start-width CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/bottom",
    "pageType": "css-property",
    "summary": "The bottom CSS property participates in setting the vertical position of a positioned element. This inset property has no effect on non-positioned elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-target-group",
    "pageType": "css-property",
    "summary": "The scroll-target-group CSS property specifies whether an element is a scroll marker group container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-auto-rows",
    "pageType": "css-property",
    "summary": "The grid-auto-rows CSS property specifies the size of an implicitly-created grid row track or pattern of tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/shape-margin",
    "pageType": "css-property",
    "summary": "The shape-margin CSS property sets a margin for a CSS shape created using shape-outside."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overscroll-behavior-y",
    "pageType": "css-property",
    "summary": "The overscroll-behavior-y CSS property sets the browser's behavior when the vertical boundary of a scrolling area is reached."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-bottom",
    "pageType": "css-property",
    "summary": "The margin-bottom CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-border",
    "pageType": "css-shorthand-property",
    "summary": "The mask-border CSS shorthand property lets you create a mask along the edge of an element's border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-align-last",
    "pageType": "css-property",
    "summary": "The text-align-last CSS property sets how the last line of a block or a line, right before a forced line break, is aligned."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transform",
    "pageType": "css-property",
    "summary": "The transform CSS property lets you rotate, scale, skew, or translate an element.\nIt modifies the coordinate space of the CSS visual formatting model."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/line-height-step",
    "pageType": "css-property",
    "summary": "The line-height-step CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-auto-columns",
    "pageType": "css-property",
    "summary": "The grid-auto-columns CSS property specifies the size of an implicitly-created grid column track or pattern of tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-end",
    "pageType": "css-shorthand-property",
    "summary": "The border-inline-end CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-weight",
    "pageType": "css-property",
    "summary": "The font-weight CSS property sets the weight (or boldness) of the font. The weights available depend on the font-family that is currently set."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-style",
    "pageType": "css-property",
    "summary": "The border-block-style CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-style and border-bottom-style, or border-left-style and border-right-style properties depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/column-count",
    "pageType": "css-property",
    "summary": "The column-count CSS property breaks an element's content into the specified number of columns."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-direction",
    "pageType": "css-property",
    "summary": "The box-direction CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-left",
    "pageType": "css-shorthand-property",
    "summary": "The border-left shorthand CSS property sets all the properties of an element's left border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/justify-items",
    "pageType": "css-property",
    "summary": "The CSS justify-items property defines the default justify-self for all items of the box, giving them all a default way of justifying each box along the appropriate axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overscroll-behavior-block",
    "pageType": "css-property",
    "summary": "The overscroll-behavior-block CSS property sets the browser's behavior when the block direction boundary of a scrolling area is reached."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-timeline",
    "pageType": "css-shorthand-property",
    "summary": "The scroll-timeline CSS shorthand property is used to define a named scroll progress timeline, which is progressed through by scrolling a scrollable element (scroller) between top and bottom (or left and right). scroll-timeline is set on the scroller that will provide the timeline. The starting scroll position represents 0% progress and the ending scroll position represents 100% progress. If the 0% position and 100% position coincide (i.e., the scroll container has no overflow to scroll), the timeline is inactive."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-synthesis",
    "pageType": "css-shorthand-property",
    "summary": "The font-synthesis shorthand CSS property lets you specify whether or not the browser may synthesize the bold, italic, small-caps, and/or subscript and superscript typefaces when they are missing in the specified font-family."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-wrap",
    "pageType": "css-shorthand-property",
    "summary": "The text-wrap CSS shorthand property controls how text inside an element is wrapped. The different values provide:"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid",
    "pageType": "css-shorthand-property",
    "summary": "The grid CSS property is a shorthand property that sets all of the explicit and implicit grid properties in a single declaration."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-right-color",
    "pageType": "css-property",
    "summary": "The border-right-color CSS property sets the color of an element's right border. It can also be set with the shorthand CSS properties border-color or border-right."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-emphasis-position",
    "pageType": "css-property",
    "summary": "The text-emphasis-position CSS property sets where emphasis marks are drawn. Similar to the text rendered by the <ruby> HTML element, if there isn't enough room for emphasis marks, the line height is increased."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/max-block-size",
    "pageType": "css-property",
    "summary": "The max-block-size CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by writing-mode. That is, if the writing direction is horizontal, then max-block-size is equivalent to max-height; if the writing direction is vertical, max-block-size is the same as max-width."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/cy",
    "pageType": "css-property",
    "summary": "The cy CSS property defines the y-axis center point of an SVG <circle> or <ellipse> elements. If present, it overrides the element's cy attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/outline-width",
    "pageType": "css-property",
    "summary": "The CSS outline-width property sets the thickness of an element's outline. An outline is a line that is drawn around an element, outside the border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/offset-distance",
    "pageType": "css-property",
    "summary": "The offset-distance CSS property specifies a position along an offset-path for an element to be placed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/align-items",
    "pageType": "css-property",
    "summary": "The CSS align-items property sets the align-self value on all direct children as a group. In flexbox, it controls the alignment of items on the cross axis. In grid layout, it controls the alignment of items on the block axis within their grid areas."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-inline",
    "pageType": "css-shorthand-property",
    "summary": "The margin-inline CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-marker-group",
    "pageType": "css-property",
    "summary": "The scroll-marker-group CSS property controls whether a scroll container element has a ::scroll-marker-group pseudo-element generated. If present, the property also specifies whether the scroll marker group should be placed before or after the contents of the scroll group container in the default visual and tab order."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-origin",
    "pageType": "css-property",
    "summary": "The background-origin CSS property sets the background's origin: from the border start, inside the border, or inside the padding."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-snap-align",
    "pageType": "css-property",
    "summary": "The scroll-snap-align property specifies the box's snap position as an alignment of its snap area (as the alignment subject) within its snap container's snap port (as the alignment container)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-align",
    "pageType": "css-property",
    "summary": "The box-align CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overscroll-behavior-inline",
    "pageType": "css-property",
    "summary": "The overscroll-behavior-inline CSS property sets the browser's behavior when the inline direction boundary of a scrolling area is reached."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-style",
    "pageType": "css-shorthand-property",
    "summary": "The border-style shorthand CSS property sets the line style for all four sides of an element's border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/clear",
    "pageType": "css-property",
    "summary": "The clear CSS property sets whether an element must be moved below (cleared) floating elements that precede it. The clear property applies to floating and non-floating elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overflow-inline",
    "pageType": "css-property",
    "summary": "The overflow-inline CSS property sets what shows when content overflows the inline start and end edges of a box. This may be nothing, a scroll bar, or the overflow content."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/forced-color-adjust",
    "pageType": "css-property",
    "summary": "The forced-color-adjust CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/hyphenate-limit-chars",
    "pageType": "css-property",
    "summary": "The hyphenate-limit-chars CSS property specifies the minimum word length to allow hyphenation of words as well as the minimum number of characters before and after the hyphen."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-border-slice",
    "pageType": "css-property",
    "summary": "The mask-border-slice CSS property divides the image set by mask-border-source into regions. These regions are used to form the components of an element's mask border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-bottom",
    "pageType": "css-shorthand-property",
    "summary": "The border-bottom shorthand CSS property sets an element's bottom border. It sets the values of border-bottom-width, border-bottom-style and border-bottom-color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/page-break-inside",
    "pageType": "css-property",
    "summary": "The page-break-inside CSS property adjusts page breaks inside the current element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-decoration-color",
    "pageType": "css-property",
    "summary": "The text-decoration-color CSS property sets the color of decorations added to text by text-decoration-line."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-border-repeat",
    "pageType": "css-property",
    "summary": "The mask-border-repeat CSS property specifies how the images for the sides and the middle part of the mask border image are scaled and tiled."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/flex-grow",
    "pageType": "css-property",
    "summary": "The flex-grow CSS property sets the flex grow factor, which specifies how much of the flex container's positive free space, if any, should be assigned to the flex item's main size."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-column",
    "pageType": "css-shorthand-property",
    "summary": "The grid-column CSS shorthand property specifies a grid item's size and location within a grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overflow-block",
    "pageType": "css-property",
    "summary": "The overflow-block CSS property sets what shows when content overflows the block start and block end edges of a box. This may be nothing, a scroll bar, or the overflow content."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/initial-letter",
    "pageType": "css-property",
    "summary": "The initial-letter CSS property sets the size and sink for dropped, raised, and sunken initial letters. This property applies to ::first-letter pseudo-elements and inline-level first children of block containers."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-inline",
    "pageType": "css-shorthand-property",
    "summary": "The scroll-padding-inline shorthand property sets the scroll padding of an element in the inline dimension."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-top-width",
    "pageType": "css-property",
    "summary": "The border-top-width CSS property sets the width of the top border of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/width",
    "pageType": "css-property",
    "summary": "The width CSS property sets an element's width. By default, it sets the width of the content area, but if box-sizing is set to border-box, it sets the width of the border area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-start-width",
    "pageType": "css-property",
    "summary": "The border-inline-start-width CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/tab-size",
    "pageType": "css-property",
    "summary": "The tab-size CSS property is used to customize the width of tab characters (U+0009)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-text-stroke-width",
    "pageType": "css-property",
    "summary": "The -webkit-text-stroke-width CSS property specifies the width of the stroke for text."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-auto-flow",
    "pageType": "css-property",
    "summary": "The grid-auto-flow CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-bottom",
    "pageType": "css-property",
    "summary": "The scroll-margin-bottom property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-inline-end",
    "pageType": "css-property",
    "summary": "The scroll-margin-inline-end property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/caret-color",
    "pageType": "css-property",
    "summary": "The caret-color CSS property sets the color of the insertion caret, sometimes referred to as the text input cursor. This is the visible marker appearing at the insertion point where the next character typed will be added or where the next character deleted will be removed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/max-width",
    "pageType": "css-property",
    "summary": "The max-width CSS property sets the maximum width of an element. It prevents the used value of the width property from becoming larger than the value specified by max-width."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-emphasis-style",
    "pageType": "css-property",
    "summary": "The text-emphasis-style CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the text-emphasis shorthand."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/list-style-position",
    "pageType": "css-property",
    "summary": "The list-style-position CSS property sets the position of the ::marker relative to a list item."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-synthesis-position",
    "pageType": "css-property",
    "summary": "The font-synthesis-position CSS property lets you specify whether or not a browser may synthesize the subscript and superscript \"position\" typefaces when they are missing in a font family, while using font-variant-position to set the positions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/column-rule-color",
    "pageType": "css-property",
    "summary": "The column-rule-color CSS property sets the color of the line drawn between columns in a multi-column layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-block-end-shape",
    "pageType": "css-property",
    "summary": "The corner-block-end-shape CSS property specifies the shape of both the corners on a box's block-end edge, within their border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/position-try",
    "pageType": "css-shorthand-property",
    "summary": "The position-try CSS property is a shorthand that corresponds to the position-try-order and position-try-fallbacks properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/flex-direction",
    "pageType": "css-property",
    "summary": "The flex-direction CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/inset-block-end",
    "pageType": "css-property",
    "summary": "The inset-block-end CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-size-adjust",
    "pageType": "css-property",
    "summary": "The font-size-adjust CSS property provides a way to modify the size of lowercase letters relative to the size of uppercase letters, which defines the overall font-size. This property is useful for situations where font fallback can occur."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overscroll-behavior-x",
    "pageType": "css-property",
    "summary": "The overscroll-behavior-x CSS property sets the browser's behavior when the horizontal boundary of a scrolling area is reached."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-end-width",
    "pageType": "css-property",
    "summary": "The border-inline-end-width CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-width, border-right-width, border-bottom-width, or border-left-width property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-start",
    "pageType": "css-shorthand-property",
    "summary": "The border-inline-start CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/perspective-origin",
    "pageType": "css-property",
    "summary": "The perspective-origin CSS property determines the position at which the viewer is looking. It is used as the vanishing point by the perspective property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-mask-position-y",
    "pageType": "css-property",
    "summary": "The -webkit-mask-position-y CSS property sets the initial vertical position of a mask image."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/math-style",
    "pageType": "css-property",
    "summary": "The math-style property indicates whether MathML equations should render with normal or compact height."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/outline-offset",
    "pageType": "css-property",
    "summary": "The outline-offset CSS property sets the amount of space between an outline and the edge or border of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/print-color-adjust",
    "pageType": "css-property",
    "summary": "The print-color-adjust CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device.\nBy default, the browser is allowed to make any adjustments to the element's appearance it determines to be necessary and prudent given the type and capabilities of the output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-block-end",
    "pageType": "css-property",
    "summary": "The margin-block-end CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-wrap-style",
    "pageType": "css-property",
    "summary": "The text-wrap-style CSS property controls how text inside an element is wrapped. The different values provide alternate ways of wrapping the content of a block element. It can also be set, and reset, using the text-wrap shorthand."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/min-width",
    "pageType": "css-property",
    "summary": "The min-width CSS property sets the minimum width of an element. It prevents the used value of the width property from becoming smaller than the value specified for min-width."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-variant-caps",
    "pageType": "css-property",
    "summary": "The font-variant-caps CSS property controls the use of alternate glyphs used for small or petite capitals or for titling."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/view-timeline-axis",
    "pageType": "css-property",
    "summary": "The view-timeline-axis CSS property is used to specify the scrollbar direction that will be used to provide the timeline for a named view progress timeline animation, which is progressed through based on the change in visibility of an element (known as the subject) inside a scrollable element (scroller). view-timeline-axis is set on the subject. See CSS scroll-driven animations for more details."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/color-interpolation-filters",
    "pageType": "css-property",
    "summary": "The color-interpolation-filters CSS property specifies the color space for imaging operations performed via SVG filter effects. If explicitly declared, the value of the CSS property overrides any value given in the element's color-interpolation-filters attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/offset-path",
    "pageType": "css-property",
    "summary": "The offset-path CSS property specifies a path for an element to follow and determines the element's positioning within the path's parent container or the SVG coordinate system. The path is a line, a curve, or a geometrical shape along which the element gets positioned or moves."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-spacing-trim",
    "pageType": "css-property",
    "summary": "The text-spacing-trim CSS property controls the internal spacing set on Chinese/Japanese/Korean (CJK) punctuation characters between adjacent characters (kerning) and at the start or end of text lines."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-decoration-line",
    "pageType": "css-property",
    "summary": "The text-decoration-line CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-left",
    "pageType": "css-property",
    "summary": "The margin-left CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stroke-dasharray",
    "pageType": "css-property",
    "summary": "The stroke-dasharray CSS property defines a pattern of dashes and gaps used in the painting of the SVG shape's stroke. If present, it overrides the element's stroke-dasharray attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/justify-self",
    "pageType": "css-property",
    "summary": "The CSS justify-self property sets the way a box is justified inside its alignment container along the appropriate axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin",
    "pageType": "css-shorthand-property",
    "summary": "The margin CSS shorthand property sets the margin area on all four sides of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-padding-block",
    "pageType": "css-shorthand-property",
    "summary": "The scroll-padding-block shorthand property sets the scroll padding of an element in the block dimension."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-image-width",
    "pageType": "css-property",
    "summary": "The border-image-width CSS property sets the width of an element's border image."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/vector-effect",
    "pageType": "css-property",
    "summary": "The vector-effect CSS property suppresses specific transformation effects in SVG, thus permitting effects like a road on a map staying the same width no matter how the map is zoomed, or allowing a diagram key to retain its position and size regardless of other transforms. It can only be used with SVG elements that accept the vector-effect attribute. When used, the CSS value overrides any values of the element's vector-effect attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-behavior",
    "pageType": "css-property",
    "summary": "The scroll-behavior CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/paint-order",
    "pageType": "css-property",
    "summary": "The paint-order CSS property lets you control the order in which the fill and stroke (and painting markers) of text content and shapes are drawn."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-inline-start-shape",
    "pageType": "css-property",
    "summary": "The corner-inline-start-shape CSS property specifies the shape of both the corners on a box's inline-start edge, within their border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/timeline-scope",
    "pageType": "css-property",
    "summary": "The timeline-scope CSS property modifies the scope of a named animation timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/flood-opacity",
    "pageType": "css-property",
    "summary": "The flood-opacity CSS property defines the opacity of the current filter primitive subregion in <feFlood> and <feDropShadow> elements within a <filter>. If present, it overrides the element's flood-opacity attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overflow-x",
    "pageType": "css-property",
    "summary": "The overflow-x CSS property sets what shows when content overflows a block-level element's left and right edges. This may be nothing, a scroll bar, or the overflow content. This property may also be set by using the overflow shorthand property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/position-visibility",
    "pageType": "css-property",
    "summary": "The position-visibility CSS property enables conditionally hiding an anchor-positioned element depending on, for example, whether it is overflowing its containing element or the viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/direction",
    "pageType": "css-property",
    "summary": "The direction CSS property sets the direction of text, table and grid columns, and horizontal overflow. Use rtl for languages written from right to left (like Hebrew or Arabic), and ltr for those written from left to right (like English and most other languages)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transition-timing-function",
    "pageType": "css-property",
    "summary": "The transition-timing-function CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-color",
    "pageType": "css-property",
    "summary": "The background-color CSS property sets the background color of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transition-property",
    "pageType": "css-property",
    "summary": "The transition-property CSS property sets the CSS properties to which a transition effect should be applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-variation-settings",
    "pageType": "css-property",
    "summary": "The font-variation-settings CSS property provides low-level control over variable font characteristics by letting you specify the four letter axis names of the characteristics you want to vary along with their values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-top",
    "pageType": "css-property",
    "summary": "The margin-top CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-lines",
    "pageType": "css-property",
    "summary": "The box-lines CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-mode",
    "pageType": "css-property",
    "summary": "The mask-mode CSS property is set on the element being masked. It sets whether the mask reference defined by the mask-image is treated as a luminance or alpha mask."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/lighting-color",
    "pageType": "css-property",
    "summary": "The lighting-color CSS property defines the color of the light source for the <feDiffuseLighting> and <feSpecularLighting> SVG lighting filter primitives within an SVG <filter>. If present, it overrides the element's lighting-color attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/alignment-baseline",
    "pageType": "css-property",
    "summary": "The alignment-baseline CSS property specifies the specific baseline used to align the box's text and inline-level contents. Baseline alignment is the relationship among the baselines of multiple alignment subjects within an alignment context. When performing baseline alignment, the alignment-baseline property value specifies which baseline of the box is aligned to the corresponding baseline of its alignment context."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-variant-alternates",
    "pageType": "css-property",
    "summary": "The font-variant-alternates CSS property controls the usage of alternate glyphs. These alternate glyphs may be referenced by alternative names defined in @font-feature-values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-variant-position",
    "pageType": "css-property",
    "summary": "The font-variant-position CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-moz-user-input",
    "pageType": "css-property",
    "summary": "In Mozilla applications, -moz-user-input determines if an element will accept user input."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-inline-end",
    "pageType": "css-property",
    "summary": "The padding-inline-end CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-flex",
    "pageType": "css-property",
    "summary": "The -moz-box-flex and -webkit-box-flex CSS properties specify how a -moz-box or -webkit-box grows to fill the box that contains it, in the direction of the containing box's layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/offset-anchor",
    "pageType": "css-property",
    "summary": "The offset-anchor CSS property specifies the point inside the box of an element traveling along an offset-path that is actually moving along the path."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-sizing",
    "pageType": "css-property",
    "summary": "The box-sizing CSS property sets how the total width and height of an element is calculated."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-range",
    "pageType": "css-shorthand-property",
    "summary": "The animation-range CSS shorthand property is used to set the start and end of an animation's attachment range along its timeline, i.e., where along the timeline an animation will start and end."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-family",
    "pageType": "css-property",
    "summary": "The font-family CSS property specifies a prioritized list of one or more font family names and/or generic family names for the selected element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-variant-numeric",
    "pageType": "css-property",
    "summary": "The font-variant-numeric CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/clip-rule",
    "pageType": "css-property",
    "summary": "The clip-rule CSS property determines, when parts of the path overlap other parts, which pixels in a mask's box are inside the clipping shape defined by a clip path and which are outside."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-inline-start",
    "pageType": "css-property",
    "summary": "The scroll-margin-inline-start property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-size-adjust",
    "pageType": "css-property",
    "summary": "The text-size-adjust CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/math-shift",
    "pageType": "css-property",
    "summary": "The math-shift property indicates whether superscripts inside MathML formulas should be raised by a normal or compact shift."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-top-style",
    "pageType": "css-property",
    "summary": "The border-top-style CSS property sets the line style of an element's top border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-composite",
    "pageType": "css-property",
    "summary": "The mask-composite CSS property represents a compositing operation used on the current mask layer with the mask layers below it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transition",
    "pageType": "css-shorthand-property",
    "summary": "The transition CSS property is a shorthand property for transition-property, transition-duration, transition-timing-function, transition-delay, and transition-behavior."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/inset-block",
    "pageType": "css-shorthand-property",
    "summary": "The inset-block CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element's writing mode, directionality, and text orientation. It corresponds to the top and bottom, or right and left properties depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-top-shape",
    "pageType": "css-property",
    "summary": "The corner-top-shape CSS property specifies the shape of both the corners on a box's top edge, within their border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-decoration",
    "pageType": "css-shorthand-property",
    "summary": "The text-decoration shorthand CSS property sets the appearance of decorative lines on text. It is a shorthand for text-decoration-line, text-decoration-color, text-decoration-style, and the newer text-decoration-thickness property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-text-security",
    "pageType": "css-property",
    "summary": "-webkit-text-security is a non-standard CSS property that obfuscates characters in a <form> field (such as <input> or <textarea>) by replacing them with a shape. It only affects fields that are not of type=password."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-mask-box-image",
    "pageType": "css-shorthand-property",
    "summary": "The non-standard prefixed -webkit-mask-box-image shorthand property sets the mask image for an element's border box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-collapse",
    "pageType": "css-property",
    "summary": "The border-collapse CSS property sets whether cells inside a <table> have shared or separate borders."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-top-color",
    "pageType": "css-property",
    "summary": "The border-top-color CSS property sets the color of an element's top border. It can also be set with the shorthand CSS properties border-color or border-top."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-trim",
    "pageType": "css-property",
    "summary": "The margin-trim property allows the container to trim the margins of its children where they adjoin the container's edges."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/container",
    "pageType": "css-shorthand-property",
    "summary": "The container shorthand CSS property establishes the element as a query container and specifies the name and type of the containment context used in a container query."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-wrap-mode",
    "pageType": "css-property",
    "summary": "The text-wrap-mode CSS property controls whether the text inside an element is wrapped. The different values provide alternate ways of wrapping the content of a block element. It can also be set, and reset, using the text-wrap shorthand or the white-space shorthand."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overscroll-behavior",
    "pageType": "css-shorthand-property",
    "summary": "The overscroll-behavior CSS property sets what a browser does when reaching the boundary of a scrolling area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/caret",
    "pageType": "css-shorthand-property",
    "summary": "The caret shorthand CSS property sets the appearance and behavior of the insertion caret in a single declaration."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-moz-float-edge",
    "pageType": "css-property",
    "summary": "The non-standard -moz-float-edge CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/widows",
    "pageType": "css-property",
    "summary": "The widows CSS property sets the minimum number of lines in a block container that must be shown at the top of a page, region, or column."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-bottom-left-shape",
    "pageType": "css-property",
    "summary": "The corner-bottom-left-shape CSS property specifies the shape of a box's bottom-left corner, within its border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-color",
    "pageType": "css-property",
    "summary": "The border-inline-color CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color and border-bottom-color, or border-right-color and border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-inline",
    "pageType": "css-shorthand-property",
    "summary": "The scroll-margin-inline shorthand property sets the scroll margins of an element in the inline dimension."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/table-layout",
    "pageType": "css-property",
    "summary": "The table-layout CSS property sets the algorithm used to lay out <table> cells, rows, and columns."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/inset-block-start",
    "pageType": "css-property",
    "summary": "The inset-block-start CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element's writing mode, directionality, and text orientation. It corresponds to the top, right, bottom, or left property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-box",
    "pageType": "css-shorthand-property",
    "summary": "The text-box CSS property is a shorthand that corresponds to the text-box-trim and text-box-edge properties, which together specify the amount of space to trim from the block-start edge and block-end edge of a text element's block container."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/vertical-align",
    "pageType": "css-property",
    "summary": "The vertical-align CSS property sets vertical alignment of an inline, inline-block or table-cell box."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/quotes",
    "pageType": "css-property",
    "summary": "The CSS quotes property sets how the browser should render quotation marks that are automatically added to the HTML <q> element or added using the open-quotes or close-quotes (or omitted using the no-open-quote and no-close-quote) values of the of the CSS content property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-position-x",
    "pageType": "css-property",
    "summary": "The background-position-x CSS property sets the initial horizontal position for each background image. The position is relative to the position layer set by background-origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/scroll-margin-block-start",
    "pageType": "css-property",
    "summary": "The scroll-margin-block-start property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container's coordinate space), then adding the specified outsets."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/page-break-before",
    "pageType": "css-property",
    "summary": "The page-break-before CSS property adjusts page breaks before the current element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-decoration-style",
    "pageType": "css-property",
    "summary": "The text-decoration-style CSS property sets the style of the lines specified by text-decoration-line. The style applies to all lines that are set with text-decoration-line."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-top-right-shape",
    "pageType": "css-property",
    "summary": "The corner-top-right-shape CSS property specifies the shape of a box's top-right corner, within its border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-emphasis-color",
    "pageType": "css-property",
    "summary": "The text-emphasis-color CSS property sets the color of emphasis marks. This value can also be set using the text-emphasis shorthand."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-variant-ligatures",
    "pageType": "css-property",
    "summary": "The font-variant-ligatures CSS property controls which ligatures and contextual forms are used in the textual content of the elements it applies to. This leads to more harmonized forms in the resulting text."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stroke-linejoin",
    "pageType": "css-property",
    "summary": "The stroke-linejoin CSS property defines the shape to be used at the corners of an SVG element's stroked paths. If present, it overrides the element's stroke-linejoin attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/clip-path",
    "pageType": "css-property",
    "summary": "The clip-path CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-row-start",
    "pageType": "css-property",
    "summary": "The grid-row-start CSS property specifies a grid item's start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/hyphenate-character",
    "pageType": "css-property",
    "summary": "The hyphenate-character CSS property sets the character (or string) used at the end of a line before a hyphenation break."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/counter-reset",
    "pageType": "css-property",
    "summary": "The counter-reset CSS property creates named CSS counters and initializes them to a specific value. It supports creating counters that count up from one to the number of elements, as well as those that count down from the number of elements to one."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-block-end",
    "pageType": "css-shorthand-property",
    "summary": "The border-block-end CSS property is a shorthand property for setting the individual logical block-end border property values in a single place in the style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-variant",
    "pageType": "css-shorthand-property",
    "summary": "The font-variant CSS shorthand property allows you to set all the font variants for a font."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-ordinal-group",
    "pageType": "css-property",
    "summary": "The box-ordinal-group CSS property assigns the flexbox's child elements to an ordinal group."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/caret-animation",
    "pageType": "css-property",
    "summary": "The caret-animation CSS property is used to enable or disable the blinking behavior of the insertion caret, the visible marker that appears in editable elements to indicate where the next character will be inserted or deleted."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-border-before",
    "pageType": "css-shorthand-property",
    "summary": "The -webkit-border-before CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-type",
    "pageType": "css-property",
    "summary": "The mask-type CSS property applies to the SVG <mask> element. It defines whether to use the luminance (brightness) or alpha (transparency) content of the mask. This property may be overridden by the mask-mode property. The mask-type property has no effect on image or gradient masks."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-transform",
    "pageType": "css-property",
    "summary": "The text-transform CSS property specifies how to capitalize an element's text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized. It also can help improve legibility for ruby."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-color",
    "pageType": "css-shorthand-property",
    "summary": "The border-color shorthand CSS property sets the color of an element's border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overlay",
    "pageType": "css-property",
    "summary": "The overlay CSS property specifies whether an element appearing in the top layer (for example, a shown popover or modal <dialog> element) is actually rendered in the top layer. This property is only relevant within a list of transition-property values, and only if allow-discrete is set as the transition-behavior."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-box-reflect",
    "pageType": "css-property",
    "summary": "The -webkit-box-reflect CSS property lets you reflect the content of an element in one specific direction."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/list-style-image",
    "pageType": "css-property",
    "summary": "The list-style-image CSS property sets an image to be used as the list item marker."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/padding-inline",
    "pageType": "css-shorthand-property",
    "summary": "The padding-inline CSS shorthand property defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element's writing mode, directionality, and text orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-inline-end-color",
    "pageType": "css-property",
    "summary": "The border-inline-end-color CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element's writing mode, directionality, and text orientation. It corresponds to the border-top-color, border-right-color, border-bottom-color, or border-left-color property depending on the values defined for writing-mode, direction, and text-orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-border-mode",
    "pageType": "css-property",
    "summary": "The mask-border-mode CSS property specifies the blending mode used in a mask border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/columns",
    "pageType": "css-shorthand-property",
    "summary": "The columns CSS shorthand property sets the number of columns to use when drawing an element's contents, as well as those columns' widths."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/column-span",
    "pageType": "css-property",
    "summary": "The column-span CSS property makes it possible for an element to span across all columns when its value is set to all."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/margin-right",
    "pageType": "css-property",
    "summary": "The margin-right CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/corner-end-end-shape",
    "pageType": "css-property",
    "summary": "The corner-end-end-shape CSS property specifies the shape of a box's block-end and inline-end corner, within its border-radius area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/contain-intrinsic-size",
    "pageType": "css-shorthand-property",
    "summary": "The contain-intrinsic-size CSS shorthand property sets the size of an element that a browser will use for layout when the element is subject to size containment."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font",
    "pageType": "css-shorthand-property",
    "summary": "The font CSS shorthand property sets all the different properties of an element's font. Alternatively, it sets an element's font to a system font."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overflow",
    "pageType": "css-shorthand-property",
    "summary": "The overflow CSS shorthand property sets the desired behavior when content does not fit in the element's padding box (overflows) in the horizontal and/or vertical direction."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/clip",
    "pageType": "css-property",
    "summary": "The clip CSS property defines a visible portion of an element. The clip property applies only to absolutely positioned elements — that is, elements with position:absolute or position:fixed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-optical-sizing",
    "pageType": "css-property",
    "summary": "The font-optical-sizing CSS property sets whether text rendering is optimized for viewing at different sizes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transform-box",
    "pageType": "css-property",
    "summary": "The transform-box CSS property defines the layout box to which the transform, individual transform properties translate, scale, and rotate, and transform-origin properties relate."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-right-style",
    "pageType": "css-property",
    "summary": "The border-right-style CSS property sets the line style of an element's right border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/overflow-y",
    "pageType": "css-property",
    "summary": "The overflow-y CSS property sets what shows when content overflows a block-level element's top and bottom edges. This may be nothing, a scroll bar, or the overflow content. This property may also be set by using the overflow shorthand property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-template",
    "pageType": "css-shorthand-property",
    "summary": "The grid-template CSS property is a shorthand property for defining grid columns, grid rows, and grid areas."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/empty-cells",
    "pageType": "css-property",
    "summary": "The empty-cells CSS property sets whether borders and backgrounds appear around <table> cells that have no visible content."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-border-source",
    "pageType": "css-property",
    "summary": "The mask-border-source CSS property sets the source image used to create an element's mask border."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/font-stretch",
    "pageType": "css-property",
    "summary": "The font-stretch CSS property selects a normal, condensed, or expanded face from a font."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/shape-outside",
    "pageType": "css-property",
    "summary": "The shape-outside CSS property defines a shape—which may be non-rectangular—around which adjacent inline content should wrap. By default, inline content wraps around its margin box; shape-outside provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than rectangular boxes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/pointer-events",
    "pageType": "css-property",
    "summary": "The pointer-events CSS property sets under what circumstances (if any) a particular graphic element can become the target of pointer events."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-underline-offset",
    "pageType": "css-property",
    "summary": "The text-underline-offset CSS property sets the offset distance of an underline text decoration line (applied using text-decoration) from its original position."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/view-transition-name",
    "pageType": "css-property",
    "summary": "The view-transition-name CSS property specifies the view transition snapshot that selected elements will participate in. This enables you to animate those elements separately from the rest of the page, which uses the default cross-fade animation during a view transition. You can then define custom animation styles for these elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-repeat",
    "pageType": "css-property",
    "summary": "The background-repeat CSS property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/float",
    "pageType": "css-property",
    "summary": "The float CSS property places an element on the left or right side of its container, allowing text and inline elements to wrap around it. The element is removed from the normal flow of the page, though still remaining a part of the flow (in contrast to absolute positioning)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transition-delay",
    "pageType": "css-property",
    "summary": "The transition-delay CSS property specifies the duration to wait before starting a property's transition effect when its value changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/transform-origin",
    "pageType": "css-property",
    "summary": "The transform-origin CSS property sets the origin for an element's transformations."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-touch-callout",
    "pageType": "css-property",
    "summary": "The -webkit-touch-callout CSS property controls the display of the default callout shown when you touch and hold a touch target."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/animation-iteration-count",
    "pageType": "css-property",
    "summary": "The animation-iteration-count CSS property sets the number of times an animation sequence should be played before stopping."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mix-blend-mode",
    "pageType": "css-property",
    "summary": "The mix-blend-mode CSS property sets how an element's content should blend with the content of the element's parent and the element's background."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/stroke-width",
    "pageType": "css-property",
    "summary": "The stroke-width CSS property defines the width of a stroke applied to the SVG shape. If present, it overrides the element's stroke-width attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/border-bottom-color",
    "pageType": "css-property",
    "summary": "The border-bottom-color CSS property sets the color of an element's bottom border. It can also be set with the shorthand CSS properties border-color or border-bottom."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/orphans",
    "pageType": "css-property",
    "summary": "The orphans CSS property sets the minimum number of lines in a block container that must be shown at the bottom of a page, region, or column."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/background-blend-mode",
    "pageType": "css-property",
    "summary": "The background-blend-mode CSS property sets how an element's background images should blend with each other and with the element's background color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/-webkit-text-stroke",
    "pageType": "css-shorthand-property",
    "summary": "The -webkit-text-stroke CSS property specifies the width and color of strokes for text characters. This is a shorthand property for the longhand properties -webkit-text-stroke-width and -webkit-text-stroke-color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/text-decoration-skip-ink",
    "pageType": "css-property",
    "summary": "The text-decoration-skip-ink CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/box-orient",
    "pageType": "css-property",
    "summary": "The box-orient CSS property sets whether an element lays out its contents horizontally or vertically."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/grid-template-columns",
    "pageType": "css-property",
    "summary": "The grid-template-columns CSS property defines the line names and track sizing functions of the grid columns."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/break-before",
    "pageType": "css-property",
    "summary": "The break-before CSS property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Reference/Properties/mask-clip",
    "pageType": "css-property",
    "summary": "The mask-clip CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_overflow",
    "pageType": "css-module",
    "summary": "The CSS overflow module properties enable you to handle scrollable overflow in visual media."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_overflow/CSS_carousels",
    "pageType": "guide",
    "summary": "The CSS overflow module defines features enabling the creation of flexible and accessible pure-CSS carousels with browser-generated and developer-styled scroll buttons and scroll markers. This guide explains how to create a carousel using these features."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/counter",
    "pageType": "css-function",
    "summary": "The counter() CSS function returns a string representing the current value of the named counter, if there is one."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/unset",
    "pageType": "css-keyword",
    "summary": "The unset CSS keyword resets a property to its inherited value if the property naturally inherits from its parent, and to its initial value if not. In other words, it behaves like the inherit keyword in the first case, when the property is an inherited property, and like the initial keyword in the second case, when the property is a non-inherited property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_masking",
    "pageType": "css-module",
    "summary": "The CSS masking module defines masking and clipping, two different graphical operations that are used to partially or fully hide portions of visual elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_masking/Masking",
    "pageType": "guide",
    "summary": "CSS masking enables you to reveal or hide parts of an element selectively by applying one or more mask images to it. These mask images can be gradients, images, or SVG sources. Unlike CSS clipping, which either fully shows or hides areas of an element based on the shape of a single path, masking allows for nuanced transparency and blending effects based on the alpha transparency and, optionally, luminance of the mask images."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_masking/Mask_properties",
    "pageType": "guide",
    "summary": "CSS masking is a technique that enables you to define visible portions of an element by applying a mask, which selectively reveals or hides parts of the element based on the alpha channels, and optionally colors, of the applied mask images."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_masking/Clipping",
    "pageType": "guide",
    "summary": "CSS clipping enables you to define visible portions of an element while hiding other parts, effectively \"clipping\" its content within a specific shape or area. With clipping, elements aren't limited to being rendered as rectangles and can be designed in visually engaging ways. This guide explores the clip-path property along with some examples."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_masking/Multiple_masks",
    "pageType": "guide",
    "summary": "CSS masking is a technique that enables you to use images as masks to define which sections of an element are fully visible or semi-opaque. The CSS mask selectively reveals or hides parts of the element based on the alpha channel and in some cases the brightness of the colors of the applied mask images."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-broken",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-broken CSS pseudo-class is a Mozilla extension that matches elements representing broken image links."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Pseudo-classes",
    "pageType": "landing-page",
    "summary": "A CSS pseudo-class is a keyword added to a selector that lets you style a specific state of the selected element(s). For example, the pseudo-class :hover can be used to select a button when a user's pointer hovers over the button and this selected button can then be styled."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::marker",
    "pageType": "css-pseudo-element",
    "summary": "The ::marker CSS pseudo-element selects the marker box of a list item, which typically contains a bullet or number. It works on any element or pseudo-element set to display: list-item, such as the <li> and <summary> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/absolute-size",
    "pageType": "css-type",
    "summary": "The <absolute-size> CSS data type describes the absolute size keywords. This data type is used in the font shorthand and font-size properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-handler-crashed",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-handler-crashed CSS pseudo-class is a Mozilla extension that matches elements that can't be displayed because the plugin responsible for drawing them has crashed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::view-transition",
    "pageType": "css-pseudo-element",
    "summary": "The ::view-transition CSS pseudo-element represents the root of the view transitions overlay, which contains all view transition snapshot groups and sits over the top of all other page content."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:only-child",
    "pageType": "css-pseudo-class",
    "summary": "The :only-child CSS pseudo-class represents an element without any siblings. This is the same as :first-child:last-child or :nth-child(1):nth-last-child(1), but with a lower specificity."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style",
    "pageType": "css-at-rule",
    "summary": "The @counter-style CSS at-rule lets you extend predefined list styles and define your own counter styles that are not part of the predefined set of styles. The @counter-style rule contains descriptors defining how the counter value is converted into a string representation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/range",
    "pageType": "css-at-rule-descriptor",
    "summary": "The range descriptor lets the author specify one or more ranges of counter values for which the style is applied when defining custom counter styles with the @counter-style at-rule. When the range descriptor is included, the defined counter will only be used for values in the set ranges. If the counter value is outside the specified range, the fallback style will be used to construct the representation of that marker."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/prefix",
    "pageType": "css-at-rule-descriptor",
    "summary": "The @counter-style rule's prefix descriptor specifies content that will be added to the beginning of the counter's marker representation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/system",
    "pageType": "css-at-rule-descriptor",
    "summary": "The system descriptor specifies the algorithm to be used for converting the integer value of a counter to a string representation. It is used in a @counter-style to define the behavior of the defined style."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/speak-as",
    "pageType": "css-at-rule-descriptor",
    "summary": "The speak-as descriptor specifies how a counter symbol constructed with a given @counter-style will be represented in the spoken form. For example, an author can specify a counter symbol to be either spoken as its numerical value or just represented with an audio cue."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/additive-symbols",
    "pageType": "css-at-rule-descriptor",
    "summary": "The additive-symbols descriptor of the @counter-style at-rule is used to specify counter symbols when the @counter-style system descriptor value is set as additive. The additive system is used to construct sign-value numbering systems such as Roman numerals."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/pad",
    "pageType": "css-at-rule-descriptor",
    "summary": "The pad descriptor of the @counter-style at-rule is used to set a minimum length for marker representations."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/symbols",
    "pageType": "css-at-rule-descriptor",
    "summary": "The symbols CSS descriptor of the @counter-style at-rule is used to specify the symbols for creating counter representations in the specified counter system. Specifying this descriptor is mandatory when the value of the system descriptor is cyclic, numeric, alphabetic, symbolic, or fixed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/fallback",
    "pageType": "css-at-rule-descriptor",
    "summary": "The fallback descriptor of the @counter-style at-rule can be used to specify a counter style to fall back to if the counter style being defined cannot create a marker representation for a particular counter value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/negative",
    "pageType": "css-at-rule-descriptor",
    "summary": "The negative descriptor of the @counter-style at-rule lets you define how negative counter values are represented when defining custom counter styles. The value of the negative descriptor defines the symbols to be added before and after the counter representation when the counter's value is negative."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@counter-style/suffix",
    "pageType": "css-at-rule-descriptor",
    "summary": "The suffix descriptor of the @counter-style rule specifies content that will be added to the end of the marker representation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-slider-runnable-track",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-slider-runnable-track CSS pseudo-element represents the \"track\" (the groove in which the indicator slides) of an <input type=\"range\">."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/superellipse",
    "pageType": "css-function",
    "summary": "The superellipse() CSS function defines the curvature of an ellipse, and is used to specify corner shapes either directly, or via <corner-shape-value> keywords."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-handler-disabled",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-handler-disabled CSS pseudo-class is a Mozilla extension that matches elements that can't be displayed because their handlers have been disabled by the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-inner-spin-button",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-inner-spin-button CSS pseudo-element is used to style the inner part of the spinner button of number picker input elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/revert",
    "pageType": "css-keyword",
    "summary": "The revert CSS keyword reverts the cascaded value of the property from its current value to the value the property would have had if no changes had been made by the current style origin to the current element. Thus, it resets the property either to user agent set value, to user set value, to its inherited value (if it is inheritable), or to initial value. It can be applied to any CSS property, including the CSS shorthand property all."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_cascade",
    "pageType": "css-module",
    "summary": "The CSS cascading and inheritance module defines the rules for assigning values to properties by way of cascading and inheritance. This module specifies the rules for finding the specified value for all properties on all elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_cascade/Shorthand_properties",
    "pageType": "guide",
    "summary": "Shorthand properties are CSS properties that let you set the values of multiple other CSS properties simultaneously. Using a shorthand property, you can write more concise (and often more readable) style sheets, saving time and energy."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_cascade/Cascade",
    "pageType": "guide",
    "summary": "The cascade is an algorithm that defines how user agents combine property values originating from different sources. The cascade defines the origin and layer that takes precedence when declarations in more than one origin, cascade layer, or @scope block set a value for a property on an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_cascade/Specificity",
    "pageType": "guide",
    "summary": "Specificity is the algorithm used by browsers to determine the CSS declaration that is the most relevant to an element, which in turn, determines the property value to apply to the element. The specificity algorithm calculates the weight of a CSS selector to determine which rule from competing CSS declarations gets applied to an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_cascade/Inheritance",
    "pageType": "guide",
    "summary": "In CSS, inheritance controls what happens when no value is specified for a property on an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_cascade/Value_processing",
    "pageType": "guide",
    "summary": "For every element in a document tree, the browser assigns a value to every CSS property that applies to that element. The rendered value of each CSS property for a given element or box is the result of a calculation based on stylesheet definitions, inheritance, the cascade, dependencies, unit conversion, and the display environment. This guide provides an overview of the processing steps applied to define how each CSS value is ultimately rendered by exploring key concepts like specified, computed, used, and actual values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-meter-suboptimum-value",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-meter-suboptimum-value pseudo-element styles the <meter> element when the value attribute falls outside of the low-high range and is not equivalent to the optimum value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Subsequent-sibling_combinator",
    "pageType": "css-combinator",
    "summary": "The subsequent-sibling combinator (~, a tilde) separates two selectors and matches all instances of the second element that follow the first element (not necessarily immediately) and share the same parent element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-webkit-search-results-button",
    "pageType": "css-pseudo-element",
    "summary": "The ::-webkit-search-results-button CSS pseudo-element represents a button (the \"search results button\") at the left edge of an <input> of type=\"search\" which when clicked displays a menu which allows the user to choose from previous recent search queries. This button and pseudo-element are non-standard, supported only in WebKit and Blink, hence the vendor prefix. The search results button is only shown on search <input> elements that have a results attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:first-of-type",
    "pageType": "css-pseudo-class",
    "summary": "The :first-of-type CSS pseudo-class represents the first element of its type (tag name) among a group of sibling elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_images",
    "pageType": "css-module",
    "summary": "The CSS images module defines the types of images that can be used (the <image> type, containing URLs, gradients and other types of images), how to resize them and how they, and other replaced content, interact with the different layout models."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_images/Replaced_element_properties",
    "pageType": "guide",
    "summary": "Some CSS properties apply to all elements, some only to grid and flex containers, others only to transformable elements. This guide introduces the properties that only apply to replaced elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_images/Using_CSS_gradients",
    "pageType": "guide",
    "summary": "CSS gradients are represented by the <gradient> data type, a special type of <image> made of a progressive transition between two or more colors. You can choose between three types of gradients: linear (created with the linear-gradient() function), radial (created with the radial-gradient() function), and conic (created with the conic-gradient() function). You can also create repeating gradients with the repeating-linear-gradient(), repeating-radial-gradient(), and repeating-conic-gradient() functions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_images/Implementing_image_sprites_in_CSS",
    "pageType": "guide",
    "summary": "Image sprites are used in numerous web apps where multiple images are used. Rather than include each image as a separate image file, it is much more memory- and bandwidth-friendly to send them as a single image; using background position as a way to distinguish between individual images in the same image file, so the number of HTTP requests is reduced."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_images/Using_object-view-box",
    "pageType": "guide",
    "summary": "The object-view-box property can be used to define a viewbox within replaced elements, enabling the display of just a section of the replaced content. The subsection of the element displayed can be presented as zoomed-in, zoomed-out, or at original size, while maintaining the content's intrinsic aspect ratio. In this guide, we examine this property, comparing it to the similar object-fit property, and explore its functionality through zooming in and out, as well as panning across an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_viewport",
    "pageType": "css-module",
    "summary": "The CSS viewport module enables specifying the size, zoom factor, and orientation of the user-agent's initial containing block, or viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display",
    "pageType": "css-module",
    "summary": "The CSS display module defines how the CSS formatting box tree is generated from the document element tree and defines properties controlling it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/Visual_formatting_model",
    "pageType": "guide",
    "summary": "In CSS, the visual formatting model describes how user agents take the document tree, and process and display it for visual media. This includes continuous media such as a computer screen and paged media such as a book or document printed by browser print functions. Most of the information applies equally to continuous and paged media."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/Flow_layout_and_writing_modes",
    "pageType": "guide",
    "summary": "The CSS 2.1 specification, which details how normal flow behaves, assumes a horizontal writing mode. Layout properties should work in the same way in vertical writing modes. In this guide, we look at how flow layout behaves when used with different document writing modes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/Containing_block",
    "pageType": "guide",
    "summary": "The size and position of an element are often impacted by its containing block. Most often, the containing block is the content area of an element's nearest block-level ancestor, but this is not always the case. In this article, we examine the factors that determine an element's containing block."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/Block_formatting_context",
    "pageType": "guide",
    "summary": "A block formatting context (BFC) is a part of a visual CSS rendering of a web page. It's the region in which the layout of block boxes occurs and in which floats interact with other elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/Introduction_to_formatting_contexts",
    "pageType": "guide",
    "summary": "This article introduces the concept of formatting contexts, of which there are several types, including block formatting contexts, inline formatting contexts, and flex formatting contexts. The basics of how they behave and how you can make use of these behaviors are also introduced."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/Block_and_inline_layout_in_normal_flow",
    "pageType": "guide",
    "summary": "In this guide, we will explore the basics of how Block and Inline elements behave when they are part of the normal flow."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/Flow_layout",
    "pageType": "guide",
    "summary": "Normal Flow, or Flow Layout, is the way that block and inline elements are displayed on a page before any changes are made to their layout. The flow is essentially a set of things that are all working together and know about each other in your layout. Once something is taken out of flow it works independently."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/Flow_layout_and_overflow",
    "pageType": "guide",
    "summary": "When there is more content than can fit into a container, an overflow situation occurs. Understanding how overflow behaves is important in dealing with any element with a constrained size in CSS. This guide explains how overflow works when working with normal flow.\nThe HTML is the same in each example, so it's visible in the first section, and hidden in others for brevity."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/multi-keyword_syntax_of_display",
    "pageType": "guide",
    "summary": "The CSS display module defines a multi-keyword syntax for the CSS display property. This guide explains the multi-keyword syntax."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_display/In_flow_and_out_of_flow",
    "pageType": "guide",
    "summary": "The previous guide explained block and inline layout in normal flow. All elements that are in flow will be laid out using this method."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@view-transition",
    "pageType": "css-at-rule",
    "summary": "The @view-transition CSS at-rule is used to opt in the current and destination documents to undergo a view transition, in the case of a cross-document navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Next-sibling_combinator",
    "pageType": "css-combinator",
    "summary": "The next-sibling combinator (+) separates two selectors and matches the second element only if it immediately follows the first element, and both are children of the same parent element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:left",
    "pageType": "css-pseudo-class",
    "summary": "The :left CSS pseudo-class, used with the @page at-rule, represents all left-hand pages of a printed document."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to",
    "pageType": "unknown",
    "summary": "This page lists how-to guides for CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook",
    "pageType": "landing-page",
    "summary": "The CSS layout cookbook aims to bring together recipes for common layout patterns, things you might need to implement in your own sites. In addition to providing code you can use as a starting point in your projects, these recipes highlight the different ways layout specifications can be used, and the choices you can make as a developer."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Center_an_element",
    "pageType": "how-to",
    "summary": "In this recipe, you will see how to center one box inside another by using flexbox and grid, centering content both horizontally and vertically."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/List_group_with_badges",
    "pageType": "how-to",
    "summary": "In this recipe we will create a list group pattern with badges that indicate a count."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Column_layouts",
    "pageType": "how-to",
    "summary": "You will often need to create a layout which has a number of columns, and CSS provides several ways to do this. Whether you use Multi-column, Flexbox, or Grid layout will depend on what you are trying to achieve, and in this recipe we explore these options."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Split_navigation",
    "pageType": "how-to",
    "summary": "The split navigation is a navigation pattern where one or more elements are separated from the rest of the navigation items."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Card",
    "pageType": "how-to",
    "summary": "This pattern is a list of \"card\" components with optional footers. A card contains a title, an image, a description or other content, and an attribution or footer. Cards are generally displayed within a group or collection."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Grid_wrapper",
    "pageType": "how-to",
    "summary": "The grid wrapper pattern is useful for aligning grid content within a central wrapper while also allowing items to break out and align to the edge of the containing element or page."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Pagination",
    "pageType": "how-to",
    "summary": "This cookbook pattern demonstrates the navigation pattern used to display pagination, where the user can move between pages of content such as search results."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Breadcrumb_navigation",
    "pageType": "how-to",
    "summary": "Breadcrumb navigation helps the user to understand their location in the website by providing a breadcrumb trail back to the start page. The items typically display inline, with a separator between each item, indicating the hierarchy between individual pages."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Sticky_footers",
    "pageType": "how-to",
    "summary": "A sticky footer pattern is one where the footer of your page \"sticks\" to the bottom of the viewport in cases where the content is shorter than the viewport height. We'll look at a couple of techniques for creating one in this recipe."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Contribute_a_recipe",
    "pageType": "guide",
    "summary": "If you would like to contribute an example for the Layout Cookbook, then this page explains the steps to take to have your example published."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Contribute_a_recipe/Cookbook_template",
    "pageType": "guide",
    "summary": "Description of the problem this recipe solves or the pattern you are demonstrating."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/How_to/Layout_cookbook/Media_objects",
    "pageType": "how-to",
    "summary": "The Media Object is a pattern we see all over the web. It refers to a two-column box with an image on one side and descriptive text on the other, e.g., a social media post."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/scripting",
    "pageType": "css-media-feature",
    "summary": "The scripting CSS media feature can be used to test whether scripting (such as JavaScript) is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media",
    "pageType": "css-at-rule",
    "summary": "The @media CSS at-rule can be used to apply part of a style sheet based on the result of one or more media queries. With it, you specify a media query and a block of CSS to apply to the document if and only if the media query matches the device on which the content is being used."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/hover",
    "pageType": "css-media-feature",
    "summary": "The hover CSS media feature can be used to test whether the user's primary input mechanism can hover over elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/aspect-ratio",
    "pageType": "css-media-feature",
    "summary": "The aspect-ratio CSS media feature can be used to test the aspect ratio of the viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/video-dynamic-range",
    "pageType": "css-media-feature",
    "summary": "The video-dynamic-range CSS media feature can be used to test the combination of brightness, contrast ratio, and color depth that are supported by the video plane of the user agent and the output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/resolution",
    "pageType": "css-media-feature",
    "summary": "The resolution CSS media feature can be used to test the pixel density of the output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/color",
    "pageType": "css-media-feature",
    "summary": "The color CSS media feature can be used to test the number of bits per color component (red, green, blue) of the output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/-webkit-transform-3d",
    "pageType": "css-media-feature",
    "summary": "The -webkit-transform-3d Boolean CSS media feature is a WebKit extension whose value is true if vendor-prefixed CSS 3D transforms are supported."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/prefers-color-scheme",
    "pageType": "css-media-feature",
    "summary": "The prefers-color-scheme CSS media feature is used to detect if a user has requested light or dark color themes.\nA user indicates their preference through an operating system setting (e.g., light or dark mode) or a user agent setting."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/-webkit-transform-2d",
    "pageType": "css-media-feature",
    "summary": "The -webkit-transform-2d Boolean CSS media feature is a WebKit extension whose value is true if vendor-prefixed CSS 2D transforms and non-standard vendor-prefixed media queries are supported."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/prefers-contrast",
    "pageType": "css-media-feature",
    "summary": "The prefers-contrast CSS media feature is used to detect whether the user has requested the web content to be presented with a lower or higher contrast."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/-webkit-transition",
    "pageType": "css-media-feature",
    "summary": "The -webkit-transition Boolean non-standard CSS media feature is a WebKit extension whose value is true if the browsing context supports CSS transitions."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/monochrome",
    "pageType": "css-media-feature",
    "summary": "The monochrome CSS media feature can be used to test the number of bits per pixel in the monochrome frame buffer of the output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/horizontal-viewport-segments",
    "pageType": "css-media-feature",
    "summary": "The horizontal-viewport-segments CSS media feature detects whether the device has a specified number of viewport segments laid out horizontally (side by side)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/prefers-reduced-motion",
    "pageType": "css-media-feature",
    "summary": "The prefers-reduced-motion CSS media feature is used to detect if a user has enabled a setting on their device to minimize the amount of non-essential motion. The setting is used to convey to the browser on the device that the user prefers an interface that removes, reduces, or replaces motion-based animations."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/vertical-viewport-segments",
    "pageType": "css-media-feature",
    "summary": "The vertical-viewport-segments CSS media feature detects whether the device has a specified number of viewport segments laid out vertically (top to bottom)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/device-aspect-ratio",
    "pageType": "css-media-feature",
    "summary": "The device-aspect-ratio CSS media feature can be used to test the width-to-height aspect ratio of an output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/color-index",
    "pageType": "css-media-feature",
    "summary": "The color-index CSS media feature can be used to test the number of entries in the output device's color lookup table."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/dynamic-range",
    "pageType": "css-media-feature",
    "summary": "The dynamic-range CSS media feature can be used to test the combination of brightness, contrast ratio, and color depth that are supported by the user agent and the output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/-webkit-device-pixel-ratio",
    "pageType": "css-media-feature",
    "summary": "The -webkit-device-pixel-ratio is a non-standard Boolean CSS media feature which is an alternative to the standard resolution media feature."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/inverted-colors",
    "pageType": "css-media-feature",
    "summary": "The inverted-colors CSS media feature is used to test if the user agent or the underlying operating system has inverted all colors."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/device-width",
    "pageType": "css-media-feature",
    "summary": "The device-width CSS media feature can be used to test the width of an output device's rendering surface."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/-moz-device-pixel-ratio",
    "pageType": "css-media-feature",
    "summary": "The -moz-device-pixel-ratio Gecko-only CSS media feature can be used to apply styles based on the number of device pixels per CSS pixel."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/height",
    "pageType": "css-media-feature",
    "summary": "The height CSS media feature can be used to apply styles based on the height of the viewport (or the page box, for paged media)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/orientation",
    "pageType": "css-media-feature",
    "summary": "The orientation CSS media feature can be used to test the orientation of the viewport (or the page box, for paged media)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/any-hover",
    "pageType": "css-media-feature",
    "summary": "The any-hover CSS media feature can be used to test whether any available input mechanism can hover over elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/device-height",
    "pageType": "css-media-feature",
    "summary": "The device-height CSS media feature can be used to test the height of an output device's rendering surface."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/display-mode",
    "pageType": "css-media-feature",
    "summary": "The display-mode CSS media feature can be used to test whether a web app is being displayed in a normal browser tab or in some alternative way, such as a standalone app or fullscreen mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/grid",
    "pageType": "css-media-feature",
    "summary": "The grid CSS media feature can be used to test whether the output device uses a grid-based screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/overflow-inline",
    "pageType": "css-media-feature",
    "summary": "The overflow-inline CSS media feature can be used to test how the output device handles content that overflows the initial containing block along the inline axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/forced-colors",
    "pageType": "css-media-feature",
    "summary": "The forced-colors CSS media feature is used to detect if the user agent has enabled a forced colors mode where it enforces a user-chosen limited color palette on the page. An example of a forced colors mode is Windows High Contrast mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/overflow-block",
    "pageType": "css-media-feature",
    "summary": "The overflow-block CSS media feature can be used to test how the output device handles content that overflows the initial containing block along the block axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/width",
    "pageType": "css-media-feature",
    "summary": "The width CSS media feature can be used to test the width of the viewport (or the page box, for paged media)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/device-posture",
    "pageType": "css-media-feature",
    "summary": "The device-posture CSS media feature can be used to detect the device's current posture, that is, whether the viewport is in a flat (continuous) or folded state (folded)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/prefers-reduced-data",
    "pageType": "css-media-feature",
    "summary": "The prefers-reduced-data CSS media feature is used to detect if the user has requested the web content that consumes less internet traffic."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/scan",
    "pageType": "css-media-feature",
    "summary": "The scan CSS media feature is used to apply CSS styles based on the scanning process of the output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/any-pointer",
    "pageType": "css-media-feature",
    "summary": "The any-pointer CSS media feature tests whether the user has any pointing device (such as a mouse), and if so, how accurate it is."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/prefers-reduced-transparency",
    "pageType": "css-media-feature",
    "summary": "The prefers-reduced-transparency CSS media feature is used to detect if a user has enabled a setting on their device to reduce the transparent or translucent layer effects used on the device. Switching on such a setting can help improve contrast and readability for some users."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/-webkit-animation",
    "pageType": "css-media-feature",
    "summary": "The -webkit-animation Boolean CSS media feature is a WebKit extension whose value is true if vendor-prefixed CSS animations are supported."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/color-gamut",
    "pageType": "css-media-feature",
    "summary": "The color-gamut CSS media feature is used to apply CSS styles based on the approximate range of color gamut supported by the user agent and the output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/shape",
    "pageType": "css-media-feature",
    "summary": "The shape CSS media feature can be used to test the shape of the device to distinguish rectangular and round displays."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/update",
    "pageType": "css-media-feature",
    "summary": "The update CSS media feature can be used to test how frequently (if at all) the output device is able to modify the appearance of content once rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@media/pointer",
    "pageType": "css-media-feature",
    "summary": "The pointer CSS media feature tests whether the user has a pointing device (such as a mouse), and if so, how accurate the primary pointing device is."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSSOM_view",
    "pageType": "css-module",
    "summary": "The CSSOM view module lets you manipulate the visual view of a document, including getting the position of element layout boxes, obtaining the width or height of the viewport through script, and also scrolling an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSSOM_view/Viewport_concepts",
    "pageType": "guide",
    "summary": "This article explains the concept of the viewport — what it is and its impact in terms of CSS, SVG, and mobile devices. This article defines the initial viewport and actual viewport, and differentiates between the visual viewport and the layout viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/anchor",
    "pageType": "css-function",
    "summary": "The anchor() CSS function can be used within an anchor-positioned element's inset property values, returning a length value relative to the position of the edges of its associated anchor element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_flexible_box_layout",
    "pageType": "css-module",
    "summary": "The CSS flexible box layout module defines a CSS box model optimized for user interface design, and the layout of items in one dimension. In the flex layout model, the children of a flex container can be laid out in any direction, and can \"flex\" their sizes, either growing to fill unused space or shrinking to avoid overflowing the parent. Both horizontal and vertical alignment of the children can be easily manipulated."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_flexible_box_layout/Ordering_flex_items",
    "pageType": "guide",
    "summary": "Layout methods such as flexbox and grid enable controlling the order of content. In this article, we will take a look at ways in which you can change the visual order of your content when using flexbox. We will also consider how reordering items impacts accessibility."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_flexible_box_layout/Relationship_of_flexbox_to_other_layout_methods",
    "pageType": "guide",
    "summary": "In this article, we will take a look at how flexbox fits in with all the other CSS modules. We'll find out which specifications you also need to take notice of if you want to learn flexbox, and find out why flexbox is different to some other modules."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_flexible_box_layout/Mastering_wrapping_of_flex_items",
    "pageType": "guide",
    "summary": "Flexbox was designed as a single-dimensional layout tool — it deals with laying out items as a row or column — but not both at once. It is, however, possible to wrap flex items onto new lines, creating new rows if flex-direction is row and new columns if flex-direction is column. This guide explains flexbox wrapping, what it is designed for, and what situations require CSS grid layout rather than flexbox."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_flexible_box_layout/Aligning_items_in_a_flex_container",
    "pageType": "guide",
    "summary": "One of the reasons flexbox is so useful is that it enables proper alignment, including providing a quick method of vertically centering elements. In this guide, we will take a thorough look at how the alignment and justification properties work in flexbox."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_flexible_box_layout/Typical_use_cases_of_flexbox",
    "pageType": "guide",
    "summary": "In this guide, we will take a look at some of the common use cases for flexbox — those places where flexbox makes more sense than another layout method."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox",
    "pageType": "guide",
    "summary": "The flexible box layout module (usually referred to as flexbox) is a one-dimensional layout model for distributing space between items and includes numerous alignment capabilities. This article gives an outline of the main features of flexbox, which we will explore in more detail in the rest of these guides."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_flexible_box_layout/Controlling_ratios_of_flex_items_along_the_main_axis",
    "pageType": "guide",
    "summary": "In this guide, we explore the three properties that control the size and flexibility of flex items along the main axis: flex-grow, flex-shrink, and flex-basis. Fully understanding how these properties work with growing and shrinking items is the key to mastering CSS flexible box layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/clamp",
    "pageType": "css-function",
    "summary": "The clamp() CSS function clamps a value within a range of values between a defined minimum bound and a maximum bound. The function takes three parameters: a minimum value, a preferred value, and a maximum allowed value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function",
    "pageType": "css-type",
    "summary": "The <transform-function> CSS data type represents a transformation that affects an element's appearance. Transformation functions can rotate, resize, distort, or move an element in 2D or 3D space. It is used in the transform property."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/scaleZ",
    "pageType": "css-function",
    "summary": "The scaleZ() CSS function defines a transformation that resizes an element along the\nz-axis. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/scale3d",
    "pageType": "css-function",
    "summary": "The scale3d() CSS function defines a transformation that resizes an element in 3D space.\nBecause the amount of scaling is defined by a vector [sx, sy, sz], it can resize different dimensions at different scales. Its\nresult is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/skewX",
    "pageType": "css-function",
    "summary": "The skewX() CSS function defines a transformation that skews an element in the\nhorizontal direction on the 2D plane. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/skewY",
    "pageType": "css-function",
    "summary": "The skewY() CSS function defines a transformation that skews an element in the vertical\ndirection on the 2D plane. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/skew",
    "pageType": "css-function",
    "summary": "The skew() CSS function defines a transformation that skews an element on the 2D\nplane. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/perspective",
    "pageType": "css-function",
    "summary": "The perspective() CSS function defines a transformation that sets the distance between the\nuser and the z=0 plane, the perspective from which the viewer would be if the 2-dimensional interface were\n3-dimensional. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/scale",
    "pageType": "css-function",
    "summary": "The scale() CSS function defines a transformation that resizes an element on the 2D\nplane. Because the amount of scaling is defined by a vector [sx, sy], it can resize the horizontal and vertical dimensions at\ndifferent scales. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/rotate3d",
    "pageType": "css-function",
    "summary": "The rotate3d() CSS function defines a transformation that rotates an element around a\nfixed axis in 3D space, without deforming it. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/scaleX",
    "pageType": "css-function",
    "summary": "The scaleX() CSS function defines a transformation that resizes an element along the\nx-axis (horizontally). Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/scaleY",
    "pageType": "css-function",
    "summary": "The scaleY() CSS function defines a transformation that resizes an element along the\ny-axis (vertically). Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/translate",
    "pageType": "css-function",
    "summary": "The translate() CSS function repositions an element in the horizontal and/or vertical\ndirections. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/translate3d",
    "pageType": "css-function",
    "summary": "The translate3d() CSS function repositions an element in 3D space. Its result is a\n<transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/translateX",
    "pageType": "css-function",
    "summary": "The translateX() CSS function repositions an element horizontally on the 2D plane. Its\nresult is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/translateY",
    "pageType": "css-function",
    "summary": "The translateY() CSS function repositions an element vertically on the 2D plane. Its result\nis a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/rotate",
    "pageType": "css-function",
    "summary": "The rotate() CSS function defines a transformation that rotates an element around a\nfixed point on the 2D plane, without deforming it. Its result is a <transform-function> data\ntype."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/translateZ",
    "pageType": "css-function",
    "summary": "The translateZ() CSS function repositions an element along the z-axis in 3D space, i.e.,\ncloser to or farther away from the viewer. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/rotateY",
    "pageType": "css-function",
    "summary": "The rotateY() CSS function defines a transformation that rotates an element around the\ny-axis (vertical) without deforming it. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/rotateX",
    "pageType": "css-function",
    "summary": "The rotateX() CSS function defines a transformation that rotates an element around the\nx-axis (horizontal) without deforming it. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/matrix",
    "pageType": "css-function",
    "summary": "The matrix() CSS function defines a homogeneous 2D transformation matrix. Its result is\na <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/matrix3d",
    "pageType": "css-function",
    "summary": "The matrix3d() CSS function defines a 3D transformation as a 4x4 homogeneous matrix.\nIts result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/transform-function/rotateZ",
    "pageType": "css-function",
    "summary": "The rotateZ() CSS function defines a transformation that rotates an element around the\nz-axis without deforming it. Its result is a <transform-function> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/pow",
    "pageType": "css-function",
    "summary": "The pow() CSS function is an exponential function that returns the value of a base raised to the power of a number."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:valid",
    "pageType": "css-pseudo-class",
    "summary": "The :valid CSS pseudo-class represents any <input> or other <form> element whose contents validate successfully. This allows to easily make valid fields adopt an appearance that helps the user confirm that their data is formatted properly."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_round_display",
    "pageType": "css-module",
    "summary": "The CSS round display module defines CSS extensions to support a round display, such as wrist-watches, to help developers build web pages suitable for those devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:dir",
    "pageType": "css-pseudo-class",
    "summary": "The :dir() CSS pseudo-class matches elements based on the directionality of the text contained in them."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/ident",
    "pageType": "css-type",
    "summary": "The <ident> CSS data type denotes an arbitrary string used as an identifier."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/overflow-position",
    "pageType": "css-type",
    "summary": "The <overflow-position> enumerated value type defines how an alignment subject that is larger than its alignment container will overflow that container. For example, if centered items are wider than their container, the overflow may be displayed beyond the viewport's start edge, which can't be scrolled to. The <overflow-position> value defines whether the alignment mode should be overridden to ensure the content is visible (safe) or if the alignment mode must be adhered to (unsafe)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:paused",
    "pageType": "css-pseudo-class",
    "summary": "The :paused CSS pseudo-class selector represents an element that is playable, such as <audio> or <video>, when that element is \"paused\" (i.e., not \"playing\")."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_scrollbars_styling",
    "pageType": "css-module",
    "summary": "The CSS scrollbars styling module defines properties that you can use for visual styling of scrollbars. You can customize the width of the scrollbar as required. You can also customize the color of the scrollbar track, which is the background of the scrollbar, and the color of the scrollbar thumb, which is the draggable handle of the scrollbar."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Class_selectors",
    "pageType": "css-selector",
    "summary": "The CSS class selector matches elements based on the contents of their class attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/hue-interpolation-method",
    "pageType": "css-type",
    "summary": "The <hue-interpolation-method> CSS data type represents the algorithm used for interpolation between <hue> values.\nThe interpolation method specifies how to find a midpoint between two hue values based on a color wheel.\nIt is used as a component of the <color-interpolation-method> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_backgrounds_and_borders",
    "pageType": "css-module",
    "summary": "The CSS backgrounds and borders module provides properties for adding backgrounds, borders, rounded corners, and box shadows to elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_backgrounds_and_borders/Resizing_background_images",
    "pageType": "guide",
    "summary": "The background-size CSS property lets you resize the background image of an element, overriding the default behavior of tiling the image at its full size by specifying the width and/or height of the image. By doing so, you can scale the image upward or downward as desired."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_backgrounds_and_borders/Using_multiple_backgrounds",
    "pageType": "guide",
    "summary": "You can apply multiple backgrounds to elements. These are layered atop one another with the first background you provide on top and the last background listed in the back. Only the last background can include a background color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_backgrounds_and_borders/Border-image_generator",
    "pageType": "guide",
    "summary": "This tool can be used to generate CSS border-image values."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_backgrounds_and_borders/Box-shadow_generator",
    "pageType": "guide",
    "summary": "This tool lets you construct CSS box-shadow effects, to add box shadow effects to your CSS objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_backgrounds_and_borders/Scaling_of_SVG_backgrounds",
    "pageType": "guide",
    "summary": "Given the flexibility of SVG images, there's a lot to keep in mind when using them as background images with the background-image property, and even more to keep in mind when scaling them using the background-size property. This article describes how scaling of SVG images is handled when using these properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_backgrounds_and_borders/Border-radius_generator",
    "pageType": "guide",
    "summary": "This tool can be used to generate CSS border-radius effects."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@scope",
    "pageType": "css-at-rule",
    "summary": "The @scope CSS at-rule enables you to select elements in specific DOM subtrees, targeting elements precisely without writing overly-specific selectors that are hard to override, and without coupling your selectors too tightly to the DOM structure."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:indeterminate",
    "pageType": "css-pseudo-class",
    "summary": "The :indeterminate CSS pseudo-class represents any form element whose state is indeterminate, such as checkboxes that have been set to an indeterminate state with JavaScript, radio buttons which are members of a group in which all radio buttons are unchecked, and <progress> elements with no value attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-moz-color-swatch",
    "pageType": "css-pseudo-element",
    "summary": "The ::-moz-color-swatch CSS pseudo-element is a Mozilla extension that represents the color selected in an <input> of type=\"color\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/named-color",
    "pageType": "css-type",
    "summary": "The <named-color> CSS data type is the name of a color, such as red, blue, black, or lightseagreen. Syntactically, a <named-color> is an <ident>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-locale-dir_rtl",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-locale-dir(rtl) CSS pseudo-class is a Mozilla extension that matches an element if the user interface is being displayed right-to-left. This is determined by the preference intl.uidirection.locale (where locale is the current locale) being set to \"rtl\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/calc-size",
    "pageType": "css-function",
    "summary": "The calc-size() CSS function allows you to perform calculations on intrinsic size values such as auto, fit-content, and max-content; this is not supported by the regular calc() function."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_text_decoration",
    "pageType": "css-module",
    "summary": "The CSS text decoration module defines features relating to text decoration, such as underlines, text shadows, and emphasis marks. Text decoration features can provide visual cues for spelling errors, grammar issues, and links. These features can help improve the usability, accessibility, functionality, and aesthetics of your text."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_text_decoration/Text_shadows",
    "pageType": "guide",
    "summary": "You can apply shadows to your text by using the text-shadow property. This property accepts a comma-separated list of shadow values. Each shadow requires at least two <length> values but can include up to three <length> values and one color value."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/fit-content_function",
    "pageType": "css-function",
    "summary": "The fit-content() CSS function clamps a given size to an available size according to the formula min(maximum size, max(minimum size, argument))."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:nth-last-of-type",
    "pageType": "css-pseudo-class",
    "summary": "The :nth-last-of-type() CSS pseudo-class matches elements based on their position among siblings of the same type (tag name), counting from the end."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@starting-style",
    "pageType": "css-at-rule",
    "summary": "The @starting-style CSS at-rule is used to define starting values for properties set on an element that you want to transition from when the element receives its first style update, i.e., when an element is first displayed on a previously loaded page."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:active-view-transition",
    "pageType": "css-pseudo-class",
    "summary": "The :active-view-transition CSS pseudo-class matches the root element of a document when a view transition is in progress (active) and stops matching once the transition has completed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::spelling-error",
    "pageType": "css-pseudo-element",
    "summary": "The ::spelling-error CSS pseudo-element represents a text segment which the user agent has flagged as incorrectly spelled."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/dashed-function",
    "pageType": "css-type",
    "summary": "The <dashed-function> CSS data type represents the syntax used to call CSS custom functions, which are defined using the @function at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:focus-visible",
    "pageType": "css-pseudo-class",
    "summary": "The :focus-visible pseudo-class applies while an element matches the :focus pseudo-class and the UA (User Agent) determines via heuristics that the focus should be made evident on the element. (Many browsers show a \"focus ring\" by default in this case.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_inline_layout",
    "pageType": "css-module",
    "summary": "The CSS inline layout module defines the block-axis alignment and sizing of inline-level content and adds a special layout mode for drop-caps. It describes the CSS formatting model for a flow of elements and text inside a container to be wrapped across multiple lines."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_inline_layout/Inline_formatting_context",
    "pageType": "guide",
    "summary": "This guide explains the inline formatting context."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@container",
    "pageType": "css-at-rule",
    "summary": "The @container CSS at-rule is a conditional group rule that applies styles to a containment context.\nStyle declarations are filtered by a condition and applied to the container if the condition is true.\nThe condition is evaluated when the queried container size, <style-feature>, or scroll-state changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/cos",
    "pageType": "css-function",
    "summary": "The cos() CSS function is a trigonometric function that returns the cosine of a number, which is a value between -1 and 1. The function contains a single calculation that must resolve to either a <number> or an <angle> by interpreting the result of the argument as radians. That is, cos(45deg), cos(0.125turn), and cos(3.14159 / 4) all represent the same value, approximately 0.707."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/acos",
    "pageType": "css-function",
    "summary": "The acos() CSS function is a trigonometric function that returns the inverse cosine of a number between -1 and 1. The function contains a single calculation that returns the number of radians representing an <angle> between 0deg and 180deg."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:volume-locked",
    "pageType": "css-pseudo-class",
    "summary": "The :volume-locked CSS pseudo-class selector represents an element that is capable of making sound, such as <audio> or <video>, but the audio volume of the media element is currently \"locked\" by the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Child_combinator",
    "pageType": "css-combinator",
    "summary": "The child combinator (>) is placed between two CSS selectors. It matches only those elements matched by the second selector that are the direct children of elements matched by the first."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/Attribute_selectors",
    "pageType": "css-selector",
    "summary": "The CSS attribute selector matches elements based on the element having a given attribute explicitly set, with options for defining an attribute value or substring value match."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-moz-list-number",
    "pageType": "css-pseudo-element",
    "summary": "The ::-moz-list-number CSS pseudo-element is a Mozilla extension that represents the marker (typically a number) of a list item (<li>) in an ordered list (<ol>)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@color-profile",
    "pageType": "css-at-rule",
    "summary": "The @color-profile CSS at-rule defines and names a color profile which can later be used in the color() function to specify a color."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_counter_styles",
    "pageType": "css-module",
    "summary": "The CSS counter styles module lets you define your own counter styles to manage the appearance of markers in lists and counters in generated content. It also enables you to extend native browser list styles with your own customizations."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_counter_styles/Using_CSS_counters",
    "pageType": "guide",
    "summary": "CSS counters let you adjust the appearance of content based on its location in a document.\nFor example, you can use counters to automatically number the headings on a webpage or to change the numbering on ordered lists."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@document",
    "pageType": "css-at-rule",
    "summary": "The @document CSS at-rule restricts the style rules contained within it based on the URL of the document. It is designed primarily for user-defined style sheets (see userchrome.org for more information), though it can be used on author-defined style sheets, too."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-suppressed",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-suppressed CSS pseudo-class is a Mozilla extension that matches elements representing images that were suppressed because loading images from the specified site has been blocked."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:out-of-range",
    "pageType": "css-pseudo-class",
    "summary": "The :out-of-range CSS pseudo-class represents an <input> element whose current value is outside the range limits specified by the min and max attributes."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:picture-in-picture",
    "pageType": "css-pseudo-class",
    "summary": "The :picture-in-picture CSS pseudo-class matches the element which is currently in picture-in-picture mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/generic-family",
    "pageType": "css-type",
    "summary": "The <generic-family> CSS data type represents the keyword values for generic font families used in the font shorthand and font-family longhand properties. The <generic-family> represents one or more locally-installed fonts belonging to that category of fonts."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:last-of-type",
    "pageType": "css-pseudo-class",
    "summary": "The :last-of-type CSS pseudo-class represents the last element of its type (tag name) among a group of sibling elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:open",
    "pageType": "css-pseudo-class",
    "summary": "The :open CSS pseudo-class represents an element that has open and closed states, only when it is currently in the open state."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-drag-over",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-drag-over CSS pseudo-class is a Mozilla extension that matches an element when a dragover event is called on it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::view-transition-old",
    "pageType": "css-pseudo-element",
    "summary": "The ::view-transition-old() CSS pseudo-element represents the \"old\" view state of a view transition — a static snapshot of the old view, before the transition."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/repeat",
    "pageType": "css-function",
    "summary": "The repeat() CSS function represents a repeated fragment of the track list, allowing a large number of columns or rows that exhibit a recurring pattern to be written in a more compact form."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/env",
    "pageType": "css-function",
    "summary": "The env() CSS function can be used to insert the value of a user-agent defined environment variable into your CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_conditional_rules",
    "pageType": "css-module",
    "summary": "The CSS conditional rules module defines CSS media and support queries, enabling you to define styles that are only applied if specific conditions are met. The conditional rules defined in this module are based on device, user-agent, and viewport capabilities. With conditional rules, you can target CSS styles based on query values or browser and device features, independent of the document being rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_conditional_rules/Container_scroll-state_queries",
    "pageType": "guide",
    "summary": "Container scroll-state queries are a type of container query. Rather than selectively applying styles to descendant elements based on the container's size, scroll-state queries allow you to selectively apply styles to descendant elements based on the container's scroll state. This can include whether the container is partially scrolled, snapped to a scroll snap container ancestor, or positioned via position: sticky and stuck to a boundary of a scroll container ancestor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_conditional_rules/Using_feature_queries",
    "pageType": "guide",
    "summary": "Feature queries are conditional group rules that test whether the user agent supports or doesn't support one or more CSS features, such as CSS properties and property values. Feature queries give web developers a way to test to see if a browser has support for a certain feature, and then provide CSS that will only run based on the result of that test. In this guide, you will learn how to implement progressive enhancement using feature queries."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:future",
    "pageType": "css-pseudo-class",
    "summary": "The :future CSS pseudo-class selector is a time-dimensional pseudo-class that will match for any element which appears entirely after an element that matches :current. For example in a video with captions which are being displayed by WebVTT."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_color_adjustment",
    "pageType": "css-module",
    "summary": "The CSS color adjustment module provides a model and controls automatic color adjustment by the user agent to handle user preferences, such as \"Dark Mode\", contrast adjustment, and other color scheme preferences."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/sin",
    "pageType": "css-function",
    "summary": "The sin() CSS function is a trigonometric function that returns the sine of a number, which is a value between -1 and 1. The function contains a single calculation that must resolve to either a <number> or an <angle> by interpreting the result of the argument as radians. That is, sin(45deg), sin(0.125turn), and sin(3.14159 / 4) all represent the same value, approximately 0.707."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:checked",
    "pageType": "css-pseudo-class",
    "summary": "The :checked CSS pseudo-class selector represents any radio (<input type=\"radio\">), checkbox (<input type=\"checkbox\">), or option (<option> in a <select> element) that is checked or toggled to an on state."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:nth-last-child",
    "pageType": "css-pseudo-class",
    "summary": "The :nth-last-child() CSS pseudo-class matches elements based on their position among a group of siblings, counting from the end."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:user-invalid",
    "pageType": "css-pseudo-class",
    "summary": "The :user-invalid CSS pseudo-class represents any validated form element whose value isn't valid based on their validation constraints, after the user has interacted with it."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/time-percentage",
    "pageType": "css-type",
    "summary": "The <time-percentage> CSS data type represents a value that can be either a <time> or a <percentage>."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_custom_highlight_API",
    "pageType": "css-module",
    "summary": "The CSS custom highlight API module provides a programmatic way to target specific ranges of text defined by range objects, without affecting the underlying DOM structure. The range objects can then be selected via ::highlight() pseudo-elements, and have highlight styles added and removed. The features of this module can create highlight effects similar to how text editors highlight spelling or grammar errors, and code editors highlight syntax errors."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:-moz-window-inactive",
    "pageType": "css-pseudo-class",
    "summary": "The :-moz-window-inactive CSS pseudo-class is a Mozilla extension that matches any element while it's in an inactive window."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/shape",
    "pageType": "css-type",
    "summary": "The <shape> CSS data type defines the specific form (shape) of a region. The region represents the part of an element to which the clip property applies."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:read-only",
    "pageType": "css-pseudo-class",
    "summary": "The :read-only CSS pseudo-class selects elements (such as certain <input> types and <textarea>) that are not editable by the user. Elements on which the HTML attribute readonly doesn't have an effect (such as <input type=\"radio\">, <input type=\"checkbox\">, and all other non-form elements) are also selected by the :read-only pseudo-class. In fact, :read-only matches anything that :read-write doesn't match, making it equivalent to :not(:read-write)."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-moz-meter-bar",
    "pageType": "css-pseudo-element",
    "summary": "The ::-moz-meter-bar CSS pseudo-element represents the meter gauge in a <meter> element. It is used for selecting and applying styles to the gauge inside a meter element."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:empty",
    "pageType": "css-pseudo-class",
    "summary": "The :empty CSS pseudo-class represents any element that has no children. Children can be either element nodes or text (including whitespace). Comments, processing instructions, and CSS content do not affect whether an element is considered empty."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/relative-size",
    "pageType": "css-type",
    "summary": "The <relative-size> CSS data type describes relative size keywords. The <relative-size> keywords define a size relative to the computed size of the parent element. This data type is used in the font shorthand and font-size properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/custom-ident",
    "pageType": "css-type",
    "summary": "The <custom-ident> CSS data type denotes an arbitrary user-defined string used as an identifier. It is case-sensitive, and certain values are forbidden in various contexts to prevent ambiguity."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:enabled",
    "pageType": "css-pseudo-class",
    "summary": "The :enabled CSS pseudo-class represents any enabled element. An element is enabled if it can be activated (selected, clicked on, typed into, etc.) or accept focus. The element also has a disabled state, in which it can't be activated or accept focus."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/hex-color",
    "pageType": "css-type",
    "summary": "The <hex-color> CSS data type is a notation for describing the hexadecimal color syntax of an sRGB color using its primary color components (red, green, blue) written as hexadecimal numbers, as well as its transparency."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/Notification",
    "pageType": "web-api-constructor",
    "summary": "The Notification() constructor creates a new Notification object instance, which represents a user notification."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/corner-shape-value",
    "pageType": "css-type",
    "summary": "The <corner-shape-value> CSS data type describes the shape of a container corner. It is used by the corner-shape shorthand property and its constituent properties to specify the shape to apply to affected container corners."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification",
    "pageType": "web-api-interface",
    "summary": "The Notification interface of the Notifications API is used to configure and display desktop notifications to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::scroll-marker-group",
    "pageType": "css-pseudo-element",
    "summary": "The ::scroll-marker-group CSS pseudo-element is generated inside a scroll container and contains any ::scroll-marker pseudo-elements generated on descendants of the scroll container."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/close_event",
    "pageType": "web-api-event",
    "summary": "The close event of the Notification interface fires when a Notification is closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/@function",
    "pageType": "css-at-rule",
    "summary": "The @function CSS at-rule enables defining CSS custom functions. Once defined, a custom function can be called using the <dashed-function> syntax (for example, --my-function(30px, 3)) within any property value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp read-only property of the\nNotification interface returns a number, as\nspecified in the timestamp option of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_selectors",
    "pageType": "css-module",
    "summary": "The CSS selectors module defines the patterns to select elements to which a set of CSS rules are then applied along with their specificity. The CSS selectors module provides us with more than 60 selectors and five combinators. Other modules provide additional pseudo-class selectors and pseudo-elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/actions",
    "pageType": "web-api-instance-property",
    "summary": "The actions read-only property of the Notification interface provides the actions available for users to choose from for interacting with the notification."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_selectors/Selectors_and_combinators",
    "pageType": "guide",
    "summary": "CSS selectors are used to define a pattern of the elements that you want to select for applying a set of CSS rules on the selected elements. Combinators define the relationship between the selectors. Using various selectors and combinators, you can precisely select and style the desired elements based on their type, attributes, state, or relationship to other elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/image",
    "pageType": "web-api-instance-property",
    "summary": "The image read-only property of the\nNotification interface contains the URL of an image to be displayed as\npart of the notification, as specified in the image option of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_selectors/Using_the_:target_pseudo-class_in_selectors",
    "pageType": "guide",
    "summary": "When a URL points at a specific piece of a document using a URL fragment identifier, it can be difficult for the user to notice. This guide discusses using CSS to draw attention to the target of a URL to improve user experience."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/body",
    "pageType": "web-api-instance-property",
    "summary": "The body read-only property of the\nNotification interface indicates the body string of the notification, as\nspecified in the body option of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_selectors/Selector_structure",
    "pageType": "guide",
    "summary": "The CSS selector represents a particular pattern of element or elements in a tree structure. The term \"selector\" can refer to a simple selector, a compound selector, or a complex selector. When included in the :has() pseudo-class as a parameter, these selectors are referred to as relative selectors, representing elements relative to one or more anchor elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/badge",
    "pageType": "web-api-instance-property",
    "summary": "The badge read-only property of the Notification interface returns a string containing the URL of an image to represent the notification when there is not enough space to display the notification itself such as for example, the Android Notification Bar. On Android devices, the badge should accommodate devices up to 4x resolution, about 96 by 96 px, and the image will be automatically masked."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_selectors/Privacy_and_the_visited_selector",
    "pageType": "guide",
    "summary": "Originally, the CSS :visited selector was a privacy and security risk. With a little bit of JavaScript, websites could uncover a user's browsing history and figure out what sites the user had visited. This was done using methods like window.getComputedStyle and other techniques. This process was quick, enabling websites to not only determine where the user had been on the web, but also to guess a lot of information about the user's identity."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/renotify",
    "pageType": "web-api-instance-property",
    "summary": "The renotify read-only property of the\nNotification interface specifies whether the user should be notified\nafter a new notification replaces an old one, as specified in the renotify\noption of the Notification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/minmax",
    "pageType": "css-function",
    "summary": "The minmax() CSS function defines a size range greater than or equal to min and less than or equal to max. It is used with CSS grids."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/data",
    "pageType": "web-api-instance-property",
    "summary": "The data read-only property of the\nNotification interface returns a structured clone of the notification's\ndata, as specified in the data option of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/gradient/conic-gradient",
    "pageType": "css-function",
    "summary": "The conic-gradient() CSS function creates an image consisting of a gradient with color transitions rotated around a center point (rather than radiating from the center). Example conic gradients include pie charts and color wheels. The result of the conic-gradient() function is an object of the <gradient> data type, which is a special kind of <image>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/maxActions_static",
    "pageType": "web-api-static-property",
    "summary": "The maxActions read-only static property of the\nNotification interface returns the maximum number of actions supported by\nthe device and the User Agent. Effectively, this is the maximum number of elements in\nNotification.actions array which will be respected by the User Agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/gradient",
    "pageType": "css-type",
    "summary": "The <gradient> CSS data type is a special type of <image> that consists of a progressive transition between two or more colors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/requestPermission_static",
    "pageType": "web-api-static-method",
    "summary": "The requestPermission() static method of the Notification interface requests permission from the user for the current origin to display notifications."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/gradient/repeating-conic-gradient",
    "pageType": "css-function",
    "summary": "The repeating-conic-gradient() CSS function creates an image consisting of a repeating gradient (rather than a single gradient) with color transitions rotated around a center point (rather than radiating from the center)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/lang",
    "pageType": "web-api-instance-property",
    "summary": "The lang read-only property of the\nNotification interface indicates the language used in the notification,\nas specified in the lang option of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/gradient/repeating-radial-gradient",
    "pageType": "css-function",
    "summary": "The repeating-radial-gradient() CSS function creates an image consisting of repeating gradients that radiate from an origin. It is similar to radial-gradient() and takes the same arguments, but it repeats the color stops infinitely in all directions so as to cover its entire container, similar to repeating-linear-gradient(). The function's result is an object of the <gradient> data type, which is a special kind of <image>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/icon",
    "pageType": "web-api-instance-property",
    "summary": "The icon read-only property of the\nNotification interface contains the URL of an icon to be displayed as\npart of the notification, as specified in the icon option of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/gradient/repeating-linear-gradient",
    "pageType": "css-function",
    "summary": "The repeating-linear-gradient() CSS function creates an image consisting of repeating linear gradients. It is similar to linear-gradient() and takes the same arguments, but it repeats the color stops infinitely in all directions so as to cover its entire container. The function's result is an object of the <gradient> data type, which is a special kind of <image>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the Notification interface is used to\nclose/remove a previously displayed notification."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/gradient/linear-gradient",
    "pageType": "css-function",
    "summary": "The linear-gradient() CSS function creates an image consisting of a progressive transition between two or more colors along a straight line. Its result is an object of the <gradient> data type, which is a special kind of <image>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/permission_static",
    "pageType": "web-api-static-property",
    "summary": "The permission read-only static property of the Notification\ninterface indicates the current permission granted by the user for the current origin to\ndisplay web notifications."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/gradient/radial-gradient",
    "pageType": "css-function",
    "summary": "The radial-gradient() CSS function creates an image consisting of a progressive transition between two or more colors that radiate from an origin. Its shape may be a circle or an ellipse. The function's result is an object of the <gradient> data type, which is a special kind of <image>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/click_event",
    "pageType": "web-api-event",
    "summary": "The click event of the Notification\ninterface fires when the user clicks on displayed Notification."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/:muted",
    "pageType": "css-pseudo-class",
    "summary": "The :muted CSS pseudo-class selector represents an element that is capable of making sound, such as <audio> or <video>, but is muted (forced silent)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/tag",
    "pageType": "web-api-instance-property",
    "summary": "The tag read-only property of the\nNotification interface signifies an identifying tag for the notification,\nas specified in the tag option of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/url_function",
    "pageType": "css-function",
    "summary": "The url() CSS function is used to include a file. The parameter is an absolute URL, a relative URL, a blob URL, or a data URL. The url() function can be passed as a parameter of another CSS function, like the attr() function. Depending on the property for which it is a value, the resource sought can be an image, font, or a stylesheet. The url() functional notation is the value for the <url> data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the Notification interface fires when something goes wrong with a Notification (in many cases an error preventing the notification from being displayed.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_fonts",
    "pageType": "css-module",
    "summary": "The CSS fonts module defines font-related properties and how font resources are loaded. It lets you define the style of a font, such as its family, size and weight, and the glyph variants to use when multiple are available for a single character."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/dir",
    "pageType": "web-api-instance-property",
    "summary": "The dir read-only property of the Notification interface indicates the text direction of the notification, as specified in the dir option of the Notification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_fonts/Variable_fonts_guide",
    "pageType": "guide",
    "summary": "Variable fonts are an evolution of the OpenType font specification that enables many different variations of a typeface to be incorporated into a single file, rather than having a separate font file for every width, weight, or style. They let you access all the variations contained in a given font file via CSS and a single @font-face reference. This article will give you all you need to know to get you started using variable fonts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/silent",
    "pageType": "web-api-instance-property",
    "summary": "The silent read-only property of the\nNotification interface specifies whether the notification should be\nsilent, i.e., no sounds or vibrations should be issued regardless of the device\nsettings. This is controlled via the silent option of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_fonts/OpenType_fonts_guide",
    "pageType": "guide",
    "summary": "Font features or variants refer to different glyphs or character styles contained within an OpenType font. These include things like ligatures (special glyphs that combine characters like 'fi' or 'ffl'), kerning (adjustments to the spacing between specific letterform pairings), fractions, numeral styles, and several others. These are all referred to as OpenType Features, and are made available to use on the web via specific properties and low-level control properties — font-feature-settings. This article provides you with all you need to know about using OpenType font features in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/requireInteraction",
    "pageType": "web-api-instance-property",
    "summary": "The requireInteraction read-only property of the Notification interface returns a boolean value indicating that a notification should remain active until the user clicks or dismisses it, rather than closing automatically."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/CSS_fonts/WOFF",
    "pageType": "guide",
    "summary": "WOFF (the Web Open Font Format) is a web font format developed by Mozilla in concert with Type Supply, LettError, and other organizations. It uses a compressed version of the same table-based sfnt structure used by TrueType, OpenType, and Open Font Format, but adds metadata and private-use data structures, including predefined fields allowing foundries and vendors to provide license information if desired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/vibrate",
    "pageType": "web-api-instance-property",
    "summary": "The vibrate read-only property of the Notification\ninterface specifies a vibration pattern\nfor the device's vibration hardware to emit when the notification fires. This is\nspecified in the vibrate option of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/::-moz-progress-bar",
    "pageType": "css-pseudo-element",
    "summary": "The ::-moz-progress-bar CSS pseudo-element is a Mozilla extension that represents the progress bar inside a <progress> element. (The bar represents the amount of progress that has been made.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/CSS/string",
    "pageType": "css-type",
    "summary": "The <string> CSS data type represents a sequence of characters. Strings are used in numerous CSS properties, such as content, font-family, and quotes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/title",
    "pageType": "web-api-instance-property",
    "summary": "The title read-only property of the\nNotification interface indicates the title of the notification, as\nspecified in the title parameter of the\nNotification() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notification/show_event",
    "pageType": "web-api-event",
    "summary": "The show event of the Notification interface fires when a Notification is displayed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisEvent/SpeechSynthesisEvent",
    "pageType": "web-api-constructor",
    "summary": "The SpeechSynthesisEvent() constructor creates a new SpeechSynthesisEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisEvent/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the SpeechSynthesisUtterance interface returns the name associated with certain types of events occurring as the SpeechSynthesisUtterance.text is being spoken:\nthe name of the SSML marker reached in the case of a mark event, or the type of boundary reached in the case of a boundary event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisEvent",
    "pageType": "web-api-interface",
    "summary": "The SpeechSynthesisEvent interface of the Web Speech API contains information about the current state of SpeechSynthesisUtterance objects that have been processed in the speech service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisEvent/utterance",
    "pageType": "web-api-instance-property",
    "summary": "The utterance read-only property of the SpeechSynthesisUtterance interface returns the SpeechSynthesisUtterance instance that the event was triggered on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisEvent/elapsedTime",
    "pageType": "web-api-instance-property",
    "summary": "The elapsedTime read-only property of the SpeechSynthesisEvent returns the elapsed time in seconds, after the SpeechSynthesisUtterance.text started being spoken, at which the event was triggered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisEvent/charIndex",
    "pageType": "web-api-instance-property",
    "summary": "The charIndex read-only property of the SpeechSynthesisUtterance interface returns the index position of the character in SpeechSynthesisUtterance.text that was being spoken when the event was triggered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisEvent/charLength",
    "pageType": "web-api-instance-property",
    "summary": "The read-only charLength property of the SpeechSynthesisEvent interface returns the number of characters left to be spoken after the character at the charIndex position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMParser/DOMParser",
    "pageType": "web-api-constructor",
    "summary": "The DOMParser() constructor creates a new DOMParser object. This object can be used to parse the text of a document using the parseFromString() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMParser",
    "pageType": "web-api-interface",
    "summary": "The DOMParser interface provides the ability to parse XML or HTML source code from a string into a DOM Document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMParser/parseFromString",
    "pageType": "web-api-instance-method",
    "summary": "The parseFromString() method of the DOMParser interface parses an input containing either HTML or XML, returning a Document with the type given in the contentType property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedAudioFrame/RTCEncodedAudioFrame",
    "pageType": "web-api-constructor",
    "summary": "The RTCEncodedAudioFrame() constructor creates a new and fully independent RTCEncodedAudioFrame object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedAudioFrame",
    "pageType": "web-api-interface",
    "summary": "The RTCEncodedAudioFrame of the WebRTC API represents an encoded audio frame in the WebRTC receiver or sender pipeline, which may be modified using a WebRTC Encoded Transform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedAudioFrame/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp read-only property of the RTCEncodedAudioFrame interface indicates the time at which frame sampling started."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedAudioFrame/data",
    "pageType": "web-api-instance-property",
    "summary": "The data property of the RTCEncodedAudioFrame interface returns a buffer containing the data for an encoded frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedAudioFrame/getMetadata",
    "pageType": "web-api-instance-method",
    "summary": "The getMetadata() method of the RTCEncodedAudioFrame interface returns an object containing the metadata associated with the frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer",
    "pageType": "web-api-interface",
    "summary": "The Summarizer interface of the Summarizer API contains all the functionality for this API, including checking AI model availability, creating a new Summarizer instance, using it to generate a new summary, and more."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/availability_static",
    "pageType": "web-api-static-method",
    "summary": "The availability() static method of the Summarizer interface returns an enumerated value that indicates whether the browser AI model supports (or will support) a given Summarizer configuration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the Summarizer interface returns the type of summary that will generated by the Summarizer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/measureInputUsage",
    "pageType": "web-api-instance-method",
    "summary": "The measureInputUsage() method of the Summarizer interface reports how much inputQuota would be used by a summarize operation for a given text input."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/format",
    "pageType": "web-api-instance-property",
    "summary": "The format read-only property of the Summarizer interface returns the text format summaries will be returned in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/sharedContext",
    "pageType": "web-api-instance-property",
    "summary": "The sharedContext read-only property of the Summarizer interface returns a string describing the context the pieces of text to summarize are being used in. This helps the Summarizer to generate more suitable summaries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/inputQuota",
    "pageType": "web-api-instance-property",
    "summary": "The inputQuota read-only property of the Summarizer interface returns the input quota available to the browser for generating summaries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the Summarizer interface returns the relative length of the generated summaries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/summarize",
    "pageType": "web-api-instance-method",
    "summary": "The summarize() method of the Summarizer interface generates a new summary string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/expectedInputLanguages",
    "pageType": "web-api-instance-property",
    "summary": "The expectedInputLanguages read-only property of the Summarizer interface returns the languages the Summarizer should support."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/destroy",
    "pageType": "web-api-instance-method",
    "summary": "The destroy() method of the Summarizer interface releases the resources assigned to the Summarizer instance it is called on and stops any further activity on it. This means that any ongoing and subsequent method calls made on the Summarizer will reject with an AbortError."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/summarizeStreaming",
    "pageType": "web-api-instance-method",
    "summary": "The summarizeStreaming() method of the Summarizer interface generates a new summary as a ReadableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/create_static",
    "pageType": "web-api-static-method",
    "summary": "The create() static method of the Summarizer interface creates a new Summarizer instance from which to generate summaries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/outputLanguage",
    "pageType": "web-api-instance-property",
    "summary": "The outputLanguage read-only property of the Summarizer interface returns the language the summary should be generated in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer/expectedContextLanguages",
    "pageType": "web-api-instance-property",
    "summary": "The expectedContextLanguages read-only property of the Summarizer interface returns the languages the context strings should be written in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoder/TextDecoder",
    "pageType": "web-api-constructor",
    "summary": "The TextDecoder() constructor returns a new TextDecoder object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoder",
    "pageType": "web-api-interface",
    "summary": "The TextDecoder interface represents a decoder for a specific text encoding, such as UTF-8, ISO-8859-2, or GBK. A decoder takes an array of bytes as input and returns a JavaScript string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoder/encoding",
    "pageType": "web-api-instance-property",
    "summary": "The TextDecoder.encoding read-only property returns a string containing the name of the character encoding that this decoder will use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoder/fatal",
    "pageType": "web-api-instance-property",
    "summary": "The fatal read-only property of the TextDecoder interface is a Boolean indicating whether the error mode is fatal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoder/decode",
    "pageType": "web-api-instance-method",
    "summary": "The TextDecoder.decode() method returns a string containing text decoded from the buffer passed as a parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoder/ignoreBOM",
    "pageType": "web-api-instance-property",
    "summary": "The ignoreBOM read-only property of the TextDecoder interface is a Boolean indicating whether the byte order mark will be included in the output or skipped over. The value of the property is set in the ignoreBOM argument to the decoder's constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapter/features",
    "pageType": "web-api-instance-property",
    "summary": "The features read-only property of the\nGPUAdapter interface returns a GPUSupportedFeatures object that describes additional functionality supported by the adapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapter/limits",
    "pageType": "web-api-instance-property",
    "summary": "The limits read-only property of the\nGPUAdapter interface returns a GPUSupportedLimits object that describes the limits supported by the adapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapter",
    "pageType": "web-api-interface",
    "summary": "The GPUAdapter interface of the WebGPU API represents a GPU adapter. From this you can request a GPUDevice, adapter info, features, and limits."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapter/requestDevice",
    "pageType": "web-api-instance-method",
    "summary": "The requestDevice() method of the\nGPUAdapter interface returns a Promise that fulfills with a GPUDevice object, which is the primary interface for communicating with the GPU."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapter/isFallbackAdapter",
    "pageType": "web-api-instance-property",
    "summary": "The isFallbackAdapter read-only property of the\nGPUAdapter interface returns true if the adapter is a fallback adapter, and false if not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapter/info",
    "pageType": "web-api-instance-property",
    "summary": "The info read-only property of the\nGPUAdapter interface returns a GPUAdapterInfo object containing identifying information about the adapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapter/requestAdapterInfo",
    "pageType": "web-api-instance-method",
    "summary": "The requestAdapterInfo() method of the\nGPUAdapter interface returns a Promise that fulfills with a GPUAdapterInfo object containing identifying information about an adapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedPreserveAspectRatio",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedPreserveAspectRatio interface represents attributes of type SVGPreserveAspectRatio which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedPreserveAspectRatio/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal read-only property of the SVGAnimatedPreserveAspectRatio interface represents the value of the preserveAspectRatio attribute of an SVG element after any animations or transformations are applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedPreserveAspectRatio/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal read-only property of the SVGAnimatedPreserveAspectRatio interface represents the base (non-animated) value of the preserveAspectRatio attribute of an SVG element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Profiler/Profiler",
    "pageType": "web-api-constructor",
    "summary": "The Profiler() constructor creates a new Profiler object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Profiler",
    "pageType": "web-api-interface",
    "summary": "The Profiler interface of the JS Self-Profiling API enables you to create a profile of some part of your web application's execution."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Profiler/stop",
    "pageType": "web-api-instance-method",
    "summary": "The stop() method of the Profiler interface stops the profiler and returns a Promise which resolves to the profile itself."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Profiler/samplebufferfull_event",
    "pageType": "web-api-event",
    "summary": "The samplebufferfull event of the Profiler interface is fired when the number of samples the profiler has recorded matches the maxBufferSize value passed to the profiler's constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFETurbulenceElement interface corresponds to the <feTurbulence> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFETurbulenceElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the SVGFETurbulenceElement interface reflects the type attribute of the given <feTurbulence> element. It takes one of the SVG_TURBULENCE_TYPE_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFETurbulenceElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFETurbulenceElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/stitchTiles",
    "pageType": "web-api-instance-property",
    "summary": "The stitchTiles read-only property of the SVGFETurbulenceElement interface reflects the stitchTiles attribute of the given <feTurbulence> element. It takes one of the SVG_STITCHTYPE_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/numOctaves",
    "pageType": "web-api-instance-property",
    "summary": "The numOctaves read-only property of the SVGFETurbulenceElement interface reflects the numOctaves attribute of the given <feTurbulence> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/seed",
    "pageType": "web-api-instance-property",
    "summary": "The seed read-only property of the SVGFETurbulenceElement interface reflects the seed attribute of the given <feTurbulence> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFETurbulenceElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/baseFrequencyX",
    "pageType": "web-api-instance-property",
    "summary": "The baseFrequencyX read-only property of the SVGFETurbulenceElement interface reflects the X component of the baseFrequency attribute of the given <feTurbulence> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFETurbulenceElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETurbulenceElement/baseFrequencyY",
    "pageType": "web-api-instance-property",
    "summary": "The baseFrequencyY read-only property of the SVGFETurbulenceElement interface reflects the Y component of the baseFrequency attribute of the given <feTurbulence> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ConstantSourceNode/ConstantSourceNode",
    "pageType": "web-api-constructor",
    "summary": "The ConstantSourceNode() constructor creates a new\nConstantSourceNode object instance, representing an audio source which\nconstantly outputs samples whose values are always the same."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ConstantSourceNode",
    "pageType": "web-api-interface",
    "summary": "The ConstantSourceNode interface—part of the Web Audio API—represents an audio source (based upon AudioScheduledSourceNode) whose output is single unchanging value. This makes it useful for cases in which you need a constant value coming in from an audio source. In addition, it can be used like a constructible AudioParam by automating the value of its offset or by connecting another node to it; see Controlling multiple parameters with ConstantSourceNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ConstantSourceNode/offset",
    "pageType": "web-api-instance-property",
    "summary": "The read-only offset property of the ConstantSourceNode\ninterface returns an AudioParam object indicating the numeric a-rate value which is always returned\nby the source when asked for the next sample."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscriptionOptions",
    "pageType": "web-api-interface",
    "summary": "The PushSubscriptionOptions interface of the Push API represents the options associated with a push subscription."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscriptionOptions/applicationServerKey",
    "pageType": "web-api-instance-property",
    "summary": "The applicationServerKey read-only property of the PushSubscriptionOptions interface contains the public key used by the push server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscriptionOptions/userVisibleOnly",
    "pageType": "web-api-instance-property",
    "summary": "The userVisibleOnly read-only property of the PushSubscriptionOptions interface indicates if the returned push subscription will only be used for messages whose effect is made visible to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentPictureInPicture",
    "pageType": "web-api-interface",
    "summary": "The DocumentPictureInPicture interface of the Document Picture-in-Picture API is the entry point for creating and handling document picture-in-picture windows."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentPictureInPicture/requestWindow",
    "pageType": "web-api-instance-method",
    "summary": "The requestWindow() method of the\nDocumentPictureInPicture interface opens the Picture-in-Picture window for the current main browsing context. It returns a Promise that fulfills with a Window instance representing the browsing context inside the Picture-in-Picture window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentPictureInPicture/window",
    "pageType": "web-api-instance-property",
    "summary": "The window read-only property of the\nDocumentPictureInPicture interface returns a Window instance representing the browsing context inside the Picture-in-Picture window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentPictureInPicture/enter_event",
    "pageType": "web-api-event",
    "summary": "The enter event of the DocumentPictureInPicture interface is fired when the Picture-in-Picture window is successfully opened."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clipboard/read",
    "pageType": "web-api-instance-method",
    "summary": "The read() method of the Clipboard interface requests a copy of the clipboard's contents, fulfilling the returned Promise with the data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clipboard",
    "pageType": "web-api-interface",
    "summary": "The Clipboard interface of the Clipboard API provides read and write access to the contents of the system clipboard.\nThis allows a web application to implement cut, copy, and paste features."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clipboard/readText",
    "pageType": "web-api-instance-method",
    "summary": "The readText() method of the Clipboard interface returns a Promise which fulfills with a copy of the textual contents of the system clipboard."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clipboard/write",
    "pageType": "web-api-instance-method",
    "summary": "The write() method of the Clipboard interface writes arbitrary ClipboardItem data such as images and text to the clipboard, fulfilling the returned Promise on completion.\nThis can be used to implement cut and copy functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clipboard/writeText",
    "pageType": "web-api-instance-method",
    "summary": "The writeText() method of the Clipboard interface writes the specified text to the system clipboard, returning a Promise that is resolved once the system clipboard has been updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_texture_compression_bptc",
    "pageType": "webgl-extension",
    "summary": "The EXT_texture_compression_bptc extension is part of the WebGL API and exposes 4 BPTC compressed texture formats. These compression formats are called BC7 and BC6H in Microsoft's DirectX API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/WebSocket",
    "pageType": "web-api-constructor",
    "summary": "The WebSocket() constructor returns a new WebSocket object and immediately attempts to establish a connection to the specified WebSocket URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The WebSocket.readyState read-only property returns the\ncurrent state of the WebSocket connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket",
    "pageType": "web-api-interface",
    "summary": "The WebSocket object provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/open_event",
    "pageType": "web-api-event",
    "summary": "The open event is fired when a connection with a WebSocket is opened."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/close_event",
    "pageType": "web-api-event",
    "summary": "The close event is fired when a connection with a WebSocket is closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/message_event",
    "pageType": "web-api-event",
    "summary": "The message event is fired when data is received through a WebSocket."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/binaryType",
    "pageType": "web-api-instance-property",
    "summary": "The WebSocket.binaryType property controls the type of\nbinary data being received over the WebSocket connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/send",
    "pageType": "web-api-instance-method",
    "summary": "The WebSocket.send() method enqueues the specified data\nto be transmitted to the server over the WebSocket connection, increasing the value of\nbufferedAmount by the number of bytes needed to contain the data. If the\ndata can't be sent (for example, because it needs to be buffered but the buffer is\nfull), the socket is closed automatically.\nThe browser will throw an exception if you call send() when the connection is in the CONNECTING state. If you call send() when the connection is in the CLOSING or CLOSED states, the browser will silently discard the data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/url",
    "pageType": "web-api-instance-property",
    "summary": "The WebSocket.url read-only property returns the absolute\nURL of the WebSocket as resolved by the constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/bufferedAmount",
    "pageType": "web-api-instance-property",
    "summary": "The WebSocket.bufferedAmount read-only property returns\nthe number of bytes of data that have been queued using calls to send() but\nnot yet transmitted to the network. This value resets to zero once all queued data has\nbeen sent. This value does not reset to zero when the connection is closed; if you keep\ncalling send(), this will continue to climb."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The WebSocket.protocol read-only property returns the name of the sub-protocol the server selected; this will be one of the strings specified in the protocols parameter when creating the WebSocket object, or the empty string if no connection is established."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/close",
    "pageType": "web-api-instance-method",
    "summary": "The WebSocket.close() method closes the\nWebSocket connection or connection attempt, if any. If the connection is\nalready CLOSED, this method does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/extensions",
    "pageType": "web-api-instance-property",
    "summary": "The WebSocket.extensions read-only property returns the\nextensions selected by the server. This is currently only the empty string or a list of\nextensions as negotiated by the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocket/error_event",
    "pageType": "web-api-event",
    "summary": "The error event is fired when a connection with a WebSocket has been closed due to an error (some data couldn't be sent for example)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCPUDepthInformation",
    "pageType": "web-api-interface",
    "summary": "The XRCPUDepthInformation interface contains depth information from the CPU (returned by XRFrame.getDepthInformation())."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCPUDepthInformation/data",
    "pageType": "web-api-instance-property",
    "summary": "The read-only data property of the XRCPUDepthInformation interface is an ArrayBuffer containing depth-buffer information in raw format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCPUDepthInformation/getDepthInMeters",
    "pageType": "web-api-instance-method",
    "summary": "The getDepthInMeters() method of the XRCPUDepthInformation interface returns the depth in meters at (x, y) in normalized view coordinates (origin in the top left corner)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Trusted_Types_API",
    "pageType": "web-api-overview",
    "summary": "The Trusted Types API gives web developers a way to ensure that input has been passed through a user-specified transformation function before being passed to an API that might execute that input. This can help to protect against client-side cross-site scripting (XSS) attacks. Most commonly the transformation function sanitizes the input."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBOutTransferResult",
    "pageType": "web-api-interface",
    "summary": "The USBOutTransferResult interface of the WebUSB API provides the result from a call to the transferOut() and controlTransferOut() methods of the USBDevice interface. It represents the result from requesting a transfer of data from the USB host to the USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window_Management_API",
    "pageType": "web-api-overview",
    "summary": "The Window Management API allows you to get detailed information on the displays connected to your device and more easily place windows on specific screens, paving the way towards more effective multi-screen applications."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window_Management_API/Using",
    "pageType": "guide",
    "summary": "This guide explains how to use the Window Management API. The example code seen below is taken from our Multi-window learning environment example (see the source code)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window_Management_API/Multi-screen_origin",
    "pageType": "guide",
    "summary": "The Window Management API introduces the concept of the multi-screen origin — this is the (0,0) coordinate of the host operating system (OS)'s virtual screen arrangement, around which all available screens and windows are positioned. The multi-screen origin is the top-left corner of the OS primary screen by convention, although the spec stipulates that it could be any arbitrary point within the virtual screen arrangement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCanvasContext",
    "pageType": "web-api-interface",
    "summary": "The GPUCanvasContext interface of the WebGPU API represents the WebGPU rendering context of a <canvas> element, returned via an HTMLCanvasElement.getContext() call with a contextType of \"webgpu\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCanvasContext/canvas",
    "pageType": "web-api-instance-property",
    "summary": "The canvas read-only property of the\nGPUCanvasContext interface returns a reference to the canvas that the context was created from."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCanvasContext/getConfiguration",
    "pageType": "web-api-instance-method",
    "summary": "The getConfiguration() method of the\nGPUCanvasContext interface returns the current configuration set for the context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCanvasContext/getCurrentTexture",
    "pageType": "web-api-instance-method",
    "summary": "The getCurrentTexture() method of the\nGPUCanvasContext interface returns the next GPUTexture to be composited to the document by the canvas context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCanvasContext/configure",
    "pageType": "web-api-instance-method",
    "summary": "The configure() method of the\nGPUCanvasContext interface configures the context to use for rendering with a given GPUDevice. When called the canvas will initially be cleared to transparent black."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCanvasContext/unconfigure",
    "pageType": "web-api-instance-method",
    "summary": "The unconfigure() method of the\nGPUCanvasContext interface removes any previously-set context configuration, and destroys any textures returned via getCurrentTexture() while the canvas context was configured."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRuleList",
    "pageType": "web-api-interface",
    "summary": "A CSSRuleList represents an ordered collection of read-only CSSRule objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRuleList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method of the CSSRuleList interface returns the CSSRule object at the specified index or null if the specified index doesn't exist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRuleList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the CSSRuleList interface returns the number of CSSRule objects in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Comment/Comment",
    "pageType": "web-api-constructor",
    "summary": "The Comment() constructor returns a newly created\nComment object with the optional string given in\nparameter as its textual content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Comment",
    "pageType": "web-api-interface",
    "summary": "The Comment interface represents textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_color_buffer_half_float",
    "pageType": "webgl-extension",
    "summary": "The EXT_color_buffer_half_float extension is part of the WebGL API and adds the ability to render to 16-bit floating-point color buffers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRReferenceSpaceEvent/XRReferenceSpaceEvent",
    "pageType": "web-api-constructor",
    "summary": "The XRReferenceSpaceEvent()\nconstructor is used to create a new XRReferenceSpaceEvent object, which\nrepresents an event regarding the state of a WebXR reference space object,\nXRReferenceSpace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRReferenceSpaceEvent",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API interface XRReferenceSpaceEvent represents an event sent to an XRReferenceSpace. Currently, the only event that uses this type is the reset event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRReferenceSpaceEvent/transform",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRReferenceSpaceEvent property\ntransform indicates the position and orientation of the\naffected referenceSpace's\nnative origin after the changes the event represents are applied. The\ntransform is defined using the old coordinate system, which allows it to be\nused to convert coordinates from the pre-event coordinate system to the post-event\ncoordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRReferenceSpaceEvent/referenceSpace",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRReferenceSpaceEvent property\nreferenceSpace specifies the reference space which is the\noriginator of the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioSinkInfo",
    "pageType": "web-api-interface",
    "summary": "The AudioSinkInfo interface of the Web Audio API represents information describing an AudioContext's sink ID, retrieved via AudioContext.sinkId."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioSinkInfo/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the AudioSinkInfo interface returns the type of the audio output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackList/change_event",
    "pageType": "web-api-event",
    "summary": "The change event is fired when a video track is made active or inactive, for example by changing the track's selected property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackList",
    "pageType": "web-api-interface",
    "summary": "The VideoTrackList interface is used to represent a list of the video tracks contained within a <video> element, with each track represented by a separate VideoTrack object in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackList/addtrack_event",
    "pageType": "web-api-event",
    "summary": "The addtrack event is fired when a video track is added to a VideoTrackList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackList/removetrack_event",
    "pageType": "web-api-event",
    "summary": "The removetrack event is fired when a video track is removed from a VideoTrackList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackList/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only VideoTrackList\nproperty length returns the number of entries in the\nVideoTrackList, each of which is a VideoTrack representing\none video track in the media element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackList/selectedIndex",
    "pageType": "web-api-instance-property",
    "summary": "The read-only VideoTrackList\nproperty selectedIndex returns the index of the\ncurrently selected track, if any, or -1 otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackList/getTrackById",
    "pageType": "web-api-instance-method",
    "summary": "The VideoTrackList method\ngetTrackById() returns the first\nVideoTrack object from the track list whose id matches the specified string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPositionTryDescriptors",
    "pageType": "web-api-interface",
    "summary": "The CSSPositionTryDescriptors interface defines properties that represent the list of CSS descriptors that can be set in the body of a @position-try at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionsCollection",
    "pageType": "web-api-interface",
    "summary": "The HTMLOptionsCollection interface represents a collection of <option> HTML elements (in document order) and offers methods and properties for selecting from the list as well as optionally altering its items. This object is returned only by the options property of select."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionsCollection/add",
    "pageType": "web-api-instance-method",
    "summary": "The add() method of the HTMLOptionsCollection interface adds an HTMLOptionElement or HTMLOptGroupElement to this HTMLOptionsCollection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionsCollection/remove",
    "pageType": "web-api-instance-method",
    "summary": "The remove() method of the HTMLOptionsCollection interface removes the <option> element specified by the index from this collection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionsCollection/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the HTMLOptionsCollection interface returns the number of <option> elements in the collection. The property can get or set the size of the collection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionsCollection/selectedIndex",
    "pageType": "web-api-instance-property",
    "summary": "The selectedIndex property of the HTMLOptionsCollection interface is the numeric index of the first selected <option> element, if any, or −1 if no <option> is selected. Setting this property selects the option at that index and deselects all other options in this collection, while setting it to -1 deselects any currently selected elements. It is exactly equivalent to the selectedIndex property of the HTMLSelectElement that owns this collection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEGaussianBlurElement interface corresponds to the <feGaussianBlur> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEGaussianBlurElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEGaussianBlurElement interface reflects the in attribute of the given <feGaussianBlur> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEGaussianBlurElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEGaussianBlurElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement/setStdDeviation",
    "pageType": "web-api-instance-method",
    "summary": "The setStdDeviation() method of the SVGFEGaussianBlurElement interface sets the values for the stdDeviation attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement/stdDeviationY",
    "pageType": "web-api-instance-property",
    "summary": "The stdDeviationY read-only property of the SVGFEGaussianBlurElement interface reflects the (possibly automatically computed) Y component of the stdDeviation attribute of the given <feGaussianBlur> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEGaussianBlurElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement/stdDeviationX",
    "pageType": "web-api-instance-property",
    "summary": "The stdDeviationX read-only property of the SVGFEGaussianBlurElement interface reflects the (possibly automatically computed) X component of the stdDeviation attribute of the given <feGaussianBlur> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEGaussianBlurElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEGaussianBlurElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigatorUAData",
    "pageType": "web-api-interface",
    "summary": "The NavigatorUAData interface of the User-Agent Client Hints API returns information about the browser and operating system of a user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigatorUAData/mobile",
    "pageType": "web-api-instance-property",
    "summary": "The mobile read-only property of the NavigatorUAData interface returns a value indicating whether the device is a mobile device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigatorUAData/brands",
    "pageType": "web-api-instance-property",
    "summary": "The brands read-only property of the NavigatorUAData interface returns an array of brand information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigatorUAData/getHighEntropyValues",
    "pageType": "web-api-instance-method",
    "summary": "The getHighEntropyValues() method of the NavigatorUAData interface is a Promise that resolves with a dictionary object containing the high entropy values the user-agent returns."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigatorUAData/platform",
    "pageType": "web-api-instance-property",
    "summary": "The platform read-only property of the NavigatorUAData interface returns the platform brand information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigatorUAData/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the NavigatorUAData interface is a serializer that returns a JSON representation of the low entropy properties of the NavigatorUAData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OrientationSensor",
    "pageType": "web-api-interface",
    "summary": "The OrientationSensor interface of the Sensor APIs is the base class for orientation sensors. This interface cannot be used directly. Instead it provides properties and methods accessed by interfaces that inherit from it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OrientationSensor/populateMatrix",
    "pageType": "web-api-instance-method",
    "summary": "The populateMatrix() method of the\nOrientationSensor interface populates the given target matrix with the\nrotation matrix based on the latest sensor reading. The rotation matrix is shown\nbelow."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OrientationSensor/quaternion",
    "pageType": "web-api-instance-property",
    "summary": "The quaternion read-only\nproperty of the OrientationSensor interface returns a four element\nArray whose elements contain the components of the unit\nquaternion representing the device's orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Permissions_API",
    "pageType": "web-api-overview",
    "summary": "The Permissions API provides a consistent programmatic way to query the status of API permissions attributed to the current context, such as a web page or worker.\nFor example, it can be used to determine if permission to access a particular feature or API has been granted, denied, or requires specific user permission."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Permissions_API/Using_the_Permissions_API",
    "pageType": "guide",
    "summary": "This article provides a basic guide to using the Permissions API, which provides a programmatic way to query the status of API permissions attributed to the current context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Font_Loading_API",
    "pageType": "web-api-overview",
    "summary": "The CSS Font Loading API provides events and interfaces for dynamically loading font resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLObject",
    "pageType": "web-api-interface",
    "summary": "The WebGLObject is part of the WebGL API and is the parent interface for all WebGL objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumber",
    "pageType": "web-api-interface",
    "summary": "The SVGNumber interface corresponds to the <number> basic data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumber/value",
    "pageType": "web-api-instance-property",
    "summary": "The value read-only property of the SVGNumber interface represents the number."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportError",
    "pageType": "web-api-interface",
    "summary": "The WebTransportError interface of the WebTransport API represents an error related to the API, which can arise from server errors, network connection problems, or client-initiated abort operations (for example, arising from a WritableStream.abort() call)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportError/WebTransportError",
    "pageType": "web-api-constructor",
    "summary": "The WebTransportError() constructor creates a new WebTransportError object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportError/source",
    "pageType": "web-api-instance-property",
    "summary": "The source read-only property of the WebTransportError interface returns an enumerated value indicating the source of the error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportError/streamErrorCode",
    "pageType": "web-api-instance-property",
    "summary": "The streamErrorCode read-only property of the WebTransportError interface returns a number in the range 0-255 indicating the application protocol error code for this error, or null if one is not available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LinearAccelerationSensor",
    "pageType": "web-api-interface",
    "summary": "The LinearAccelerationSensor interface of the Sensor APIs provides on each reading the acceleration applied to the device along all three axes, but without the contribution of gravity."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LinearAccelerationSensor/LinearAccelerationSensor",
    "pageType": "web-api-constructor",
    "summary": "The LinearAccelerationSensor()\nconstructor creates a new LinearAccelerationSensor object which\nprovides on each reading the acceleration applied to the device along all three axes,\nbut without the contribution of gravity."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DevicePosture/change_event",
    "pageType": "web-api-event",
    "summary": "The change event of the DevicePosture interface fires when the device's posture changes, for example when a foldable device goes from folded to continuous posture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DevicePosture",
    "pageType": "web-api-interface",
    "summary": "The DevicePosture interface of the Device Posture API represents the device's posture, that is, whether the viewport is in a flat or folded state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DevicePosture/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the DevicePosture interface returns the device's current posture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the AudioDecoder interface returns the current state of the underlying codec."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder",
    "pageType": "web-api-interface",
    "summary": "The AudioDecoder interface of the WebCodecs API decodes chunks of audio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/AudioDecoder",
    "pageType": "web-api-constructor",
    "summary": "The AudioDecoder() constructor creates a new AudioDecoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the AudioDecoder.state set to \"unconfigured\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/dequeue_event",
    "pageType": "web-api-event",
    "summary": "The dequeue event of the AudioDecoder interface fires to signal a decrease in AudioDecoder.decodeQueueSize."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/decode",
    "pageType": "web-api-instance-method",
    "summary": "The decode() method of the AudioDecoder interface enqueues a control message to decode a given chunk of audio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/reset",
    "pageType": "web-api-instance-method",
    "summary": "The reset() method of the AudioDecoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/isConfigSupported_static",
    "pageType": "web-api-static-method",
    "summary": "The isConfigSupported() static method of the AudioDecoder interface checks if the given config is supported (that is, if AudioDecoder objects can be successfully configured with the given config)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/flush",
    "pageType": "web-api-instance-method",
    "summary": "The flush() method of the AudioDecoder interface returns a Promise that resolves once all pending messages in the queue have been completed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the AudioDecoder interface ends all pending work and releases system resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/configure",
    "pageType": "web-api-instance-method",
    "summary": "The configure() method of the AudioDecoder interface enqueues a control message to configure the audio decoder for decoding chunks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDecoder/decodeQueueSize",
    "pageType": "web-api-instance-property",
    "summary": "The decodeQueueSize read-only property of the AudioDecoder interface returns the number of pending decode requests in the queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer/framebufferWidth",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRWebGLLayer property\nframebufferWidth specifies the width of the framebuffer,\nin pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer",
    "pageType": "web-api-interface",
    "summary": "The XRWebGLLayer interface of the WebXR Device API provides a linkage between the WebXR device (or simulated XR device, in the case of an inline session) and a WebGL context used to render the scene for display on the device. In particular, it provides access to the WebGL framebuffer and viewport to ease access to the context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer/XRWebGLLayer",
    "pageType": "web-api-constructor",
    "summary": "The WebXR Device API XRWebGLLayer() constructor creates and\nreturns a new XRWebGLLayer object, providing the linkage between the\nWebXR device and the WebGL graphics layer used to render the 3D scene."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer/getViewport",
    "pageType": "web-api-instance-method",
    "summary": "The XRWebGLLayer interface's\ngetViewport() method returns the\nXRViewport that should be used to render the specified\nXRView into the WebGL layer. For WebXR devices which use a\nsingle framebuffer for both the left and right eyes, the returned viewport represents\nthe region of the framebuffer into which the scene should be rendered for the eye\nrepresented by the view."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer/antialias",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRWebGLLayer property\nantialias is a Boolean value which is true\nif the rendering layer's frame buffer supports anti-aliasing. Otherwise, this\nproperty's value is false. The specific anti-aliasing technique used is left\nto the user agent's discretion and cannot be specified by\nthe website or web app."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer/framebufferHeight",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRWebGLLayer property\nframebufferHeight indicates the height of the\nframebuffer, in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer/ignoreDepthValues",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRWebGLLayer property\nignoreDepthValues is a Boolean value which is\ntrue if the session has been configured to ignore the values in the depth\nbuffer while rendering the scene. If the depth buffer is being used to determine the\nposition of vertices, this property is false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer/fixedFoveation",
    "pageType": "web-api-instance-property",
    "summary": "The fixedFoveation property of the XRWebGLLayer interface is a number indicating the amount of foveation used by the XR compositor. Fixed Foveated Rendering (FFR) renders the edges of the eye textures at a lower resolution than the center and reduces the GPU load."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer/framebuffer",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRWebGLLayer property\nframebuffer is an opaque WebGLFramebuffer\nwhich is used to buffer the rendered image if the XR compositor is being used. Otherwise, this property's value is\nnull. The opaque framebuffer is functionally nearly the same as a\nstandard WebGL framebuffer, except for the differences covered in the section\nHow opaque framebuffers are special below."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor_static",
    "pageType": "web-api-static-method",
    "summary": "The static method\nXRWebGLLayer.getNativeFramebufferScaleFactor() returns a\nfloating-point scaling factor by which one can multiply the specified\nXRSession's resolution to get the native resolution of the WebXR\ndevice's frame buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedNumber",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedNumber interface represents attributes of type <number> which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedNumber/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal read-only property of the SVGAnimatedNumber interface represents the animated value of an SVG element's numeric attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedNumber/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal property of the SVGAnimatedNumber interface represents the base (non-animated) value of an animatable numeric attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/commonAncestorContainer",
    "pageType": "web-api-instance-property",
    "summary": "The Range.commonAncestorContainer read-only property\nreturns the deepest — or furthest down the document tree — Node that\ncontains both boundary points of the Range. This means that if\nRange.startContainer and Range.endContainer both refer to\nthe same node, this node is the common ancestor container."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range",
    "pageType": "web-api-interface",
    "summary": "The Range interface represents a fragment of a document that can contain nodes and parts of text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/Range",
    "pageType": "web-api-constructor",
    "summary": "The Range() constructor returns a newly created\nRange object whose start and end are offset 0 of the the global document\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/startOffset",
    "pageType": "web-api-instance-property",
    "summary": "The Range.startOffset read-only property returns a number\nrepresenting where in the startContainer the Range starts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/collapsed",
    "pageType": "web-api-instance-property",
    "summary": "The Range.collapsed read-only property returns a\nboolean flag indicating whether the start and end points of the\nRange are at the same position. It returns true if the start\nand end boundary points of the Range are the same point in the DOM,\nfalse if not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/cloneRange",
    "pageType": "web-api-instance-method",
    "summary": "The Range.cloneRange() method returns a\nRange object with boundary points identical to the cloned\nRange."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/endContainer",
    "pageType": "web-api-instance-property",
    "summary": "The Range.endContainer read-only property returns the\nNode within which the Range ends. To change the end\nposition of a node, use the Range.setEnd() method or a similar one."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/insertNode",
    "pageType": "web-api-instance-method",
    "summary": "The Range.insertNode() method inserts a node at the start\nof the Range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/setStartAfter",
    "pageType": "web-api-instance-method",
    "summary": "The Range.setStartAfter() method sets the start position\nof a Range relative to a Node. The parent\nNode of the start of the Range will be the same as that\nfor the referenceNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/intersectsNode",
    "pageType": "web-api-instance-method",
    "summary": "The Range.intersectsNode() method returns a boolean\nindicating whether the given Node intersects the Range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/collapse",
    "pageType": "web-api-instance-method",
    "summary": "The collapse() method of the Range interface collapses the\nRange to one of its boundary points."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/selectNode",
    "pageType": "web-api-instance-method",
    "summary": "The Range.selectNode() method sets the\nRange to contain the Node and its contents. The parent\nNode of the start and end of the Range will be the same as\nthe parent of the referenceNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/setEndBefore",
    "pageType": "web-api-instance-method",
    "summary": "The Range.setEndBefore() method sets the end position of\na Range relative to another Node. The parent\nNode of end of the Range will be the same as that for the\nreferenceNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/compareNode",
    "pageType": "web-api-instance-method",
    "summary": "The compareNode() method of the Range interface returns a constant indicating the\nposition of the Node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/getBoundingClientRect",
    "pageType": "web-api-instance-method",
    "summary": "The Range.getBoundingClientRect() method returns a DOMRect object that bounds the contents of the range; this is a rectangle\nenclosing the union of the bounding rectangles for all the elements in the range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/extractContents",
    "pageType": "web-api-instance-method",
    "summary": "The extractContents() method of the Range interface is similar to a combination of Range.cloneContents() and Range.deleteContents(). It removes the child Nodes of the range from the document, clones them, and returns them as a new DocumentFragment object. For partially selected nodes, only the selected text is deleted, but all containing parent nodes up to the common ancestor are cloned as well, resulting in two copies of these nodes, one in the original document and one in the extracted fragment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/deleteContents",
    "pageType": "web-api-instance-method",
    "summary": "The Range.deleteContents() method removes all completely-selected nodes within this range from the document. For the partially selected nodes at the start or end of the range, only the selected portion of the text is deleted, while the node itself remains intact. Afterwards, the range is collapsed to the end of the last selected node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/cloneContents",
    "pageType": "web-api-instance-method",
    "summary": "The cloneContents() method of the Range interface copies the selected Node children of the range's commonAncestorContainer and puts them in a new DocumentFragment object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/setStart",
    "pageType": "web-api-instance-method",
    "summary": "The Range.setStart() method sets the start position of a\nRange."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/createContextualFragment",
    "pageType": "web-api-instance-method",
    "summary": "The Range.createContextualFragment() method returns a\nDocumentFragment by invoking the HTML fragment parsing algorithm or the\nXML fragment parsing algorithm with the start of the range (the parent of the\nselected node) as the context node. The HTML fragment parsing algorithm is used if the\nrange belongs to a Document whose HTMLness bit is set. In the HTML case, if\nthe context node would be html, for historical reasons the fragment parsing\nalgorithm is invoked with body as the context instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/comparePoint",
    "pageType": "web-api-instance-method",
    "summary": "The comparePoint() method of the Range interface determines whether a specified point is before, within, or after the Range. The point is specified by a reference node and an offset within that node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/isPointInRange",
    "pageType": "web-api-instance-method",
    "summary": "The isPointInRange() method of the Range interface determines whether a specified point is within the Range. The point is specified by a reference node and an offset within that node. It is equivalent to calling Range.comparePoint() and checking if the result is 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/setEndAfter",
    "pageType": "web-api-instance-method",
    "summary": "The Range.setEndAfter() method sets the end position of a\nRange relative to another Node. The parent\nNode of end of the Range will be the same as that for the\nreferenceNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/setStartBefore",
    "pageType": "web-api-instance-method",
    "summary": "The Range.setStartBefore() method sets the start position\nof a Range relative to another Node. The parent\nNode of the start of the Range will be the same as that\nfor the referenceNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/startContainer",
    "pageType": "web-api-instance-property",
    "summary": "The Range.startContainer read-only property returns the\nNode within which the Range starts. To change the start\nposition of a node, use one of the Range.setStart() methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/selectNodeContents",
    "pageType": "web-api-instance-method",
    "summary": "The Range.selectNodeContents() method sets the Range to contain the contents of a Node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/surroundContents",
    "pageType": "web-api-instance-method",
    "summary": "The surroundContents() method of the Range interface surrounds the selected content by a provided node. It extracts the contents of the range, replaces the children of newParent with the extracted contents, inserts newParent at the location of the extracted contents, and makes the range select newParent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/detach",
    "pageType": "web-api-instance-method",
    "summary": "The Range.detach() method does nothing. It used to\ndisable the Range object and enable the browser to release associated\nresources. The method has been kept for compatibility."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/getClientRects",
    "pageType": "web-api-instance-method",
    "summary": "The Range.getClientRects() method returns a list of DOMRect objects representing the area of the screen occupied by the range. This is created by aggregating the results of calls to\nElement.getClientRects() for all the elements in the range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/setEnd",
    "pageType": "web-api-instance-method",
    "summary": "The Range.setEnd() method sets the end position of a Range to be located at the given offset into the specified node. Setting\nthe end point above (higher in the document) than the start point will result in a\ncollapsed range with the start and end points both set to the specified end position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/compareBoundaryPoints",
    "pageType": "web-api-instance-method",
    "summary": "The compareBoundaryPoints() method of the Range interface compares the boundary points of the Range with those of another range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/endOffset",
    "pageType": "web-api-instance-property",
    "summary": "The Range.endOffset read-only property returns a number\nrepresenting where in the Range.endContainer the Range\nends."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Range/toString",
    "pageType": "web-api-instance-method",
    "summary": "The Range.toString() method is a stringifier returning\nthe text of the Range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VirtualKeyboard",
    "pageType": "web-api-interface",
    "summary": "The VirtualKeyboard interface of the VirtualKeyboard API is useful on devices that have on-screen virtual keyboards, such as tablets, mobile phones, or other devices where a hardware keyboard may not be available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VirtualKeyboard/geometrychange_event",
    "pageType": "web-api-event",
    "summary": "The geometrychange event of the VirtualKeyboard\ninterface fires when the on-screen virtual keyboard is toggled between shown and hidden states."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VirtualKeyboard/hide",
    "pageType": "web-api-instance-method",
    "summary": "The hide() method of the VirtualKeyboard interface programmatically hides the on-screen virtual keyboard. This is useful when the page needs to implement its own virtual keyboard logic by using the VirtualKeyboard API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VirtualKeyboard/overlaysContent",
    "pageType": "web-api-instance-property",
    "summary": "The overlaysContent property of the VirtualKeyboard interface can be used to opt out of the automatic way in which browsers handle on-screen virtual keyboards by reducing the size of the viewport to make space for them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VirtualKeyboard/show",
    "pageType": "web-api-instance-method",
    "summary": "The show() method of the VirtualKeyboard interface programmatically shows the on-screen virtual keyboard. This is useful when the page needs to implement its own virtual keyboard logic, especially when using the virtualkeyboardpolicy attribute on contenteditable elements as explained in Control the virtual keyboard on contenteditable elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VirtualKeyboard/boundingRect",
    "pageType": "web-api-instance-property",
    "summary": "The boundingRect property of the VirtualKeyboard interface contains a DOMRect indicating the position and size of the on-screen virtual keyboard that overlays the web page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTimeElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTimeElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <time> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTimeElement/dateTime",
    "pageType": "web-api-instance-property",
    "summary": "The\ndateTime\nproperty of the HTMLTimeElement interface is a string that reflects the datetime HTML attribute, containing a machine-readable form of the element's date and\ntime value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultWriter",
    "pageType": "web-api-interface",
    "summary": "The WritableStreamDefaultWriter interface of the Streams API is the object returned by WritableStream.getWriter() and once created locks the writer to the WritableStream ensuring that no other streams can write to the underlying sink."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RsaPssParams",
    "pageType": "web-api-interface",
    "summary": "The RsaPssParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.sign() or SubtleCrypto.verify(), when using the RSA-PSS algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultWriter/WritableStreamDefaultWriter",
    "pageType": "web-api-constructor",
    "summary": "The WritableStreamDefaultWriter()\nconstructor creates a new WritableStreamDefaultWriter object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Serial_API",
    "pageType": "web-api-overview",
    "summary": "The Web Serial API provides a way for websites to read from and write to serial devices. These devices may be connected via a serial port, or be USB or Bluetooth devices that emulate a serial port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultWriter/releaseLock",
    "pageType": "web-api-instance-method",
    "summary": "The releaseLock() method of the\nWritableStreamDefaultWriter interface releases the writer's lock on the\ncorresponding stream. After the lock is released, the writer is no longer active. If the\nassociated stream is errored when the lock is released, the writer will appear errored\nin the same way from now on; otherwise, the writer will appear closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLFramebuffer",
    "pageType": "web-api-interface",
    "summary": "The WebGLFramebuffer interface is part of the WebGL API and represents a collection of buffers that serve as a rendering destination."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBindGroupLayout",
    "pageType": "web-api-interface",
    "summary": "The GPUBindGroupLayout interface of the WebGPU API defines the structure and purpose of related GPU resources such as buffers that will be used in a pipeline, and is used as a template when creating GPUBindGroups."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultWriter/write",
    "pageType": "web-api-instance-method",
    "summary": "The write() method of the\nWritableStreamDefaultWriter interface writes a passed chunk of data to a\nWritableStream and its underlying sink, then returns a\nPromise that resolves to indicate the success or failure of the write\noperation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBindGroupLayout/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUBindGroupLayout interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultWriter/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the\nWritableStreamDefaultWriter interface closes the associated writable\nstream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPU",
    "pageType": "web-api-interface",
    "summary": "The GPU interface of the WebGPU API is the starting point for using WebGPU. It can be used to return a GPUAdapter from which you can request devices, configure features and limits, and more."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultWriter/desiredSize",
    "pageType": "web-api-instance-property",
    "summary": "The desiredSize read-only property of the\nWritableStreamDefaultWriter interface returns the desired size required\nto fill the stream's internal queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPU/getPreferredCanvasFormat",
    "pageType": "web-api-instance-method",
    "summary": "The getPreferredCanvasFormat() method of the\nGPU interface returns the optimal canvas texture format for displaying 8-bit depth, standard dynamic range content on the current system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultWriter/ready",
    "pageType": "web-api-instance-property",
    "summary": "The ready read-only property of the\nWritableStreamDefaultWriter interface returns a Promise\nthat resolves when the desired size of the stream's internal queue transitions from\nnon-positive to positive, signaling that it is no longer applying backpressure."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPU/wgslLanguageFeatures",
    "pageType": "web-api-instance-property",
    "summary": "The wgslLanguageFeatures read-only property of the\nGPU interface returns a WGSLLanguageFeatures object that reports the WGSL language extensions supported by the WebGPU implementation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultWriter/abort",
    "pageType": "web-api-instance-method",
    "summary": "The abort() method of the\nWritableStreamDefaultWriter interface aborts the stream, signaling that\nthe producer can no longer successfully write to the stream and it is to be immediately\nmoved to an error state, with any queued writes discarded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPU/requestAdapter",
    "pageType": "web-api-instance-method",
    "summary": "The requestAdapter() method of the\nGPU interface returns a Promise that fulfills with a GPUAdapter object instance. From this you can request a GPUDevice, adapter info, features, and limits."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultWriter/closed",
    "pageType": "web-api-instance-property",
    "summary": "The closed read-only property of the\nWritableStreamDefaultWriter interface returns a\nPromise that fulfills if the stream becomes closed, or rejects if\nthe stream errors or the writer's lock is released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrackList/change_event",
    "pageType": "web-api-event",
    "summary": "The change event is fired when an audio track is enabled or disabled, for example by changing the track's enabled property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrackList",
    "pageType": "web-api-interface",
    "summary": "The AudioTrackList interface is used to represent a list of the audio tracks contained within a given HTML media element, with each track represented by a separate AudioTrack object in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletGlobalScope",
    "pageType": "web-api-interface",
    "summary": "The AudioWorkletGlobalScope interface of the Web Audio API represents a global execution context for user-supplied code, which defines custom AudioWorkletProcessor-derived classes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrackList/addtrack_event",
    "pageType": "web-api-event",
    "summary": "The addtrack event is fired when a track is added to an AudioTrackList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletGlobalScope/sampleRate",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sampleRate property of the AudioWorkletGlobalScope interface returns a float that represents the sample rate of the associated BaseAudioContext the worklet belongs to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrackList/removetrack_event",
    "pageType": "web-api-event",
    "summary": "The removetrack event is fired when a track is removed from an AudioTrackList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletGlobalScope/registerProcessor",
    "pageType": "web-api-instance-method",
    "summary": "The registerProcessor method of the\nAudioWorkletGlobalScope interface registers a class constructor derived\nfrom AudioWorkletProcessor interface under a specified name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrackList/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only AudioTrackList\nproperty length returns the number of entries in the\nAudioTrackList, each of which is an AudioTrack\nrepresenting one audio track in the media element. A value of 0 indicates that\nthere are no audio tracks in the media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletGlobalScope/port",
    "pageType": "web-api-instance-property",
    "summary": "The port read-only property of the AudioWorkletGlobalScope interface returns a MessagePort object that can be used to send and receive messages between the main thread and the associated AudioWorklet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrackList/getTrackById",
    "pageType": "web-api-instance-method",
    "summary": "The AudioTrackList method getTrackById() returns the first AudioTrack object from the track list whose id matches the specified string.\nThis lets you find a specified track if you know its ID string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletGlobalScope/currentFrame",
    "pageType": "web-api-instance-property",
    "summary": "The read-only currentFrame property of the AudioWorkletGlobalScope interface returns an integer that represents the ever-increasing current sample-frame of the audio block being processed. It is incremented by 128 (the size of a render quantum) after the processing of each audio block."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Background_Fetch_API",
    "pageType": "web-api-overview",
    "summary": "The Background Fetch API provides a method for managing downloads that may take a significant amount of time such as movies, audio files, and software."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletGlobalScope/currentTime",
    "pageType": "web-api-instance-property",
    "summary": "The read-only currentTime property of the AudioWorkletGlobalScope interface returns a double that represents the ever-increasing context time of the audio block being processed. It is equal to the currentTime property of the BaseAudioContext the worklet belongs to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStream",
    "pageType": "web-api-interface",
    "summary": "The WritableStream interface of the Streams API provides a standard abstraction for writing streaming data to a destination, known as a sink.\nThis object comes with built-in backpressure and queuing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen_Orientation_API",
    "pageType": "web-api-overview",
    "summary": "The Screen Orientation API provides information about the orientation of the screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStream/locked",
    "pageType": "web-api-instance-property",
    "summary": "The locked read-only property of the WritableStream interface returns a boolean indicating whether the WritableStream is locked to a writer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStream/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the WritableStream interface closes the associated stream. All chunks written before this method is called are sent before the returned promise is fulfilled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransformStreamDefaultController",
    "pageType": "web-api-interface",
    "summary": "The TransformStreamDefaultController interface of the Streams API provides methods to manipulate the associated ReadableStream and WritableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStream/abort",
    "pageType": "web-api-instance-method",
    "summary": "The abort() method of the WritableStream interface aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be immediately moved to an error state, with any queued writes discarded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransformStreamDefaultController/error",
    "pageType": "web-api-instance-method",
    "summary": "The error() method of the TransformStreamDefaultController interface errors both sides of the stream. Any further interactions with it will fail with the given error message, and any chunks in the queue will be discarded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStream/getWriter",
    "pageType": "web-api-instance-method",
    "summary": "The getWriter() method of the WritableStream interface returns a new instance of WritableStreamDefaultWriter and locks the stream to that instance.\nWhile the stream is locked, no other writer can be acquired until this one is released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransformStreamDefaultController/desiredSize",
    "pageType": "web-api-instance-property",
    "summary": "The desiredSize read-only property of the TransformStreamDefaultController interface returns the desired size to fill the queue of the associated ReadableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStream/WritableStream",
    "pageType": "web-api-constructor",
    "summary": "The WritableStream() constructor creates a new WritableStream object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransformStreamDefaultController/enqueue",
    "pageType": "web-api-instance-method",
    "summary": "The enqueue() method of the TransformStreamDefaultController interface enqueues the given chunk in the readable side of the stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement",
    "pageType": "web-api-interface",
    "summary": "All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the SVGElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransformStreamDefaultController/terminate",
    "pageType": "web-api-instance-method",
    "summary": "The terminate() method of the TransformStreamDefaultController interface closes the readable side and errors the writable side of the stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/ownerSVGElement",
    "pageType": "web-api-instance-property",
    "summary": "The ownerSVGElement property of the SVGElement interface reflects the nearest ancestor <svg> element. null if the given element is the outermost <svg> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CDATASection",
    "pageType": "web-api-interface",
    "summary": "The CDATASection interface represents a CDATA section\nthat can be used within XML to include extended portions of unescaped text.\nWhen inside a CDATA section, the symbols < and & don't need escaping\nas they normally do."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/focus",
    "pageType": "web-api-instance-method",
    "summary": "The SVGElement.focus() method sets focus on the specified SVG element, if it can be focused.\nThe focused element is the element that will receive keyboard and similar events by default."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedRect",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedRect interface represents an SVGRect attribute that can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/load_event",
    "pageType": "web-api-event",
    "summary": "The load event fires on an SVGElement when it is loaded in the browser, e.g., in the DOM in the case of an embedded <svg>. It is basically the same as the standard load DOM event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedRect/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal read-only property of the SVGAnimatedRect interface represents the current animated value of the viewBox attribute of an SVG element as a read-only DOMRectReadOnly object. It provides access to the rectangle's dynamic state, including the x, y, width, and height values during the animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/blur",
    "pageType": "web-api-instance-method",
    "summary": "The SVGElement.blur() method removes keyboard focus from the current SVG element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedRect/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal read-only property of the SVGAnimatedRect interface represents the current non-animated value of the viewBox attribute of an SVG element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/style",
    "pageType": "web-api-instance-property",
    "summary": "The read-only style property of the SVGElement returns the inline style of an element in the form of a live CSSStyleProperties object.\nThis object can be used to get and set the inline styles of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CountQueuingStrategy",
    "pageType": "web-api-interface",
    "summary": "The CountQueuingStrategy interface of the Streams API provides a built-in chunk counting queuing strategy that can be used when constructing streams."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/viewportElement",
    "pageType": "web-api-instance-property",
    "summary": "The viewportElement property of the SVGElement interface represents the SVGElement which established the current viewport. Often the nearest ancestor <svg> element. null if the given element is the outermost <svg> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CountQueuingStrategy/CountQueuingStrategy",
    "pageType": "web-api-constructor",
    "summary": "The CountQueuingStrategy() constructor\ncreates and returns a CountQueuingStrategy object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/attributeStyleMap",
    "pageType": "web-api-instance-property",
    "summary": "The attributeStyleMap read-only property of the SVGElement interface returns a live StylePropertyMap object that contains a list of style properties of the element that are defined in the element's inline style attribute, or assigned using the style property of the SVGElement interface via script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CountQueuingStrategy/size",
    "pageType": "web-api-instance-method",
    "summary": "The size() method of the\nCountQueuingStrategy interface always returns 1, so that the\ntotal queue size is a count of the number of chunks in the queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/dataset",
    "pageType": "web-api-instance-property",
    "summary": "The dataset read-only property of the SVGElement interface provides read/write access to custom data attributes (data-*) on elements. It exposes a map of strings (DOMStringMap) with an entry for each data-* attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/nonce",
    "pageType": "web-api-instance-property",
    "summary": "The nonce property of the SVGElement interface returns the nonce that is used by Content Security Policy to determine whether a given fetch will be allowed to proceed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CountQueuingStrategy/highWaterMark",
    "pageType": "web-api-instance-property",
    "summary": "The read-only CountQueuingStrategy.highWaterMark property returns the total number of chunks that can be contained in the internal queue before backpressure is applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/tabIndex",
    "pageType": "web-api-instance-property",
    "summary": "The tabIndex property of the SVGElement interface represents the tab order of the current SVG element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLBuffer",
    "pageType": "web-api-interface",
    "summary": "The WebGLBuffer interface is part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/autofocus",
    "pageType": "web-api-instance-property",
    "summary": "The autofocus property of the SVGElement interface contains a boolean value reflecting the autofocus HTML global attribute. It indicates whether the SVG element should be focused when the page loads or when the element becomes shown if the SVG element is inside a <dialog> or a popover."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSetLoadEvent",
    "pageType": "web-api-interface",
    "summary": "The FontFaceSetLoadEvent interface of the CSS Font Loading API represents events fired at a FontFaceSet after it starts loading font faces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGElement/error_event",
    "pageType": "web-api-event",
    "summary": "The error event is fired when an SVG element does not load properly or when an error occurs during script execution."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSetLoadEvent/FontFaceSetLoadEvent",
    "pageType": "web-api-constructor",
    "summary": "The FontFaceSetLoadEvent() constructor creates a new\nFontFaceSetLoadEvent object which is fired whenever a\nFontFaceSet loads."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLModElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLModElement interface provides special properties (beyond the regular methods and properties available through the HTMLElement interface they also have available to them by inheritance) for manipulating modification elements, that is <del> and <ins>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSetLoadEvent/fontfaces",
    "pageType": "web-api-instance-property",
    "summary": "The fontfaces read-only property of the\nFontFaceSetLoadEvent interface returns an array of\nFontFace instances, each of which represents a single usable font."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLModElement/cite",
    "pageType": "web-api-instance-property",
    "summary": "The cite property of the HTMLModElement interface indicates the URL of the resource explaining the modification. It reflects the cite attribute of the <del> element and <ins> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Bluetooth",
    "pageType": "web-api-interface",
    "summary": "The Bluetooth interface of the Web Bluetooth API provides methods to query Bluetooth availability and request access to devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLModElement/dateTime",
    "pageType": "web-api-instance-property",
    "summary": "The dateTime property of the HTMLModElement interface is a string containing a machine-readable date with an optional time value. It reflects the datetime HTML attribute of the <del> and <ins> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Bluetooth/requestDevice",
    "pageType": "web-api-instance-method",
    "summary": "The Bluetooth.requestDevice() method of the Bluetooth interface returns a Promise that fulfills with a BluetoothDevice object matching the specified options.\nIf there is no chooser UI, this method returns the first device matching the criteria."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRStageParameters",
    "pageType": "web-api-interface",
    "summary": "The VRStageParameters interface of the WebVR API represents the values describing the stage area for devices that support room-scale experiences."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Bluetooth/getDevices",
    "pageType": "web-api-instance-method",
    "summary": "The getDevices() method of the Bluetooth interface returns an array containing the Bluetooth devices that this origin is allowed to access — including those that are out of range and powered off."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRStageParameters/sizeX",
    "pageType": "web-api-instance-property",
    "summary": "The sizeX read-only property of the VRStageParameters interface returns the width of the play-area bounds in meters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Bluetooth/getAvailability",
    "pageType": "web-api-instance-method",
    "summary": "The getAvailability() method of the Bluetooth interface nominally returns true if the user agent can support Bluetooth (because the device has a Bluetooth adapter), and false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRStageParameters/sizeY",
    "pageType": "web-api-instance-property",
    "summary": "The sizeY read-only property of the VRStageParameters interface returns the depth of the play-area bounds in meters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Properties_and_Values_API",
    "pageType": "web-api-overview",
    "summary": "The CSS Properties and Values API — part of the CSS Houdini umbrella of APIs — allows developers to explicitly define their CSS custom properties, allowing for property type checking, default values, and properties that do or do not inherit their value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRStageParameters/sittingToStandingTransform",
    "pageType": "web-api-instance-property",
    "summary": "The sittingToStandingTransform read-only property of the VRStageParameters interface contains a matrix that transforms the sitting-space view matrices of VRFrameData to standing-space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Properties_and_Values_API/guide",
    "pageType": "guide",
    "summary": "The CSS Properties and Values API — part of the CSS Houdini umbrella of APIs — allows the registration of CSS custom properties, allowing for property type checking, default values, and properties that do or do not inherit their value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Payment_Handler_API",
    "pageType": "web-api-overview",
    "summary": "The Payment Handler API provides a standardized set of functionality for web applications to directly handle payments, rather than having to be redirected to a separate site for payment handling."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList",
    "pageType": "web-api-interface",
    "summary": "The SVGStringList interface defines a list of strings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_debug_renderer_info",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_debug_renderer_info extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList/getItem",
    "pageType": "web-api-instance-method",
    "summary": "The getItem() method of the SVGStringList interface returns the specified item from the list. The returned item is the item itself and not a copy. Any changes made to the item are immediately reflected in the list. The first item is indexed 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventCounts",
    "pageType": "web-api-interface",
    "summary": "The EventCounts interface of the Performance API provides the number of events that have been dispatched for each event type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList/appendItem",
    "pageType": "web-api-instance-method",
    "summary": "The appendItem() method of the SVGStringList interface inserts a new item at the end of the list. If the given item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File_API",
    "pageType": "web-api-overview",
    "summary": "The File API enables web applications to access files and their contents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File_API/Using_files_from_web_applications",
    "pageType": "guide",
    "summary": "Using the File API, web content can ask the user to select local files and then read the contents of those files. This selection can be done by either using an HTML <input type=\"file\"> element or by drag and drop."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList/removeItem",
    "pageType": "web-api-instance-method",
    "summary": "The removeItem() method of the SVGStringList interface removes an existing item at the given index from the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPointReadOnly",
    "pageType": "web-api-interface",
    "summary": "The DOMPointReadOnly interface specifies the coordinate and perspective fields used by DOMPoint to define a 2D or 3D point in a coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList/insertItemBefore",
    "pageType": "web-api-instance-method",
    "summary": "The insertItemBefore() method of the SVGStringList interface inserts a new item into the list at the specified position. The first item is indexed 0. The inserted item is the item itself and not a copy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPointReadOnly/x",
    "pageType": "web-api-instance-property",
    "summary": "The DOMPointReadOnly interface's\nx property holds the horizontal coordinate, x, for a\nread-only point in space. This property cannot be changed by JavaScript code in this\nread-only version of the DOMPoint object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList/replaceItem",
    "pageType": "web-api-instance-method",
    "summary": "The replaceItem() method of the SVGStringList interface replaces an existing item in the list with a new item. The inserted item is the item itself and not a copy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPointReadOnly/z",
    "pageType": "web-api-instance-property",
    "summary": "The DOMPointReadOnly interface's\nz property holds the depth coordinate, z, for a\nread-only point in space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the SVGStringList interface returns the number of items in the list. It is an alias of numberOfItems to make SVG lists more array-like."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPointReadOnly/w",
    "pageType": "web-api-instance-property",
    "summary": "The DOMPointReadOnly interface's\nw property holds the point's perspective value,\nw, for a read-only point in space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList/initialize",
    "pageType": "web-api-instance-method",
    "summary": "The initialize() method of the SVGStringList interface clears all existing items from the list and re-initializes the list to hold the single item specified by the parameter. If the inserted item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. The return value is the item inserted into the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPointReadOnly/y",
    "pageType": "web-api-instance-property",
    "summary": "The DOMPointReadOnly interface's\ny property holds the vertical coordinate, y, for a\nread-only point in space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the SVGStringList interface clears all existing items from the list, with the result being an empty list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPointReadOnly/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The DOMPointReadOnly method\ntoJSON() returns an object giving the\nJSON form of the point object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStringList/numberOfItems",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfItems property of the SVGStringList interface returns the number of items in the list. length is an alias of it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPointReadOnly/matrixTransform",
    "pageType": "web-api-instance-method",
    "summary": "The matrixTransform() method of the DOMPointReadOnly interface applies a matrix transform specified as an object to the DOMPointReadOnly object, creating and returning a new DOMPointReadOnly object. Neither the matrix nor the point are altered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRect",
    "pageType": "web-api-interface",
    "summary": "The SVGRect, an alias for DOMRect, represents a rectangle. Rectangles consist of an x and y coordinate pair identifying a minimum x value, a minimum y value, and a width and height, which are constrained to be non-negative."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPointReadOnly/DOMPointReadOnly",
    "pageType": "web-api-constructor",
    "summary": "The DOMPointReadOnly()\nconstructor returns a new DOMPointReadOnly object representing a point\nin 2D or 3D space, optionally with perspective, whose values cannot be altered by\nscript code."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRect/x",
    "pageType": "web-api-instance-property",
    "summary": "The x property describes the horizontal coordinate of the position of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPointReadOnly/fromPoint_static",
    "pageType": "web-api-static-method",
    "summary": "The static DOMPointReadOnly\nmethod fromPoint() creates and returns a new\nDOMPointReadOnly object given a source point."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRect/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the SVGRect interface is an alias for the DOMRect.height property. It describes the vertical size of the element. It reflects the SVG element's height attribute and the CSS height property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMetaElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMetaElement.name property is used in combination with HTMLMetaElement.content to define the name-value pairs for the metadata of a document.\nThe name attribute defines the metadata name and the content attribute defines the value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRect/y",
    "pageType": "web-api-instance-property",
    "summary": "The y property of the SVGRect interface is an alias for the DOMRect.y property. It describes the vertical coordinate of the position of the element. It reflects the SVG element's y attribute and the CSS y property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMetaElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLMetaElement interface contains descriptive metadata about a document provided in HTML as <meta> elements.\nThis interface inherits all of the properties and methods described in the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRect/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the SVGRect interface is an alias for the DOMRect.width property. It describes the horizontal size of the element. It reflects the SVG element's width attribute and the CSS width property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMetaElement/content",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMetaElement.content property gets or sets the content attribute of pragma directives and named <meta> data in conjunction with HTMLMetaElement.name or HTMLMetaElement.httpEquiv.\nFor more information, see the content attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMetaElement/scheme",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMetaElement.scheme property defines the scheme of the value in the HTMLMetaElement.content attribute.\nThe scheme property was created to enable providing additional information to be used to interpret the value of the content property. The scheme property takes as its value a scheme format (i.e., YYYY-MM-DD) or scheme format name (i.e., ISBN), or a URI providing more information regarding the scheme format. The scheme defines the format of the value of the content attribute.\nThe scheme content is interpreted as an extension of the element's HTMLMetaElement.name if a browser or user agent recognizes the scheme."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputEvent",
    "pageType": "web-api-interface",
    "summary": "The InputEvent interface represents an event notifying the user of editable content changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMetaElement/httpEquiv",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMetaElement.httpEquiv property gets or sets the pragma directive or an HTTP response header name for the HTMLMetaElement.content attribute.\nFor more details on the possible values, see the http-equiv attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputEvent/InputEvent",
    "pageType": "web-api-constructor",
    "summary": "The InputEvent() constructor creates a new InputEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMetaElement/media",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMetaElement.media property enables specifying the media for theme-color metadata."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputEvent/isComposing",
    "pageType": "web-api-instance-property",
    "summary": "The InputEvent.isComposing read-only property returns a\nboolean value indicating if the event is fired after\ncompositionstart and before compositionend."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PeriodicSyncManager",
    "pageType": "web-api-interface",
    "summary": "The PeriodicSyncManager interface of the Web Periodic Background Synchronization API provides a way to register tasks to be run in a service worker at periodic intervals with network connectivity. These tasks are referred to as periodic background sync requests. Access PeriodicSyncManager through the ServiceWorkerRegistration.periodicSync."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputEvent/data",
    "pageType": "web-api-instance-property",
    "summary": "The data read-only property of the\nInputEvent interface returns a string with inserted\ncharacters. This may be an empty string if the change doesn't insert text, such as when\ncharacters are deleted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PeriodicSyncManager/getTags",
    "pageType": "web-api-instance-method",
    "summary": "The getTags() method of the\nPeriodicSyncManager interface returns a Promise that\nresolves with a list of String objects representing the tags that are\ncurrently registered for periodic syncing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputEvent/dataTransfer",
    "pageType": "web-api-instance-property",
    "summary": "The dataTransfer read-only property of the\nInputEvent interface returns a DataTransfer object\ncontaining information about richtext or plaintext data being added to or removed from\neditable content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PeriodicSyncManager/unregister",
    "pageType": "web-api-instance-method",
    "summary": "The unregister() method of the\nPeriodicSyncManager interface unregisters the periodic sync request\ncorresponding to the specified tag and returns a Promise that resolves\nwhen unregistration completes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputEvent/inputType",
    "pageType": "web-api-instance-property",
    "summary": "The inputType read-only property of the\nInputEvent interface returns the type of change made to editable content.\nPossible changes include for example inserting, deleting, and formatting text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PeriodicSyncManager/register",
    "pageType": "web-api-instance-method",
    "summary": "The register() method of the\nPeriodicSyncManager interface registers a periodic sync request with the\nbrowser with the specified tag and options. It returns a Promise that\nresolves when the registration completes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Force_Touch_events",
    "pageType": "web-api-overview",
    "summary": "Force Touch Events are a proprietary, Apple-specific feature which makes possible (where supported by the input hardware) new interactions based on how hard the user clicks or presses down on the touchscreen or trackpad."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputEvent/getTargetRanges",
    "pageType": "web-api-instance-method",
    "summary": "The getTargetRanges() method of the InputEvent interface returns an array of StaticRange objects that will be affected by a change to the DOM if the input event is not canceled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLUnknownElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLUnknownElement interface represents an invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HashChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The HashChangeEvent interface represents events that fire when the fragment identifier of the URL has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationAvailability",
    "pageType": "web-api-interface",
    "summary": "A PresentationAvailability object is associated with available presentation displays and represents the presentation display availability for a presentation request. If the controlling user agent can monitor the list of available presentation displays in the background (without a pending request to start()), the PresentationAvailability object MUST be implemented in a controlling browsing context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HashChangeEvent/HashChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The HashChangeEvent() constructor creates a new HashChangeEvent object, that is used by the hashchange event fired at the window object when the fragment of the URL changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationAvailability/value",
    "pageType": "web-api-instance-property",
    "summary": "The value attribute MUST return the last value from which it was set. The value is updated by the monitor the list of available presentation displays algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HashChangeEvent/newURL",
    "pageType": "web-api-instance-property",
    "summary": "The newURL read-only property of the\nHashChangeEvent interface returns the new URL to which the window is\nnavigating."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLineElement",
    "pageType": "web-api-interface",
    "summary": "The SVGLineElement interface provides access to the properties of <line> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HashChangeEvent/oldURL",
    "pageType": "web-api-instance-property",
    "summary": "The oldURL read-only property of the\nHashChangeEvent interface returns the previous URL from which the window\nwas navigated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLineElement/x2",
    "pageType": "web-api-instance-property",
    "summary": "The x2 read-only property of the SVGLineElement interface describes the x-axis coordinate value of the end of a line as an SVGAnimatedLength. It reflects the <line> element's x2 geometric attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLineElement/y1",
    "pageType": "web-api-instance-property",
    "summary": "The y1 read-only property of the SVGLineElement interface describes the start of the SVG line along the y-axis as an SVGAnimatedLength. It reflects the <line> element's y1 geometric attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/nodeName",
    "pageType": "web-api-instance-property",
    "summary": "The read-only nodeName property of Node returns the name of the current node as a string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLineElement/x1",
    "pageType": "web-api-instance-property",
    "summary": "The x1 read-only property of the SVGLineElement interface describes the start of the SVG line along the x-axis as an SVGAnimatedLength. It reflects the <line> element's x1 geometric attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/replaceChild",
    "pageType": "web-api-instance-method",
    "summary": "The replaceChild() method of the Node interface replaces a child node within the given (parent) node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLineElement/y2",
    "pageType": "web-api-instance-property",
    "summary": "The y2 read-only property of the SVGLineElement interface describes the v-axis coordinate value of the end of a line as an SVGAnimatedLength. It reflects the <line> element's y2 geometric attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node",
    "pageType": "web-api-interface",
    "summary": "The DOM Node interface is an abstract base\nclass upon which many other DOM API objects are based, thus letting those object types\nbe used similarly and often interchangeably. As an abstract class, there is\nno such thing as a plain Node object. All objects that implement\nNode functionality are based on one of its subclasses. Most notable are\nDocument, Element, and DocumentFragment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageData",
    "pageType": "web-api-interface",
    "summary": "The ImageData interface represents the underlying pixel data of an area of a <canvas> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/firstChild",
    "pageType": "web-api-instance-property",
    "summary": "The read-only firstChild property of the Node interface\nreturns the node's first child in the tree,\nor null if the node has no children."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageData/data",
    "pageType": "web-api-instance-property",
    "summary": "The readonly ImageData.data property returns a\nUint8ClampedArray or Float16Array that contains the ImageData object's\npixel data. Data is stored as a one-dimensional array in the RGBA order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/appendChild",
    "pageType": "web-api-instance-method",
    "summary": "The appendChild() method of the Node interface adds a node to the end of the list of children of a specified parent node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageData/colorSpace",
    "pageType": "web-api-instance-property",
    "summary": "The read-only ImageData.colorSpace property is a string indicating the color space of the image data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/cloneNode",
    "pageType": "web-api-instance-method",
    "summary": "The cloneNode() method of the Node interface\nreturns a duplicate of the node on which this method was called.\nIts parameter controls if the subtree contained in a node is also cloned or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageData/pixelFormat",
    "pageType": "web-api-instance-property",
    "summary": "The read-only ImageData.pixelFormat property is a string indicating the pixel format of the image data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/hasChildNodes",
    "pageType": "web-api-instance-method",
    "summary": "The hasChildNodes() method of the Node interface\nreturns a boolean value indicating\nwhether the given Node has child nodes or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageData/height",
    "pageType": "web-api-instance-property",
    "summary": "The readonly ImageData.height property returns the number\nof rows in the ImageData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/removeChild",
    "pageType": "web-api-instance-method",
    "summary": "The removeChild() method of the Node interface\nremoves a child node from the DOM and returns the removed node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageData/width",
    "pageType": "web-api-instance-property",
    "summary": "The readonly ImageData.width property returns the number\nof pixels per row in the ImageData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/isSameNode",
    "pageType": "web-api-instance-method",
    "summary": "The isSameNode() method of the Node interface\nis a legacy alias the for the === strict equality operator.\nThat is, it tests whether two nodes are the same\n(in other words, whether they reference the same object)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageData/ImageData",
    "pageType": "web-api-constructor",
    "summary": "The ImageData() constructor returns a newly instantiated\nImageData object built from the typed array given and having the\nspecified width and height."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/baseURI",
    "pageType": "web-api-instance-property",
    "summary": "The read-only baseURI property of the Node interface\nreturns the absolute base URL of the document containing the node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEImageElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEImageElement interface corresponds to the <feImage> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/isConnected",
    "pageType": "web-api-instance-property",
    "summary": "The read-only isConnected property of the Node interface\nreturns a boolean indicating whether the node is connected\n(directly or indirectly) to a Document object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEImageElement/preserveAspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The preserveAspectRatio read-only property of the SVGFEImageElement interface reflects the preserveAspectRatio attribute of the given <feImage> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/lastChild",
    "pageType": "web-api-instance-property",
    "summary": "The read-only lastChild property of the Node interface\nreturns the last child of the node, or null if there are no child nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEImageElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEImageElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/isDefaultNamespace",
    "pageType": "web-api-instance-method",
    "summary": "The isDefaultNamespace() method of the Node interface accepts a namespace URI as an argument.\nIt returns a boolean value that is true if the namespace is the default namespace on the given node and false if not. The default namespace can be retrieved with Node.lookupNamespaceURI() by passing null as the argument."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEImageElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEImageElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/textContent",
    "pageType": "web-api-instance-property",
    "summary": "The textContent property of the Node interface represents the text content of the node and its descendants."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEImageElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEImageElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/nodeValue",
    "pageType": "web-api-instance-property",
    "summary": "The nodeValue property of the Node interface returns or sets the value of the current node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEImageElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEImageElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/insertBefore",
    "pageType": "web-api-instance-method",
    "summary": "The insertBefore() method of the Node interface\ninserts a node before a reference node as a child of a specified parent node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEImageElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGFEImageElement interface reflects the href or xlink:href \nDeprecated\n attribute of the given <feImage> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/nextSibling",
    "pageType": "web-api-instance-property",
    "summary": "The read-only nextSibling property of the Node interface\nreturns the node immediately following the specified one in their\nparent's childNodes, or returns null\nif the specified node is the last child in the parent element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEImageElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEImageElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/normalize",
    "pageType": "web-api-instance-method",
    "summary": "The normalize() method of the Node interface puts the specified node\nand all of its sub-tree into a normalized form.\nIn a normalized sub-tree, no text nodes in the sub-tree are empty and there are no adjacent text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/compareDocumentPosition",
    "pageType": "web-api-instance-method",
    "summary": "The compareDocumentPosition() method of the Node interface\nreports the position of its argument node relative to the node on which it is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/parentElement",
    "pageType": "web-api-instance-property",
    "summary": "The read-only parentElement property of Node interface\nreturns the DOM node's parent Element, or null if the node either has no\nparent, or its parent isn't a DOM Element. Node.parentNode on the other hand returns any kind of parent, regardless of its type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLInputElement interface indicates the name of the <input> element. It reflects the element's name attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/childNodes",
    "pageType": "web-api-instance-property",
    "summary": "The read-only childNodes property of the Node interface returns a live\nNodeList of child nodes of the given element where\nthe first child node is assigned index 0. Child nodes include elements, text and\ncomments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLInputElement interface provides special properties and methods for manipulating the options, layout, and presentation of <input> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/nodeType",
    "pageType": "web-api-instance-property",
    "summary": "The read-only nodeType property of a Node interface is an integer\nthat identifies what the node is. It distinguishes different kinds of nodes from each other,\nsuch as elements, text, and comments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/selectionStart",
    "pageType": "web-api-instance-property",
    "summary": "The selectionStart property of the HTMLInputElement interface is a number that represents the beginning index of the selected text. When nothing is selected, then returns the position of the text input cursor (caret) inside of the <input> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/getRootNode",
    "pageType": "web-api-instance-method",
    "summary": "The getRootNode() method of the Node interface\nreturns the context object's root,\nwhich optionally includes the shadow root if it is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/select_event",
    "pageType": "web-api-event",
    "summary": "The select event fires when some text has been selected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/parentNode",
    "pageType": "web-api-instance-property",
    "summary": "The read-only parentNode property of the Node interface\nreturns the parent of the specified node in the DOM tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/selectionchange_event",
    "pageType": "web-api-event",
    "summary": "The selectionchange event of the Selection API is fired when the text selection within an <input> element is changed.\nThis includes both changes in the selected range of characters, or if the caret moves."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/contains",
    "pageType": "web-api-instance-method",
    "summary": "The contains() method of the Node interface\nreturns a boolean value indicating\nwhether a node is a descendant of a given node, that is the node itself,\none of its direct children (childNodes),\none of the children's direct children, and so on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/maxLength",
    "pageType": "web-api-instance-property",
    "summary": "The maxLength property of the HTMLInputElement interface indicates the maximum number of characters (in UTF-16 code units) allowed to be entered for the value of the <input> element, and the maximum number of characters allowed for the value to be valid. It reflects the element's maxlength attribute. -1 means there is no limit on the length of the value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/isEqualNode",
    "pageType": "web-api-instance-method",
    "summary": "The isEqualNode() method of the Node interface tests whether two nodes are equal.\nTwo nodes are equal when they have the same type, defining characteristics (for\nelements, this would be their ID, number of children, and so forth), its attributes\nmatch, and so on. The specific set of data points that must match varies depending on\nthe types of the nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/invalid_event",
    "pageType": "web-api-event",
    "summary": "The invalid event fires when a submittable element has been checked for validity and doesn't satisfy its constraints."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/selectstart_event",
    "pageType": "web-api-event",
    "summary": "The selectstart event of the Selection API is fired when a user starts a new selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/required",
    "pageType": "web-api-instance-property",
    "summary": "The required property of the HTMLInputElement interface specifies that the user must fill in a value before submitting a form. It reflects the <input> element's required attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/previousSibling",
    "pageType": "web-api-instance-property",
    "summary": "The read-only previousSibling property of the Node interface\nreturns the node immediately preceding the specified one in its parent's\nchildNodes list,\nor null if the specified node is the first in that list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/src",
    "pageType": "web-api-instance-property",
    "summary": "The src property of the HTMLInputElement interface specifies the source of an image to display as the graphical submit button. It reflects the <input> element's src attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/lookupNamespaceURI",
    "pageType": "web-api-instance-method",
    "summary": "The lookupNamespaceURI() method of the Node interface\ntakes a prefix as parameter and returns the namespace URI associated with it on the given node if found (and\nnull if not). This method's existence allows Node objects to be passed as a namespace resolver to XPathEvaluator.createExpression() and XPathEvaluator.evaluate()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/step",
    "pageType": "web-api-instance-property",
    "summary": "The step property of the HTMLInputElement interface indicates the step by which numeric or date-time <input> elements can change. It reflects the element's step attribute. Valid values include the string \"any\" or a string containing a positive floating point number. If the attribute is not explicitly set, the step property is an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/ownerDocument",
    "pageType": "web-api-instance-property",
    "summary": "The read-only ownerDocument property of the Node interface\nreturns the top-level document object of the node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/formTarget",
    "pageType": "web-api-instance-property",
    "summary": "The formTarget property of the HTMLInputElement interface is the tab, window, or iframe where the response of the submitted <form> is to be displayed. It reflects the value of the <input> element's formtarget attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Node/lookupPrefix",
    "pageType": "web-api-instance-method",
    "summary": "The lookupPrefix() method of the Node interface\nreturns a string containing the prefix for a given namespace URI, if present,\nand null if not.\nWhen multiple prefixes are possible, the first prefix is returned."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/selectionEnd",
    "pageType": "web-api-instance-property",
    "summary": "The selectionEnd property of the HTMLInputElement interface is a number that represents the end index of the selected text. When there is no selection, this returns the offset of the character immediately following the current text input cursor position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Ink",
    "pageType": "web-api-interface",
    "summary": "The Ink interface of the Ink API provides access to DelegatedInkTrailPresenter objects for the application to use to render ink strokes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/autocomplete",
    "pageType": "web-api-instance-property",
    "summary": "The autocomplete property of the HTMLInputElement interface indicates whether the value of the control can be automatically completed by the browser. It reflects the <input> element's autocomplete attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Ink/requestPresenter",
    "pageType": "web-api-instance-method",
    "summary": "The requestPresenter() method of the Ink interface returns a Promise that fulfills with a DelegatedInkTrailPresenter object to handle rendering strokes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLInputElement.disabled property is a boolean value that reflects the disabled HTML attribute, which indicates whether the control is disabled. If it is disabled, it does not accept clicks. A disabled element is unusable and un-clickable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TimeEvent",
    "pageType": "web-api-interface",
    "summary": "The TimeEvent interface, a part of SVG SMIL animation, provides specific contextual information associated with Time events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/willValidate",
    "pageType": "web-api-instance-property",
    "summary": "The willValidate read-only property of the HTMLInputElement interface indicates whether the <input> element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation, including:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the HTMLInputElement interface indicates the kind of data allowed in the <input> element, for example a number, a date, or an email. Browsers will select the appropriate widget and behavior to help users to enter a valid value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Intersection_Observer_API",
    "pageType": "web-api-overview",
    "summary": "The Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/valueAsNumber",
    "pageType": "web-api-instance-property",
    "summary": "The valueAsNumber property of the HTMLInputElement interface represents the current value of the <input> element as a number or NaN if converting to a numeric value is not possible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Intersection_Observer_API/Timing_element_visibility",
    "pageType": "guide",
    "summary": "In this article, we'll build a mock blog which has a number of ads interspersed among the contents of the page, then use the Intersection Observer API to track how much time each ad is visible to the user. When an ad exceeds one minute of visible time, it will be replaced with a new one."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/validity",
    "pageType": "web-api-instance-property",
    "summary": "The validity read-only property of the HTMLInputElement interface returns a ValidityState object that represents the validity states this element is in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPerspective",
    "pageType": "web-api-interface",
    "summary": "The CSSPerspective interface of the CSS Typed Object Model API represents the perspective() value of the individual transform property in CSS. It inherits properties and methods from its parent CSSTransformValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/readOnly",
    "pageType": "web-api-instance-property",
    "summary": "The readOnly property of the HTMLInputElement interface indicates that the user cannot modify the value of the <input>. It reflects the <input> element's readonly boolean attribute; returning true if the attribute is present and false when omitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPerspective/CSSPerspective",
    "pageType": "web-api-constructor",
    "summary": "The CSSPerspective() constructor creates\na new CSSPerspective object representing the perspective() value of\nthe individual transform property in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/formNoValidate",
    "pageType": "web-api-instance-property",
    "summary": "The formNoValidate property of the HTMLInputElement interface is a boolean value indicating if the <form> will bypass constraint validation when submitted via the <input>. It reflects the <input> element's formnovalidate attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPerspective/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the\nCSSPerspective interface sets the distance from z=0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/list",
    "pageType": "web-api-instance-property",
    "summary": "The list read-only property of the HTMLInputElement interface returns the HTMLDataListElement pointed to by the list attribute of the element, or null if the list attribute is not defined or the list attribute's value is not associated with any <datalist> in the same tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/size",
    "pageType": "web-api-instance-property",
    "summary": "The size property of the HTMLInputElement interface defines the number of visible characters displayed. It reflects the <input> element's size attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/formAction",
    "pageType": "web-api-instance-property",
    "summary": "The formAction property of the HTMLInputElement interface is the URL of the program that is executed on the server when the form that owns this control is submitted. It reflects the value of the <input>'s formaction attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaFlowToElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaFlowToElements property of the ElementInternals interface is an array containing the element (or elements) that provide an alternate reading order of content, overriding the general default reading order at the user's discretion.\nIf just one element is provided this is the next element in the reading order.\nIf multiple elements are provided, then each element represents a possible path that should be offered to the user for selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/webkitEntries",
    "pageType": "web-api-instance-property",
    "summary": "The read-only webkitEntries\nproperty of the HTMLInputElement interface contains an array of file\nsystem entries (as objects based on FileSystemEntry) representing files\nand/or directories selected by the user using an <input> element of\ntype file, but only if that selection was made using drag-and-drop:\nselecting a file in the dialog will leave the property empty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaRoleDescription",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRoleDescription property of the ElementInternals interface reflects the value of the aria-roledescription attribute, which defines a human-readable, author-localized description for the role of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/capture",
    "pageType": "web-api-instance-property",
    "summary": "The capture property of the HTMLInputElement interface reflects the <input> element's capture attribute. Only relevant to the <input> of type file, the property and attribute specify whether, a new file should be captured from a user-facing (user) or outward facing (environment) camera or microphone. The type of file is defined the accept attribute. If the attribute is not explicitly set, the capture property is an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals",
    "pageType": "web-api-interface",
    "summary": "The ElementInternals interface of the Document Object Model gives web developers a way to allow custom elements to fully participate in HTML forms. It provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/min",
    "pageType": "web-api-instance-property",
    "summary": "The min property of the HTMLInputElement interface reflects the <input> element's min attribute, which generally defines the minimum valid value for a numeric or date-time input. If the attribute is not explicitly set, the min property is an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaLevel",
    "pageType": "web-api-instance-property",
    "summary": "The ariaLevel property of the ElementInternals interface reflects the value of the aria-level attribute, which defines the hierarchical level of an element within a structure."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/files",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLInputElement.files property allows you to access the FileList selected with the <input type=\"file\"> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaOrientation",
    "pageType": "web-api-instance-property",
    "summary": "The ariaOrientation property of the ElementInternals interface reflects the value of the aria-orientation attribute, which indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/valueAsDate",
    "pageType": "web-api-instance-property",
    "summary": "The valueAsDate property of the HTMLInputElement interface represents the current value of the <input> element as a Date, or null if conversion is not possible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/role",
    "pageType": "web-api-instance-property",
    "summary": "The role read-only property of the ElementInternals interface returns the WAI-ARIA role for the element. For example, a checkbox might have role=\"checkbox\". It reflects the role attribute; it does not return the element's implicit ARIA role, if any, unless explicitly set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/max",
    "pageType": "web-api-instance-property",
    "summary": "The max property of the HTMLInputElement interface reflects the <input> element's max attribute, which generally defines the maximum valid value for a numeric or date-time input. If the attribute is not explicitly set, the max property is an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/shadowRoot",
    "pageType": "web-api-instance-property",
    "summary": "The shadowRoot read-only property of the ElementInternals interface returns the ShadowRoot for this element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/colorSpace",
    "pageType": "web-api-instance-property",
    "summary": "The colorSpace property of the HTMLInputElement interface reflects the <input> element's colorspace attribute, which indicates whether the color space of the serialized CSS color is sRGB (the default) or display-p3. It is only relevant to color controls."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaRowIndexText",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRowIndexText property of the ElementInternals interface reflects the value of the aria-rowindextext attribute, which defines a human readable text alternative of aria-rowindex."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLInputElement interface returns an HTMLFormElement object that owns this <input>, or null if this input is not owned by any form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaDescription",
    "pageType": "web-api-instance-property",
    "summary": "The ariaDescription property of the ElementInternals interface reflects the value of the aria-description attribute, which defines a string value that describes or annotates the current element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/setSelectionRange",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLInputElement.setSelectionRange() method sets the start and end positions of the current text selection in an <input> or <textarea> element. This updates the selection state immediately, though the visual highlight only appears when the element is focused."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/checked",
    "pageType": "web-api-instance-property",
    "summary": "The checked property of the HTMLInputElement interface specifies the current checkedness of the element; that is, whether the form control is checked or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaInvalid",
    "pageType": "web-api-instance-property",
    "summary": "The ariaInvalid property of the ElementInternals interface reflects the value of the aria-invalid attribute. Relevant for the application, checkbox, combobox, gridcell, listbox, radiogroup, slider, spinbutton, textbox, and tree roles, it indicates to the accessibility API whether the entered value does not conform to the format expected by the application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the HTMLInputElement interface represents the current value of the <input> element as a string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/willValidate",
    "pageType": "web-api-instance-property",
    "summary": "The willValidate read-only property of the ElementInternals interface returns true if the element is a submittable element that is a candidate for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the HTMLInputElement interface specifies the height of a control. It reflects the <input> element's height attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaPosInSet",
    "pageType": "web-api-instance-property",
    "summary": "The ariaPosInSet property of the ElementInternals interface reflects the value of the aria-posinset attribute, which defines an element's number or position in the current set of listitems or treeitems."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/showPicker",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLInputElement.showPicker() method displays the browser picker for an input element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/validity",
    "pageType": "web-api-instance-property",
    "summary": "The validity read-only property of the ElementInternals interface returns a ValidityState object which represents the different validity states the element can be in, with respect to constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/defaultChecked",
    "pageType": "web-api-instance-property",
    "summary": "The defaultChecked property of the HTMLInputElement interface specifies the default checkedness state of the element. This property reflects the <input> element's checked attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaHasPopup",
    "pageType": "web-api-instance-property",
    "summary": "The ariaHasPopup property of the ElementInternals interface reflects the value of the aria-haspopup attribute, which indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/setCustomValidity",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLInputElement.setCustomValidity() method sets a custom validity message for the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaRelevant",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRelevant property of the ElementInternals interface reflects the value of the aria-relevant attribute, which indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified. This is used to describe what changes in an aria-live region are relevant and should be announced."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/reportValidity",
    "pageType": "web-api-instance-method",
    "summary": "The reportValidity() method of the HTMLInputElement interface performs the same validity checking steps as the checkValidity() method. In addition, if the invalid event is not canceled, the browser displays the problem to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaMultiSelectable",
    "pageType": "web-api-instance-property",
    "summary": "The ariaMultiSelectable property of the ElementInternals interface reflects the value of the aria-multiselectable attribute, which indicates that the user may select more than one item from the current selectable descendants."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/cancel_event",
    "pageType": "web-api-event",
    "summary": "The cancel event fires on an <input> element when the user cancels the file picker dialog via the Esc key or the cancel button and when the user re-selects the same files that were previously selected of type=\"file\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaSelected",
    "pageType": "web-api-instance-property",
    "summary": "The ariaSelected property of the ElementInternals interface reflects the value of the aria-selected attribute, which indicates the current \"selected\" state of elements that have a selected state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/stepUp",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLInputElement.stepUp() method increments the value\nof a numeric type of <input> element by the value of the\nstep attribute, or the\ndefault step value if the step attribute is not explicitly set. The method,\nwhen invoked, increments the value by\n(step * n), where n defaults to\n1 if not specified, and\nstep defaults to the\ndefault value for step if not specified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaColIndexText",
    "pageType": "web-api-instance-property",
    "summary": "The ariaColIndexText property of the ElementInternals interface reflects the value of the aria-colindextext attribute, which defines a human readable text alternative of aria-colindex."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/webkitdirectory",
    "pageType": "web-api-instance-property",
    "summary": "The webkitdirectory property of the HTMLInputElement interface reflects the webkitdirectory HTML attribute, which indicates that <input type=\"file\"> elements can only select directories instead of files."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaAutoComplete",
    "pageType": "web-api-instance-property",
    "summary": "The ariaAutoComplete property of the ElementInternals interface reflects the value of the aria-autocomplete attribute, which indicates whether inputting text could trigger display of one or more predictions of the user's intended value for a combobox, searchbox, or textbox and specifies how predictions would be presented if they were made."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/validationMessage",
    "pageType": "web-api-instance-property",
    "summary": "The validationMessage read-only property of the HTMLInputElement interface returns a string representing a localized message that describes the validation constraints that the <input> control does not satisfy (if any)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaActiveDescendantElement",
    "pageType": "web-api-instance-property",
    "summary": "The ariaActiveDescendantElement property of the ElementInternals interface represents the current active element when focus is on a composite widget, combobox, textbox, group, or application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/multiple",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLInputElement.multiple property indicates if an input can have more than one value. Firefox currently only supports multiple for <input type=\"file\">."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaReadOnly",
    "pageType": "web-api-instance-property",
    "summary": "The ariaReadOnly property of the ElementInternals interface reflects the value of the aria-readonly attribute, which indicates that the element is not editable, but is otherwise operable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/alt",
    "pageType": "web-api-instance-property",
    "summary": "The alt property of the HTMLInputElement interface defines the textual label for the button for users and user agents who cannot use the image. It reflects the <input> element's alt attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaLive",
    "pageType": "web-api-instance-property",
    "summary": "The ariaLive property of the ElementInternals interface reflects the value of the aria-live attribute, which indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/stepDown",
    "pageType": "web-api-instance-method",
    "summary": "The\nHTMLInputElement.stepDown() method decrements the\nvalue of a numeric type of <input> element by the value of the\nstep attribute or up\nto n multiples of the step attribute if a number is passed as the\nparameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaBusy",
    "pageType": "web-api-instance-property",
    "summary": "The ariaBusy property of the ElementInternals interface reflects the value of the aria-busy attribute, which indicates whether an element is being modified, as assistive technologies may want to wait until the modifications are complete before exposing them to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/alpha",
    "pageType": "web-api-instance-property",
    "summary": "The alpha property of the HTMLInputElement interface reflects the <input> element's alpha attribute, which indicates whether the CSS color's alpha component can be manipulated by the end user and does not have to be fully opaque. It is only relevant to color controls."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaBrailleRoleDescription",
    "pageType": "web-api-instance-property",
    "summary": "The ariaBrailleRoleDescription property of the ElementInternals interface reflects the value of the aria-brailleroledescription attribute, which defines the ARIA braille role description of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the HTMLInputElement interface specifies the width of a control. It reflects the <input> element's width attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaDisabled",
    "pageType": "web-api-instance-property",
    "summary": "The ariaDisabled property of the ElementInternals interface reflects the value of the aria-disabled attribute, which indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/formMethod",
    "pageType": "web-api-instance-property",
    "summary": "The formMethod property of the HTMLInputElement interface is the HTTP method used to submit the <form> if the <input> element is the control that submits the form. It reflects the value of the <input>'s formmethod attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaChecked",
    "pageType": "web-api-instance-property",
    "summary": "The ariaChecked property of the ElementInternals interface reflects the value of the aria-checked attribute, which indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets that have a checked state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/popoverTargetAction",
    "pageType": "web-api-instance-property",
    "summary": "The popoverTargetAction property of the HTMLInputElement interface gets and sets the action to be performed (\"hide\", \"show\", or \"toggle\") on a popover element being controlled by an <input> element of type=\"button\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaBrailleLabel",
    "pageType": "web-api-instance-property",
    "summary": "The ariaBrailleLabel property of the ElementInternals interface reflects the value of the aria-braillelabel attribute, which defines the ARIA braille label of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/dirName",
    "pageType": "web-api-instance-property",
    "summary": "The dirName property of the HTMLInputElement interface is the directionality of the element and enables the submission of that value. It reflects the value of the <input> element's dirName attribute. This property can be retrieved or set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/setFormValue",
    "pageType": "web-api-instance-method",
    "summary": "The setFormValue() method of the ElementInternals interface sets the element's submission value and state, communicating these to the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/pattern",
    "pageType": "web-api-instance-property",
    "summary": "The pattern property of the HTMLInputElement interface represents a regular expression a non-null <input> value should match. It reflects the <input> element's pattern attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaValueMin",
    "pageType": "web-api-instance-property",
    "summary": "The ariaValueMin property of the ElementInternals interface reflects the value of the aria-valuemin attribute, which defines the minimum allowed value for a range widget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/search_event",
    "pageType": "web-api-event",
    "summary": "The search event is fired when a search is initiated using an <input> element of type=\"search\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the ElementInternals interface returns the HTMLFormElement associated with this element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/formEnctype",
    "pageType": "web-api-instance-property",
    "summary": "The formEnctype property of the HTMLInputElement interface is the MIME type of the content sent to the server when the <input> with the formEnctype is the method of form submission. It reflects the value of the <input>'s formenctype attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaRowIndex",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRowIndex property of the ElementInternals interface reflects the value of the aria-rowindex attribute, which defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/select",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLInputElement.select() method selects all the text\nin a <textarea> element or in an <input> element\nthat includes a text field."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaDescribedByElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaDescribedByElements property of the ElementInternals interface is an array containing the element (or elements) that provide an accessible description for the element it is applied to.\nThe accessible description is similar to the accessible label (see ariaLabelledByElements), but provides more verbose information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/accept",
    "pageType": "web-api-instance-property",
    "summary": "The accept property of the HTMLInputElement interface reflects the <input> element's accept attribute, generally a comma-separated list of unique file type specifiers providing a hint for the expected file type for an <input> of type file. If the attribute is not explicitly set, the accept property is an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaSetSize",
    "pageType": "web-api-instance-property",
    "summary": "The ariaSetSize property of the ElementInternals interface reflects the value of the aria-setsize attribute, which defines the number of items in the current set of listitems or treeitems."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/minLength",
    "pageType": "web-api-instance-property",
    "summary": "The minLength property of the HTMLInputElement interface indicates the minimum number of characters (in UTF-16 code units) required for the value of the <input> element to be valid. It reflects the element's minlength attribute. -1 means there is no minimum length requirement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaPlaceholder",
    "pageType": "web-api-instance-property",
    "summary": "The ariaPlaceholder property of the ElementInternals interface reflects the value of the aria-placeholder attribute, which defines a short hint intended to aid the user with data entry when the control has no value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/defaultValue",
    "pageType": "web-api-instance-property",
    "summary": "The defaultValue property of the HTMLInputElement interface indicates the original (or default) value of the <input> element. It reflects the element's value attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaValueText",
    "pageType": "web-api-instance-property",
    "summary": "The ariaValueText property of the ElementInternals interface reflects the value of the aria-valuetext attribute, which defines the human-readable text alternative of aria-valuenow for a range widget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/placeholder",
    "pageType": "web-api-instance-property",
    "summary": "The placeholder property of the HTMLInputElement interface represents a hint to the user of what can be entered in the control. It reflects the <input> element's placeholder attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaAtomic",
    "pageType": "web-api-instance-property",
    "summary": "The ariaAtomic property of the ElementInternals interface reflects the value of the aria-atomic attribute, which indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/setRangeText",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLInputElement.setRangeText() method replaces a\nrange of text in an <input> or <textarea> element with\na new string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaRequired",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRequired property of the ElementInternals interface reflects the value of the aria-required attribute, which indicates that user input is required on the element before a form may be submitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/popoverTargetElement",
    "pageType": "web-api-instance-property",
    "summary": "The popoverTargetElement property of the HTMLInputElement interface gets and sets the popover element to control via an <input> element of type=\"button\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/states",
    "pageType": "web-api-instance-property",
    "summary": "The states read-only property of the ElementInternals interface returns a CustomStateSet representing the possible states of the custom element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/labels",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLInputElement.labels read-only property returns a\nNodeList of the <label> elements associated with the\n<input> element, if the element is not hidden. If the element has the\ntype hidden, the property returns null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/reportValidity",
    "pageType": "web-api-instance-method",
    "summary": "The reportValidity() method of the ElementInternals interface checks if the element meets any constraint validation rules applied to it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/selectionDirection",
    "pageType": "web-api-instance-property",
    "summary": "The selectionDirection property of the HTMLInputElement interface is a string that indicates the direction in which the user is selecting the text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaModal",
    "pageType": "web-api-instance-property",
    "summary": "The ariaModal property of the ElementInternals interface reflects the value of the aria-modal attribute, which indicates whether an element is modal when displayed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/indeterminate",
    "pageType": "web-api-instance-property",
    "summary": "The indeterminate property of the HTMLInputElement interface returns a boolean value that indicates whether the checkbox is in the indeterminate state. For example, a \"select all/deselect all\" checkbox may be in the indeterminate state when some but not all of its sub-controls are checked. The indeterminate state can only be set via JavaScript and is only relevant to checkbox controls."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaColIndex",
    "pageType": "web-api-instance-property",
    "summary": "The ariaColIndex property of the ElementInternals interface reflects the value of the aria-colindex attribute, which defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLInputElement/checkValidity",
    "pageType": "web-api-instance-method",
    "summary": "The checkValidity() method of the HTMLInputElement interface returns a boolean value which indicates if the element meets any constraint validation rules applied to it. If false, the method also fires an invalid event on the element. Because there's no default browser behavior for checkValidity(), canceling this invalid event has no effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/validationMessage",
    "pageType": "web-api-instance-property",
    "summary": "The validationMessage read-only property of the ElementInternals interface returns the validation message for the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLightProbe",
    "pageType": "web-api-interface",
    "summary": "The XRLightProbe interface of the WebXR Device API contains lighting information at a given point in the user's environment. You can get an XRLighting object using the XRSession.requestLightProbe() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaValueMax",
    "pageType": "web-api-instance-property",
    "summary": "The ariaValueMax property of the ElementInternals interface reflects the value of the aria-valuemax attribute, which defines the maximum allowed value for a range widget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLightProbe/reflectionchange_event",
    "pageType": "web-api-event",
    "summary": "The WebXR reflectionchange event fires each time the estimated reflection cube map changes. This happens in response to use movements through different lighting conditions or to direct changes to lighting itself. This event is not cancelable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLightProbe/probeSpace",
    "pageType": "web-api-instance-property",
    "summary": "The read-only probeSpace property of the XRLightProbe interface returns an XRSpace tracking the position and orientation that the lighting estimations are relative to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaControlsElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaControlsElements property of the ElementInternals interface is an array containing the element (or elements) that are controlled by the element it is applied to.\nFor example, this might be set on a combobox to indicate the element that it pops up, or on a scrollbar to indicate the ID of the element it controls."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaValueNow",
    "pageType": "web-api-instance-property",
    "summary": "The ariaValueNow property of the ElementInternals interface reflects the value of the aria-valuenow attribute, which defines the current value for a range widget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaMultiLine",
    "pageType": "web-api-instance-property",
    "summary": "The ariaMultiLine property of the ElementInternals interface reflects the value of the aria-multiline attribute, which indicates whether a text box accepts multiple lines of input or only a single line."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaColSpan",
    "pageType": "web-api-instance-property",
    "summary": "The ariaColSpan property of the ElementInternals interface reflects the value of the aria-colspan attribute, which defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaErrorMessageElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaErrorMessageElements property of the ElementInternals interface is an array containing the element (or elements) that provide an error message for the element it is applied to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaSort",
    "pageType": "web-api-instance-property",
    "summary": "The ariaSort property of the ElementInternals interface reflects the value of the aria-sort attribute, which indicates if items in a table or grid are sorted in ascending or descending order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/setValidity",
    "pageType": "web-api-instance-method",
    "summary": "The setValidity() method of the ElementInternals interface sets the validity of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaHidden",
    "pageType": "web-api-instance-property",
    "summary": "The ariaHidden property of the ElementInternals interface reflects the value of the aria-hidden attribute, which indicates whether the element is exposed to an accessibility API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaExpanded",
    "pageType": "web-api-instance-property",
    "summary": "The ariaExpanded property of the ElementInternals interface reflects the value of the aria-expanded attribute, which indicates whether a grouping element owned or controlled by this element is expanded or collapsed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaRowCount",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRowCount property of the ElementInternals interface reflects the value of the aria-rowcount attribute, which defines the total number of rows in a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaKeyShortcuts",
    "pageType": "web-api-instance-property",
    "summary": "The ariaKeyShortcuts property of the ElementInternals interface reflects the value of the aria-keyshortcuts attribute, which indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaColCount",
    "pageType": "web-api-instance-property",
    "summary": "The ariaColCount property of the ElementInternals interface reflects the value of the aria-colcount attribute, which defines the number of columns in a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaLabel",
    "pageType": "web-api-instance-property",
    "summary": "The ariaLabel property of the ElementInternals interface reflects the value of the aria-label attribute, which defines a string value that labels the current Element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/labels",
    "pageType": "web-api-instance-property",
    "summary": "The labels read-only property of the ElementInternals interface returns the labels associated with the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaRowSpan",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRowSpan property of the ElementInternals interface reflects the value of the aria-rowspan attribute, which defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaDetailsElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaDetailsElements property of the ElementInternals interface is an array containing the element (or elements) that provide an accessible details for the element it is applied to.\nThe accessible details are similar to the accessible description (see ariaDescribedByElements), but provides more verbose information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaCurrent",
    "pageType": "web-api-instance-property",
    "summary": "The ariaCurrent property of the ElementInternals interface reflects the value of the aria-current attribute, which indicates the element that represents the current item within a container or set of related elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaPressed",
    "pageType": "web-api-instance-property",
    "summary": "The ariaPressed property of the ElementInternals interface reflects the value of the aria-pressed attribute, which indicates the current \"pressed\" state of toggle buttons."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaOwnsElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaOwnsElements property of the ElementInternals interface is an array containing the element (or elements) that define a visual, functional, or contextual relationship between a parent element that it is applied to, and its child elements.\nThis is used when the shadow DOM hierarchy cannot be used to represent the relationship, and it would not otherwise be available to assistive technology,"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/checkValidity",
    "pageType": "web-api-instance-method",
    "summary": "The checkValidity() method of the ElementInternals interface checks if the element meets any constraint validation rules applied to it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ElementInternals/ariaLabelledByElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaLabelledByElements property of the ElementInternals interface is an array containing the element (or elements) that provide an accessible name for the element it is applied to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Audio_Output_Devices_API",
    "pageType": "web-api-overview",
    "summary": "The Audio Output Devices API allows web applications to prompt users about what output device should be used for audio playback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL_API",
    "pageType": "web-api-overview",
    "summary": "The URL API is a component of the URL standard, which defines what constitutes a valid Uniform Resource Locator and the API that accesses and manipulates URLs. The URL standard also defines concepts such as domains, hosts, and IP addresses, and also attempts to describe in a standard way the legacy application/x-www-form-urlencoded MIME type used to submit web forms' contents as a set of key/value pairs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL_API/Resolving_relative_references",
    "pageType": "guide",
    "summary": "The URL() constructor or the URL.parse() static method of the URL API can be used to resolve a relative reference and a base URL to an absolute URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OVR_multiview2",
    "pageType": "webgl-extension",
    "summary": "The OVR_multiview2 extension is part of the WebGL API and adds support for rendering into multiple views simultaneously. This especially useful for virtual reality (VR) and WebXR."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OVR_multiview2/framebufferTextureMultiviewOVR",
    "pageType": "webgl-extension-method",
    "summary": "The OVR_multiview2.framebufferTextureMultiviewOVR()\nmethod of the WebGL API attaches a multiview\ntexture to a WebGLFramebuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParamMap",
    "pageType": "web-api-interface",
    "summary": "The AudioParamMap interface of the Web Audio API represents an iterable and read-only set of multiple audio parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLength",
    "pageType": "web-api-interface",
    "summary": "The SVGLength interface correspond to the <length> basic data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLength/valueAsString",
    "pageType": "web-api-instance-property",
    "summary": "The valueAsString property of the SVGLength interface represents the <length>'s value as a string, in the units expressed by unitType."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLength/valueInSpecifiedUnits",
    "pageType": "web-api-instance-property",
    "summary": "The valueInSpecifiedUnits property of the SVGLength interface represents floating point value, in the units expressed by unitType."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLength/unitType",
    "pageType": "web-api-instance-property",
    "summary": "The unitType property of the SVGLength interface that represents type of the value as specified by one of the SVG_LENGTHTYPE_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLength/newValueSpecifiedUnits",
    "pageType": "web-api-instance-method",
    "summary": "The newValueSpecifiedUnits() method of the SVGLength interface resets the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLength/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the SVGLength interface represents the floating point value of the <length> in user units."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLength/convertToSpecifiedUnits",
    "pageType": "web-api-instance-method",
    "summary": "The convertToSpecifiedUnits() method of the SVGLength interface allows you to convert the length's value to the specified unit type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IIRFilterNode",
    "pageType": "web-api-interface",
    "summary": "The IIRFilterNode interface of the Web Audio API is an AudioNode processor which implements a general infinite impulse response (IIR) filter; this type of filter can be used to implement tone control devices and graphic equalizers as well. It lets the parameters of the filter response be specified, so that it can be tuned as needed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IIRFilterNode/IIRFilterNode",
    "pageType": "web-api-constructor",
    "summary": "The IIRFilterNode() constructor\nof the Web Audio API creates a new\nIIRFilterNode object which an AudioNode processor\nwhich implements a general infinite impulse response filter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IIRFilterNode/getFrequencyResponse",
    "pageType": "web-api-instance-method",
    "summary": "The getFrequencyResponse() method of the IIRFilterNode\ninterface takes the current filtering algorithm's settings and calculates the\nfrequency response for frequencies specified in a specified array of frequencies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PictureInPictureWindow",
    "pageType": "web-api-interface",
    "summary": "The PictureInPictureWindow interface represents an object able to programmatically obtain the width and height and resize event of the floating video window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PictureInPictureWindow/height",
    "pageType": "web-api-instance-property",
    "summary": "The read-only height property of the PictureInPictureWindow interface returns the height of the floating video window in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PictureInPictureWindow/width",
    "pageType": "web-api-instance-property",
    "summary": "The read-only width property of the PictureInPictureWindow interface returns the width of the floating video window in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PictureInPictureWindow/resize_event",
    "pageType": "web-api-event",
    "summary": "The resize event fires when the floating video window has been resized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasGradient",
    "pageType": "web-api-interface",
    "summary": "The CanvasGradient interface represents an opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.createLinearGradient(), CanvasRenderingContext2D.createConicGradient() or CanvasRenderingContext2D.createRadialGradient()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasGradient/addColorStop",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasGradient.addColorStop() method adds a new color stop,\ndefined by an offset and a color, to a given canvas gradient."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CompositionEvent",
    "pageType": "web-api-interface",
    "summary": "The DOM CompositionEvent represents events that occur due to the user indirectly entering text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CompositionEvent/CompositionEvent",
    "pageType": "web-api-constructor",
    "summary": "The CompositionEvent() constructor creates a new CompositionEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CompositionEvent/initCompositionEvent",
    "pageType": "web-api-instance-method",
    "summary": "The initCompositionEvent()\nmethod of the CompositionEvent interface initializes the attributes of a\nCompositionEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CompositionEvent/data",
    "pageType": "web-api-instance-property",
    "summary": "The data read-only property of the\nCompositionEvent interface returns the characters generated by the input\nmethod that raised the event; its exact nature varies depending on the type of event\nthat generated the CompositionEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CompositionEvent/locale",
    "pageType": "web-api-instance-property",
    "summary": "The locale read-only property of the\nCompositionEvent interface returns the locale of current input method\n(for example, the keyboard layout locale if the composition is associated with an Input method editor)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Channel_Messaging_API",
    "pageType": "web-api-overview",
    "summary": "The Channel Messaging API allows two separate scripts running in different browsing contexts attached to the same document (e.g., two IFrames, or the main document and an IFrame, two documents via a SharedWorker, or two workers) to communicate directly, passing messages between one another through two-way channels (or pipes) with a port at each end."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Channel_Messaging_API/Using_channel_messaging",
    "pageType": "guide",
    "summary": "The Channel Messaging API allows two separate scripts running in different browsing contexts attached to the same document (e.g., two <iframe> elements, the main document and a single <iframe>, or two documents via a SharedWorker) to communicate directly, passing messages between each other through two-way channels (or pipes) with a port at each end."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskAttributionTiming",
    "pageType": "web-api-interface",
    "summary": "The TaskAttributionTiming interface returns information about the work involved in a long task and its associate frame context. The frame context, also called the container, is the iframe, embed or object that is being implicated, on the whole, for a long task."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskAttributionTiming/containerName",
    "pageType": "web-api-instance-property",
    "summary": "The containerName read-only property of the TaskAttributionTiming interface returns the container's name\nattribute. A container is the iframe, embed or object etc. that is being implicated, on the whole, for a long task."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskAttributionTiming/containerId",
    "pageType": "web-api-instance-property",
    "summary": "The containerId read-only property of the TaskAttributionTiming interface returns the container's id\nattribute. A container is the iframe, embed or object etc. that is being implicated, on the whole, for a long task."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskAttributionTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the TaskAttributionTiming interface is a serializer; it returns a JSON representation of the TaskAttributionTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskAttributionTiming/containerType",
    "pageType": "web-api-instance-property",
    "summary": "The containerType read-only property of the TaskAttributionTiming interface returns the type of the container, one of iframe, embed, or object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskAttributionTiming/containerSrc",
    "pageType": "web-api-instance-property",
    "summary": "The containerSrc read-only property of the TaskAttributionTiming interface returns the container's src\nattribute. A container is the iframe, embed or object etc. that is being implicated, on the whole, for a long task."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBuffer",
    "pageType": "web-api-interface",
    "summary": "The AudioBuffer interface represents a short audio asset residing in memory, created from an audio file using the AudioContext.decodeAudioData() method, or from raw data using AudioContext.createBuffer(). Once put into an AudioBuffer, the audio can then be played by being passed into an AudioBufferSourceNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBuffer/AudioBuffer",
    "pageType": "web-api-constructor",
    "summary": "The AudioBuffer constructor of\nthe Web Audio API creates a new\nAudioBuffer object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBuffer/sampleRate",
    "pageType": "web-api-instance-property",
    "summary": "The sampleRate property of the AudioBuffer interface returns a float representing the sample rate, in samples per second, of the PCM data stored in the buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBuffer/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the AudioBuffer\ninterface returns an integer representing the length, in sample-frames, of the PCM data\nstored in the buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBuffer/duration",
    "pageType": "web-api-instance-property",
    "summary": "The duration property of the AudioBuffer interface returns a double representing the duration, in seconds, of the PCM data stored in the buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBuffer/copyFromChannel",
    "pageType": "web-api-instance-method",
    "summary": "The\ncopyFromChannel() method of the\nAudioBuffer interface copies the audio sample data from the specified\nchannel of the AudioBuffer to a specified\nFloat32Array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBuffer/copyToChannel",
    "pageType": "web-api-instance-method",
    "summary": "The copyToChannel() method of the AudioBuffer interface copies\nthe samples to the specified channel of the AudioBuffer, from the source array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBuffer/numberOfChannels",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfChannels property of the AudioBuffer\ninterface returns an integer representing the number of discrete audio channels\ndescribed by the PCM data stored in the buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBuffer/getChannelData",
    "pageType": "web-api-instance-method",
    "summary": "The getChannelData() method of the AudioBuffer Interface returns a Float32Array containing the PCM data associated with the channel, defined by the channel parameter (with 0 representing the first channel)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransition/transitionProperty",
    "pageType": "web-api-instance-property",
    "summary": "The transitionProperty property of the\nCSSTransition interface returns the expanded transition property\nname of the transition. This is the longhand CSS property for which the\ntransition was generated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransition",
    "pageType": "web-api-interface",
    "summary": "The CSSTransition interface of the Web Animations API represents an Animation object used for a CSS Transition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLEmbedElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLEmbedElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <embed> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLEmbedElement/src",
    "pageType": "web-api-instance-property",
    "summary": "The src property of the HTMLEmbedElement interface returns a string that indicates the URL of the resource being embedded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLEmbedElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the HTMLEmbedElement interface returns a string that reflects the type attribute of the <embed> element, indicating the MIME type of the resource. It reflects the <embed> element's type attribute"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLEmbedElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the HTMLEmbedElement interface returns a string that reflects the height attribute of the <embed> element, indicating the displayed height of the resource in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLEmbedElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the HTMLEmbedElement interface returns a string that reflects the width attribute of the <embed> element, indicating the displayed width of the resource in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLEmbedElement/getSVGDocument",
    "pageType": "web-api-instance-method",
    "summary": "The getSVGDocument() method of the HTMLEmbedElement interface returns the Document object of the embedded SVG."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Invoker_Commands_API",
    "pageType": "web-api-overview",
    "summary": "The Invoker Commands API provides a way to declaratively assign behaviors to buttons, allowing control of interactive elements when the button is enacted (clicked or invoked via a keypress, such as the spacebar or return key)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UIEvent",
    "pageType": "web-api-interface",
    "summary": "The UIEvent interface represents simple user interface events. It is part of the UI Events API, which includes various event types and interfaces related to user interactions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UIEvent/UIEvent",
    "pageType": "web-api-constructor",
    "summary": "The UIEvent() constructor creates a new UIEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UIEvent/which",
    "pageType": "web-api-instance-property",
    "summary": "The UIEvent.which read-only property of the UIEvent interface returns a number that indicates which button was pressed on the mouse, or the numeric keyCode or the character code (charCode) of the key pressed on the keyboard."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UIEvent/detail",
    "pageType": "web-api-instance-property",
    "summary": "The UIEvent.detail read-only property, when non-zero, provides the current (or next, depending on the event) click count."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UIEvent/sourceCapabilities",
    "pageType": "web-api-instance-property",
    "summary": "The sourceCapabilities read-only property of the UIEvent interface returns\nan instance of the InputDeviceCapabilities interface which provides\ninformation about the physical device responsible for generating a touch event. If no\ninput device was responsible for the event, it returns null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UIEvent/view",
    "pageType": "web-api-instance-property",
    "summary": "The UIEvent.view read-only property returns the\nWindowProxy object from which the event was generated. In browsers, this\nis the Window object the event happened in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UIEvent/initUIEvent",
    "pageType": "web-api-instance-method",
    "summary": "The UIEvent.initUIEvent() method initializes a UI event\nonce it's been created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLPictureElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLPictureElement interface represents a <picture> HTML element. It doesn't implement specific properties or methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReportingObserver",
    "pageType": "web-api-interface",
    "summary": "The ReportingObserver interface of the Reporting API allows you to collect and access reports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReportingObserver/ReportingObserver",
    "pageType": "web-api-constructor",
    "summary": "The ReportingObserver() constructor of the Reporting API creates a new\nReportingObserver object instance, which can be used to collect and\naccess reports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReportingObserver/takeRecords",
    "pageType": "web-api-instance-method",
    "summary": "The takeRecords() method of the\nReportingObserver interface returns the current list of reports contained\nin the observer's report queue, and empties the queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReportingObserver/observe",
    "pageType": "web-api-instance-method",
    "summary": "The observe() method of the\nReportingObserver interface instructs a reporting observer to start\ncollecting reports in its report queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReportingObserver/disconnect",
    "pageType": "web-api-instance-method",
    "summary": "The disconnect() method of the\nReportingObserver interface stops a reporting observer that had\npreviously started observing from collecting reports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathInvert",
    "pageType": "web-api-interface",
    "summary": "The CSSMathInvert interface of the CSS Typed Object Model API represents a CSS calc() used as calc(1 / <value>). It inherits properties and methods from its parent CSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathInvert/CSSMathInvert",
    "pageType": "web-api-constructor",
    "summary": "The CSSMathInvert() constructor creates a\nnew CSSMathInvert object which represents a CSS\ncalc() used as calc(1 / value)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathInvert/value",
    "pageType": "web-api-instance-property",
    "summary": "The CSSMathInvert.value read-only property of the\nCSSMathInvert interface returns a CSSNumericValue object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLContextEvent",
    "pageType": "web-api-interface",
    "summary": "The WebGLContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLContextEvent/WebGLContextEvent",
    "pageType": "web-api-constructor",
    "summary": "The WebGLContextEvent() constructor creates a new WebGLContextEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLContextEvent/statusMessage",
    "pageType": "web-api-instance-property",
    "summary": "The read-only WebGLContextEvent.statusMessage property contains additional event status information, or is an empty string if no additional information is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_color_buffer_float",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_color_buffer_float extension is part of the WebGL API and adds the ability to render to 32-bit floating-point color buffers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDevices",
    "pageType": "web-api-interface",
    "summary": "The MediaDevices interface of the Media Capture and Streams API provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDevices/selectAudioOutput",
    "pageType": "web-api-instance-method",
    "summary": "The selectAudioOutput() method of the MediaDevices interface prompts the user to select an audio output device, such as a speaker or headset. If the user selects a device, the method grants user permission to use the selected device as an audio output sink."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDevices/enumerateDevices",
    "pageType": "web-api-instance-method",
    "summary": "The enumerateDevices() method of the MediaDevices interface requests a list of the currently available media input and output devices, such as microphones, cameras, headsets, and so forth.\nThe returned Promise is resolved with an array of MediaDeviceInfo objects describing the devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDevices/getSupportedConstraints",
    "pageType": "web-api-instance-method",
    "summary": "The getSupportedConstraints() method of the MediaDevices interface returns an object based on the MediaTrackSupportedConstraints dictionary, whose member fields each specify one of the constrainable properties the user agent understands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDevices/getUserMedia",
    "pageType": "web-api-instance-method",
    "summary": "The getUserMedia() method of the MediaDevices interface prompts the user for permission to use a media input which produces a MediaStream with tracks containing the requested types of media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDevices/getDisplayMedia",
    "pageType": "web-api-instance-method",
    "summary": "The getDisplayMedia() method of the MediaDevices interface prompts the user to select and grant permission to capture the contents of a display or portion thereof (such as a window) as a MediaStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDevices/devicechange_event",
    "pageType": "web-api-event",
    "summary": "The devicechange event is sent to a MediaDevices instance whenever a media device such as a camera, microphone, or speaker is connected to or removed from the system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LaunchQueue",
    "pageType": "web-api-interface",
    "summary": "The LaunchQueue interface of the Launch Handler API is available via the Window.launchQueue property. When a progressive web app (PWA) is launched with a launch_handler client_mode value of focus-existing, navigate-new, or navigate-existing, LaunchQueue provides access to functionality that allows custom launch navigation handling to be implemented in the PWA. This functionality is controlled by the properties of the LaunchParams object passed into the setConsumer() callback function."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LaunchQueue/setConsumer",
    "pageType": "web-api-instance-method",
    "summary": "The setConsumer() method of the LaunchQueue interface is used to declare the callback that will handle custom launch navigation handling in a progressive web app (PWA). Such custom navigation is initiated via Window.launchQueue when a PWA has been launched with a launch_handler client_mode value of focus-existing, navigate-new, or navigate-existing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLUniformLocation",
    "pageType": "web-api-interface",
    "summary": "The WebGLUniformLocation interface is part of the WebGL API and represents the location of a uniform variable in a shader program."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSwitchElement",
    "pageType": "web-api-interface",
    "summary": "The SVGSwitchElement interface corresponds to the <switch> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyframeEffect",
    "pageType": "web-api-interface",
    "summary": "The KeyframeEffect interface of the Web Animations API lets us create sets of animatable properties and values, called keyframes. These can then be played using the Animation() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyframeEffect/pseudoElement",
    "pageType": "web-api-instance-property",
    "summary": "The pseudoElement property of a KeyframeEffect interface is a string representing the pseudo-element being animated. It may be null for animations that do not target a pseudo-element. It performs as both a getter and a setter, except with animations and transitions generated by CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyframeEffect/KeyframeEffect",
    "pageType": "web-api-constructor",
    "summary": "The KeyframeEffect() constructor of the Web Animations API returns a new KeyframeEffect object instance, and also allows you to clone an existing keyframe effect object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyframeEffect/composite",
    "pageType": "web-api-instance-property",
    "summary": "The composite property of a KeyframeEffect resolves how an element's animation impacts its underlying property values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyframeEffect/target",
    "pageType": "web-api-instance-property",
    "summary": "The target property of a KeyframeEffect interface represents the element or pseudo-element being animated. It may be null for animations that do not target a specific element. It performs as both a getter and a setter, except with animations and transitions generated by CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyframeEffect/iterationComposite",
    "pageType": "web-api-instance-property",
    "summary": "The iterationComposite property of a KeyframeEffect resolves how the animation's property value changes accumulate or override each other upon each of the animation's iterations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyframeEffect/setKeyframes",
    "pageType": "web-api-instance-method",
    "summary": "The setKeyframes() method of the KeyframeEffect interface replaces the keyframes that make up the affected KeyframeEffect with a new set of keyframes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyframeEffect/getKeyframes",
    "pageType": "web-api-instance-method",
    "summary": "The getKeyframes() method of a KeyframeEffect returns an Array of the computed keyframes that make up this animation along with their computed offsets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Bluetooth_API",
    "pageType": "web-api-overview",
    "summary": "The Web Bluetooth API provides the ability to connect and interact with Bluetooth Low Energy peripherals."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedScript",
    "pageType": "web-api-interface",
    "summary": "The TrustedScript interface of the Trusted Types API represents a string with an uncompiled script body that a developer can insert into an injection sink that might execute the script. These objects are created via TrustedTypePolicy.createScript() and therefore have no constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedScript/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the TrustedScript interface returns a JSON representation of the stored data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedScript/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() method of the TrustedScript interface returns a string which may be safely inserted into an injection sink."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputDeviceCapabilities",
    "pageType": "web-api-interface",
    "summary": "The InputDeviceCapabilities interface of the Input Device Capabilities API provides information about the physical device or a group of related devices responsible for generating input events. Events caused by the same physical input device get the same instance of this object, but the converse isn't true. For example, two mice with the same capabilities in a system may appear as a single InputDeviceCapabilities instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputDeviceCapabilities/InputDeviceCapabilities",
    "pageType": "web-api-constructor",
    "summary": "The InputDeviceCapabilities() constructor creates a new\nInputDeviceCapabilities object provides information about the physical\ndevice responsible for generating a touch event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputDeviceCapabilities/firesTouchEvents",
    "pageType": "web-api-instance-property",
    "summary": "The firesTouchEvents read-only property of the InputDeviceCapabilities interface returns a boolean value that indicates whether the device dispatches touch events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/region",
    "pageType": "web-api-instance-property",
    "summary": "The read-only region property of the ContactAddress interface returns a string containing the top-level administrative subdivision of the country in which the address is located. This may be a state, province, oblast, or prefecture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress",
    "pageType": "web-api-interface",
    "summary": "The ContactAddress interface of the Contact Picker API represents a physical address. Instances of this interface are retrieved from the address property of the objects returned by ContactsManager.getProperties()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/country",
    "pageType": "web-api-instance-property",
    "summary": "The country read-only property of the ContactAddress interface is a string identifying the address's country using the ISO 3166-1 alpha-2 standard. The string is always in its canonical upper-case form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/organization",
    "pageType": "web-api-instance-property",
    "summary": "The organization read-only property of the ContactAddress interface returns a string containing the name of the organization, firm, company, or institution at the address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/phone",
    "pageType": "web-api-instance-property",
    "summary": "The read-only phone property of the ContactAddress interface returns a string containing the telephone number of the recipient or contact person at the address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/recipient",
    "pageType": "web-api-instance-property",
    "summary": "The read-only recipient property of the ContactAddress interface returns a string containing the name of the recipient, purchaser, or contact person at the address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/dependentLocality",
    "pageType": "web-api-instance-property",
    "summary": "The read-only dependentLocality property of the ContactAddress interface is a string containing a locality or sublocality designation within a city, such as a neighborhood, borough, district, or, in the United Kingdom, a dependent locality. Also known as a post town."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/addressLine",
    "pageType": "web-api-instance-property",
    "summary": "The addressLine read-only property of the ContactAddress interface is an array of strings, each specifying a line of the address that is not covered by one of the other properties of ContactAddress. The array may include the street name, the house number, apartment number, the rural delivery route, descriptive instructions, or the post office box."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/postalCode",
    "pageType": "web-api-instance-property",
    "summary": "The postalCode read-only property of the ContactAddress interface returns a string containing a code used by a jurisdiction for mail routing, for example, the ZIP Code in the United States or the Postal Index Number (PIN code) in India."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the ContactAddress interface is a standard serializer that returns a JSON representation of the ContactAddress object's properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/sortingCode",
    "pageType": "web-api-instance-property",
    "summary": "The sortingCode read-only property of the ContactAddress interface returns a string containing a postal sorting code such as is used in France."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactAddress/city",
    "pageType": "web-api-instance-property",
    "summary": "The city read-only property of the ContactAddress interface returns a string containing the city or town portion of the address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowSharedStorage",
    "pageType": "web-api-interface",
    "summary": "The WindowSharedStorage interface of the Shared Storage API represents the shared storage for a particular origin within a standard browsing context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowSharedStorage/run",
    "pageType": "web-api-instance-method",
    "summary": "The run() method of the\nWindowSharedStorage interface executes a run operation that is registered in a module added to the current origin's SharedStorageWorklet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowSharedStorage/worklet",
    "pageType": "web-api-instance-property",
    "summary": "The worklet read-only property of the\nWindowSharedStorage interface contains the SharedStorageWorklet instance representing the shared storage worklet for the current origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowSharedStorage/selectURL",
    "pageType": "web-api-instance-method",
    "summary": "The selectURL() method of the\nWindowSharedStorage interface executes a URL Selection operation that is registered in a module added to the current origin's SharedStorageWorklet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/layerX",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.layerX read-only property returns the\nhorizontal coordinate of the event relative to the current layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent",
    "pageType": "web-api-interface",
    "summary": "The MouseEvent interface represents events that occur due to the user interacting with a pointing device (such as a mouse).\nCommon events using this interface include click, dblclick, mouseup, mousedown."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/MouseEvent",
    "pageType": "web-api-constructor",
    "summary": "The MouseEvent() constructor creates a new MouseEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/screenY",
    "pageType": "web-api-instance-property",
    "summary": "The screenY read-only property of the MouseEvent interface provides the vertical coordinate (offset) of the mouse pointer in screen coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/x",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.x property is an alias for the MouseEvent.clientX property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/movementY",
    "pageType": "web-api-instance-property",
    "summary": "The movementY read-only property of the MouseEvent interface provides the difference in the Y coordinate of the mouse pointer between the given event and the previous mousemove event.\nIn other words, the value of the property is computed like this: currentEvent.movementY = currentEvent.screenY - previousEvent.screenY."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_MOUSE_DOWN_static",
    "pageType": "web-api-static-property",
    "summary": "MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN is a proprietary, WebKit-specific, static numeric property whose value is the minimum force necessary for a normal click."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/altKey",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.altKey read-only property is a boolean value that indicates whether the alt key was pressed or not when a given mouse event occurs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/shiftKey",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.shiftKey read-only property is a boolean value that indicates whether the shift key was pressed or not when a given mouse event occurs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/getModifierState",
    "pageType": "web-api-instance-method",
    "summary": "The MouseEvent.getModifierState() method returns the current state of the specified modifier key: true if the modifier is active (i.e., the modifier key is pressed or locked), otherwise, false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/clientX",
    "pageType": "web-api-instance-property",
    "summary": "The clientX read-only property of the MouseEvent interface provides the horizontal coordinate within the application's viewport at which the event occurred (as opposed to the coordinate within the page)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/offsetX",
    "pageType": "web-api-instance-property",
    "summary": "The offsetX read-only property of the MouseEvent interface provides the offset in the X coordinate of the mouse pointer between that event and the padding edge of the target node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/offsetY",
    "pageType": "web-api-instance-property",
    "summary": "The offsetY read-only property of the MouseEvent interface provides the offset in the Y coordinate of the mouse pointer between that event and the padding edge of the target node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/webkitForce",
    "pageType": "web-api-instance-property",
    "summary": "MouseEvent.webkitForce is a proprietary, WebKit-specific numeric property whose value represents the amount of pressure that is being applied on the touchpad or touchscreen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/screenX",
    "pageType": "web-api-instance-property",
    "summary": "The screenX read-only property of the MouseEvent interface provides the horizontal coordinate (offset) of the mouse pointer in screen coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/metaKey",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.metaKey read-only property is a boolean value that indicates whether the meta key was pressed or not when a given mouse event occurs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/layerY",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.layerY read-only property returns the\nvertical coordinate of the event relative to the current layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/y",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.y property is an alias for the MouseEvent.clientY property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/pageY",
    "pageType": "web-api-instance-property",
    "summary": "The pageY read-only property of the MouseEvent interface returns the Y (vertical) coordinate (in pixels) at which the mouse was clicked, relative to the top edge of the entire document.\nThis includes any portion of the document not currently visible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/button",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.button read-only property indicates which button was pressed or released on the mouse to trigger the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/initMouseEvent",
    "pageType": "web-api-instance-method",
    "summary": "The MouseEvent.initMouseEvent() method initializes the\nvalue of a mouse event once it's been created (normally using the Document.createEvent() method)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN_static",
    "pageType": "web-api-static-property",
    "summary": "MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN is a proprietary, WebKit-specific, static numeric property whose value is the minimum force necessary for a force click."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/clientY",
    "pageType": "web-api-instance-property",
    "summary": "The clientY read-only property of the MouseEvent interface provides the vertical coordinate within the application's viewport at which the event occurred (as opposed to the coordinate within the page)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/pageX",
    "pageType": "web-api-instance-property",
    "summary": "The pageX read-only property of the MouseEvent interface returns the X (horizontal) coordinate (in pixels) at which the mouse was clicked, relative to the left edge of the entire document.\nThis includes any portion of the document not currently visible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/movementX",
    "pageType": "web-api-instance-property",
    "summary": "The movementX read-only property of the MouseEvent interface provides the difference in the X coordinate of the mouse pointer between the given event and the previous mousemove event.\nIn other words, the value of the property is computed like this: currentEvent.movementX = currentEvent.screenX - previousEvent.screenX."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/ctrlKey",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.ctrlKey read-only property is a boolean value that indicates whether the ctrl key was pressed or not when a given mouse event occurs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/mozInputSource",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.mozInputSource read-only property on MouseEvent provides information indicating the type of device that generated the event.\nThis lets you, for example, determine whether a mouse event was generated by an actual mouse or by a touch event (which might affect the degree of accuracy with which you interpret the coordinates associated with the event)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/buttons",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.buttons read-only property indicates which buttons are pressed on the mouse (or other input device) when a mouse event is triggered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseEvent/relatedTarget",
    "pageType": "web-api-instance-property",
    "summary": "The MouseEvent.relatedTarget read-only property is the secondary target for the mouse event, if there is one."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontData",
    "pageType": "web-api-interface",
    "summary": "The FontData interface of the Local Font Access API represents a single local font face."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontData/blob",
    "pageType": "web-api-instance-method",
    "summary": "The blob() method of the FontData interface returns a Promise that fulfills with a Blob containing the raw bytes of the underlying font file."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontData/style",
    "pageType": "web-api-instance-property",
    "summary": "The style read-only property of the FontData interface returns the style of the font face."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontData/fullName",
    "pageType": "web-api-instance-property",
    "summary": "The fullName read-only property of the FontData interface returns the full name of the font face. This is usually a human-readable name used to identify the font, e.g., \"Optima Bold\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontData/family",
    "pageType": "web-api-instance-property",
    "summary": "The family read-only property of the FontData interface returns the family of the font face."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontData/postscriptName",
    "pageType": "web-api-instance-property",
    "summary": "The postscriptName read-only property of the FontData interface returns the PostScript name of the font face."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptGroupElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLOptGroupElement interface provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of <optgroup> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptGroupElement/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the HTMLOptGroupElement interface is a string value that reflects the <optgroup> element's label attribute, which provides a textual label to the group of options."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptGroupElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The disabled property of the HTMLOptGroupElement interface is a boolean value that reflects the <optgroup> element's disabled attribute, which indicates whether the control is disabled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultController",
    "pageType": "web-api-interface",
    "summary": "The WritableStreamDefaultController interface of the Streams API represents a controller allowing control of a WritableStream's state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultController/signal",
    "pageType": "web-api-instance-property",
    "summary": "The read-only signal property of the WritableStreamDefaultController interface returns the AbortSignal associated with the controller."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WritableStreamDefaultController/error",
    "pageType": "web-api-instance-method",
    "summary": "The error() method of the\nWritableStreamDefaultController interface causes any future interactions\nwith the associated stream to error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The readyState read-only property of the FileReader interface provides the current state of the reading operation.\nThis will be one of the states: EMPTY, LOADING, or DONE."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader",
    "pageType": "web-api-interface",
    "summary": "The FileReader interface lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user's computer, using File or Blob objects to specify the file or data to read."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/FileReader",
    "pageType": "web-api-constructor",
    "summary": "The FileReader() constructor creates a new FileReader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/load_event",
    "pageType": "web-api-event",
    "summary": "The load event of the FileReader interface is fired when a file has been read successfully."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/error",
    "pageType": "web-api-instance-property",
    "summary": "The error read-only property of the FileReader interface returns the\nerror that occurred while reading the file."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/progress_event",
    "pageType": "web-api-event",
    "summary": "The progress event of the FileReader interface is fired periodically as the FileReader reads data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/loadend_event",
    "pageType": "web-api-event",
    "summary": "The loadend event of the FileReader interface is fired when a file read has completed, successfully or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/abort",
    "pageType": "web-api-instance-method",
    "summary": "The abort() method of the FileReader interface aborts the read operation. Upon return,\nthe readyState will be DONE."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/readAsArrayBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The readAsArrayBuffer() method of the FileReader interface is used to start reading the\ncontents of a specified Blob or File. When the read\noperation is finished, the readyState property becomes\nDONE, and the loadend event is\ntriggered. At that time, the result property\ncontains an ArrayBuffer representing the file's data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/readAsText",
    "pageType": "web-api-instance-method",
    "summary": "The readAsText() method of the FileReader interface is used to read the contents of the specified Blob or File.\nWhen the read operation is complete, the readyState property is changed to DONE,\nthe loadend event is triggered, and the result property contains the contents of the file as a text string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the FileReader interface is fired when the read failed due to an error (for example, because the file was not found or not readable)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/loadstart_event",
    "pageType": "web-api-event",
    "summary": "The loadstart event of the FileReader interface is fired when a file read operation has begun."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the FileReader interface returns the\nfile's contents. This property is only valid after the read operation is complete, and\nthe format of the data depends on which of the methods was used to initiate the read\noperation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/abort_event",
    "pageType": "web-api-event",
    "summary": "The abort event of the FileReader interface is fired when a read has been aborted: for instance because the program called FileReader.abort()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/readAsBinaryString",
    "pageType": "web-api-instance-method",
    "summary": "The readAsBinaryString() method of the FileReader interface is used to start reading the contents of the\nspecified Blob or File. When the read operation is\nfinished, the readyState property becomes\nDONE, and the loadend event is triggered. At that time, the\nresult property contains the raw binary data from\nthe file."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReader/readAsDataURL",
    "pageType": "web-api-instance-method",
    "summary": "The readAsDataURL() method of the FileReader interface is used to read the contents of the specified\nBlob or File. When the read operation is finished, the\nreadyState property becomes DONE, and the\nloadend event is triggered. At that time, the\nresult attribute contains the data as a data: URL representing the\nfile's data as a base64 encoded string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Presentation",
    "pageType": "web-api-interface",
    "summary": "The Presentation can be defined as two possible user agents in the context: Controlling user agent and Receiving user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Presentation/receiver",
    "pageType": "web-api-instance-property",
    "summary": "The read-only Presentation attribute\nreceiver, which is only available in browser contexts which are\nreceiving a presentation, returns the\nPresentationReceiver object which can be used to access and communicate\nwith the browser context which controls the presentation. This property is always\nnull when accessed from outside a browser context which is receiving a\npresentation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Presentation/defaultRequest",
    "pageType": "web-api-instance-property",
    "summary": "In a controlling user agent, the defaultRequest attribute MUST return the default presentation request if any, otherwise null. In a receiving browsing context, it MUST return null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_draw_buffers",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_draw_buffers extension is part of the WebGL API and enables a fragment shader to write to several textures, which is useful for deferred shading, for example."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL",
    "pageType": "webgl-extension-method",
    "summary": "The WEBGL_draw_buffers.drawBuffersWEBGL() method is part\nof the WebGL API and allows you to define\nthe draw buffers to which all fragment colors are written."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HMDVRDevice",
    "pageType": "web-api-interface",
    "summary": "The HMDVRDevice interface of the WebVR API represents a head mounted display, providing access to information about each eye, and allowing us to modify the current field of view."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HMDVRDevice/setFieldOfView",
    "pageType": "web-api-instance-method",
    "summary": "The setFieldOfView() method of the HMDVRDevice interface can be used to set the field of view for one eye, or both eyes simultaneously."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HMDVRDevice/getEyeParameters",
    "pageType": "web-api-instance-method",
    "summary": "The getEyeParameters() method of the HMDVRDevice interface returns current parameters for the eye specified as its argument (\"left\" or \"right\") — stored in a VREyeParameters object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Blob",
    "pageType": "web-api-interface",
    "summary": "The Blob interface represents a blob, which is a file-like object of immutable, raw data; they can be read as text or binary data, or converted into a ReadableStream so its methods can be used for processing the data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Blob/Blob",
    "pageType": "web-api-constructor",
    "summary": "The Blob() constructor returns a\nnew Blob object. The content of the blob consists of the concatenation\nof the values given in the parameter blobParts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Blob/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the Blob interface returns the MIME type of the file."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Blob/slice",
    "pageType": "web-api-instance-method",
    "summary": "The slice() method of the Blob interface\ncreates and returns a new Blob object which contains data from a subset of\nthe blob on which it's called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Blob/size",
    "pageType": "web-api-instance-property",
    "summary": "The size read-only property of the Blob interface returns\nthe size of the Blob or File in bytes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Blob/stream",
    "pageType": "web-api-instance-method",
    "summary": "The stream() method of the Blob interface returns a ReadableStream which upon reading returns the data contained within the Blob."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Blob/text",
    "pageType": "web-api-instance-method",
    "summary": "The text() method of the\nBlob interface returns a Promise that resolves with a\nstring containing the contents of the blob, interpreted as UTF-8."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Blob/arrayBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The arrayBuffer() method of the Blob\ninterface returns a Promise that resolves with the contents of the blob as\nbinary data contained in an ArrayBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Blob/bytes",
    "pageType": "web-api-instance-method",
    "summary": "The bytes() method of the Blob interface returns a Promise that resolves with a Uint8Array containing the contents of the blob as an array of bytes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBEndpoint",
    "pageType": "web-api-interface",
    "summary": "The USBEndpoint interface of the WebUSB API provides information about an endpoint provided by the USB device. An endpoint represents a unidirectional data stream into or out of a device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Beacon_API",
    "pageType": "web-api-overview",
    "summary": "The Beacon API is used to send an asynchronous and non-blocking request to a web server. The request does not expect a response. Unlike requests made using XMLHttpRequest or the Fetch API, the browser guarantees to initiate beacon requests before the page is unloaded and to run them to completion."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gyroscope",
    "pageType": "web-api-interface",
    "summary": "The Gyroscope interface of the Sensor APIs provides on each reading the angular velocity of the device along all three axes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gyroscope/Gyroscope",
    "pageType": "web-api-constructor",
    "summary": "The Gyroscope() constructor\ncreates a new Gyroscope object which provides on each reading the\nangular velocity of the device along all three axes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gyroscope/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the\nGyroscope interface returns a number specifying the\nangular velocity of the device along its x-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gyroscope/z",
    "pageType": "web-api-instance-property",
    "summary": "The z read-only property of the\nGyroscope interface returns a number specifying the\nangular velocity of the device along its z-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gyroscope/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the Gyroscope interface returns a number specifying the angular velocity of the device along its y-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver",
    "pageType": "web-api-interface",
    "summary": "The IntersectionObserver interface of the Intersection Observer API provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document's viewport. The ancestor element or viewport is referred to as the root."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/trackVisibility",
    "pageType": "web-api-instance-property",
    "summary": "The trackVisibility read-only property of the IntersectionObserver interface indicates whether the observer is tracking target visibility in addition to element intersections."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver",
    "pageType": "web-api-constructor",
    "summary": "The IntersectionObserver() constructor creates and returns a new IntersectionObserver object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/takeRecords",
    "pageType": "web-api-instance-method",
    "summary": "The takeRecords() method of the IntersectionObserver interface returns an array of IntersectionObserverEntry objects, one for each targeted element which has experienced an intersection change since the last time the intersections were checked, either explicitly through a call to this method or implicitly by an automatic call to the observer's callback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/delay",
    "pageType": "web-api-instance-property",
    "summary": "The delay read-only property of the IntersectionObserver interface indicates the minimum delay between notifications from this observer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/observe",
    "pageType": "web-api-instance-method",
    "summary": "The observe() method of the IntersectionObserver interface adds an element to the set of target elements being watched by the IntersectionObserver.\nOne observer has one set of thresholds and one root, but can watch multiple target elements for visibility changes in keeping with those."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/thresholds",
    "pageType": "web-api-instance-property",
    "summary": "The thresholds read-only property of the IntersectionObserver interface returns the list of intersection thresholds that was specified when the observer was instantiated with IntersectionObserver()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/rootMargin",
    "pageType": "web-api-instance-property",
    "summary": "The rootMargin read-only property of the IntersectionObserver interface is a string with syntax similar to that of the CSS margin property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/unobserve",
    "pageType": "web-api-instance-method",
    "summary": "The unobserve() method of the IntersectionObserver interface instructs the IntersectionObserver to stop observing the specified target element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/root",
    "pageType": "web-api-instance-property",
    "summary": "The root read-only property of the IntersectionObserver interface identifies the Element or Document whose bounds are treated as the bounding box of the viewport for the element which is the observer's target."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/disconnect",
    "pageType": "web-api-instance-method",
    "summary": "The disconnect() method of the IntersectionObserver interface stops the observer watching all of its target elements for visibility changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserver/scrollMargin",
    "pageType": "web-api-instance-property",
    "summary": "The scrollMargin read-only property of the IntersectionObserver interface adds a margin to all nested scroll containers within the root element, including the root element if it is a scroll container."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTransition",
    "pageType": "web-api-interface",
    "summary": "The ViewTransition interface of the View Transition API represents an active view transition, and provides functionality to react to the transition reaching different states (e.g., ready to run the animation, or animation finished) or skip the transition altogether."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTransition/skipTransition",
    "pageType": "web-api-instance-method",
    "summary": "The skipTransition() method of the\nViewTransition interface skips the animation part of the view transition, but doesn't skip running the associated view update."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTransition/ready",
    "pageType": "web-api-instance-property",
    "summary": "The ready read-only property of the\nViewTransition interface is a Promise that fulfills once the pseudo-element tree is created and the transition animation is about to start."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTransition/finished",
    "pageType": "web-api-instance-property",
    "summary": "The finished read-only property of the\nViewTransition interface is a Promise that fulfills once the transition animation is finished, and the new page view is visible and interactive to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTransition/updateCallbackDone",
    "pageType": "web-api-instance-property",
    "summary": "The updateCallbackDone read-only property of the\nViewTransition interface is a Promise that fulfills when the promise returned by the document.startViewTransition() method's callback fulfills, or rejects when it rejects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/removeAttribute",
    "pageType": "web-api-instance-method",
    "summary": "The removeAttribute() method of the Sanitizer interface sets an attribute to be disallowed on all elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer",
    "pageType": "web-api-interface",
    "summary": "The Sanitizer interface of the HTML Sanitizer API defines a configuration object that specifies what elements, attributes and comments are allowed or should be removed when inserting strings of HTML into an Element or ShadowRoot, or when parsing an HTML string into a Document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/Sanitizer",
    "pageType": "web-api-constructor",
    "summary": "The Sanitizer() constructor creates a new Sanitizer object, which can be used to filter unwanted elements and attributes from HTML or documents before they are inserted/parsed into the DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/removeUnsafe",
    "pageType": "web-api-instance-method",
    "summary": "The removeUnsafe() method of the Sanitizer interface configures the sanitizer configuration so that it will remove all elements, attributes, and event handler content attributes that are considered XSS-unsafe by the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/removeElement",
    "pageType": "web-api-instance-method",
    "summary": "The removeElement() method of the Sanitizer interface sets an element to be disallowed — removed from input when the sanitizer is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the Sanitizer interface returns a SanitizerConfig dictionary instance that represents the current Sanitizer configuration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/setComments",
    "pageType": "web-api-instance-method",
    "summary": "The setComments() method of the Sanitizer interface sets whether comments will be allowed or removed by the sanitizer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/replaceElementWithChildren",
    "pageType": "web-api-instance-method",
    "summary": "The replaceElementWithChildren() method of the Sanitizer interface sets an element to be replaced by its child HTML elements when the sanitizer is used.\nThe is primarily used for stripping styles from text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/setDataAttributes",
    "pageType": "web-api-instance-method",
    "summary": "The setDataAttributes() method of the Sanitizer interface sets whether data attributes will be allowed or removed by the sanitizer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/allowElement",
    "pageType": "web-api-instance-method",
    "summary": "The allowElement() method of the Sanitizer interface sets that the specified element is allowed in the output when the sanitizer is used.\nThe element can be specified with lists of attributes that are allowed or disallowed on elements of that type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sanitizer/allowAttribute",
    "pageType": "web-api-instance-method",
    "summary": "The allowAttribute() method of the Sanitizer interface sets an attribute to be allowed on all elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequestUpload",
    "pageType": "web-api-interface",
    "summary": "The XMLHttpRequestUpload interface represents the upload process for a specific XMLHttpRequest. It is an opaque object that represents the underlying, browser-dependent, upload process. It is an XMLHttpRequestEventTarget and can be obtained by calling XMLHttpRequest.upload."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRLayerInit",
    "pageType": "web-api-interface",
    "summary": "The VRLayerInit dictionary of the WebVR API represents a content layer (an HTMLCanvasElement or OffscreenCanvas) that you want to present in a VR display."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRLayerInit/source",
    "pageType": "web-api-instance-property",
    "summary": "The source property of the VRLayerInit interface (dictionary) defines the canvas whose contents will be presented by the VRDisplay."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRLayerInit/rightBounds",
    "pageType": "web-api-instance-property",
    "summary": "The rightBounds property of the VRLayerInit interface (dictionary) defines the right texture bounds of the canvas whose contents will be presented by the VRDisplay."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRLayerInit/leftBounds",
    "pageType": "web-api-instance-property",
    "summary": "The leftBounds property of the VRLayerInit interface (dictionary) defines the left texture bounds of the canvas whose contents will be presented by the VRDisplay."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLShaderPrecisionFormat",
    "pageType": "web-api-interface",
    "summary": "The WebGLShaderPrecisionFormat interface is part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getShaderPrecisionFormat() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLShaderPrecisionFormat/rangeMax",
    "pageType": "web-api-instance-property",
    "summary": "The read-only WebGLShaderPrecisionFormat.rangeMax property returns the base 2 log of the absolute value of the maximum value that can be represented."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLShaderPrecisionFormat/precision",
    "pageType": "web-api-instance-property",
    "summary": "The read-only WebGLShaderPrecisionFormat.precision property returns the number of bits of precision that can be represented."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLShaderPrecisionFormat/rangeMin",
    "pageType": "web-api-instance-property",
    "summary": "The read-only WebGLShaderPrecisionFormat.rangeMin property returns the base 2 log of the absolute value of the minimum value that can be represented."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscription",
    "pageType": "web-api-interface",
    "summary": "The PushSubscription interface of the Push API provides a subscription's URL endpoint along with the public key and secrets that should be used for encrypting push messages to this subscription.\nThis information must be passed to the application server, using any desired application-specific method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscription/endpoint",
    "pageType": "web-api-instance-property",
    "summary": "The endpoint read-only property of the\nPushSubscription interface returns a string containing\nthe endpoint associated with the push subscription."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscription/unsubscribe",
    "pageType": "web-api-instance-method",
    "summary": "The unsubscribe() method of the PushSubscription interface\nreturns a Promise that resolves to a boolean value when the\ncurrent subscription is successfully unsubscribed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscription/getKey",
    "pageType": "web-api-instance-method",
    "summary": "The getKey() method of the PushSubscription interface\nreturns an ArrayBuffer representing a client public key, which can then\nbe sent to a server and used in encrypting push message data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscription/expirationTime",
    "pageType": "web-api-instance-property",
    "summary": "The expirationTime read-only property of the\nPushSubscription interface returns a DOMHighResTimeStamp\nof the subscription expiration time associated with the push subscription, if there is\none, or null otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscription/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PushSubscription interface is a\nstandard serializer: it returns a JSON representation of the subscription properties,\nproviding a useful shortcut."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscription/options",
    "pageType": "web-api-instance-property",
    "summary": "The options read-only property\nof the PushSubscription interface is an object containing the options\nused to create the subscription."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushSubscription/subscriptionId",
    "pageType": "web-api-instance-property",
    "summary": "The subscriptionId read-only property of the\nPushSubscription interface returns a string containing\nthe subscription ID associated with the push subscription."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPropertyRule/name",
    "pageType": "web-api-instance-property",
    "summary": "The read-only name property of the CSSPropertyRule interface represents the property name, this being the serialization of the name given to the custom property in the @property rule's prelude."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPropertyRule",
    "pageType": "web-api-interface",
    "summary": "The CSSPropertyRule interface of the CSS Properties and Values API represents a single CSS @property rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPropertyRule/inherits",
    "pageType": "web-api-instance-property",
    "summary": "The read-only inherits property of the CSSPropertyRule interface returns the inherit flag of the custom property registration represented by the @property rule, a boolean describing whether or not the property inherits by default."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPropertyRule/initialValue",
    "pageType": "web-api-instance-property",
    "summary": "The read-only initialValue nullable property of the CSSPropertyRule interface returns the initial value of the custom property registration represented by the @property rule, controlling the property's initial value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPropertyRule/syntax",
    "pageType": "web-api-instance-property",
    "summary": "The read-only syntax property of the CSSPropertyRule interface returns the literal syntax of the custom property registration represented by the @property rule, controlling how the property's value is parsed at computed-value time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRBoundedReferenceSpace",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API's XRBoundedReferenceSpace interface describes a virtual world reference space which has preset boundaries. This extends XRReferenceSpace, which describes an essentially unrestricted space around the viewer's position. These bounds are defined using an array of points, each of which defines a vertex in a polygon inside which the user is allowed to move."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRBoundedReferenceSpace/boundsGeometry",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRBoundedReferenceSpace\nproperty boundsGeometry is an array of\nDOMPointReadOnly objects which specifies the points making up a polygon\ninside which the viewer is allowed to move. Each point is treated as a\ntwo-dimensional point, and must be located at ground level (that is,\nits y coordinate must be 0)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attr/name",
    "pageType": "web-api-instance-property",
    "summary": "The read-only name property of the Attr interface returns the qualified name of an attribute, that is the name of the attribute, with the namespace prefix, if any, in front of it. For example, if the local name is lang and the namespace prefix is xml, the returned qualified name is xml:lang."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attr",
    "pageType": "web-api-interface",
    "summary": "The Attr interface represents one of an element's attributes as an object. In most situations, you will directly retrieve the attribute value as a string (e.g., Element.getAttribute()), but some cases may require interacting with Attr instances (e.g., Element.getAttributeNode())."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attr/prefix",
    "pageType": "web-api-instance-property",
    "summary": "The read-only prefix property of the Attr returns the namespace prefix of the attribute, or null if no prefix is specified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attr/specified",
    "pageType": "web-api-instance-property",
    "summary": "The read-only specified property of the Attr interface always returns true."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attr/namespaceURI",
    "pageType": "web-api-instance-property",
    "summary": "The read-only namespaceURI property of the Attr interface returns the namespace URI of the attribute,\nor null if the element is not in a namespace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attr/ownerElement",
    "pageType": "web-api-instance-property",
    "summary": "The read-only ownerElement property of the Attr interface returns the Element the attribute belongs to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attr/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the Attr interface contains the value of the attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attr/localName",
    "pageType": "web-api-instance-property",
    "summary": "The read-only localName property of the Attr interface returns the local part of the qualified name of an attribute, that is the name of the attribute, stripped from any namespace in front of it. For example, if the qualified name is xml:lang, the returned local name is lang, if the element supports that namespace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageChannel",
    "pageType": "web-api-interface",
    "summary": "The MessageChannel interface of the Channel Messaging API allows us to create a new message channel and send data through it via its two MessagePort properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageChannel/MessageChannel",
    "pageType": "web-api-constructor",
    "summary": "The MessageChannel() constructor of the MessageChannel\ninterface returns a new MessageChannel object with two new\nMessagePort objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageChannel/port1",
    "pageType": "web-api-instance-property",
    "summary": "The port1 read-only property of the\nMessageChannel interface returns the first port of the message channel —\nthe port attached to the context that originated the channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageChannel/port2",
    "pageType": "web-api-instance-property",
    "summary": "The port2 read-only property of the\nMessageChannel interface returns the second port of the message channel —\nthe port attached to the context at the other end of the channel, which the message is\ninitially sent to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapterInfo",
    "pageType": "web-api-interface",
    "summary": "The GPUAdapterInfo interface of the WebGPU API contains identifying information about a GPUAdapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapterInfo/vendor",
    "pageType": "web-api-instance-property",
    "summary": "The vendor read-only property of the\nGPUAdapterInfo interface returns the name of the adapter vendor, or an empty string if it is not available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapterInfo/description",
    "pageType": "web-api-instance-property",
    "summary": "The description read-only property of the\nGPUAdapterInfo interface returns a human-readable string describing the adapter, or an empty string if it is not available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapterInfo/subgroupMinSize",
    "pageType": "web-api-instance-property",
    "summary": "The subgroupMinSize read-only property of the GPUAdapterInfo interface returns the minimum supported subgroup size for the GPUAdapter. This can be used along with the subgroups feature."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapterInfo/isFallbackAdapter",
    "pageType": "web-api-instance-property",
    "summary": "The isFallbackAdapter read-only property of the\nGPUAdapterInfo interface returns true if the adapter is a fallback adapter, and false if not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapterInfo/device",
    "pageType": "web-api-instance-property",
    "summary": "The device read-only property of the\nGPUAdapterInfo interface returns a vendor-specific identifier for the adapter, or an empty string if it is not available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapterInfo/subgroupMaxSize",
    "pageType": "web-api-instance-property",
    "summary": "The subgroupMaxSize read-only property of the GPUAdapterInfo interface returns the maximum supported subgroup size for the GPUAdapter. This can be used along with the subgroups feature."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUAdapterInfo/architecture",
    "pageType": "web-api-instance-property",
    "summary": "The architecture read-only property of the\nGPUAdapterInfo interface returns the name of the family or class of GPUs the adapter belongs to, or an empty string if it is not available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedWorkerGlobalScope/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the\nSharedWorkerGlobalScope interface returns the name that the\nSharedWorker was (optionally) given when it was created. This is the name\nthat the SharedWorker() constructor can pass\nto get a reference to the SharedWorkerGlobalScope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedWorkerGlobalScope",
    "pageType": "web-api-interface",
    "summary": "The SharedWorkerGlobalScope object (the SharedWorker global scope) is accessible through the self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See the complete list of functions available to workers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedWorkerGlobalScope/connect_event",
    "pageType": "web-api-event",
    "summary": "The connect event is fired in shared workers at their SharedWorkerGlobalScope when a new client connects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedWorkerGlobalScope/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the SharedWorkerGlobalScope interface discards any tasks queued in the SharedWorkerGlobalScope's event loop, effectively closing this particular scope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPipeline/getBindGroupLayout",
    "pageType": "web-api-instance-method",
    "summary": "The getBindGroupLayout() method of the\nGPURenderPipeline interface returns the pipeline's GPUBindGroupLayout object with the given index (i.e., included in the originating GPUDevice.createRenderPipeline() or GPUDevice.createRenderPipelineAsync() call's pipeline layout)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPipeline",
    "pageType": "web-api-interface",
    "summary": "The GPURenderPipeline interface of the WebGPU API represents a pipeline that controls the vertex and fragment shader stages and can be used in a GPURenderPassEncoder or GPURenderBundleEncoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPipeline/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPURenderPipeline interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTrackEvent",
    "pageType": "web-api-interface",
    "summary": "The WebRTC API interface RTCTrackEvent represents the track event, which is sent when a new MediaStreamTrack is added to an RTCRtpReceiver which is part of the RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTrackEvent/RTCTrackEvent",
    "pageType": "web-api-constructor",
    "summary": "The RTCTrackEvent() constructor creates and returns a new RTCTrackEvent object,\nconfigured to describe the track which has been added to the RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTrackEvent/receiver",
    "pageType": "web-api-instance-property",
    "summary": "The read-only receiver property\nof the RTCTrackEvent interface indicates the\nRTCRtpReceiver which is used to receive data containing media for the\ntrack to which the event refers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTrackEvent/streams",
    "pageType": "web-api-instance-property",
    "summary": "The WebRTC API\ninterface RTCTrackEvent's read-only\nstreams property specifies an array of\nMediaStream objects, one for each of the streams that comprise the\ntrack being added to the RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTrackEvent/track",
    "pageType": "web-api-instance-property",
    "summary": "The WebRTC API\ninterface RTCTrackEvent's read-only track\nproperty specifies the MediaStreamTrack that has been added to the\nRTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTrackEvent/transceiver",
    "pageType": "web-api-instance-property",
    "summary": "The WebRTC API interface RTCTrackEvent's\nread-only transceiver property indicates the\nRTCRtpTransceiver affiliated with the event's\ntrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle",
    "pageType": "web-api-interface",
    "summary": "The StorageAccessHandle interface represents access to unpartitioned state granted by a call to Document.requestStorageAccess()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/estimate",
    "pageType": "web-api-instance-method",
    "summary": "None."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/locks",
    "pageType": "web-api-instance-property",
    "summary": "The locks property of the StorageAccessHandle interface returns an unpartitioned session LockManager object if access was granted, and throws a SecurityError DOMException otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/SharedWorker",
    "pageType": "web-api-instance-method",
    "summary": "An unpartitioned SharedWorker object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/caches",
    "pageType": "web-api-instance-property",
    "summary": "The caches property of the StorageAccessHandle interface returns an unpartitioned CacheStorage object if access was granted, and throws a SecurityError DOMException otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/BroadcastChannel",
    "pageType": "web-api-instance-method",
    "summary": "An unpartitioned BroadcastChannel object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/sessionStorage",
    "pageType": "web-api-instance-property",
    "summary": "The sessionStorage property of the StorageAccessHandle interface returns an unpartitioned session Storage object if access was granted, and throws a SecurityError DOMException otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/revokeObjectURL",
    "pageType": "web-api-instance-method",
    "summary": "None (undefined)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/localStorage",
    "pageType": "web-api-instance-property",
    "summary": "The localStorage property of the StorageAccessHandle interface returns an unpartitioned local Storage object if access was granted, and throws a SecurityError DOMException otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/getDirectory",
    "pageType": "web-api-instance-method",
    "summary": "None."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/createObjectURL",
    "pageType": "web-api-instance-method",
    "summary": "A string containing an unpartitioned object URL that can be used to reference the contents of the specified source object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageAccessHandle/indexedDB",
    "pageType": "web-api-instance-property",
    "summary": "The indexedDB property of the StorageAccessHandle interface returns an unpartitioned IDBFactory object if access was granted, and throws a SecurityError DOMException otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers",
    "pageType": "web-api-interface",
    "summary": "The Headers interface of the Fetch API allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing headers from the list of the request's headers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/Headers",
    "pageType": "web-api-constructor",
    "summary": "The Headers() constructor creates a new\nHeaders object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/entries",
    "pageType": "web-api-instance-method",
    "summary": "The Headers.entries() method returns an\niterator allowing to go through all key/value pairs\ncontained in this object. Both the key and value of each pair are\nString objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/set",
    "pageType": "web-api-instance-method",
    "summary": "The set() method of the Headers interface\nsets a new value for an existing header inside a Headers object, or adds\nthe header if it does not already exist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the Headers interface\nreturns a byte string of all the values of a header within a Headers object\nwith a given name. If the requested header doesn't exist in the Headers\nobject, it returns null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/append",
    "pageType": "web-api-instance-method",
    "summary": "The append() method of the Headers\ninterface appends a new value onto an existing header inside a Headers\nobject, or adds the header if it does not already exist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the Headers interface\nreturns a boolean stating whether a Headers object contains a certain\nheader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/keys",
    "pageType": "web-api-instance-method",
    "summary": "The Headers.keys() method returns an\niterator allowing to go through all keys contained\nin this object. The keys are String objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the Headers\ninterface deletes a header from the current Headers object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The Headers.forEach() method executes a callback function once per each key/value pair in the Headers object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/values",
    "pageType": "web-api-instance-method",
    "summary": "The Headers.values() method returns an\niterator allowing to go through all values contained\nin this object. The values are String objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Headers/getSetCookie",
    "pageType": "web-api-instance-method",
    "summary": "The getSetCookie() method of the Headers interface returns an array containing the values of all Set-Cookie headers associated with a response. This allows Headers objects to handle having multiple Set-Cookie headers, which wasn't possible prior to its implementation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPoint",
    "pageType": "web-api-interface",
    "summary": "An SVGPoint represents a 2D or 3D point in the SVG coordinate system. It has been replaced in SVG 2 with DOMPoint and DOMPointReadOnly. All APIs that used to return an SVGPoint, including SVGSVGElement.createSVGPoint(), now return a DOMPoint instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/getAnimations",
    "pageType": "web-api-instance-method",
    "summary": "The getAnimations() method of the ShadowRoot interface\nreturns an array of all Animation objects currently in effect whose\ntarget elements are descendants of the shadow tree. This array includes CSS Animations, CSS Transitions, and Web Animations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot",
    "pageType": "web-api-interface",
    "summary": "The ShadowRoot interface of the Shadow DOM API is the root node of a DOM subtree that is rendered separately from a document's main DOM tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/delegatesFocus",
    "pageType": "web-api-instance-property",
    "summary": "The delegatesFocus read-only property of the ShadowRoot interface returns true if the shadow root delegates focus, and false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/pointerLockElement",
    "pageType": "web-api-instance-property",
    "summary": "The pointerLockElement read-only property of the ShadowRoot interface provides the element set as the target for mouse events while the pointer is locked.\nIt is null if lock is pending, pointer is unlocked, or the target is in another tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/pictureInPictureElement",
    "pageType": "web-api-instance-property",
    "summary": "The pictureInPictureElement read-only property of the\nShadowRoot interface returns the Element that is currently being\npresented in picture-in-picture mode in this shadow tree, or null if\npicture-in-picture mode is not currently in use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/elementFromPoint",
    "pageType": "web-api-instance-method",
    "summary": "The elementFromPoint() method, available on the ShadowRoot object, returns the element at the topmost shadow root layer at the specified coordinates relative to the viewport (the shadow root highest in the display z-order, that is able to receive pointer events). Shadow root elements that have pointer-events set to none are ignored."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/fullscreenElement",
    "pageType": "web-api-instance-property",
    "summary": "The fullscreenElement read-only property of the\nShadowRoot interface returns the element within the shadow tree that is currently displayed in full screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/host",
    "pageType": "web-api-instance-property",
    "summary": "The host read-only property of\nthe ShadowRoot returns a reference to the DOM element the\nShadowRoot is attached to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/setHTMLUnsafe",
    "pageType": "web-api-instance-method",
    "summary": "The setHTMLUnsafe() method of the ShadowRoot interface can be used to parse HTML input into a DocumentFragment, optionally filtering out unwanted elements and attributes, and then use it to replace the existing tree in the Shadow DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/innerHTML",
    "pageType": "web-api-instance-property",
    "summary": "The innerHTML property of the ShadowRoot interface gets or sets the HTML markup to the DOM tree inside the ShadowRoot."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/clonable",
    "pageType": "web-api-instance-property",
    "summary": "The clonable read-only property of the ShadowRoot interface returns true if the shadow root is clonable, and false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/styleSheets",
    "pageType": "web-api-instance-property",
    "summary": "The styleSheets read-only property of the ShadowRoot interface\nreturns a StyleSheetList of CSSStyleSheet objects, for stylesheets explicitly linked into or embedded in a shadow tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/serializable",
    "pageType": "web-api-instance-property",
    "summary": "The serializable read-only property of the ShadowRoot interface returns true if the shadow root is serializable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/activeElement",
    "pageType": "web-api-instance-property",
    "summary": "The activeElement read-only property of the\nShadowRoot interface returns the element within the shadow tree that has focus."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/mode",
    "pageType": "web-api-instance-property",
    "summary": "The mode read-only property of the ShadowRoot specifies its mode — either open or closed.\nThis defines whether or not the shadow root's internal features are accessible from JavaScript."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/setHTML",
    "pageType": "web-api-instance-method",
    "summary": "The setHTML() method of the ShadowRoot interface provides an XSS-safe method to parse and sanitize a string of HTML, which then replaces the existing tree in the Shadow DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/elementsFromPoint",
    "pageType": "web-api-instance-method",
    "summary": "The elementsFromPoint() method of the ShadowRoot interface returns an array of all the shadow root elements at the specified coordinates (relative to the viewport). The elements are ordered from the topmost element (highest in the display z-order), to the bottommost element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/adoptedStyleSheets",
    "pageType": "web-api-instance-property",
    "summary": "The adoptedStyleSheets property of the ShadowRoot interface sets an array of constructed stylesheets to be used by the shadow DOM subtree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/getHTML",
    "pageType": "web-api-instance-method",
    "summary": "The getHTML() method of the ShadowRoot interface is used to serialize a shadow root's DOM to an HTML string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ShadowRoot/slotAssignment",
    "pageType": "web-api-instance-property",
    "summary": "The read-only slotAssignment property of the ShadowRoot interface returns the slot assignment mode for the shadow DOM tree. Nodes are either automatically assigned (named) or manually assigned (manual). The value of this property defined using the slotAssignment option when calling Element.attachShadow()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSImportRule",
    "pageType": "web-api-interface",
    "summary": "The CSSImportRule interface represents an @import at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSImportRule/supportsText",
    "pageType": "web-api-instance-property",
    "summary": "The read-only supportsText property of the CSSImportRule interface returns the supports condition specified by the @import at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSImportRule/layerName",
    "pageType": "web-api-instance-property",
    "summary": "The read-only layerName property of the CSSImportRule interface returns the name of the cascade layer created by the @import at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSImportRule/styleSheet",
    "pageType": "web-api-instance-property",
    "summary": "The read-only styleSheet property of the\nCSSImportRule interface returns the CSS Stylesheet specified by the\n@import at-rule. This will be\nin the form of a CSSStyleSheet object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSImportRule/media",
    "pageType": "web-api-instance-property",
    "summary": "The read-only media property of the\nCSSImportRule interface returns a MediaList object,\ncontaining the value of the media attribute of the associated stylesheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSImportRule/href",
    "pageType": "web-api-instance-property",
    "summary": "The read-only href property of the\nCSSImportRule interface returns the URL specified by the\n@import at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSLayerBlockRule/name",
    "pageType": "web-api-instance-property",
    "summary": "The read-only name property of the CSSLayerBlockRule interface represents the name of the associated cascade layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSLayerBlockRule",
    "pageType": "web-api-interface",
    "summary": "The CSSLayerBlockRule represents a @layer block rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document_Object_Model/Selection_and_traversal_on_the_DOM_tree",
    "pageType": "guide",
    "summary": "The Selectors API provides methods that make it quick and easy to retrieve Element nodes from the DOM by matching against a set of selectors. This is much faster than past techniques, wherein it was necessary to, for example, use a loop in JavaScript code to locate the specific items you needed to find."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document_Object_Model",
    "pageType": "web-api-overview",
    "summary": "The Document Object Model (DOM) connects web pages to scripts or programming languages by representing the structure of a document—such as the HTML representing a web page—in memory. Usually it refers to JavaScript, even though modeling HTML, SVG, or XML documents as objects are not part of the core JavaScript language."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document_Object_Model/Building_and_updating_the_DOM_tree",
    "pageType": "guide",
    "summary": "This article is an overview of some powerful, fundamental DOM level 1 methods and how to use them from JavaScript. You will learn how to create, access and control, and remove HTML elements dynamically. The DOM methods presented here are not specific to HTML; they also apply to XML. The demonstrations provided here will work fine in any modern browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document_Object_Model/Anatomy_of_the_DOM",
    "pageType": "guide",
    "summary": "The DOM represents an XML or HTML document as a tree. This page introduces the basic structure of the DOM tree and the various properties and methods used to navigate it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document_Object_Model/Reflected_attributes",
    "pageType": "guide",
    "summary": "An attribute extends an HTML, XML, SVG or other element, changing its behavior or providing metadata."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document_Object_Model/Events",
    "pageType": "guide",
    "summary": "Events are fired to notify code of \"interesting changes\" that may affect code execution. These can arise from user interactions such as using a mouse or resizing a window, changes in the state of the underlying environment (e.g., low battery or media events from the operating system), and other causes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Picture-in-Picture_API",
    "pageType": "web-api-overview",
    "summary": "The Picture-in-Picture API allow websites to create a floating, always-on-top video window. This allows users to continue consuming media while they interact with other sites or applications on their device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats",
    "pageType": "web-api-interface",
    "summary": "The RTCIceCandidateStats dictionary of the WebRTC API is used to report statistics related to an RTCIceCandidate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCIceCandidateStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCIceCandidateStats dictionary is a string with the value \"local-candidate\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/url",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidateStats dictionary's\nurl property specifies the URL of the\nICE server from which the described candidate was obtained. This\nproperty is only available for local candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/usernameFragment",
    "pageType": "web-api-instance-property",
    "summary": "The usernameFragment property of the RTCIceCandidateStats interface is a string that represents the ICE username fragment (\"ice-ufrag\")."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol property of the RTCIceCandidateStats dictionary indicates the protocol the specified candidate would use for communication with the remote peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/port",
    "pageType": "web-api-instance-property",
    "summary": "The port property of the RTCIceCandidateStats dictionary specifies the network port used by the candidate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/candidateType",
    "pageType": "web-api-instance-property",
    "summary": "The candidateType property of the RTCIceCandidateStats dictionary is a string that indicates the type of ICE candidate the object represents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/deleted",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidateStats dictionary's\ndeleted property indicates whether or not the candidate\nhas been deleted or released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/foundation",
    "pageType": "web-api-instance-property",
    "summary": "The foundation property of the RTCIceCandidateStats interface is a string that allows correlation of candidates from a common network path on multiple RTCIceTransport objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/transportId",
    "pageType": "web-api-instance-property",
    "summary": "The transportId property of the RTCIceCandidateStats dictionary is a string that uniquely identifies the transport that produced the RTCTransportStats from which information about this candidate was taken."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/relayProtocol",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidateStats dictionary's\nrelayProtocol property specifies the protocol being used\nby a local ICE candidate to communicate with the TURN\nserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/address",
    "pageType": "web-api-instance-property",
    "summary": "The address property of the RTCIceCandidateStats dictionary indicates the address of the ICE candidate.\nWhile it's preferred that the address be specified as an IPv4 or IPv6 numeric address, a fully-qualified domain name can be used as well."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/priority",
    "pageType": "web-api-instance-property",
    "summary": "The priority property of the RTCIceCandidateStats dictionary is a positive integer value indicating the priority (or desirability) of the described candidate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidateStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCIceCandidateStats dictionary is a string that uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RadioNodeList",
    "pageType": "web-api-interface",
    "summary": "The RadioNodeList interface represents a collection of elements in a <form> returned by a call to HTMLFormControlsCollection.namedItem()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RadioNodeList/value",
    "pageType": "web-api-instance-property",
    "summary": "If the underlying element collection contains radio buttons, the\nRadioNodeList.value property represents the checked radio\nbutton. On retrieving the value property, the value of the\ncurrently checked radio button is returned as a string. If the collection\ndoes not contain any radio buttons or none of the radio buttons in the collection is in\nchecked state, the empty string is returned. On setting the\nvalue property, the first radio button input element whose\nvalue property is equal to the new value will be set to\nchecked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_texture_float_linear",
    "pageType": "webgl-extension",
    "summary": "The OES_texture_float_linear extension is part of the WebGL API and allows linear filtering with floating-point pixel types for textures."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMapReadOnly",
    "pageType": "web-api-interface",
    "summary": "The StylePropertyMapReadOnly interface of the CSS Typed Object Model API provides a read-only representation of a CSS declaration block that is an alternative to CSSStyleDeclaration. Retrieve an instance of this interface using Element.computedStyleMap()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMapReadOnly/entries",
    "pageType": "web-api-instance-method",
    "summary": "The StylePropertyMapReadOnly.entries() method returns an\narray of a given object's own enumerable property [key, value] pairs, in\nthe same order as that provided by a for...in loop\n(the difference being that a for-in loop enumerates properties in the prototype chain as\nwell)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMapReadOnly/size",
    "pageType": "web-api-instance-property",
    "summary": "The size read-only property of the\nStylePropertyMapReadOnly interface returns an unsigned long integer\ncontaining the size of the StylePropertyMapReadOnly object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMapReadOnly/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the\nStylePropertyMapReadOnly interface returns a CSSStyleValue\nobject for the first value of the specified property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMapReadOnly/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the\nStylePropertyMapReadOnly interface indicates whether the specified\nproperty is in the StylePropertyMapReadOnly object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMapReadOnly/keys",
    "pageType": "web-api-instance-method",
    "summary": "The StylePropertyMapReadOnly.keys() method returns a new\narray iterator containing the keys for each item\nin StylePropertyMapReadOnly"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMapReadOnly/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The StylePropertyMapReadOnly.forEach() method executes a\nprovided function once for each element of StylePropertyMapReadOnly."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMapReadOnly/getAll",
    "pageType": "web-api-instance-method",
    "summary": "The getAll() method of the\nStylePropertyMapReadOnly interface returns an array of\nCSSStyleValue objects containing the values for the provided property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMapReadOnly/values",
    "pageType": "web-api-instance-method",
    "summary": "The StylePropertyMapReadOnly.values() method returns a\nnew array iterator containing the values for each index in the\nStylePropertyMapReadOnly object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioCompletionEvent",
    "pageType": "web-api-interface",
    "summary": "The Web Audio API OfflineAudioCompletionEvent interface represents events that occur when the processing of an OfflineAudioContext is terminated. The complete event uses this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioCompletionEvent/OfflineAudioCompletionEvent",
    "pageType": "web-api-constructor",
    "summary": "The OfflineAudioCompletionEvent() constructor of the Web Audio API creates a new\nOfflineAudioCompletionEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioCompletionEvent/renderedBuffer",
    "pageType": "web-api-instance-property",
    "summary": "The renderedBuffer read-only property of the\nOfflineAudioCompletionEvent interface is an AudioBuffer\ncontaining the result of processing an OfflineAudioContext."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimateColorElement",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimateColorElement interface corresponds to the <animateColor> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSockets_API",
    "pageType": "web-api-overview",
    "summary": "The WebSocket API makes it possible to open a two-way interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive responses without having to poll the server for a reply."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_Java",
    "pageType": "guide",
    "summary": "This example shows you how to create a WebSocket API server using Oracle Java."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSockets_API/Writing_a_WebSocket_server_in_JavaScript_Deno",
    "pageType": "guide",
    "summary": "This example shows you how to create a WebSocket API server using Deno, with an accompanying web page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers",
    "pageType": "guide",
    "summary": "A WebSocket server is nothing more than an application listening on any port of a TCP server that follows a specific protocol. Creating a custom server can seem overwhelming if you have never done it before. It can actually be quite straightforward to implement a basic WebSocket server on your platform of choice, though."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSockets_API/Using_WebSocketStream",
    "pageType": "guide",
    "summary": "The WebSocketStream API is a Promise-based alternative to WebSocket for creating and using client-side WebSocket connections. WebSocketStream uses the Streams API to handle receiving and sending messages, meaning that socket connections can take advantage of stream backpressure automatically (no additional action required by the developer), regulating the speed of reading or writing to avoid bottlenecks in the application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_client_applications",
    "pageType": "guide",
    "summary": "In this guide we'll walk through the implementation of a WebSocket-based ping application. In this application, the client sends a \"ping\" message to the server every second, and the server responds with a \"pong\" message. The client listens for \"pong\" messages and logs them, keeping track of how many message exchanges there have been."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_server",
    "pageType": "guide",
    "summary": "If you would like to use the WebSocket API, it is useful if you have a server. In this article I will show you how to write one in C#. You can do it in any server-side language, but to keep things simple and more understandable, I chose Microsoft's language."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDestinationNode",
    "pageType": "web-api-interface",
    "summary": "The AudioDestinationNode interface represents the end destination of an audio graph in a given context — usually the speakers of your device. It can also be the node that will \"record\" the audio data when used with an OfflineAudioContext."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioDestinationNode/maxChannelCount",
    "pageType": "web-api-instance-property",
    "summary": "The maxChannelCount property of the AudioDestinationNode interface is an unsigned long defining the maximum amount of channels that the physical device can handle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window_Controls_Overlay_API",
    "pageType": "web-api-overview",
    "summary": "The Window Controls Overlay API gives Progressive Web Apps installed on desktop operating systems the ability to hide the default window title bar and display their own content\nover the full surface area of the app window, turning the control buttons (maximize, minimize, and close) into an overlay."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRPose",
    "pageType": "web-api-interface",
    "summary": "XRPose is a WebXR API interface representing a position and orientation in the 3D space, relative to the XRSpace within which it resides. The XRSpace—which is either an XRReferenceSpace or an XRBoundedReferenceSpace—defines the coordinate system used for the pose and, in the case of an XRViewerPose, its underlying views."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRPose/emulatedPosition",
    "pageType": "web-api-instance-property",
    "summary": "The emulatedPosition read-only attribute of the\nXRPose interface is a Boolean value indicating whether or not both the\nposition component of the pose's\ntransform is directly taken from the XR device, or\nit's simulated or computed based on other sources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRPose/transform",
    "pageType": "web-api-instance-property",
    "summary": "The transform read-only attribute of the\nXRPose interface is a XRRigidTransform object providing\nthe position and orientation of the pose relative to the base XRSpace\nas specified when the pose was obtained by calling\nXRFrame.getPose()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRPose/angularVelocity",
    "pageType": "web-api-instance-property",
    "summary": "The angularVelocity read-only property of the\nXRPose interface is a DOMPointReadOnly describing\nthe angular velocity in radians per second relative to the base\nXRSpace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRPose/linearVelocity",
    "pageType": "web-api-instance-property",
    "summary": "The linearVelocity read-only property of the\nXRPose interface is a DOMPointReadOnly describing\nthe linear velocity in meters per second relative to the base\nXRSpace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceMark",
    "pageType": "web-api-interface",
    "summary": "PerformanceMark is an interface for PerformanceEntry objects with an entryType of \"mark\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceMark/PerformanceMark",
    "pageType": "web-api-constructor",
    "summary": "The PerformanceMark() constructor creates a timestamp with the given name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceMark/detail",
    "pageType": "web-api-instance-property",
    "summary": "The read-only detail property returns arbitrary metadata that was included in the mark upon construction (either when using performance.mark() or the PerformanceMark() constructor)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskController",
    "pageType": "web-api-interface",
    "summary": "The TaskController interface of the Prioritized Task Scheduling API represents a controller object that can be used to both abort and change the priority of one or more prioritized tasks.\nIf there is no need to change task priorities, then AbortController can be used instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskController/TaskController",
    "pageType": "web-api-constructor",
    "summary": "The TaskController() constructor creates a new TaskController object, optionally setting the initial priority of its associated signal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskController/setPriority",
    "pageType": "web-api-instance-method",
    "summary": "The setPriority() method of the TaskController interface can be called to set a new priority for this controller's signal.\nIf a prioritized task is configured to use the signal, this will also change the task priority."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord",
    "pageType": "web-api-interface",
    "summary": "The MutationRecord is a read-only interface that represents an individual DOM mutation observed by a MutationObserver. It is the object inside the array passed to the callback of a MutationObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord/type",
    "pageType": "web-api-instance-property",
    "summary": "The MutationRecord read-only property type is the type of the MutationRecord observed by a MutationObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord/attributeName",
    "pageType": "web-api-instance-property",
    "summary": "The MutationRecord read-only property attributeName contains the name of a changed attribute belonging to a node that is observed by a MutationObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord/addedNodes",
    "pageType": "web-api-instance-property",
    "summary": "The MutationRecord read-only property addedNodes is a NodeList of nodes added to a target node by a mutation observed with a MutationObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord/nextSibling",
    "pageType": "web-api-instance-property",
    "summary": "The MutationRecord read-only property nextSibling is the next sibling of an added or removed child node of the target of a MutationObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord/removedNodes",
    "pageType": "web-api-instance-property",
    "summary": "The MutationRecord read-only property removedNodes is a NodeList of nodes removed from a target node by a mutation observed with a MutationObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord/target",
    "pageType": "web-api-instance-property",
    "summary": "The MutationRecord read-only property target is the target (i.e., the mutated/changed node) of a mutation observed with a MutationObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord/oldValue",
    "pageType": "web-api-instance-property",
    "summary": "The MutationRecord read-only property oldValue contains the character data or attribute value of an observed node before it was changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord/previousSibling",
    "pageType": "web-api-instance-property",
    "summary": "The MutationRecord read-only property previousSibling is the previous sibling of an added or removed child node of the target of a MutationObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationRecord/attributeNamespace",
    "pageType": "web-api-instance-property",
    "summary": "The MutationRecord read-only property attributeNamespace is the namespace of the mutated attribute in the MutationRecord observed by a MutationObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredentialCreationOptions",
    "pageType": "web-api-interface",
    "summary": "The PublicKeyCredentialCreationOptions dictionary represents the object passed to CredentialsContainer.create() as the value of the publicKey option: that is, when using create() to create a public key credential using the Web Authentication API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the History interface\nreturns a value representing the state at the top of the history stack. This is\na way to look at the state without having to wait for a popstate event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History",
    "pageType": "web-api-interface",
    "summary": "The History interface of the History API allows manipulation of the browser session history, that is the pages visited in the tab or frame that the current page is loaded in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History/back",
    "pageType": "web-api-instance-method",
    "summary": "The back() method of the History interface causes\nthe browser to move back one page in the session history."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History/forward",
    "pageType": "web-api-instance-method",
    "summary": "The forward() method of the History interface causes the browser to move\nforward one page in the session history. It has the same effect as calling\nhistory.go(1)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History/go",
    "pageType": "web-api-instance-method",
    "summary": "The go() method of the History interface loads a specific page from the\nsession history. You can use it to move forwards and backwards through the history\ndepending on the value of a parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the History interface\nreturns an integer representing the number of entries in the session\nhistory, including the currently loaded page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History/scrollRestoration",
    "pageType": "web-api-instance-property",
    "summary": "The scrollRestoration property of the History\ninterface allows web applications to explicitly set default scroll restoration behavior\non history navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History/pushState",
    "pageType": "web-api-instance-method",
    "summary": "The pushState() method of the History interface adds an entry to the browser's\nsession history stack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History/replaceState",
    "pageType": "web-api-instance-method",
    "summary": "The replaceState() method of the History interface modifies the current\nhistory entry, replacing it with the state object and\nURL passed in the method parameters. This method is particularly useful\nwhen you want to update the state object or URL of the current history entry in response\nto some user action."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTService",
    "pageType": "web-api-interface",
    "summary": "The BluetoothRemoteGATTService interface of the Web Bluetooth API represents a\nservice provided by a GATT server, including a device, a list of referenced services,\nand a list of the characteristics of this service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTService/isPrimary",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothGATTService.isPrimary read-only property\nreturns a boolean value that indicates whether this is a primary service. If it\nis not a primary service, it is a secondary service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTService/getCharacteristic",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothGATTService.getCharacteristic() method\nreturns a Promise to an instance of\nBluetoothRemoteGATTCharacteristic for a given universally unique identifier\n(UUID)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTService/device",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothGATTService.device read-only property\nreturns information about a Bluetooth device through an instance of\nBluetoothDevice."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTService/getCharacteristics",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothGATTService.getCharacteristics() method\nreturns a Promise to a list of BluetoothRemoteGATTCharacteristic\ninstances for a given universally unique identifier (UUID)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTService/uuid",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothGATTService.uuid read-only property\nreturns a string representing the UUID of this service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageRevealEvent",
    "pageType": "web-api-interface",
    "summary": "The PageRevealEvent event object is made available inside handler functions for the pagereveal event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageRevealEvent/viewTransition",
    "pageType": "web-api-instance-property",
    "summary": "The viewTransition read-only property of the PageRevealEvent interface contains a ViewTransition object representing the active view transition for the cross-document navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageRevealEvent/PageRevealEvent",
    "pageType": "web-api-constructor",
    "summary": "The PageRevealEvent() constructor creates a new\nPageRevealEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the MediaRecorder interface returns the current state of the current MediaRecorder object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder",
    "pageType": "web-api-interface",
    "summary": "The MediaRecorder interface of the MediaStream Recording API provides functionality to easily record media. It is created using the MediaRecorder() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond",
    "pageType": "web-api-instance-property",
    "summary": "The videoBitsPerSecond read-only\nproperty of the MediaRecorder interface returns the video encoding\nbit rate in use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/stop",
    "pageType": "web-api-instance-method",
    "summary": "The stop() method of the MediaRecorder interface is\nused to stop media capture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/dataavailable_event",
    "pageType": "web-api-event",
    "summary": "The dataavailable event of the MediaRecorder interface is fired when the MediaRecorder delivers media\ndata to your application for its use. The data is provided in a Blob\nobject that contains the data. This occurs in four situations:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/MediaRecorder",
    "pageType": "web-api-constructor",
    "summary": "The MediaRecorder() constructor\ncreates a new MediaRecorder object that will record a specified\nMediaStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/start",
    "pageType": "web-api-instance-method",
    "summary": "The start() method of the MediaRecorder interface begins recording media into one or more Blob objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/audioBitsPerSecond",
    "pageType": "web-api-instance-property",
    "summary": "The audioBitsPerSecond read-only\nproperty of the MediaRecorder interface returns the audio encoding bit\nrate in use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/stream",
    "pageType": "web-api-instance-property",
    "summary": "The stream read-only property of the MediaRecorder interface returns the stream that was passed into the MediaRecorder() constructor when the MediaRecorder was created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/pause",
    "pageType": "web-api-instance-method",
    "summary": "The pause() method of the MediaRecorder interface is used\nto pause recording of media streams."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/stop_event",
    "pageType": "web-api-event",
    "summary": "The stop event of the MediaRecorder interface is fired when\nMediaRecorder.stop() is called, or when the media stream being\ncaptured ends. In each case, the stop event is preceded by a\ndataavailable event, making the Blob captured up to that\npoint available for you to use in your application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/pause_event",
    "pageType": "web-api-event",
    "summary": "The pause event of the MediaRecorder interface is fired when\nMediaRecorder.pause() is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/requestData",
    "pageType": "web-api-instance-method",
    "summary": "The requestData()\nmethod of the MediaRecorder interface is used to raise a dataavailable event containing a\nBlob object of the captured media as it was when the method was\ncalled. This can then be grabbed and manipulated as you wish."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the MediaRecorder interface is fired when an error occurs: for example because recording wasn't allowed or was attempted using an unsupported codec."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/start_event",
    "pageType": "web-api-event",
    "summary": "The start event of the MediaRecorder interface is fired when\nMediaRecorder.start() is called. At this point, the data\nstarts being gathered into a Blob."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/resume",
    "pageType": "web-api-instance-method",
    "summary": "The resume() method of the MediaRecorder interface is used to resume media recording when it has been previously paused."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/isTypeSupported_static",
    "pageType": "web-api-static-method",
    "summary": "The isTypeSupported() static method of the MediaRecorder interface returns a Boolean which is true if the MIME media type specified is one the user agent should be able to successfully record."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/audioBitrateMode",
    "pageType": "web-api-instance-property",
    "summary": "The audioBitrateMode read-only property of the MediaRecorder interface returns the bitrate mode used to encode audio tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/resume_event",
    "pageType": "web-api-event",
    "summary": "The resume event of the MediaRecorder interface is fired when\nMediaRecorder.resume() is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorder/mimeType",
    "pageType": "web-api-instance-property",
    "summary": "The mimeType read-only property of the MediaRecorder interface returns the MIME media type that was specified when creating the MediaRecorder object, or, if none was specified, which was chosen by the browser.\nThis is the file format of the file that would result from writing all of the recorded data to disk."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSOM_view_API",
    "pageType": "web-api-overview",
    "summary": "The CSSOM view API lets you manipulate the visual view of a document, including getting the position of element layout boxes, obtaining the width or height of the viewport through script, and also scrolling an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSOM_view_API/Coordinate_systems",
    "pageType": "guide",
    "summary": "When specifying the location of a pixel in a graphics context (just like when specifying coordinate systems in algebra), its position is defined relative to a fixed point in the context. This fixed point is called the origin. The position is specified as the number of pixels offset from the origin along each dimension of the context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLPreElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLPreElement interface exposes specific properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating a block of preformatted text (<pre>)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Viewport_segments_API",
    "pageType": "web-api-overview",
    "summary": "The Viewport Segments API allows developers to access the position and dimensions of logically separate viewport segments using CSS and JavaScript. Viewport segments are created when the viewport is split by one or more hardware features such as a fold or a hinge between separate displays. With the Viewport Segments API, developers can create responsive designs optimized for different viewport segment sizes and arrangements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Viewport_segments_API/Using",
    "pageType": "guide",
    "summary": "This article explains how to use the Viewport Segments API to create responsive designs optimized for different viewport segment sizes and arrangements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration",
    "pageType": "web-api-interface",
    "summary": "The BackgroundFetchRegistration interface of the Background Fetch API represents an individual background fetch."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/match",
    "pageType": "web-api-instance-method",
    "summary": "The match() method of the BackgroundFetchRegistration interface returns the first matching BackgroundFetchRecord."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/uploadTotal",
    "pageType": "web-api-instance-property",
    "summary": "The uploadTotal read-only property of the BackgroundFetchRegistration interface returns the total number of bytes to be sent to the server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/matchAll",
    "pageType": "web-api-instance-method",
    "summary": "The matchAll() method of the BackgroundFetchRegistration interface returns an array of matching BackgroundFetchRecord objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/downloadTotal",
    "pageType": "web-api-instance-property",
    "summary": "The downloadTotal read-only property of the BackgroundFetchRegistration interface returns the total size in bytes of this download. This is set when the background fetch was registered, or 0 if not set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/progress_event",
    "pageType": "web-api-event",
    "summary": "The progress event of the BackgroundFetchRegistration interface thrown when the associated background fetch progresses."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/failureReason",
    "pageType": "web-api-instance-property",
    "summary": "The failureReason read-only property of the BackgroundFetchRegistration interface returns a string with a value that indicates a reason for a background fetch failure."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/recordsAvailable",
    "pageType": "web-api-instance-property",
    "summary": "The recordsAvailable read-only property of the BackgroundFetchRegistration interface returns true if there are requests and responses to be accessed. If this returns false, then match() and matchAll() can't be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/abort",
    "pageType": "web-api-instance-method",
    "summary": "The abort() method of the BackgroundFetchRegistration interface aborts an active background fetch."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/downloaded",
    "pageType": "web-api-instance-property",
    "summary": "The downloaded read-only property of the BackgroundFetchRegistration interface returns the size in bytes that has been downloaded, initially 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the BackgroundFetchRegistration interface returns a copy of the background fetch's ID."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/uploaded",
    "pageType": "web-api-instance-property",
    "summary": "The uploaded read-only property of the BackgroundFetchRegistration interface returns the size in bytes successfully sent, initially 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRegistration/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the BackgroundFetchRegistration interface returns a string indicating whether the background fetch was successful or failed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FedCM_API",
    "pageType": "web-api-overview",
    "summary": "The Federated Credential Management API (or FedCM API) provides a standard mechanism for identity providers (IdPs) to make identity federation services available on the web in a privacy-preserving way, without the need for third-party cookies and redirects. This includes a JavaScript API that enables the use of federated authentication for activities such as signing in or signing up on a website."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FedCM_API/RP_sign-in",
    "pageType": "guide",
    "summary": "This article describes the process by which a relying party (RP) can use the Federated Credential Management (FedCM) API to perform a federated sign-in via an identity provider (IdP)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FedCM_API/IDP_integration",
    "pageType": "guide",
    "summary": "This article details all the steps an identity provider (IdP) needs to take to integrate with the Federated Credential Management (FedCM) API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/User-Agent_Client_Hints_API",
    "pageType": "web-api-overview",
    "summary": "The User-Agent Client Hints API extends Client Hints to provide a way of exposing browser and platform information via User-Agent response and request headers, and a JavaScript API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLegendElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLLegendElement is an interface allowing to access properties of the <legend> elements. It inherits properties and methods from the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLegendElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLLegendElement interface returns an HTMLFormElement object that owns the HTMLFieldSetElement associated with this <legend>, or null if this legend is not associated with a <fieldset> owned by a form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFunctionDeclarations",
    "pageType": "web-api-interface",
    "summary": "The CSSFunctionDeclarations interface of the CSS Object Model represents a consecutive run of CSS declarations included within a @function body."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFunctionDeclarations/style",
    "pageType": "web-api-instance-property",
    "summary": "The style property of the CSSFunctionDeclarations interface returns a CSSFunctionDescriptors object representing the descriptors available in a @function body."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/drawIndirect",
    "pageType": "web-api-instance-method",
    "summary": "The drawIndirect() method of the\nGPURenderBundleEncoder interface draws primitives using parameters read from a GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder",
    "pageType": "web-api-interface",
    "summary": "The GPURenderBundleEncoder interface of the WebGPU API is used to pre-record bundles of commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/drawIndexed",
    "pageType": "web-api-instance-method",
    "summary": "The drawIndexed() method of the\nGPURenderBundleEncoder interface draws indexed primitives based on the vertex and index buffers provided by setVertexBuffer() and setIndexBuffer()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/draw",
    "pageType": "web-api-instance-method",
    "summary": "The draw() method of the\nGPURenderBundleEncoder interface draws primitives based on the vertex buffers provided by setVertexBuffer()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the\nGPURenderBundleEncoder interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/drawIndexedIndirect",
    "pageType": "web-api-instance-method",
    "summary": "The drawIndexedIndirect() method of the\nGPURenderBundleEncoder interface draws indexed primitives using parameters read from a GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/finish",
    "pageType": "web-api-instance-method",
    "summary": "The finish() method of the\nGPURenderBundleEncoder interface completes recording of the current render bundle command sequence, returning a GPURenderBundle object that can be passed into a GPURenderPassEncoder.executeBundles() call to execute those commands in a specific render pass."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/setVertexBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The setVertexBuffer() method of the\nGPURenderBundleEncoder interface sets or unsets the current GPUBuffer for the given slot that will provide vertex data for subsequent drawing commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/setIndexBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The setIndexBuffer() method of the\nGPURenderBundleEncoder interface sets the current GPUBuffer that will provide index data for subsequent drawing commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/popDebugGroup",
    "pageType": "web-api-instance-method",
    "summary": "The popDebugGroup() method of the\nGPURenderBundleEncoder interface ends a render bundle debug group, which is begun with a pushDebugGroup() call."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/insertDebugMarker",
    "pageType": "web-api-instance-method",
    "summary": "The insertDebugMarker() method of the\nGPURenderBundleEncoder interface marks a specific point in a series of encoded render bundle pass commands with a label."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/setPipeline",
    "pageType": "web-api-instance-method",
    "summary": "The setPipeline() method of the\nGPURenderBundleEncoder interface sets the GPURenderPipeline to use for subsequent render bundle commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/setBindGroup",
    "pageType": "web-api-instance-method",
    "summary": "The setBindGroup() method of the\nGPURenderBundleEncoder interface sets the GPUBindGroup to use for subsequent render bundle commands, for a given index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundleEncoder/pushDebugGroup",
    "pageType": "web-api-instance-method",
    "summary": "The pushDebugGroup() method of the\nGPURenderBundleEncoder interface begins a render bundle debug group, which is marked with a specified label, and will contain all subsequent encoded commands up until a popDebugGroup() method is invoked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding",
    "pageType": "web-api-interface",
    "summary": "The XRWebGLBinding interface is used to create layers that have a GPU backend."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/createEquirectLayer",
    "pageType": "web-api-instance-method",
    "summary": "The createEquirectLayer() method of the XRWebGLBinding interface returns an XREquirectLayer object, which is a layer that maps equirectangular coded data onto the inside of a sphere."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/XRWebGLBinding",
    "pageType": "web-api-constructor",
    "summary": "The XRWebGLBinding() constructor creates and\nreturns a new XRWebGLBinding object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/getViewSubImage",
    "pageType": "web-api-instance-method",
    "summary": "The getViewSubImage() method of the XRWebGLBinding interface returns a XRWebGLSubImage object representing the WebGL texture to render for a view."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/getReflectionCubeMap",
    "pageType": "web-api-instance-method",
    "summary": "The getReflectionCubeMap() method of the XRWebGLBinding interface returns a WebGLTexture object containing a reflection cube map texture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/nativeProjectionScaleFactor",
    "pageType": "web-api-instance-property",
    "summary": "The read-only nativeProjectionScaleFactor property of the XRWebGLBinding interface represents the scaling factor by which the projection layer's resolution is multiplied by to get the native resolution of the WebXR device's frame buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/createProjectionLayer",
    "pageType": "web-api-instance-method",
    "summary": "The createProjectionLayer() method of the XRWebGLBinding interface returns an XRProjectionLayer object which is a layer that fills the entire view of the observer and is refreshed close to the device's native frame rate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/createQuadLayer",
    "pageType": "web-api-instance-method",
    "summary": "The createQuadLayer() method of the XRWebGLBinding interface returns an XRQuadLayer object which is a layer that takes up a flat rectangular space in the virtual environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/getDepthInformation",
    "pageType": "web-api-instance-method",
    "summary": "The getDepthInformation() method of the XRWebGLBinding interface returns an XRWebGLDepthInformation object containing WebGL depth information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/createCylinderLayer",
    "pageType": "web-api-instance-method",
    "summary": "The createCylinderLayer() method of the XRWebGLBinding interface returns an XRCylinderLayer object, which is a layer that takes up a curved rectangular space in the virtual environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/getSubImage",
    "pageType": "web-api-instance-method",
    "summary": "The getSubImage() method of the XRWebGLBinding interface returns a XRWebGLSubImage object representing the WebGL texture to render."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLBinding/createCubeLayer",
    "pageType": "web-api-instance-method",
    "summary": "The createCubeLayer() method of the XRWebGLBinding interface returns an XRCubeLayer object, which is a layer that renders directly from a cubemap, and projects it onto the inside faces of a cube."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrackEvent",
    "pageType": "web-api-interface",
    "summary": "The TrackEvent interface of the HTML DOM API is used for events which represent changes to a set of available tracks on an HTML media element; these events are addtrack and removetrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrackEvent/TrackEvent",
    "pageType": "web-api-constructor",
    "summary": "The TrackEvent() constructor\ncreates and returns a new TrackEvent object describing an event which\noccurred on a list of tracks (AudioTrackList,\nVideoTrackList, or TextTrackList)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrackEvent/track",
    "pageType": "web-api-instance-property",
    "summary": "The read-only track property of\nthe TrackEvent interface specifies the media track object to which the\nevent applies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIdentityAssertion",
    "pageType": "web-api-interface",
    "summary": "The RTCIdentityAssertion interface of the WebRTC API represents the identity of a remote peer of the current connection. If no peer has yet been set and verified, then this interface returns null. Once set it can't be changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaMetadata",
    "pageType": "web-api-interface",
    "summary": "The MediaMetadata interface of the Media Session API allows a web page to provide rich media metadata for display in a platform UI."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaMetadata/MediaMetadata",
    "pageType": "web-api-constructor",
    "summary": "The MediaMetadata() constructor creates a new\nMediaMetadata object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaMetadata/chapterInfo",
    "pageType": "web-api-instance-property",
    "summary": "The chapterInfo read-only property of the MediaMetadata interface returns an array of chapter information metadata associated with playing media, represented by ChapterInformation object instances."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaMetadata/artist",
    "pageType": "web-api-instance-property",
    "summary": "The artist property of the\nMediaMetadata interface returns or sets the name of the artist, group,\ncreator, etc., of the media to be played."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaMetadata/artwork",
    "pageType": "web-api-instance-property",
    "summary": "The artwork property of the\nMediaMetadata interface returns or sets an array of\nobjects representing images associated with playing\nmedia."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaMetadata/album",
    "pageType": "web-api-instance-property",
    "summary": "The album property of the\nMediaMetadata interface returns or sets the name of the album or\ncollection containing the media to be played."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaMetadata/title",
    "pageType": "web-api-instance-property",
    "summary": "The title property of the\nMediaMetadata interface returns or sets the title of the media to be\nplayed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioContext",
    "pageType": "web-api-interface",
    "summary": "The OfflineAudioContext interface is an AudioContext interface representing an audio-processing graph built from linked together AudioNodes. In contrast with a standard AudioContext, an OfflineAudioContext doesn't render the audio to the device hardware; instead, it generates it, as fast as it can, and outputs the result to an AudioBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioContext/OfflineAudioContext",
    "pageType": "web-api-constructor",
    "summary": "The\nOfflineAudioContext() constructor—part of the Web Audio API—creates and returns a new\nOfflineAudioContext object instance, which can then be used to render\naudio to an AudioBuffer rather than to an audio output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioContext/complete_event",
    "pageType": "web-api-event",
    "summary": "The complete event of the OfflineAudioContext interface is fired when the rendering of an offline audio context is complete."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioContext/suspend",
    "pageType": "web-api-instance-method",
    "summary": "The suspend() method of the OfflineAudioContext interface schedules a suspension of the time\nprogression in the audio context at the specified time and returns a promise. This is\ngenerally useful at the time of manipulating the audio graph synchronously on\nOfflineAudioContext."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioContext/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the\nOfflineAudioContext interface returns an integer representing the size of\nthe buffer in sample-frames."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioContext/startRendering",
    "pageType": "web-api-instance-method",
    "summary": "The startRendering() method of the OfflineAudioContext Interface starts rendering the audio graph, taking into account the current connections and the current scheduled changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OfflineAudioContext/resume",
    "pageType": "web-api-instance-method",
    "summary": "The resume() method of the\nOfflineAudioContext interface resumes the progression of time in an audio\ncontext that has been suspended. The promise resolves immediately because the\nOfflineAudioContext does not require the audio hardware."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowClient",
    "pageType": "web-api-interface",
    "summary": "The WindowClient interface of the ServiceWorker API represents the scope of a service worker client that is a document in a browsing context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowClient/visibilityState",
    "pageType": "web-api-instance-property",
    "summary": "The visibilityState read-only property of the\nWindowClient interface indicates the visibility of the current client.\nThis value can be one of \"hidden\", \"visible\", or\n\"prerender\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowClient/focus",
    "pageType": "web-api-instance-method",
    "summary": "The focus() method of the WindowClient\ninterface gives user input focus to the current client and returns a\nPromise that resolves to the existing\nWindowClient."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowClient/ancestorOrigins",
    "pageType": "web-api-instance-property",
    "summary": "The ancestorOrigins read-only property of the WindowClient interface is an array of strings listing the origins of all ancestors of the browsing context represented by this WindowClient in reverse order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowClient/navigate",
    "pageType": "web-api-instance-method",
    "summary": "The navigate() method of the WindowClient\ninterface loads a specified URL into a controlled client page then returns a\nPromise that resolves to the existing WindowClient."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowClient/focused",
    "pageType": "web-api-instance-property",
    "summary": "The focused read-only property of the\nWindowClient interface is a boolean value that indicates whether\nthe current client has focus."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredential",
    "pageType": "web-api-interface",
    "summary": "The IdentityCredential interface of the Federated Credential Management API (FedCM) represents a user identity credential arising from a successful federated sign-in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredential/disconnect_static",
    "pageType": "web-api-static-method",
    "summary": "The disconnect() static method of the IdentityCredential interface disconnects a specified federated sign-in account from the IdP used to obtain the credential."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredential/configURL",
    "pageType": "web-api-instance-property",
    "summary": "The configURL read-only property of the IdentityCredential interface returns a string specifying the config file URL of the identity provider (IdP) used for sign-in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredential/token",
    "pageType": "web-api-instance-property",
    "summary": "The token read-only property of the IdentityCredential interface returns the token used to validate the associated sign-in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredential/isAutoSelected",
    "pageType": "web-api-instance-property",
    "summary": "The isAutoSelected read-only property of the IdentityCredential interface indicates whether the federated sign-in flow was carried out using auto-reauthentication (i.e., without user mediation) or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUPipelineError",
    "pageType": "web-api-interface",
    "summary": "The GPUPipelineError interface of the WebGPU API describes a pipeline failure. This is the value received when a Promise returned by a GPUDevice.createComputePipelineAsync() or GPUDevice.createRenderPipelineAsync() call rejects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUPipelineError/GPUPipelineError",
    "pageType": "web-api-constructor",
    "summary": "The GPUPipelineError() constructor creates a new\nGPUPipelineError object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUPipelineError/reason",
    "pageType": "web-api-instance-property",
    "summary": "The reason read-only property of the\nGPUPipelineError interface defines the reason the pipeline creation failed in a machine-readable way."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebOTP_API",
    "pageType": "web-api-overview",
    "summary": "The WebOTP API provides a streamlined user experience for web apps to verify that a phone number belongs to a user when using it as a sign-in factor. WebOTP is an extension of the Credential Management API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFontElement",
    "pageType": "web-api-interface",
    "summary": "Implements the document object model (DOM) representation of the font element. The HTML Font Element <font> defines the font size, font face and color of text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFontElement/color",
    "pageType": "web-api-instance-property",
    "summary": "The obsolete\nHTMLFontElement.color\nproperty is a string that reflects the color HTML attribute, containing either a named color or a color specified in the\nhexadecimal #RRGGBB format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFontElement/face",
    "pageType": "web-api-instance-property",
    "summary": "The obsolete\nHTMLFontElement.face\nproperty is a string that reflects the face HTML attribute, containing a comma-separated list of one or more font\nnames."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFontElement/size",
    "pageType": "web-api-instance-property",
    "summary": "The obsolete\nHTMLFontElement.size property is a\nstring that reflects the size HTML\nattribute. It contains either a font size ranging from 1 to 7 or a\nnumber relative to the default value 3, for example -2 or +1."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationPlaybackEvent",
    "pageType": "web-api-interface",
    "summary": "The AnimationPlaybackEvent interface of the Web Animations API represents animation events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationPlaybackEvent/AnimationPlaybackEvent",
    "pageType": "web-api-constructor",
    "summary": "The AnimationPlaybackEvent() constructor of the Web Animations API returns a new AnimationPlaybackEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationPlaybackEvent/timelineTime",
    "pageType": "web-api-instance-property",
    "summary": "The timelineTime read-only property of the AnimationPlaybackEvent interface represents the time value of the animation's timeline at the moment the event is queued. This will be unresolved if the animation was not associated with a timeline at the time the event was generated or if the associated timeline was inactive."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationPlaybackEvent/currentTime",
    "pageType": "web-api-instance-property",
    "summary": "The currentTime read-only property of the AnimationPlaybackEvent interface represents the current time of the animation that generated the event at the moment the event is queued. This will be unresolved if the animation was idle at the time the event was generated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory",
    "pageType": "web-api-interface",
    "summary": "The TrustedTypePolicyFactory interface of the Trusted Types API creates policies and allows the verification of Trusted Type objects against created policies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory/createPolicy",
    "pageType": "web-api-instance-method",
    "summary": "The createPolicy() method of the TrustedTypePolicyFactory interface creates a TrustedTypePolicy object that implements the rules passed as policyOptions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory/isScript",
    "pageType": "web-api-instance-method",
    "summary": "The isScript() method of the TrustedTypePolicyFactory interface returns true if it is passed a valid TrustedScript object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory/defaultPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The defaultPolicy read-only property of the TrustedTypePolicyFactory interface returns the default TrustedTypePolicy or null if this is empty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory/isHTML",
    "pageType": "web-api-instance-method",
    "summary": "The isHTML() method of the TrustedTypePolicyFactory interface returns true if it is passed a valid TrustedHTML object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory/emptyHTML",
    "pageType": "web-api-instance-property",
    "summary": "The emptyHTML read-only property of the TrustedTypePolicyFactory interface returns a TrustedHTML object containing an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory/getAttributeType",
    "pageType": "web-api-instance-method",
    "summary": "The getAttributeType() method of the TrustedTypePolicyFactory interface allows web developers to check if a Trusted Type is required for an element, and if so which Trusted Type is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory/getPropertyType",
    "pageType": "web-api-instance-method",
    "summary": "The getPropertyType() method of the TrustedTypePolicyFactory interface allows web developers to check if a Trusted Type is required for an element's property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory/isScriptURL",
    "pageType": "web-api-instance-method",
    "summary": "The isScriptURL() method of the TrustedTypePolicyFactory interface returns true if it is passed a valid TrustedScriptURL object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicyFactory/emptyScript",
    "pageType": "web-api-instance-property",
    "summary": "The emptyScript read-only property of the TrustedTypePolicyFactory interface returns a TrustedScript object containing an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Content_Index_API",
    "pageType": "web-api-overview",
    "summary": "The Content Index API allows developers to register their offline enabled content with the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSourceHandle",
    "pageType": "web-api-interface",
    "summary": "The MediaSourceHandle interface of the Media Source Extensions API is a proxy for a MediaSource that can be transferred from a dedicated worker back to the main thread and attached to a media element via its HTMLMediaElement.srcObject property. MediaSource objects are not transferable because they are event targets, hence the need for MediaSourceHandles."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IndexedDB_API",
    "pageType": "web-api-overview",
    "summary": "IndexedDB is a low-level API for client-side storage of significant amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data. While Web Storage is useful for storing smaller amounts of data, it is less useful for storing larger amounts of structured data. IndexedDB provides a solution. This is the main landing page for MDN's IndexedDB coverage — here we provide links to the full API reference and usage guides, browser support details, and some explanation of key concepts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IndexedDB_API/Checking_when_a_deadline_is_due",
    "pageType": "guide",
    "summary": "In this article we look at a complex example involving checking the current time and date against a deadline stored via IndexedDB. The main complication here is checking the stored deadline info (month, hour, day, etc.) against the current time and date taken from a Date object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB",
    "pageType": "guide",
    "summary": "IndexedDB is a way for you to persistently store data inside a user's browser. Because it lets you create web applications with rich query abilities regardless of network availability, your applications can work both online and offline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IndexedDB_API/Basic_Terminology",
    "pageType": "guide",
    "summary": "This article describes the key characteristics of IndexedDB, and introduces some essential terminology relevant to understanding the IndexedDB API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_lose_context",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_lose_context extension is part of the WebGL API and exposes functions to simulate losing and restoring a WebGLRenderingContext."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_lose_context/restoreContext",
    "pageType": "webgl-extension-method",
    "summary": "The WEBGL_lose_context.restoreContext() method is part of the WebGL API and allows you to simulate\nrestoring the context of a WebGLRenderingContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_lose_context/loseContext",
    "pageType": "webgl-extension-method",
    "summary": "The WEBGL_lose_context.loseContext() method is part of the WebGL API and allows you to simulate losing\nthe context of a WebGLRenderingContext context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams",
    "pageType": "web-api-interface",
    "summary": "The URLSearchParams interface defines utility methods to work with the query string of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/URLSearchParams",
    "pageType": "web-api-constructor",
    "summary": "The URLSearchParams() constructor creates and returns a\nnew URLSearchParams object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the\nURLSearchParams interface returns an\niterator allowing iteration through all key/value\npairs contained in this object. The iterator returns key/value pairs in the same order as they appear in the query string. The key and value of each pair are strings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/set",
    "pageType": "web-api-instance-method",
    "summary": "The set() method of the URLSearchParams\ninterface sets the value associated with a given search parameter to the given value.\nIf there were several matching values, this method deletes the others. If the search\nparameter doesn't exist, this method creates it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/size",
    "pageType": "web-api-instance-property",
    "summary": "The size read-only property of the URLSearchParams interface indicates the total number of search parameter entries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the URLSearchParams\ninterface returns the first value associated to the given search parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/append",
    "pageType": "web-api-instance-method",
    "summary": "The append() method of the URLSearchParams\ninterface appends a specified key/value pair as a new search parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/sort",
    "pageType": "web-api-instance-method",
    "summary": "The URLSearchParams.sort() method sorts all key/value\npairs contained in this object in place and returns undefined. Key/value pairs are sorted by the values of the UTF-16 code units of the keys. This method uses a stable sorting\nalgorithm (i.e., the relative order between key/value pairs with equal keys will be\npreserved)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the URLSearchParams interface returns a boolean value that indicates whether the specified parameter is in the search parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the URLSearchParams\ninterface returns an iterator allowing iteration\nthrough all keys contained in this object. The keys are strings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the URLSearchParams interface deletes specified parameters and their associated value(s) from the list of all search parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the\nURLSearchParams interface allows iteration through all values contained\nin this object via a callback function."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/getAll",
    "pageType": "web-api-instance-method",
    "summary": "The getAll() method of the URLSearchParams\ninterface returns all the values associated with a given search parameter as an array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the URLsearchParams\ninterface returns an iterator allowing iteration\nthrough all values contained in this object. The values are strings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLSearchParams/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() method of the\nURLSearchParams interface returns a query string suitable for use in a\nURL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessagePort",
    "pageType": "web-api-interface",
    "summary": "The MessagePort interface of the Channel Messaging API represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessagePort/postMessage",
    "pageType": "web-api-instance-method",
    "summary": "The postMessage() method of the\nMessagePort interface sends a message from the port, and optionally,\ntransfers ownership of objects to other browsing contexts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessagePort/message_event",
    "pageType": "web-api-event",
    "summary": "The message event is fired on a MessagePort object when a message arrives on that channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessagePort/start",
    "pageType": "web-api-instance-method",
    "summary": "The start() method of the MessagePort\ninterface starts the sending of messages queued on the port. This method is only needed\nwhen using EventTarget.addEventListener; it is implied when using\nonmessage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessagePort/messageerror_event",
    "pageType": "web-api-event",
    "summary": "The messageerror event is fired on a MessagePort object when it receives a message that can't be deserialized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessagePort/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the MessagePort\ninterface disconnects the port, so it is no longer active. This stops the flow of\nmessages to that port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFontPaletteValuesRule/name",
    "pageType": "web-api-instance-property",
    "summary": "The read-only name property of the CSSFontPaletteValuesRule interface represents the name identifying the associated @font-palette-values at-rule. A valid name always starts with two dashes, such as --Alternate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFontPaletteValuesRule",
    "pageType": "web-api-interface",
    "summary": "The CSSFontPaletteValuesRule interface represents an @font-palette-values at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFontPaletteValuesRule/overrideColors",
    "pageType": "web-api-instance-property",
    "summary": "The read-only overrideColors property of the CSSFontPaletteValuesRule interface is a string containing a list of color index and color pair that are to be used instead. It is specified in the same format as the corresponding override-colors descriptor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFontPaletteValuesRule/fontFamily",
    "pageType": "web-api-instance-property",
    "summary": "The read-only fontFamily property of the CSSFontPaletteValuesRule interface lists the font families the rule can be applied to. The font families must be named families; generic families like courier are not valid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFontPaletteValuesRule/basePalette",
    "pageType": "web-api-instance-property",
    "summary": "The read-only basePalette property of the CSSFontPaletteValuesRule interface indicates the base palette associated with the rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyStatusMap",
    "pageType": "web-api-interface",
    "summary": "The MediaKeyStatusMap interface of the Encrypted Media Extensions API is a read-only map of media key statuses by key IDs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyStatusMap/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method\nof the MediaKeyStatusMap interface returns a new Iterator object,\ncontaining an array of [key, value] pairs for each element in the status map, in\ninsertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyStatusMap/size",
    "pageType": "web-api-instance-property",
    "summary": "The size read-only property of\nthe MediaKeyStatusMap interface returns the number of key/value paIrs\nin the status map."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyStatusMap/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the MediaKeyStatusMap interface returns the status value associated with the given key, or undefined if there is none."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyStatusMap/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the\nMediaKeyStatusMap interface returns a Boolean, asserting\nwhether a value has been associated with the given key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyStatusMap/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the\nMediaKeyStatusMap interface returns a new Iterator object, containing\nkeys for each element in the status map, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyStatusMap/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the\nMediaKeyStatusMap interface calls callback once for each key-value pair\nin the status map, in insertion order. If an argument is present it will be passed to\nthe callback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyStatusMap/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the\nMediaKeyStatusMap interface returns a new Iterator object, containing\nvalues for each element in the status map, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction",
    "pageType": "web-api-interface",
    "summary": "The IDBTransaction interface of the IndexedDB API provides a static, asynchronous transaction on a database using event handler attributes. All reading and writing of data is done within transactions. You use IDBDatabase to start transactions, IDBTransaction to set the mode of the transaction (e.g., is it readonly or readwrite), and you access an IDBObjectStore to make a request. You can also use an IDBTransaction object to abort transactions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/error",
    "pageType": "web-api-instance-property",
    "summary": "The IDBTransaction.error property of the IDBTransaction interface\nreturns the type of error when there is an unsuccessful transaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/objectStore",
    "pageType": "web-api-instance-method",
    "summary": "The objectStore() method of the\nIDBTransaction interface returns an object store that has already been\nadded to the scope of this transaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/durability",
    "pageType": "web-api-instance-property",
    "summary": "The durability read-only property of the IDBTransaction interface returns the durability hint the transaction was created with.\nThis is a hint to the user agent of whether to prioritize performance or durability when committing the transaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/complete_event",
    "pageType": "web-api-event",
    "summary": "The complete event of the IndexedDB API is fired when the transaction has successfully committed, which is either after you explicit call IDBTransaction.commit() or when all requests have been successfully completed, and after handling their results, no new requests have been placed. See IDBTransaction for more information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/commit",
    "pageType": "web-api-instance-method",
    "summary": "The commit() method of the IDBTransaction interface commits the transaction if it is called on an active transaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/abort",
    "pageType": "web-api-instance-method",
    "summary": "The abort() method of the IDBTransaction\ninterface rolls back all the changes to objects in the database associated with this\ntransaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/mode",
    "pageType": "web-api-instance-property",
    "summary": "The mode read-only property of the\nIDBTransaction interface returns the current mode for accessing the\ndata in the object stores in the scope of the transaction (i.e., is the mode to be\nread-only, or do you want to write to the object stores?) The default value is\nreadonly."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/error_event",
    "pageType": "web-api-event",
    "summary": "The error event is fired on IDBTransaction when a request returns an error and the event bubbles up to the transaction object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/abort_event",
    "pageType": "web-api-event",
    "summary": "The abort event is fired when an IndexedDB transaction is aborted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/objectStoreNames",
    "pageType": "web-api-instance-property",
    "summary": "The objectStoreNames read-only property of the\nIDBTransaction interface returns a DOMStringList of names\nof IDBObjectStore objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBTransaction/db",
    "pageType": "web-api-instance-property",
    "summary": "The db read-only property of the IDBTransaction interface returns the database connection\nwith which this transaction is associated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUSupportedLimits",
    "pageType": "web-api-interface",
    "summary": "The GPUSupportedLimits interface of the WebGPU API describes the limits supported by a GPUAdapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/getEndPositionOfChar",
    "pageType": "web-api-instance-method",
    "summary": "The getEndPositionOfChar() method of the SVGTextContentElement interface returns the trailing position of a typographic character after text layout has been performed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/getComputedTextLength",
    "pageType": "web-api-instance-method",
    "summary": "The getComputedTextLength() method of the SVGTextContentElement interface represents the computed length for the text within the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement",
    "pageType": "web-api-interface",
    "summary": "The SVGTextContentElement interface is implemented by elements that support rendering child text content. It is inherited by various text-related interfaces, such as SVGTextElement, SVGTSpanElement, and SVGTextPathElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/getRotationOfChar",
    "pageType": "web-api-instance-method",
    "summary": "The getRotationOfChar() method of the SVGTextContentElement interface the represents the rotation of a typographic character."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/getNumberOfChars",
    "pageType": "web-api-instance-method",
    "summary": "The getNumberOfChars() method of the SVGTextContentElement interface represents the total number of addressable characters available for rendering within the current element, regardless of whether they will be rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/getStartPositionOfChar",
    "pageType": "web-api-instance-method",
    "summary": "The getStartPositionOfChar() method of the SVGTextContentElement interface returns the position of a typographic character after text layout has been performed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/textLength",
    "pageType": "web-api-instance-property",
    "summary": "The textLength read-only property of the SVGTextContentElement interface reflects the textLength attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/getExtentOfChar",
    "pageType": "web-api-instance-method",
    "summary": "The getExtentOfChar() method of the SVGTextContentElement interface the represents computed tight bounding box of the glyph cell that corresponds to a given typographic character."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/lengthAdjust",
    "pageType": "web-api-instance-property",
    "summary": "The lengthAdjust read-only property of the SVGTextContentElement interface reflects the lengthAdjust attribute of the given element. It takes one of the LENGTHADJUST_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/getCharNumAtPosition",
    "pageType": "web-api-instance-method",
    "summary": "The getCharNumAtPosition() method of the SVGTextContentElement interface represents the character which caused a text glyph to be rendered at a given position in the coordinate system. Because the relationship between characters and glyphs is not one-to-one, only the first character of the relevant typographic character is returned."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextContentElement/getSubStringLength",
    "pageType": "web-api-instance-method",
    "summary": "The getSubStringLength() method of the SVGTextContentElement interface represents the computed length of the formatted text advance distance for a substring of text within the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLParamElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLParamElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating <param> elements, representing a pair of a key and a value that acts as a parameter for an <object> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSetElement",
    "pageType": "web-api-interface",
    "summary": "The SVGSetElement interface corresponds to the <set> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebVR_API",
    "pageType": "web-api-overview",
    "summary": "WebVR provides support for exposing virtual reality devices — for example, head-mounted displays like the Oculus Rift or HTC Vive — to web apps, enabling developers to translate position and movement information from the display into movement around a 3D scene. This has numerous, interesting applications, from virtual product tours and interactive training apps to immersive first-person games."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebVR_API/Using_the_WebVR_API",
    "pageType": "guide",
    "summary": "The WebVR API is a fantastic addition to the web developer's toolkit, allowing WebGL scenes to be presented in virtual reality displays such as the Oculus Rift and HTC Vive. But how do you get started with developing VR apps for the Web? This article will guide you through the basics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebVR_API/Concepts",
    "pageType": "guide",
    "summary": "This article discusses some of the concepts and theory behind virtual reality (VR). If you are a newcomer to the area, it is worthwhile getting an understanding of these topics before you start diving into code."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebVR_API/Using_VR_controllers_with_WebVR",
    "pageType": "guide",
    "summary": "Many WebVR hardware setups feature controllers that go along with the headset. These can be used in WebVR apps via the Gamepad API, and specifically the Gamepad Extensions API that adds API features for accessing controller pose, haptic actuators, and more. This article explains the basics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaretPosition",
    "pageType": "web-api-interface",
    "summary": "The CaretPosition interface represents the caret position, an indicator for the text insertion point.\nYou can get a CaretPosition using the Document.caretPositionFromPoint() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaretPosition/offset",
    "pageType": "web-api-instance-property",
    "summary": "The offset property of the CaretPosition interface returns an integer representing the offset of the selection in the caret position node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaretPosition/offsetNode",
    "pageType": "web-api-instance-property",
    "summary": "The offsetNode property of the CaretPosition interface returns a Node containing the found node at the caret's position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaretPosition/getClientRect",
    "pageType": "web-api-instance-method",
    "summary": "The getClientRect() method of the CaretPosition interface returns the client rectangle for the caret range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The readyState read-only property of the\nMediaSource interface returns an enum representing the state of the\ncurrent MediaSource. The three possible values are:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource",
    "pageType": "web-api-interface",
    "summary": "The MediaSource interface of the Media Source Extensions API represents a source of media data for an HTMLMediaElement object. A MediaSource object can be attached to a HTMLMediaElement to be played in the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/MediaSource",
    "pageType": "web-api-constructor",
    "summary": "The MediaSource() constructor of the\nMediaSource interface constructs and returns a new\nMediaSource object with no associated source buffers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/sourceended_event",
    "pageType": "web-api-event",
    "summary": "The sourceended event is fired when a MediaSource object's readyState changes to \"ended\". This indicates that the application has finished sending data to the MediaSource. When an application has finished appending all media data to the SourceBuffer objects associated with a MediaSource, it calls the MediaSource.endOfStream() method on the MediaSource. This causes the readyState to transition to \"ended\" and triggers the sourceended event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/sourceopen_event",
    "pageType": "web-api-event",
    "summary": "The sourceopen event is fired when a MediaSource object's readyState changes to \"open\".\nThis indicates that the MediaSource is ready to receive data from SourceBuffer objects. This can occur either when the MediaSource object is first attached to a media element or when the readyState changes from \"ended\" back to \"open\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/handle",
    "pageType": "web-api-instance-property",
    "summary": "The handle read-only property of the MediaSource interface returns a MediaSourceHandle object, a proxy for the MediaSource that can be transferred from a dedicated worker back to the main thread and attached to a media element via its HTMLMediaElement.srcObject property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/endOfStream",
    "pageType": "web-api-instance-method",
    "summary": "The endOfStream() method of the\nMediaSource interface signals the end of the stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/canConstructInDedicatedWorker_static",
    "pageType": "web-api-static-property",
    "summary": "The canConstructInDedicatedWorker static property of the MediaSource interface returns true if MediaSource worker support is implemented, providing a low-latency feature detection mechanism."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/sourceBuffers",
    "pageType": "web-api-instance-property",
    "summary": "The sourceBuffers read-only property of the\nMediaSource interface returns a SourceBufferList object\ncontaining the list of SourceBuffer objects associated with this\nMediaSource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/setLiveSeekableRange",
    "pageType": "web-api-instance-method",
    "summary": "The setLiveSeekableRange() method of the\nMediaSource interface sets the range that the user can seek to in the\nmedia element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/duration",
    "pageType": "web-api-instance-property",
    "summary": "The duration property of the MediaSource\ninterface gets and sets the duration of the current media being presented."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/sourceclose_event",
    "pageType": "web-api-event",
    "summary": "The sourceclose event is fired when a MediaSource object's readyState changes to \"closed\". This indicates that the MediaSource has been detached from the media element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/addSourceBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The addSourceBuffer() method of the\nMediaSource interface creates a new SourceBuffer of the\ngiven MIME type and adds it to the MediaSource's\nsourceBuffers list. The new\nSourceBuffer is also returned."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/removeSourceBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The removeSourceBuffer() method of the MediaSource interface removes the given SourceBuffer from the SourceBufferList associated with this MediaSource object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/clearLiveSeekableRange",
    "pageType": "web-api-instance-method",
    "summary": "The clearLiveSeekableRange() method of the\nMediaSource interface clears a seekable range previously set with a call\nto setLiveSeekableRange()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/isTypeSupported_static",
    "pageType": "web-api-static-method",
    "summary": "The MediaSource.isTypeSupported() static method returns a boolean value which is true if the given MIME type and (optional) codec are likely to be supported by the current user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSource/activeSourceBuffers",
    "pageType": "web-api-instance-property",
    "summary": "The activeSourceBuffers read-only property of the\nMediaSource interface returns a SourceBufferList object\ncontaining a subset of the SourceBuffer objects contained within\nsourceBuffers — the list of objects\nproviding the selected video track, enabled audio tracks, and shown/hidden text tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen_Wake_Lock_API",
    "pageType": "web-api-overview",
    "summary": "The Screen Wake Lock API provides a way to prevent devices from dimming or locking the screen when an application needs to keep running."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeprecationReportBody",
    "pageType": "web-api-interface",
    "summary": "The DeprecationReportBody interface of the Reporting API represents the body of a deprecation report."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeprecationReportBody/lineNumber",
    "pageType": "web-api-instance-property",
    "summary": "The lineNumber read-only property of the DeprecationReportBody interface returns the line in the source file in which the deprecated feature was used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeprecationReportBody/columnNumber",
    "pageType": "web-api-instance-property",
    "summary": "The columnNumber read-only property of the DeprecationReportBody interface returns the line in the source file in which the deprecated feature was used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeprecationReportBody/sourceFile",
    "pageType": "web-api-instance-property",
    "summary": "The sourceFile read-only property of the DeprecationReportBody interface returns the path to the source file where the deprecated feature was used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeprecationReportBody/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the DeprecationReportBody interface is a serializer, and returns a JSON representation of the InterventionReportBody object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeprecationReportBody/message",
    "pageType": "web-api-instance-property",
    "summary": "The message read-only property of the DeprecationReportBody interface returns a human-readable description of the deprecation. This typically matches the message a browser will display in its DevTools console regarding a deprecated feature."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeprecationReportBody/anticipatedRemoval",
    "pageType": "web-api-instance-property",
    "summary": "The anticipatedRemoval read-only property of the DeprecationReportBody interface returns the date that the browser version which removes the feature will ship. This value can be used to prioritize warnings. If this property returns null because the date is unknown, then the deprecation should be considered low priority."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeprecationReportBody/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the DeprecationReportBody interface returns a string representing the feature or API that is deprecated. This can be used to group or count related reports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceParameters",
    "pageType": "web-api-interface",
    "summary": "The RTCIceParameters dictionary specifies the username fragment and password assigned to an ICE session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceParameters/usernameFragment",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceParameters dictionary's\nusernameFragment property specifies the username fragment\n(\"ufrag\") that uniquely identifies the corresponding ICE session for the duration of the\ncurrent ICE session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceParameters/password",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceParameters\ndictionary's password property specifies the ICE\npassword that, in tandem with the usernameFragment, uniquely identifies an ICE session for its entire\nduration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight",
    "pageType": "web-api-interface",
    "summary": "The Highlight interface of the CSS Custom Highlight API is used to represent a collection of Range instances to be styled using the API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/add",
    "pageType": "web-api-instance-method",
    "summary": "The add() method of the Highlight interface adds a new Range object to a highlight, to be styled using the CSS Custom Highlight API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/Highlight",
    "pageType": "web-api-constructor",
    "summary": "The Highlight() constructor returns a newly created\nHighlight object which can hold a collection of Range objects to be styled using the CSS Custom Highlight API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the Highlight interface is an enumerated String used to specify the meaning of the highlight. This allows assistive technologies, such as screen readers, to include this meaning when exposing the highlight to users."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the Highlight interface returns a new Iterator object that contains an array of [range, range] for each Range object in the Highlight object, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/size",
    "pageType": "web-api-instance-property",
    "summary": "The size property returns the number of Range objects in a\nHighlight object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the Highlight interface returns a boolean indicating whether a Range object exists in a Highlight object or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the Highlight interface is an alias for the values() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the Highlight interface removes a specified Range object from a Highlight object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the Highlight interface removes all the Range objects from a Highlight object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/priority",
    "pageType": "web-api-instance-property",
    "summary": "The priority property of the Highlight interface is a number used to determine which highlight's styles should be used to resolve style conflicts in overlapping parts. Highlights with a higher priority number have preference over those with a lower priority."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the Highlight interface executes a provided function once for each Range object in the Highlight object, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Highlight/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the Highlight interface returns a new Iterator object that contains the values for each Range object in the Highlight object in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDivElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLDivElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <div> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DelayNode",
    "pageType": "web-api-interface",
    "summary": "The DelayNode interface represents a delay-line; an AudioNode audio-processing module that causes a delay between the arrival of an input data and its propagation to the output."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DelayNode/DelayNode",
    "pageType": "web-api-constructor",
    "summary": "The DelayNode()\nconstructor of the Web Audio API\ncreates a new DelayNode object with a delay-line; an AudioNode\naudio-processing module that causes a delay between the arrival of an input data, and\nits propagation to the output."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DelayNode/delayTime",
    "pageType": "web-api-instance-property",
    "summary": "The delayTime property of the DelayNode interface is an a-rate AudioParam representing the amount of delay to apply."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandBuffer",
    "pageType": "web-api-interface",
    "summary": "The GPUCommandBuffer interface of the WebGPU API represents a pre-recorded list of GPU commands that can be submitted to a GPUQueue for execution."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandBuffer/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the\nGPUCommandBuffer interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RsaHashedKeyGenParams",
    "pageType": "web-api-interface",
    "summary": "The RsaHashedKeyGenParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.generateKey(), when generating any RSA-based key pair: that is, when the algorithm is identified as any of RSASSA-PKCS1-v1_5, RSA-PSS, or RSA-OAEP."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Encrypted_Media_Extensions_API",
    "pageType": "web-api-overview",
    "summary": "The Encrypted Media Extensions API provides interfaces for controlling the playback of content which is subject to a digital restrictions management scheme."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLQuery",
    "pageType": "web-api-interface",
    "summary": "The WebGLQuery interface is part of the WebGL 2 API and provides ways to asynchronously query for information. By default, occlusion queries and primitive queries are available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGComponentTransferFunctionElement",
    "pageType": "web-api-interface",
    "summary": "The SVGComponentTransferFunctionElement interface represents a base interface used by the component transfer function interfaces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGComponentTransferFunctionElement/offset",
    "pageType": "web-api-instance-property",
    "summary": "The offset read-only property of the SVGComponentTransferFunctionElement interface reflects the offset attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGComponentTransferFunctionElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the SVGComponentTransferFunctionElement interface reflects the type attribute of the given element. It takes one of the SVG_FECOMPONENTTRANSFER_TYPE_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGComponentTransferFunctionElement/intercept",
    "pageType": "web-api-instance-property",
    "summary": "The intercept read-only property of the SVGComponentTransferFunctionElement interface reflects the intercept attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGComponentTransferFunctionElement/amplitude",
    "pageType": "web-api-instance-property",
    "summary": "The amplitude read-only property of the SVGComponentTransferFunctionElement interface reflects the amplitude attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGComponentTransferFunctionElement/tableValues",
    "pageType": "web-api-instance-property",
    "summary": "The tableValues read-only property of the SVGComponentTransferFunctionElement interface reflects the tableValues attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGComponentTransferFunctionElement/slope",
    "pageType": "web-api-instance-property",
    "summary": "The slope read-only property of the SVGComponentTransferFunctionElement interface reflects the slope attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGComponentTransferFunctionElement/exponent",
    "pageType": "web-api-instance-property",
    "summary": "The exponent read-only property of the SVGComponentTransferFunctionElement interface reflects the exponent attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/View_Transition_API",
    "pageType": "web-api-overview",
    "summary": "The View Transition API provides a mechanism for easily creating animated transitions between different website views. This includes animating between DOM states in a single-page app (SPA), and animating the navigation between documents in a multi-page app (MPA)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/View_Transition_API/Using",
    "pageType": "guide",
    "summary": "This article explains the theory behind how the View Transition API works, how to create view transitions and customize the transition animations, and how to manipulate active view transitions. This covers view transitions for both DOM state updates in a single-page app (SPA), and navigating between documents in a multi-page app (MPA)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMetadataElement",
    "pageType": "web-api-interface",
    "summary": "The SVGMetadataElement interface corresponds to the <metadata> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDeadline/didTimeout",
    "pageType": "web-api-instance-property",
    "summary": "The read-only didTimeout property on the\nIdleDeadline interface is a Boolean value which\nindicates whether or not the idle callback is being invoked because the timeout interval\nspecified when Window.requestIdleCallback() was called has expired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDeadline",
    "pageType": "web-api-interface",
    "summary": "The IdleDeadline interface is used as the data type of the input parameter to idle callbacks established by calling Window.requestIdleCallback(). It offers a method, timeRemaining(), which lets you determine how much longer the user agent estimates it will remain idle and a property, didTimeout, which lets you determine if your callback is executing because its timeout duration expired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDeadline/timeRemaining",
    "pageType": "web-api-instance-method",
    "summary": "The timeRemaining() method\non the IdleDeadline interface returns the estimated number of\nmilliseconds remaining in the current idle period. The callback can call this method at\nany time to determine how much time it can continue to work before it must return. For\nexample, if the callback finishes a task and has another one to begin, it can call\ntimeRemaining() to see if there's enough time to complete the next task. If\nthere isn't, the callback can just return immediately, or look for other work to do with\nthe remaining time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTServer",
    "pageType": "web-api-interface",
    "summary": "The BluetoothRemoteGATTServer interface of the Web Bluetooth API represents a GATT\nServer on a remote device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTServer/getPrimaryServices",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTServer.getPrimaryServices() method returns a\npromise to a list of primary BluetoothRemoteGATTService objects offered by the\nBluetooth device for a specified BluetoothServiceUUID."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTServer/connected",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothRemoteGATTServer.connected read-only\nproperty returns a boolean value that returns true while this script execution\nenvironment is connected to this.device. It can be false while the user\nagent is physically connected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTServer/getPrimaryService",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTServer.getPrimaryService() method\nreturns a promise to the primary BluetoothRemoteGATTService offered by the\nBluetooth device for a specified bluetooth service UUID."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTServer/device",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothRemoteGATTServer.device read-only property\nreturns a reference to the BluetoothDevice running the server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTServer/connect",
    "pageType": "web-api-instance-method",
    "summary": "The\nBluetoothRemoteGATTServer.connect() method causes the\nscript execution environment to connect to this.device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTServer/disconnect",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTServer.disconnect() method causes\nthe script execution environment to disconnect from this.device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationEffect",
    "pageType": "web-api-interface",
    "summary": "The AnimationEffect interface of the Web Animations API is an interface representing animation effects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationEffect/getTiming",
    "pageType": "web-api-instance-method",
    "summary": "The AnimationEffect.getTiming() method of the AnimationEffect interface returns an object containing the timing properties for the Animation Effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationEffect/updateTiming",
    "pageType": "web-api-instance-method",
    "summary": "The updateTiming() method of the AnimationEffect interface updates the specified timing properties for an animation effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationEffect/getComputedTiming",
    "pageType": "web-api-instance-method",
    "summary": "The getComputedTiming() method of the AnimationEffect interface returns the calculated timing properties for this animation effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The CookieChangeEvent interface of the Cookie Store API is the event type of the change event fired at a CookieStore when any cookies are created or deleted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieChangeEvent/changed",
    "pageType": "web-api-instance-property",
    "summary": "The changed read-only property of the CookieChangeEvent interface returns an array of the cookies that have been changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieChangeEvent/CookieChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The CookieChangeEvent() constructor creates a new CookieChangeEvent object\nwhich is the event type of the change event fired at a CookieStore when any cookie changes occur.\nThis constructor is called by the browser when a change event occurs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieChangeEvent/deleted",
    "pageType": "web-api-instance-property",
    "summary": "The deleted read-only property of the CookieChangeEvent interface returns an array of the cookies that have been deleted by the given CookieChangeEvent instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_compressed_texture_pvrtc",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_compressed_texture_pvrtc extension is part of the WebGL API and exposes four PVRTC compressed texture formats."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheetList",
    "pageType": "web-api-interface",
    "summary": "The StyleSheetList interface represents a list of CSSStyleSheet objects. An instance of this object can be returned by Document.styleSheets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheetList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method of the StyleSheetList interface returns a single CSSStyleSheet object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheetList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the StyleSheetList interface returns the number of CSSStyleSheet objects in the collection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamAudioSourceNode",
    "pageType": "web-api-interface",
    "summary": "The MediaStreamAudioSourceNode interface is a type of AudioNode which operates as an audio source whose media is received from a MediaStream obtained using the WebRTC or Media Capture and Streams APIs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamAudioSourceNode/MediaStreamAudioSourceNode",
    "pageType": "web-api-constructor",
    "summary": "The Web Audio API's MediaStreamAudioSourceNode() constructor\ncreates and returns a new MediaStreamAudioSourceNode object which uses\nthe first audio track of a given MediaStream as its source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamAudioSourceNode/mediaStream",
    "pageType": "web-api-instance-property",
    "summary": "The MediaStreamAudioSourceNode interface's\nread-only mediaStream property indicates the\nMediaStream that contains the audio track from which the node is\nreceiving audio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeList",
    "pageType": "web-api-interface",
    "summary": "NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeList/entries",
    "pageType": "web-api-instance-method",
    "summary": "The NodeList.entries() method returns an\niterator allowing to go through all key/value pairs\ncontained in this object. The values are Node objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeList/item",
    "pageType": "web-api-instance-method",
    "summary": "Returns a node from a NodeList by index. This method\ndoesn't throw exceptions as long as you provide arguments. A value of null\nis returned if the index is out of range, and a TypeError is thrown if no\nargument is provided."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeList/length",
    "pageType": "web-api-instance-property",
    "summary": "The NodeList.length property returns the number of items\nin a NodeList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeList/keys",
    "pageType": "web-api-instance-method",
    "summary": "The NodeList.keys() method returns an\niterator allowing to go through all keys contained\nin this object. The keys are unsigned integer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeList/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the NodeList\ninterface calls the callback given in parameter once for each value pair in the list, in\ninsertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeList/values",
    "pageType": "web-api-instance-method",
    "summary": "The NodeList.values() method returns an\niterator allowing to go through all values contained\nin this object. The values are Node objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor_APIs",
    "pageType": "web-api-overview",
    "summary": "The Sensor APIs are a set of interfaces built to a common design that expose device sensors in a consistent way to the web platform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SyncManager",
    "pageType": "web-api-interface",
    "summary": "The SyncManager interface of the Background Synchronization API provides an interface for registering and listing sync registrations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SyncManager/getTags",
    "pageType": "web-api-instance-method",
    "summary": "The getTags() method of the\nSyncManager interface returns a list of developer-defined identifiers for\nSyncManager registrations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SyncManager/register",
    "pageType": "web-api-instance-method",
    "summary": "The register() method of the SyncManager interface registers a synchronization event, triggering a sync event inside the associated service worker as soon as network connectivity is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BiquadFilterNode",
    "pageType": "web-api-interface",
    "summary": "The BiquadFilterNode interface represents a simple low-order filter, and is created using the BaseAudioContext/createBiquadFilter method. It is an AudioNode that can represent different kinds of filters, tone control devices, and graphic equalizers. A BiquadFilterNode always has exactly one input and one output."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BiquadFilterNode/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the BiquadFilterNode interface is a string (enum) value defining the kind of filtering algorithm the node is implementing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BiquadFilterNode/BiquadFilterNode",
    "pageType": "web-api-constructor",
    "summary": "The BiquadFilterNode()\nconstructor of the Web Audio API\ncreates a new BiquadFilterNode object, which represents a simple\nlow-order filter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BiquadFilterNode/gain",
    "pageType": "web-api-instance-property",
    "summary": "The gain property of the BiquadFilterNode interface is an a-rate AudioParam — a double representing the gain used in the current filtering algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BiquadFilterNode/frequency",
    "pageType": "web-api-instance-property",
    "summary": "The frequency property of the BiquadFilterNode interface is an a-rate AudioParam — a double representing a frequency in the current filtering algorithm measured in hertz (Hz)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BiquadFilterNode/getFrequencyResponse",
    "pageType": "web-api-instance-method",
    "summary": "The getFrequencyResponse() method of the BiquadFilterNode interface takes the current filtering algorithm's settings and calculates the frequency response for frequencies specified in a specified array of frequencies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BiquadFilterNode/Q",
    "pageType": "web-api-instance-property",
    "summary": "The Q property of the BiquadFilterNode interface is an a-rate AudioParam, a double representing a Q factor, or quality factor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BiquadFilterNode/detune",
    "pageType": "web-api-instance-property",
    "summary": "The detune property of the BiquadFilterNode interface is an a-rate AudioParam representing detuning of the frequency in cents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver",
    "pageType": "web-api-interface",
    "summary": "The RTCRtpReceiver interface of the WebRTC API manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver/getCapabilities_static",
    "pageType": "web-api-static-method",
    "summary": "The static method RTCRtpReceiver.getCapabilities() returns an object describing the codec and header extension capabilities supported by RTCRtpReceiver objects on the current device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver/jitterBufferTarget",
    "pageType": "web-api-instance-property",
    "summary": "The jitterBufferTarget property of the RTCRtpReceiver interface is a DOMHighResTimeStamp that indicates the application's preferred duration, in milliseconds, for which the jitter buffer should hold media before playing it out."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver/getParameters",
    "pageType": "web-api-instance-method",
    "summary": "The getParameters() method of the RTCRtpReceiver interface returns an object describing the current configuration for how the receiver's track is decoded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver/transport",
    "pageType": "web-api-instance-property",
    "summary": "The read-only transport property of an\nRTCRtpReceiver object provides the RTCDtlsTransport object\nused to interact with the underlying transport over which the receiver is exchanging\nReal-time Transport Control Protocol (RTCP) packets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver/track",
    "pageType": "web-api-instance-property",
    "summary": "The track read-only property of the\nRTCRtpReceiver interface returns the MediaStreamTrack\nassociated with the current RTCRtpReceiver instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver/getStats",
    "pageType": "web-api-instance-method",
    "summary": "The RTCRtpReceiver method getStats() asynchronously requests an RTCStatsReport object which provides statistics about incoming traffic on the owning RTCPeerConnection, returning a Promise whose fulfillment handler will be called once the results are available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver/transform",
    "pageType": "web-api-instance-property",
    "summary": "The transform property of the RTCRtpReceiver object is used to insert a transform stream (TransformStream) running in a worker thread into the receiver pipeline.\nThis allows stream transforms to be applied to encoded video and audio frames as they arrive from the packetizer (before they are played/rendered)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver/getContributingSources",
    "pageType": "web-api-instance-method",
    "summary": "The getContributingSources() method of the RTCRtpReceiver interface returns an array of objects, each corresponding to one CSRC (contributing source) identifier received by the current RTCRtpReceiver in the last ten seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpReceiver/getSynchronizationSources",
    "pageType": "web-api-instance-method",
    "summary": "The getSynchronizationSources() method of the RTCRtpReceiver interface returns an array of objects, each corresponding to one SSRC (synchronization source) identifier received by the current RTCRtpReceiver in the last ten seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMaskElement",
    "pageType": "web-api-interface",
    "summary": "The SVGMaskElement interface provides access to the properties of <mask> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMaskElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The read-only x property of the SVGMaskElement interface returns an SVGAnimatedLength object containing the value of the x attribute of the <mask>. It represents the x-axis coordinate of the top-left corner of the masking area."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMaskElement/maskContentUnits",
    "pageType": "web-api-instance-property",
    "summary": "The read-only maskContentUnits property of the SVGMaskElement interface reflects the maskContentUnits attribute. It indicates which coordinate system to use for the contents of the <mask> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMaskElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The read-only height property of the SVGMaskElement interface returns an SVGAnimatedLength object containing the value of the height attribute of the <mask>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMaskElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The read-only y property of the SVGMaskElement interface returns an SVGAnimatedLength object containing the value of the y attribute of the <mask>. It represents the y-axis coordinate of the top-left corner of the masking area."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMaskElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The read-only width property of the SVGMaskElement interface returns an SVGAnimatedLength object containing the value of the width attribute of the <mask>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMaskElement/maskUnits",
    "pageType": "web-api-instance-property",
    "summary": "The read-only maskUnits property of the SVGMaskElement interface reflects the maskUnits attribute of a <mask> element which defines the coordinate system to use for the mask of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Device_Posture_API",
    "pageType": "web-api-overview",
    "summary": "The Device Posture API allows developers to create user interfaces that adapt to a foldable device's posture and respond to posture changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGradientElement",
    "pageType": "web-api-interface",
    "summary": "The SVGGradient interface is a base interface used by SVGLinearGradientElement and SVGRadialGradientElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGradientElement/spreadMethod",
    "pageType": "web-api-instance-property",
    "summary": "The spreadMethod read-only property of the SVGGradientElement interface reflects the spreadMethod attribute of the given element. It takes one of the SVG_SPREADMETHOD_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGradientElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGGradientElement interface reflects the href or xlink:href \nDeprecated\n attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGradientElement/gradientTransform",
    "pageType": "web-api-instance-property",
    "summary": "The gradientTransform read-only property of the SVGGradientElement interface reflects the gradientTransform attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGradientElement/gradientUnits",
    "pageType": "web-api-instance-property",
    "summary": "The gradientUnits read-only property of the SVGGradientElement interface reflects the gradientUnits attribute of the given element. It takes one of the SVG_UNIT_TYPE_* constants defined in SVGUnitTypes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats",
    "pageType": "web-api-interface",
    "summary": "The RTCTransportStats dictionary of the WebRTC API provides information about the transport (RTCDtlsTransport and its underlying RTCIceTransport) used by a particular candidate pair."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/dtlsCipher",
    "pageType": "web-api-instance-property",
    "summary": "The dtlsCipher property of the RTCTransportStats dictionary is a string that indicates the descriptive name of the cipher suite used for the DTLS transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCTransportStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/localCertificateId",
    "pageType": "web-api-instance-property",
    "summary": "The localCertificateId property of the RTCTransportStats dictionary is a string that indicates the id of the local certificate used by this RTCIceTransport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/selectedCandidatePairId",
    "pageType": "web-api-instance-property",
    "summary": "The selectedCandidatePairId property of the RTCTransportStats dictionary represents the unique identifier for the candidate pair stats associated with this transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/packetsSent",
    "pageType": "web-api-instance-property",
    "summary": "The packetsSent property of the RTCTransportStats dictionary indicates the total number of packets sent over this transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCTransportStats dictionary is a string with the value \"transport\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/remoteCertificateId",
    "pageType": "web-api-instance-property",
    "summary": "The remoteCertificateId property of the RTCTransportStats dictionary is a string that indicates the id of the remote certificate used by this RTCIceTransport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/iceLocalUsernameFragment",
    "pageType": "web-api-instance-property",
    "summary": "The iceLocalUsernameFragment property of the RTCTransportStats dictionary is a string that indicates the local username fragment (\"ufrag\" or \"ice-ufrag\") that uniquely identifies the ICE interaction session managed by this transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/dtlsState",
    "pageType": "web-api-instance-property",
    "summary": "The dtlsState property of the RTCTransportStats dictionary is a string that indicates the current state of the underlying RTCDtlsTransport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/iceState",
    "pageType": "web-api-instance-property",
    "summary": "The iceState property of the RTCTransportStats dictionary is a string that indicates the current ICE state of the underlying RTCIceTransport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/selectedCandidatePairChanges",
    "pageType": "web-api-instance-property",
    "summary": "The selectedCandidatePairChanges property of the RTCTransportStats dictionary indicates the total number of times that the selected candidate pair of this transport has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/dtlsRole",
    "pageType": "web-api-instance-property",
    "summary": "The dtlsRole property of the RTCTransportStats dictionary is a string that indicates the role of the associated RTCPeerConnection in the DTLS negotiation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/srtpCipher",
    "pageType": "web-api-instance-property",
    "summary": "The srtpCipher property of the RTCTransportStats dictionary indicates the descriptive name of the protection profile used for the Secure Real-time Transport Protocol (SRTP) transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/tlsVersion",
    "pageType": "web-api-instance-property",
    "summary": "The tlsVersion property of the RTCTransportStats dictionary indicates the negotiated TLS version of an underlying DTLS transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/bytesReceived",
    "pageType": "web-api-instance-property",
    "summary": "The bytesReceived property of the RTCTransportStats dictionary indicates the total number of payload bytes received on this transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/bytesSent",
    "pageType": "web-api-instance-property",
    "summary": "The bytesSent property of the RTCTransportStats dictionary indicates the total number of payload bytes sent on this transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/packetsReceived",
    "pageType": "web-api-instance-property",
    "summary": "The packetsReceived property of the RTCTransportStats dictionary indicates the total number of packets received on this transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/iceRole",
    "pageType": "web-api-instance-property",
    "summary": "The iceRole property of the RTCTransportStats dictionary is a string that indicates the ICE role that the transport is fulfilling: that of the controlling agent, or the agent that is being controlled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransportStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCTransportStats dictionary is a string which uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Plugin",
    "pageType": "web-api-interface",
    "summary": "The Plugin interface provides information about a browser plugin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSScopeRule",
    "pageType": "web-api-interface",
    "summary": "The CSSScopeRule interface of the CSS Object Model represents a CSS @scope at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSScopeRule/start",
    "pageType": "web-api-instance-property",
    "summary": "The start property of the CSSScopeRule interface returns a string containing the value of the @scope at-rule's scope root."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSScopeRule/end",
    "pageType": "web-api-instance-property",
    "summary": "The end property of the CSSScopeRule interface returns a string containing the value of the @scope at-rule's scope limit."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fetch_API",
    "pageType": "web-api-overview",
    "summary": "The Fetch API provides an interface for fetching resources (including across the network). It is a more powerful and flexible replacement for XMLHttpRequest."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fetch_API/Using_Fetch",
    "pageType": "guide",
    "summary": "The Fetch API provides a JavaScript interface for making HTTP requests and processing the responses."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection",
    "pageType": "web-api-interface",
    "summary": "A Selection object represents the range of text selected by the user or the current position of the caret. Each document is associated with a unique selection object, which can be retrieved by document.getSelection() or window.getSelection() and then be examined and modified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/deleteFromDocument",
    "pageType": "web-api-instance-method",
    "summary": "The deleteFromDocument() method of the\nSelection interface invokes the Range.deleteContents() method on the selected Range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/anchorOffset",
    "pageType": "web-api-instance-property",
    "summary": "The Selection.anchorOffset read-only property returns the\nnumber of characters that the selection's anchor is offset within the\nSelection.anchorNode if said node is of type Text, CDATASection or Comment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/selectAllChildren",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.selectAllChildren() method adds all the\nchildren of the specified node to the selection. Previous selection is lost."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the\nSelection interface returns a string describing the\ntype of the current selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/getComposedRanges",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.getComposedRanges() method returns an array of StaticRange objects representing the current selection ranges, and can return ranges that potentially cross shadow boundaries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/isCollapsed",
    "pageType": "web-api-instance-property",
    "summary": "The Selection.isCollapsed read-only property returns a\nboolean value which indicates whether or not there is currently any text\nselected. No text is selected when the selection's start and end points are at the same\nposition in the content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/collapse",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.collapse() method collapses the current selection to a single point. The document is not modified. If the content is focused and editable, the caret will blink there."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/empty",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.empty() method removes all ranges from the selection, leaving the anchorNode and focusNode properties equal to null and nothing selected. When this method is called, a selectionchange event is fired at the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/removeRange",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.removeRange() method removes a range from a\nselection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/extend",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.extend() method moves the focus of the\nselection to a specified point. The anchor of the selection does not move. The selection\nwill be from the anchor to the new focus, regardless of direction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/collapseToEnd",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.collapseToEnd() method collapses the\nselection to the end of the last range in the selection. If the content of the selection\nis focused and editable, the caret will blink there."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/focusNode",
    "pageType": "web-api-instance-property",
    "summary": "The Selection.focusNode read-only property returns the Node in which the selection ends. It can return null if selection never existed in the document (e.g., an iframe that was never clicked on, or the node belongs to another document tree)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/anchorNode",
    "pageType": "web-api-instance-property",
    "summary": "The Selection.anchorNode read-only property returns the Node in which the selection begins. It can return null if selection never existed in the document (e.g., an iframe that was never clicked on, or the node belongs to another document tree)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/addRange",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.addRange() method adds a\nRange to a Selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/setPosition",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.setPosition() method collapses the current selection to a single point. The document is not modified. If the content is focused and editable, the caret will blink there."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/setBaseAndExtent",
    "pageType": "web-api-instance-method",
    "summary": "The setBaseAndExtent() method of the Selection interface sets the selection to be a range including all or parts of two specified DOM nodes, and any content located between them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/rangeCount",
    "pageType": "web-api-instance-property",
    "summary": "The Selection.rangeCount read-only property returns the\nnumber of ranges in the selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/direction",
    "pageType": "web-api-instance-property",
    "summary": "The direction read-only property of the Selection interface is a string that provides the direction of the current selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/removeAllRanges",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.removeAllRanges() method removes all ranges from the selection, leaving the anchorNode and focusNode properties equal to null and nothing selected. When this method is called, a selectionchange event is fired at the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/collapseToStart",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.collapseToStart() method collapses the\nselection to the start of the first range in the selection. If the content of the\nselection is focused and editable, the caret will blink there."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/focusOffset",
    "pageType": "web-api-instance-property",
    "summary": "The Selection.focusOffset read-only property returns the\nnumber of characters that the selection's focus is offset within the\nSelection.focusNode if said node is of type Text, CDATASection or Comment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/modify",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.modify() method applies a change to the\ncurrent selection or cursor position, using simple textual commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/containsNode",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.containsNode() method indicates whether a\nspecified node is part of the selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/toString",
    "pageType": "web-api-instance-method",
    "summary": "The Selection.toString() method returns a string\ncurrently being represented by the selection object, i.e., the currently selected text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection/getRangeAt",
    "pageType": "web-api-instance-method",
    "summary": "The getRangeAt() method of the Selection interface returns a range object representing a currently selected range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen_Capture_API",
    "pageType": "web-api-overview",
    "summary": "The Screen Capture API introduces additions to the existing Media Capture and Streams API to let the user select a screen or portion of a screen (such as a window) to capture as a media stream. This stream can then be recorded or shared with others over the network."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen_Capture_API/Captured_Surface_Control",
    "pageType": "guide",
    "summary": "This guide explains how to use the features provided by the Captured Surface Control API to control a display surface (browser tab, window, or screen) captured by the Screen Capture API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen_Capture_API/Element_Region_Capture",
    "pageType": "guide",
    "summary": "This guide provides a walkthrough of typical usage of the Element Capture and Region Capture APIs, showing how to use them and the problem they solve."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen_Capture_API/Using_Screen_Capture",
    "pageType": "guide",
    "summary": "In this article, we will examine how to use the Screen Capture API and its getDisplayMedia() method to capture part or all of a screen for streaming, recording, or sharing during a WebRTC conference session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_texture_float",
    "pageType": "webgl-extension",
    "summary": "The OES_texture_float extension is part of the WebGL API and exposes floating-point pixel types for textures."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentMethodChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The PaymentMethodChangeEvent interface of the Payment Request API describes the paymentmethodchange event which is fired by some payment handlers when the user switches payment instruments (e.g., a user selects a \"store\" card to make a purchase while using Apple Pay)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentMethodChangeEvent/PaymentMethodChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The PaymentMethodChangeEvent()\nconstructor creates a new PaymentMethodChangeEvent object providing\ndetails about a paymentmethodchange event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEventAcceleration",
    "pageType": "web-api-interface",
    "summary": "The DeviceMotionEventAcceleration interface of the Device Orientation Events provides information about the amount of acceleration the device is experiencing along all three axes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentMethodChangeEvent/methodDetails",
    "pageType": "web-api-instance-property",
    "summary": "The read-only methodDetails property of the PaymentMethodChangeEvent interface is an object\ncontaining any data the payment handler may provide to describe the change the user\nhas made to their payment method. The value is null if no details\nare available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEventAcceleration/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the DeviceMotionEventAcceleration interface indicates the amount of acceleration that occurred along the X\naxis in a DeviceMotionEventAcceleration\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentMethodChangeEvent/methodName",
    "pageType": "web-api-instance-property",
    "summary": "The read-only methodName property of the PaymentMethodChangeEvent interface is a string which\nuniquely identifies the payment handler currently selected by the user. The\npayment handler may be a payment technology, such as Apple Pay or Android Pay, and each\npayment handler may support multiple payment methods; changes to the payment method\nwithin the payment handler are described by the PaymentMethodChangeEvent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEventAcceleration/z",
    "pageType": "web-api-instance-property",
    "summary": "The z read-only property of the DeviceMotionEventAcceleration interface indicates the amount of acceleration that occurred along the Z\naxis in a DeviceMotionEventAcceleration\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkewY",
    "pageType": "web-api-interface",
    "summary": "The CSSSkewY interface of the CSS Typed Object Model API represents the skewY() value of the individual transform property in CSS. It inherits properties and methods from its parent CSSTransformValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEventAcceleration/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the DeviceMotionEventAcceleration interface indicates the amount of acceleration that occurred along the Y\naxis in a DeviceMotionEventAcceleration\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkewY/CSSSkewY",
    "pageType": "web-api-constructor",
    "summary": "The CSSSkewY() constructor creates a new\nCSSSkewY object which represents the\nskewY() value\nof the individual transform property in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/state",
    "pageType": "web-api-instance-property",
    "summary": "The state property of the RTCIceCandidatePairStats dictionary indicates the state of the checklist of which the candidate pair is a member."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkewY/ay",
    "pageType": "web-api-instance-property",
    "summary": "The ay property of the\nCSSSkewY interface gets and sets the angle used to distort the element\nalong the y-axis (or ordinate)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats",
    "pageType": "web-api-interface",
    "summary": "The RTCIceCandidatePairStats dictionary of the WebRTC API is used to report statistics that provide insight into the quality and performance of an RTCPeerConnection while connected and configured as described by the specified pair of ICE candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport_API",
    "pageType": "web-api-overview",
    "summary": "The WebTransport API provides a modern update to WebSockets, transmitting data between client and server using HTTP/3 Transport. WebTransport provides support for multiple streams, unidirectional streams, and out-of-order delivery. It enables reliable transport via streams and unreliable transport via UDP-like datagrams."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsReceived",
    "pageType": "web-api-instance-property",
    "summary": "The requestsReceived property of the RTCIceCandidatePairStats dictionary indicates the total number of STUN connectivity check requests that have been received so far on the connection described by this pairing of candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCIceCandidatePairStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceEvent",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API's XRInputSourceEvent interface describes an event which has occurred on a WebXR user input device such as a hand controller, gaze tracking system, or motion tracking system. More specifically, they represent a change in the state of an XRInputSource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsSent",
    "pageType": "web-api-instance-property",
    "summary": "The packetsSent property of the RTCIceCandidatePairStats dictionary indicates the total number of packets sent on the candidate pair."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceEvent/XRInputSourceEvent",
    "pageType": "web-api-constructor",
    "summary": "The XRInputSourceEvent()\nconstructor creates and returns a new XRInputSourceEvent object\ndescribing an event (state change) which has occurred on a WebXR user input device\nrepresented by an XRInputSource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCIceCandidatePairStats dictionary is a string with the value \"candidate-pair\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceEvent/frame",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRInputSourceEvent property\nframe specifies an XRFrame object\nrepresenting the event frame during which a WebXR user input occurred.\nThis may thus be an event which occurred in the past rather than a current or impending\nevent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesReceived",
    "pageType": "web-api-instance-property",
    "summary": "The responsesReceived property of the RTCIceCandidatePairStats dictionary indicates the total number of STUN connectivity check responses that have been received on the connection described by this pair of candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceEvent/inputSource",
    "pageType": "web-api-instance-property",
    "summary": "The XRInputSourceEvent interface's read-only\ninputSource property specifies the\nXRInputSource which generated the input event. This information\nlets you handle the event appropriately given the particulars of the user input device\nbeing manipulated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsSent",
    "pageType": "web-api-instance-property",
    "summary": "The requestsSent property of the RTCIceCandidatePairStats dictionary indicates the total number of STUN connectivity check requests that have been sent so far on the connection described by this pair of candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/availableOutgoingBitrate",
    "pageType": "web-api-instance-property",
    "summary": "The availableOutgoingBitrate property of the RTCIceCandidatePairStats dictionary indicates the available outbound capacity of the network connection represented by the candidate pair.\nThe higher the value, the more bandwidth you can assume is available for outgoing data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBufferSourceNode",
    "pageType": "web-api-interface",
    "summary": "The AudioBufferSourceNode interface is an AudioScheduledSourceNode which represents an audio source consisting of in-memory audio data, stored in an AudioBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/remoteCandidateId",
    "pageType": "web-api-instance-property",
    "summary": "The remoteCandidateId property of the RTCIceCandidatePairStats dictionary uniquely identifies the remote ICE candidate which was analyzed to generate the RTCIceCandidateStats used to compute the statistics for this pair of candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBufferSourceNode/buffer",
    "pageType": "web-api-instance-property",
    "summary": "The buffer property of the AudioBufferSourceNode interface provides the ability to play back audio using an AudioBuffer as the source of the sound data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesDiscardedOnSend",
    "pageType": "web-api-instance-property",
    "summary": "The bytesDiscardedOnSend property of the RTCIceCandidatePairStats dictionary indicates the total number of bytes discarded due to socket errors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable property of the RTCIceCandidatePairStats dictionary reports whether or not the connection described by the candidate pair has received at least one valid incoming ICE request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBufferSourceNode/AudioBufferSourceNode",
    "pageType": "web-api-constructor",
    "summary": "The AudioBufferSourceNode()\nconstructor creates a new AudioBufferSourceNode object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsDiscardedOnSend",
    "pageType": "web-api-instance-property",
    "summary": "The packetsDiscardedOnSend property of the RTCIceCandidatePairStats dictionary indicates the total number of packets discarded due to socket errors"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBufferSourceNode/loopEnd",
    "pageType": "web-api-instance-property",
    "summary": "The loopEnd property of the AudioBufferSourceNode\ninterface specifies is a floating point number specifying, in seconds, at what offset\ninto playing the AudioBuffer playback should loop back to the time\nindicated by the loopStart property.\nThis is only used if the loop property is\ntrue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/currentRoundTripTime",
    "pageType": "web-api-instance-property",
    "summary": "The currentRoundTripTime property of the RTCIceCandidatePairStats dictionary indicates the number of seconds it takes for data to be sent by this peer to the remote peer and back over the connection described by this pair of ICE candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketSentTimestamp",
    "pageType": "web-api-instance-property",
    "summary": "The lastPacketSentTimestamp property of the RTCIceCandidatePairStats dictionary indicates the time at which the connection described by the candidate pair last sent a packet, not including STUN packets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBufferSourceNode/start",
    "pageType": "web-api-instance-method",
    "summary": "The start() method of the AudioBufferSourceNode\nInterface is used to schedule playback of the audio data contained in the buffer, or\nto begin playback immediately."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable property of the RTCIceCandidatePairStats dictionary indicates whether or not the connection described by the candidate pair is writable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBufferSourceNode/loopStart",
    "pageType": "web-api-instance-property",
    "summary": "The loopStart property of the AudioBufferSourceNode interface is a floating-point value indicating, in seconds, where in the AudioBuffer the restart of the play must happen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/consentRequestsSent",
    "pageType": "web-api-instance-property",
    "summary": "The consentRequestsSent property of the RTCIceCandidatePairStats dictionary indicates the total number of consent requests sent on this candidate pair."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBufferSourceNode/loop",
    "pageType": "web-api-instance-property",
    "summary": "The loop property of the AudioBufferSourceNode\ninterface is a Boolean indicating if the audio asset must be replayed when the end of\nthe AudioBuffer is reached."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/nominated",
    "pageType": "web-api-instance-property",
    "summary": "The nominated property of the RTCIceCandidatePairStats dictionary specifies whether or not the candidate pair described by the underlying RTCIceCandidatePair has been nominated to be used as the configuration for the WebRTC connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesReceived",
    "pageType": "web-api-instance-property",
    "summary": "The bytesReceived property of the RTCIceCandidatePairStats dictionary indicates the total number of received payload bytes that have been received so far on the connection described by the candidate pair."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBufferSourceNode/detune",
    "pageType": "web-api-instance-property",
    "summary": "The detune property of the\nAudioBufferSourceNode interface is a k-rate AudioParam\nrepresenting detuning of oscillation in cents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/localCandidateId",
    "pageType": "web-api-instance-property",
    "summary": "The localCandidateId property of the RTCIceCandidatePairStats dictionary is a string that uniquely identifies the local ICE candidate which was analyzed to generate the RTCIceCandidateStats used to compute the statistics for this pair of candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioBufferSourceNode/playbackRate",
    "pageType": "web-api-instance-property",
    "summary": "The playbackRate property of\nthe AudioBufferSourceNode interface Is a k-rate AudioParam that\ndefines the speed at which the audio asset will be played."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesSent",
    "pageType": "web-api-instance-property",
    "summary": "The bytesSent property of the RTCIceCandidatePairStats dictionary indicates the total number of payload bytes that have been sent so far on the connection described by the candidate pair."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/transportId",
    "pageType": "web-api-instance-property",
    "summary": "The transportId property of the RTCIceCandidatePairStats dictionary uniquely identifies the RTCIceTransport object that was inspected to obtain the transport-related statistics contained in the stats object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator_and_Language_Detector_APIs",
    "pageType": "web-api-overview",
    "summary": "The Translator and Language Detector APIs provide functionality to detect the language that text is written in, and to translate text into different languages, via a browser's own internal AI model (which may differ between browsers)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/priority",
    "pageType": "web-api-instance-property",
    "summary": "The priority property of the RTCIceCandidatePairStats dictionary reports the priority of the candidate pair as an integer value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator_and_Language_Detector_APIs/Using",
    "pageType": "guide",
    "summary": "The Translator and Language Detector APIs provide asynchronous (Promise-based) mechanisms for a website to detect languages and translate text via the browser's own internal AI model. This is useful and efficient because the browser handles the service, rather than the developer having to rely on the user downloading AI models, or host or pay for a cloud-based translation service.\nThis article explains how to use these APIs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsReceived",
    "pageType": "web-api-instance-property",
    "summary": "The packetsReceived property of the RTCIceCandidatePairStats dictionary indicates the total number of packets received on the candidate pair."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrack",
    "pageType": "web-api-interface",
    "summary": "The VideoTrack interface represents a single video track from a <video> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketReceivedTimestamp",
    "pageType": "web-api-instance-property",
    "summary": "The lastPacketReceivedTimestamp property of the RTCIceCandidatePairStats dictionary indicates the time at which the connection described by the candidate pair last received a packet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrack/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind property contains a\nstring indicating the category of video contained in the\nVideoTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesSent",
    "pageType": "web-api-instance-property",
    "summary": "The responsesSent property of the RTCIceCandidatePairStats dictionary indicates the total number of STUN connectivity check responses that have been sent so far on the connection described by this pair of candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/totalRoundTripTime",
    "pageType": "web-api-instance-property",
    "summary": "The totalRoundTripTime property of the RTCIceCandidatePairStats dictionary indicates the total time that has elapsed between sending STUN requests and receiving the responses, for all such requests that have been made so far on the pair of candidates described by this RTCIceCandidatePairStats object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrack/label",
    "pageType": "web-api-instance-property",
    "summary": "The read-only VideoTrack\nproperty label returns a string specifying the video\ntrack's human-readable label, if one is available; otherwise, it returns an empty\nstring."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCIceCandidatePairStats dictionary is a string that uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrack/sourceBuffer",
    "pageType": "web-api-instance-property",
    "summary": "The read-only VideoTrack\nproperty sourceBuffer returns the\nSourceBuffer that created the track, or null if the track was not\ncreated by a SourceBuffer or the SourceBuffer has been\nremoved from the MediaSource.sourceBuffers attribute of its parent\nmedia source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/availableIncomingBitrate",
    "pageType": "web-api-instance-property",
    "summary": "The availableIncomingBitrate property of the RTCIceCandidatePairStats dictionary indicates the available inbound capacity of the network connection represented by the candidate pair.\nThe higher the value, the more bandwidth you can assume is available for incoming data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePairStats/selected",
    "pageType": "web-api-instance-property",
    "summary": "The selected property of the RTCIceCandidatePairStats dictionary indicates whether or not the candidate pair described by the object is the one currently being used to communicate with the remote peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrack/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property contains a\nstring which uniquely identifies the track represented by the\nVideoTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AesCbcParams",
    "pageType": "web-api-interface",
    "summary": "The AesCbcParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.encrypt(), SubtleCrypto.decrypt(), SubtleCrypto.wrapKey(), or SubtleCrypto.unwrapKey(), when using the AES-CBC algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrack/selected",
    "pageType": "web-api-instance-property",
    "summary": "The VideoTrack property\nselected controls whether or not a particular video\ntrack is active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFilterElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFilterElement interface provides access to the properties of <filter> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrack/language",
    "pageType": "web-api-instance-property",
    "summary": "The read-only VideoTrack\nproperty language returns a string identifying the\nlanguage used in the video track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFilterElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFilterElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFilterElement/filterUnits",
    "pageType": "web-api-instance-property",
    "summary": "The filterUnits read-only property of the SVGFilterElement interface reflects the filterUnits attribute of the given <filter> element. It takes one of the SVG_UNIT_TYPE_* constants defined in SVGUnitTypes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMStringList",
    "pageType": "web-api-interface",
    "summary": "The DOMStringList interface is a legacy type returned by some APIs and represents a non-modifiable list of strings (DOMString)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFilterElement/primitiveUnits",
    "pageType": "web-api-instance-property",
    "summary": "The primitiveUnits read-only property of the SVGFilterElement interface reflects the primitiveUnits attribute of the given <filter> element. It takes one of the SVG_UNIT_TYPE_* constants defined in SVGUnitTypes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMStringList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method returns a string from a DOMStringList by index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFilterElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFilterElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMStringList/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property indicates the number of strings in the DOMStringList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFilterElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFilterElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFilterElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFilterElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMStringList/contains",
    "pageType": "web-api-instance-method",
    "summary": "The contains() method returns a boolean indicating whether the given string is in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFilterElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGFilterElement interface reflects the href or xlink:href \nDeprecated\n attribute of the given <filter> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File_and_Directory_Entries_API",
    "pageType": "web-api-overview",
    "summary": "The File and Directory Entries API provides a way to process directories and file lists provided by the user via a form input or a drag-and-drop operation. It is a more advanced version of the File API, which allows you to work with a single file. It was originally intended to support a full virtual file system, but now only supports read operations on user-provided data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTableRowElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StaticRange",
    "pageType": "web-api-interface",
    "summary": "The DOM StaticRange interface extends AbstractRange to provide a method to specify a range of content in the DOM whose contents don't update to reflect changes which occur within the DOM tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/align",
    "pageType": "web-api-instance-property",
    "summary": "The align property of the HTMLTableRowElement interface is a string indicating how to horizontally align text in the <tr> table row. Individual cells can override it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/cells",
    "pageType": "web-api-instance-property",
    "summary": "The cells read-only property of the HTMLTableRowElement interface\nreturns a live HTMLCollection containing the cells in the row. The HTMLCollection is live and is automatically updated when cells are added or removed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StaticRange/startOffset",
    "pageType": "web-api-instance-property",
    "summary": "The read-only startOffset\nproperty of the StaticRange interface returns the offset into the start\nnode of the range's start position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/bgColor",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableRowElement.bgColor property is used to set the background color of a row or retrieve the value of the obsolete bgColor attribute, if present."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StaticRange/collapsed",
    "pageType": "web-api-instance-property",
    "summary": "The collapsed read-only property\nof the StaticRange interface returns true if the range's\nstart position and end position are the same."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/vAlign",
    "pageType": "web-api-instance-property",
    "summary": "The vAlign property of the HTMLTableRowElement interface is a string indicating how to vertically align text in a <tr> table row. Individual cells can override it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StaticRange/endContainer",
    "pageType": "web-api-instance-property",
    "summary": "The endContainer property of the StaticRange interface returns the end Node for the range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/insertCell",
    "pageType": "web-api-instance-method",
    "summary": "The insertCell() method of the HTMLTableRowElement interface inserts a new\ncell (<td>) into a table row (<tr>) and returns a\nreference to the cell."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/chOff",
    "pageType": "web-api-instance-property",
    "summary": "The chOff property of the HTMLTableRowElement interface does nothing. It reflects the charoff attribute of the <tr> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StaticRange/StaticRange",
    "pageType": "web-api-constructor",
    "summary": "The StaticRange() constructor\ncreates a new StaticRange object representing a span of content within\nthe DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/rowIndex",
    "pageType": "web-api-instance-property",
    "summary": "The rowIndex read-only property of the HTMLTableRowElement interface\nrepresents the position of a row within the whole <table>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StaticRange/startContainer",
    "pageType": "web-api-instance-property",
    "summary": "The read-only startContainer\nproperty of the StaticRange interface returns the start\nNode for the range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/ch",
    "pageType": "web-api-instance-property",
    "summary": "The ch property of the HTMLTableRowElement interface does nothing. It reflects the char attribute of the <tr> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/sectionRowIndex",
    "pageType": "web-api-instance-property",
    "summary": "The sectionRowIndex read-only property of the HTMLTableRowElement interface\nrepresents the position of a row within the current section (<thead>, <tbody>, or <tfoot>)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StaticRange/endOffset",
    "pageType": "web-api-instance-property",
    "summary": "The endOffset property of the StaticRange\ninterface returns the offset into the end node of the range's end position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableRowElement/deleteCell",
    "pageType": "web-api-instance-method",
    "summary": "The deleteCell() method of the HTMLTableRowElement interface removes a\nspecific row cell from a given <tr>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackAudioSourceNode",
    "pageType": "web-api-interface",
    "summary": "The MediaStreamTrackAudioSourceNode interface is a type of AudioNode which represents a source of audio data taken from a specific MediaStreamTrack obtained through the WebRTC or Media Capture and Streams APIs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackAudioSourceNode/MediaStreamTrackAudioSourceNode",
    "pageType": "web-api-constructor",
    "summary": "The Web Audio API's MediaStreamTrackAudioSourceNode() constructor creates and returns a new MediaStreamTrackAudioSourceNode object whose audio is taken from the MediaStreamTrack specified in the given options object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API",
    "pageType": "web-api-overview",
    "summary": "The Web Audio API provides a powerful and versatile system for controlling audio on the Web, allowing developers to choose audio sources, add effects to audio, create audio visualizations, apply spatial effects (such as panning) and much more."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Using_AudioWorklet",
    "pageType": "guide",
    "summary": "This article explains how to create an audio worklet processor and use it in a Web Audio application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLParagraphElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLParagraphElement interface provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating <p> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Web_audio_spatialization_basics",
    "pageType": "guide",
    "summary": "As if its extensive variety of sound processing (and other) options wasn't enough, the Web Audio API also includes facilities to allow you to emulate the difference in sound as a listener moves around a sound source, for example panning as you move around a sound source inside a 3D game.\nThe official term for this is spatialization, and this article will cover the basics of how to implement such a system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQuerySet",
    "pageType": "web-api-interface",
    "summary": "The GPUQuerySet interface of the WebGPU API is used to record the results of queries on passes, such as occlusion or timestamp queries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Basic_concepts_behind_Web_Audio_API",
    "pageType": "guide",
    "summary": "This article explains some of the audio theory behind how the features of the Web Audio API work to help you make informed decisions while designing how your app routes audio. If you are not already a sound engineer, it will give you enough background to understand why the Web Audio API works as it does."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQuerySet/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUQuerySet interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Using_Web_Audio_API",
    "pageType": "guide",
    "summary": "Let's take a look at getting started with the Web Audio API. We'll briefly look at some concepts, then study a simple boombox example that allows us to load an audio track, play and pause it, and change its volume and stereo panning."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQuerySet/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the\nGPUQuerySet interface is an enumerated value specifying the type of queries managed by the GPUQuerySet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Simple_synth",
    "pageType": "guide",
    "summary": "This article presents the code and working demo of a video keyboard you can play using the mouse. The keyboard allows you to switch among the standard waveforms as well as one custom waveform, and you can control the main gain using a volume slider beneath the keyboard. This example makes use of the following Web API interfaces: AudioContext, OscillatorNode, PeriodicWave, and GainNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQuerySet/destroy",
    "pageType": "web-api-instance-method",
    "summary": "The destroy() method of the\nGPUQuerySet interface destroys the GPUQuerySet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Visualizations_with_Web_Audio_API",
    "pageType": "guide",
    "summary": "One of the most interesting features of the Web Audio API is the ability to extract frequency, waveform, and other data from your audio source, which can then be used to create visualizations. This article explains how, and provides a couple of basic use cases."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Best_practices",
    "pageType": "guide",
    "summary": "There's no strict right or wrong way when writing creative code. As long as you consider security, performance, and accessibility, you can adapt to your own style. In this article, we'll share a number of best practices — guidelines, tips, and tricks for working with the Web Audio API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQuerySet/count",
    "pageType": "web-api-instance-property",
    "summary": "The count read-only property of the\nGPUQuerySet interface is a number specifying the number of queries managed by the GPUQuerySet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Controlling_multiple_parameters_with_ConstantSourceNode",
    "pageType": "guide",
    "summary": "This article demonstrates how to use a ConstantSourceNode to link multiple parameters together so they share the same value, which can be changed by setting the value of the ConstantSourceNode.offset parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Advanced_techniques",
    "pageType": "guide",
    "summary": "In this tutorial, we're going to cover sound creation and modification, as well as timing and scheduling. We will introduce sample loading, envelopes, filters, wavetables, and frequency modulation. If you're familiar with these terms and looking for an introduction to their application with the Web Audio API, you've come to the right place."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/border",
    "pageType": "web-api-instance-property",
    "summary": "The obsolete HTMLImageElement\nproperty border specifies the number of pixels thick the\nborder surrounding the image should be. A value of 0, the default, indicates that no\nborder should be drawn."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Audio_API/Using_IIR_filters",
    "pageType": "guide",
    "summary": "The IIRFilterNode interface of the Web Audio API is an AudioNode processor that implements a general infinite impulse response (IIR) filter; this type of filter can be used to implement tone control devices and graphic equalizers, and the filter response parameters can be specified, so that it can be tuned as needed. This article looks at how to implement one, and use it in a simple example."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLTransformFeedback",
    "pageType": "web-api-interface",
    "summary": "The WebGLTransformFeedback interface is part of the WebGL 2 API and enables transform feedback, which is the process of capturing primitives generated by vertex processing. It allows to preserve the post-transform rendering state of an object and resubmit this data multiple times."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement\ninterface's deprecated name property specifies\na name for the element. This has been replaced by the id\nproperty available on all elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLImageElement interface represents an HTML <img> element, providing the properties and methods used to manipulate image elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryList/change_event",
    "pageType": "web-api-event",
    "summary": "The change event of the MediaQueryList interface fires when the status of media query support changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryList",
    "pageType": "web-api-interface",
    "summary": "A MediaQueryList object stores information on a media query applied to a document, with support for both immediate and event-driven matching against the state of the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/align",
    "pageType": "web-api-instance-property",
    "summary": "The obsolete align\nproperty of the HTMLImageElement interface is a string which indicates\nhow to position the image relative to its container."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryList/addListener",
    "pageType": "web-api-instance-method",
    "summary": "The deprecated addListener() method of the\nMediaQueryList interface adds a listener to the\nMediaQueryListener that will run a custom callback function in response to\nthe media query status changing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/src",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement property\nsrc, which reflects the HTML src attribute, specifies the image to display in the <img>\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryList/removeListener",
    "pageType": "web-api-instance-method",
    "summary": "The removeListener() method of the\nMediaQueryList interface removes a listener from the\nMediaQueryListener."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryList/media",
    "pageType": "web-api-instance-property",
    "summary": "The media read-only property of the\nMediaQueryList interface is a string representing a\nserialized media query."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLImageElement property\nx indicates the x-coordinate of the\n<img> element's left border edge relative to the root element's\norigin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryList/matches",
    "pageType": "web-api-instance-property",
    "summary": "The matches read-only property of the\nMediaQueryList interface is a boolean value that returns\ntrue if the document currently matches the media query list,\nor false if not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/Image",
    "pageType": "web-api-constructor",
    "summary": "The Image()\nconstructor creates a new HTMLImageElement instance. It is functionally\nequivalent to document.createElement('img')."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAssertionResponse",
    "pageType": "web-api-interface",
    "summary": "The AuthenticatorAssertionResponse interface of the Web Authentication API contains a digital signature from the private key of a particular WebAuthn credential. The relying party's server can verify this signature to authenticate a user, for example when they sign in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/decode",
    "pageType": "web-api-instance-method",
    "summary": "The decode()\nmethod of the HTMLImageElement interface returns a\nPromise that resolves once the image is decoded and it is safe to append\nit to the DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAssertionResponse/userHandle",
    "pageType": "web-api-instance-property",
    "summary": "The userHandle read-only property of the AuthenticatorAssertionResponse interface is an ArrayBuffer object providing an opaque identifier for the given user. Such an identifier can be used by the relying party's server to link the user account with its corresponding credentials and other data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/loading",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement property loading is a string whose value provides a hint to the user agent on how to handle the loading of the image which is currently outside the window's visual viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAssertionResponse/signature",
    "pageType": "web-api-instance-property",
    "summary": "The signature read-only property of the\nAuthenticatorAssertionResponse interface is an ArrayBuffer\nobject which is the signature of the authenticator for both\nAuthenticatorAssertionResponse.authenticatorData and a SHA-256 hash of\nthe client data\n(AuthenticatorAssertionResponse.clientDataJSON)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAssertionResponse/authenticatorData",
    "pageType": "web-api-instance-property",
    "summary": "The authenticatorData property of the AuthenticatorAssertionResponse interface returns an ArrayBuffer containing information from the authenticator such as the Relying Party ID Hash (rpIdHash), a signature counter, test of user presence, user verification flags, and any extensions processed by the authenticator."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/vspace",
    "pageType": "web-api-instance-property",
    "summary": "The obsolete vspace property of the\nHTMLImageElement interface specifies the number of pixels of empty space\nto leave empty on the top and bottom of the <img> element when laying\nout the page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTimeline",
    "pageType": "web-api-interface",
    "summary": "The ViewTimeline interface of the Web Animations API represents a view progress timeline (see CSS scroll-driven animations for more details)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/complete",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLImageElement interface's\ncomplete attribute is a Boolean value which indicates\nwhether or not the image has completely loaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTimeline/startOffset",
    "pageType": "web-api-instance-property",
    "summary": "The startOffset read-only property of the ViewTimeline interface returns a CSSNumericValue representing the starting (0% progress) scroll position of the timeline as an offset from the start of the overflowing section of content in the scroller."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTimeline/subject",
    "pageType": "web-api-instance-property",
    "summary": "The subject read-only property of the ViewTimeline interface returns a reference to the subject element whose visibility within its nearest ancestor scrollable element (scroller) is driving the progress of the timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/longDesc",
    "pageType": "web-api-instance-property",
    "summary": "The deprecated property longDesc on\nthe HTMLImageElement interface specifies the URL of a text or HTML file\nwhich contains a long-form description of the image. This can be used to\nprovide optional added details beyond the short description provided in the\ntitle attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTimeline/ViewTimeline",
    "pageType": "web-api-constructor",
    "summary": "The ViewTimeline() constructor creates a new ViewTimeline object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/currentSrc",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLImageElement property\ncurrentSrc indicates the URL of the image which is\ncurrently presented in the <img> element it represents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ViewTimeline/endOffset",
    "pageType": "web-api-instance-property",
    "summary": "The endOffset read-only property of the ViewTimeline interface returns a CSSNumericValue representing the ending (100% progress) scroll position of the timeline as an offset from the start of the overflowing section of content in the scroller."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/referrerPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The\nHTMLImageElement.referrerPolicy\nproperty reflects the HTML referrerpolicy attribute of the\n<img> element defining which referrer is sent when fetching the\nresource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PromiseRejectionEvent",
    "pageType": "web-api-interface",
    "summary": "The PromiseRejectionEvent interface represents events which are sent to the global script context when JavaScript Promises are rejected. These events are particularly useful for telemetry and debugging purposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PromiseRejectionEvent/reason",
    "pageType": "web-api-instance-property",
    "summary": "The PromiseRejectionEvent reason read-only\nproperty is any JavaScript value or Object which provides the reason\npassed into Promise.reject(). This in theory provides information about\nwhy the promise was rejected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/hspace",
    "pageType": "web-api-instance-property",
    "summary": "The\nobsolete hspace property of the\nHTMLImageElement interface specifies the number of pixels of empty\nspace to leave empty on the left and right sides of the <img> element\nwhen laying out the page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PromiseRejectionEvent/promise",
    "pageType": "web-api-instance-property",
    "summary": "The PromiseRejectionEvent interface's\npromise read-only property indicates the JavaScript\nPromise which was rejected. You can examine the event's\nPromiseRejectionEvent.reason property to learn why the promise was\nrejected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the\nHTMLImageElement interface indicates the height at which the image is\ndrawn, in CSS pixels if the image is being drawn or rendered to any\nvisual medium such as the screen or a printer; otherwise, it's the natural, pixel\ndensity corrected height of the image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PromiseRejectionEvent/PromiseRejectionEvent",
    "pageType": "web-api-constructor",
    "summary": "The PromiseRejectionEvent()\nconstructor returns a new PromiseRejectionEvent object, which\nrepresents events fired when a JavaScript Promise is rejected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemFileEntry",
    "pageType": "web-api-interface",
    "summary": "The FileSystemFileEntry interface of the File and Directory Entries API represents a file in a file system. It offers properties describing the file's attributes, as well as the file() method, which creates a File object that can be used to read the file."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLImageElement property\ny indicates the y-coordinate of the\n<img> element's top border edge relative to the root element's\norigin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemFileEntry/createWriter",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemFileEntry interface's method\ncreateWriter() returns a FileWriter object\nwhich can be used to write data into the file represented by the directory entry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/srcset",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement property\nsrcset is a string which identifies one or more\nimage candidate strings, separated using commas (,) each\nspecifying image resources to use under given circumstances."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemFileEntry/file",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemFileEntry interface's method\nfile() returns a\nFile object which can be used to read data from the file represented by\nthe directory entry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/alt",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement property alt provides fallback (alternate) text to display when the image specified by the <img> element is not loaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLVertexArrayObject",
    "pageType": "web-api-interface",
    "summary": "The WebGLVertexArrayObject interface is part of the WebGL 2 API, represents vertex array objects (VAOs) pointing to vertex array data, and provides names for different sets of vertex data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the\nHTMLImageElement interface indicates the width at which an image is\ndrawn in CSS pixels if it's being drawn or rendered to\nany visual medium such as a screen or printer. Otherwise, it's the natural, pixel\ndensity-corrected width of the image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformanceResourceTiming interface enables retrieval and analysis of detailed network timing data regarding the loading of an application's resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an XMLHttpRequest, <SVG>, image, or script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/naturalHeight",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement interface's\nnaturalHeight property is a read-only value which\nreturns the intrinsic (natural), density-corrected height of the image in\nCSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/domainLookupEnd",
    "pageType": "web-api-instance-property",
    "summary": "The domainLookupEnd read-only property returns the timestamp immediately after the browser finishes the domain-name lookup for the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/responseStatus",
    "pageType": "web-api-instance-property",
    "summary": "The responseStatus read-only property represents the HTTP response status code returned when fetching the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/sizes",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement property\nsizes allows you to specify the layout width of the\nimage for each of a list of media conditions. This provides the ability to\nautomatically select among different images—even images of different orientations or\naspect ratios—as the document state changes to match different media\nconditions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/nextHopProtocol",
    "pageType": "web-api-instance-property",
    "summary": "The nextHopProtocol read-only property is a string representing the network protocol used to fetch the resource, as identified by the ALPN Protocol ID (RFC7301)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/initiatorType",
    "pageType": "web-api-instance-property",
    "summary": "The initiatorType read-only property is a string representing web platform feature that initiated the resource load."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/crossOrigin",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement\ninterface's crossOrigin attribute is a string which\nspecifies the Cross-Origin Resource Sharing (CORS) setting to use when\nretrieving the image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/contentType",
    "pageType": "web-api-instance-property",
    "summary": "The contentType read-only property of the PerformanceResourceTiming interface is a string indicating the content type of the fetched resource, formatted as a MIME type and subtype separated by a forward slash."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/fetchPriority",
    "pageType": "web-api-instance-property",
    "summary": "The fetchPriority property of the HTMLImageElement interface represents a hint to the browser indicating how it should prioritize fetching a particular image relative to other images.\nIt reflects the fetchpriority attribute of the corresponding <img> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/requestStart",
    "pageType": "web-api-instance-property",
    "summary": "The requestStart read-only property returns a timestamp of the time immediately before the browser starts requesting the resource from the server, cache, or local resource. If the transport connection fails and the browser retires the request, the value returned will be the start of the retry request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/renderBlockingStatus",
    "pageType": "web-api-instance-property",
    "summary": "The renderBlockingStatus read-only property returns the render-blocking status of the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/attributionSrc",
    "pageType": "web-api-instance-property",
    "summary": "The\nattributionSrc property of the HTMLImageElement interface gets and sets the attributionsrc attribute on an <img> element programmatically, reflecting the value of that attribute. attributionsrc specifies that you want the browser to send an Attribution-Reporting-Eligible header along with the image request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/isMap",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement property isMap is a\nBoolean value which indicates that the image is to be used by a server-side image map.\nThis may only be used on images located within an <a> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/firstInterimResponseStart",
    "pageType": "web-api-instance-property",
    "summary": "The firstInterimResponseStart read-only property returns a timestamp immediately after the browser receives the first byte of the interim 1xx response (for example, 100 Continue or 103 Early Hints) from the server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/finalResponseHeadersStart",
    "pageType": "web-api-instance-property",
    "summary": "The finalResponseHeadersStart read-only property returns a timestamp immediately after the browser receives the first byte of the final document response (for example, 200 OK) from the server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/naturalWidth",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLImageElement interface's read-only\nnaturalWidth property returns the intrinsic (natural),\ndensity-corrected width of the image in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/serverTiming",
    "pageType": "web-api-instance-property",
    "summary": "The serverTiming read-only property returns an array of PerformanceServerTiming entries containing server timing metrics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/decoding",
    "pageType": "web-api-instance-property",
    "summary": "The decoding property of the HTMLImageElement interface provides a hint to the browser as to how it should decode the image. More specifically, whether it should wait for the image to be decoded before presenting other content updates or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/fetchStart",
    "pageType": "web-api-instance-property",
    "summary": "The fetchStart read-only property represents a timestamp immediately before the browser starts to fetch the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/deliveryType",
    "pageType": "web-api-instance-property",
    "summary": "The deliveryType read-only property is a string indicating how the resource was delivered — for example from the cache or from a navigational prefetch."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLImageElement/useMap",
    "pageType": "web-api-instance-property",
    "summary": "The useMap property on the\nHTMLImageElement interface reflects the value of the\nHTML usemap attribute, which is a string\nproviding the name of the client-side image map to apply to the image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HmacImportParams",
    "pageType": "web-api-interface",
    "summary": "The HmacImportParams dictionary of the Web Crypto API represents the object that should be passed when importing, unwrapping, or deriving a key for the HMAC algorithm, as:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/secureConnectionStart",
    "pageType": "web-api-instance-property",
    "summary": "The secureConnectionStart read-only property returns a timestamp immediately before the browser starts the handshake process to secure the current connection. If a secure connection is not used, the property returns zero."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PerformanceResourceTiming interface is a serializer; it returns a JSON representation of the PerformanceResourceTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEntry/name",
    "pageType": "web-api-instance-property",
    "summary": "The read-only name property of the PerformanceEntry interface is a string representing the name for a performance entry. It acts as an identifier, but it does not have to be unique. The value depends on the subclass."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/connectEnd",
    "pageType": "web-api-instance-property",
    "summary": "The connectEnd read-only property returns the timestamp immediately after the browser finishes establishing the connection to the server to retrieve the resource. The timestamp value includes the time interval to establish the transport connection, as well as other time intervals such as TLS handshake and SOCKS authentication."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEntry",
    "pageType": "web-api-interface",
    "summary": "The PerformanceEntry object encapsulates a single performance metric that is part of the browser's performance timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/responseStart",
    "pageType": "web-api-instance-property",
    "summary": "The responseStart read-only property returns a timestamp immediately after the browser receives the first byte of the response from the server, cache, or local resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEntry/startTime",
    "pageType": "web-api-instance-property",
    "summary": "The read-only startTime property returns the first timestamp recorded for this PerformanceEntry. The meaning of this property depends on the value of this entry's entryType."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEntry/entryType",
    "pageType": "web-api-instance-property",
    "summary": "The read-only entryType property returns a string representing the type of performance metric that this entry represents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/encodedBodySize",
    "pageType": "web-api-instance-property",
    "summary": "The encodedBodySize read-only property represents the size (in octets) received from the fetch (HTTP or cache) of the payload body before removing any applied content encodings (like gzip or Brotli). If the resource is retrieved from an application cache or a local resource, it must\nreturn the size of the payload body before removing any applied content encoding."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEntry/duration",
    "pageType": "web-api-instance-property",
    "summary": "The read-only duration property returns a timestamp that is the duration of the performance entry. The meaning of this property depends on the value of this entry's entryType."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/transferSize",
    "pageType": "web-api-instance-property",
    "summary": "The transferSize read-only property represents the size (in octets) of the fetched resource. The size includes the response header fields plus the response payload body (as defined by RFC7230)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEntry/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method is a serializer; it returns a JSON representation of the PerformanceEntry object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/redirectStart",
    "pageType": "web-api-instance-property",
    "summary": "The redirectStart read-only property returns a timestamp representing the start time of the fetch which that initiates the redirect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/responseEnd",
    "pageType": "web-api-instance-property",
    "summary": "The responseEnd read-only property returns a timestamp immediately after the browser receives the last byte of the resource or immediately before the transport connection is closed, whichever comes first."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTableCellElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header cells (<th>) or data cells (<td>), in an HTML document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/connectStart",
    "pageType": "web-api-instance-property",
    "summary": "The connectStart read-only property returns the timestamp immediately before the user agent starts establishing the connection to the server to retrieve the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/align",
    "pageType": "web-api-instance-property",
    "summary": "The align property of the HTMLTableCellElement interface is a string indicating how to horizontally align text in the <th> or <td> table cell."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/scope",
    "pageType": "web-api-instance-property",
    "summary": "The scope property of the HTMLTableCellElement interface\nindicates the scope of a <th> cell."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/domainLookupStart",
    "pageType": "web-api-instance-property",
    "summary": "The domainLookupStart read-only property returns the timestamp immediately before the browser starts the domain name lookup for the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/workerStart",
    "pageType": "web-api-instance-property",
    "summary": "The workerStart read-only property of the PerformanceResourceTiming interface returns a\nDOMHighResTimeStamp immediately before dispatching the FetchEvent if a Service Worker thread is already running, or immediately before starting the Service Worker thread if it is not already running. If the resource is not intercepted by a Service Worker the property will always return 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/headers",
    "pageType": "web-api-instance-property",
    "summary": "The headers property of the HTMLTableCellElement interface\ncontains a list of IDs of <th> elements that are headers for this specific cell."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/cellIndex",
    "pageType": "web-api-instance-property",
    "summary": "The cellIndex read-only property of the HTMLTableCellElement interface\nrepresents the position of a cell within its row (<tr>). The first cell has an index of 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/decodedBodySize",
    "pageType": "web-api-instance-property",
    "summary": "The decodedBodySize read-only property returns the size (in octets) received from the fetch (HTTP or cache) of the message body after removing any applied content encoding (like gzip or Brotli). If the resource is retrieved from an application cache or local resources, it returns the size of the payload after removing any applied content encoding."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/bgColor",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableCellElement.bgColor property is used to set the background color of a cell or get the value of the obsolete bgColor attribute, if present."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceResourceTiming/redirectEnd",
    "pageType": "web-api-instance-property",
    "summary": "The redirectEnd read-only property returns a timestamp immediately after receiving the last byte of the response of the last redirect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/vAlign",
    "pageType": "web-api-instance-property",
    "summary": "The vAlign property of the HTMLTableCellElement interface is a string indicating how to vertically align text in a <th> or <td> table cell."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Animations_API",
    "pageType": "web-api-overview",
    "summary": "The Web Animations API allows for synchronizing and timing changes to the presentation of a Web page, i.e., animation of DOM elements. It does so by combining two models: the Timing Model and the Animation Model."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/rowSpan",
    "pageType": "web-api-instance-property",
    "summary": "The rowSpan property of the HTMLTableCellElement interface represents the number of rows this cell must span; this lets the cell occupy space across multiple rows of the table. It reflects the rowspan attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Animations_API/Using_the_Web_Animations_API",
    "pageType": "guide",
    "summary": "The Web Animations API lets us construct animations and control their playback with JavaScript. This article will start you off in the right direction with fun demos and tutorials featuring Alice in Wonderland."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Animations_API/Tips",
    "pageType": "guide",
    "summary": "CSS animations make it possible to do incredible things with the elements that make up your documents and apps. There are things you might want to do that aren't obvious and many clever ways to do things that may not be immediately apparent. This article is a collection of tips and tricks we've found that will hopefully make your work easier, including how to re-run a completed animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/chOff",
    "pageType": "web-api-instance-property",
    "summary": "The chOff property of the HTMLTableCellElement interface does nothing. It reflects the charoff attribute of the cell element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/abbr",
    "pageType": "web-api-instance-property",
    "summary": "The abbr property of the HTMLTableCellElement interface\nindicates an abbreviation associated with the cell. If the cell does not represent a header cell <th>, it is ignored."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Animations_API/Web_Animations_API_Concepts",
    "pageType": "guide",
    "summary": "The Web Animations API (WAAPI) provides JavaScript developers access to the browser's animation engine and describes how animations should be implemented across browsers. This article will introduce you to the important concepts behind the WAAPI, providing you with a theoretical understanding of how it works so you can use it effectively. To learn how to put the API to use, check out its sister article, Using the Web Animations API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Animations_API/Keyframe_Formats",
    "pageType": "guide",
    "summary": "Element.animate(), KeyframeEffect(), and KeyframeEffect.setKeyframes() all accept objects formatted to represent a set of keyframes. There are several options to this format, which are explained below."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/noWrap",
    "pageType": "web-api-instance-property",
    "summary": "The noWrap property of the HTMLTableCellElement interface returns a Boolean value indicating if the text of the cell may be wrapped on several lines or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/ch",
    "pageType": "web-api-instance-property",
    "summary": "The ch property of the HTMLTableCellElement interface does nothing. It reflects the char attribute of the cell element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EcKeyImportParams",
    "pageType": "web-api-interface",
    "summary": "The EcKeyImportParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.importKey() or SubtleCrypto.unwrapKey(), when generating any elliptic-curve-based key pair: that is, when the algorithm is identified as either of ECDSA or ECDH."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCellElement/colSpan",
    "pageType": "web-api-instance-property",
    "summary": "The colSpan property of the HTMLTableCellElement interface represents the number of columns this cell must span; this lets the cell occupy space across multiple columns of the table. It reflects the colspan attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGElement",
    "pageType": "web-api-interface",
    "summary": "The SVGGElement interface corresponds to the <g> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBFactory",
    "pageType": "web-api-interface",
    "summary": "The IDBFactory interface of the IndexedDB API lets applications asynchronously access the indexed databases. The object that implements the interface is window.indexedDB. You open — that is, create and access — and delete a database with this object, and not directly with IDBFactory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTitleElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTitleElement interface is implemented by a document's <title>. This element inherits all of the properties and methods of the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBFactory/open",
    "pageType": "web-api-instance-method",
    "summary": "The open() method of the IDBFactory interface requests opening a connection to a database."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTitleElement/text",
    "pageType": "web-api-instance-property",
    "summary": "The text property of the HTMLTitleElement interface represents the child text content of the document's title as a string. It contains the <title> element's content as text; if HTML tags are included within the <title> element, they are included as part of the string value rather than being parsed as HTML."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBFactory/deleteDatabase",
    "pageType": "web-api-instance-method",
    "summary": "The deleteDatabase() method of the\nIDBFactory interface requests the deletion of a database. The method\nreturns an IDBOpenDBRequest object immediately, and performs the deletion\noperation asynchronously."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the AudioEncoder interface returns the current state of the underlying codec."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBFactory/databases",
    "pageType": "web-api-instance-method",
    "summary": "The databases method of the IDBFactory interface returns a Promise that fulfills with an array of objects containing the name and version of all the available databases."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder",
    "pageType": "web-api-interface",
    "summary": "The AudioEncoder interface of the WebCodecs API encodes AudioData objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBFactory/cmp",
    "pageType": "web-api-instance-method",
    "summary": "The cmp() method of the IDBFactory\ninterface compares two values as keys to determine equality and ordering for IndexedDB\noperations, such as storing and iterating."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/AudioEncoder",
    "pageType": "web-api-constructor",
    "summary": "The AudioEncoder() constructor creates a new AudioEncoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the AudioEncoder.state set to \"unconfigured\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultController",
    "pageType": "web-api-interface",
    "summary": "The ReadableStreamDefaultController interface of the Streams API represents a controller allowing control of a ReadableStream's state and internal queue. Default controllers are for streams that are not byte streams."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/dequeue_event",
    "pageType": "web-api-event",
    "summary": "The dequeue event of the AudioEncoder interface fires to signal a decrease in AudioEncoder.encodeQueueSize."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultController/error",
    "pageType": "web-api-instance-method",
    "summary": "The error() method of the\nReadableStreamDefaultController interface causes any future interactions\nwith the associated stream to error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/reset",
    "pageType": "web-api-instance-method",
    "summary": "The reset() method of the AudioEncoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultController/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the ReadableStreamDefaultController interface closes the associated stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/isConfigSupported_static",
    "pageType": "web-api-static-method",
    "summary": "The isConfigSupported() static method of the AudioEncoder interface checks if the given config is supported (that is, if AudioEncoder objects can be successfully configured with the given config)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultController/desiredSize",
    "pageType": "web-api-instance-property",
    "summary": "The desiredSize read-only property of the\nReadableStreamDefaultController interface returns the desired size\nrequired to fill the stream's internal queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/flush",
    "pageType": "web-api-instance-method",
    "summary": "The flush() method of the AudioEncoder interface returns a Promise that resolves once all pending messages in the queue have been completed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultController/enqueue",
    "pageType": "web-api-instance-method",
    "summary": "The enqueue() method of the\nReadableStreamDefaultController interface enqueues a given chunk in the associated stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the AudioEncoder interface ends all pending work and releases system resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/configure",
    "pageType": "web-api-instance-method",
    "summary": "The configure() method of the AudioEncoder interface enqueues a control message to configure the audio encoder for encoding chunks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RemotePlayback/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the RemotePlayback interface returns the current state of the RemotePlayback connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/encodeQueueSize",
    "pageType": "web-api-instance-property",
    "summary": "The encodeQueueSize read-only property of the AudioEncoder interface returns the number of pending encode requests in the queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RemotePlayback",
    "pageType": "web-api-interface",
    "summary": "The RemotePlayback interface of the Remote Playback API allows the page to detect availability of remote playback devices, then connect to and control playing on these devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioEncoder/encode",
    "pageType": "web-api-instance-method",
    "summary": "The encode() method of the AudioEncoder interface enqueues a control message to encode a given AudioData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RemotePlayback/connect_event",
    "pageType": "web-api-event",
    "summary": "The connect event of the RemotePlayback interface fires when the user agent connects to the remote device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RemotePlayback/watchAvailability",
    "pageType": "web-api-instance-method",
    "summary": "The watchAvailability() method of the RemotePlayback interface watches the list of available remote playback devices and returns a Promise that resolves with the callbackId of a remote playback device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DecompressionStream",
    "pageType": "web-api-interface",
    "summary": "The DecompressionStream interface of the Compression Streams API is an API for decompressing a stream of data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DecompressionStream/DecompressionStream",
    "pageType": "web-api-constructor",
    "summary": "The DecompressionStream() constructor creates a new DecompressionStream object which decompresses a stream of data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RemotePlayback/prompt",
    "pageType": "web-api-instance-method",
    "summary": "The prompt() method of the RemotePlayback interface prompts the user to select an available remote playback device and give permission for the current media to be played using that device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RemotePlayback/disconnect_event",
    "pageType": "web-api-event",
    "summary": "The disconnect event of the RemotePlayback interface fires when the user agent disconnects from the remote device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DecompressionStream/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable read-only property of the DecompressionStream interface returns a ReadableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DecompressionStream/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable read-only property of the DecompressionStream interface returns a WritableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RemotePlayback/connecting_event",
    "pageType": "web-api-event",
    "summary": "The connecting event of the RemotePlayback interface fires when the user agent initiates remote playback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityProvider",
    "pageType": "web-api-interface",
    "summary": "The IdentityProvider interface of the Federated Credential Management (FedCM) API represents an IdP and provides access to related information and functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RemotePlayback/cancelWatchAvailability",
    "pageType": "web-api-instance-method",
    "summary": "The cancelWatchAvailability() method of the RemotePlayback interface cancels the request to watch for one or all available devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityProvider/close_static",
    "pageType": "web-api-static-method",
    "summary": "The close() static method of the IdentityProvider interface provides a manual signal to the browser that an IdP sign-in flow is finished."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MerchantValidationEvent",
    "pageType": "web-api-interface",
    "summary": "The MerchantValidationEvent interface of the Payment Request API enables a merchant to verify themselves as allowed to use a particular payment handler."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityProvider/getUserInfo_static",
    "pageType": "web-api-static-method",
    "summary": "The getUserInfo() static method of the IdentityProvider interface returns information about a user that has signed in, which can be used to provide a personalized welcome message and sign-in button. This method has to be called from within an IdP origin <iframe> so that relying party (RP) scripts cannot access the data. This must occur after a user has been signed in to a RP site."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MerchantValidationEvent/methodName",
    "pageType": "web-api-instance-property",
    "summary": "The MerchantValidationEvent property\nmethodName is a read-only value which returns a string\nindicating the payment method identifier which represents the payment handler that\nrequires merchant validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ANGLE_instanced_arrays",
    "pageType": "web-api-interface",
    "summary": "The ANGLE_instanced_arrays extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MerchantValidationEvent/complete",
    "pageType": "web-api-instance-method",
    "summary": "The MerchantValidationEvent method complete() takes merchant-specific information previously received from the validationURL and uses it to validate the merchant."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ANGLE_instanced_arrays/vertexAttribDivisorANGLE",
    "pageType": "web-api-instance-method",
    "summary": "The ANGLE_instanced_arrays.vertexAttribDivisorANGLE() method of the WebGL API modifies the rate at which generic vertex attributes advance when rendering multiple instances of primitives with ext.drawArraysInstancedANGLE() and ext.drawElementsInstancedANGLE()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MerchantValidationEvent/validationURL",
    "pageType": "web-api-instance-property",
    "summary": "The MerchantValidationEvent property\nvalidationURL is a read-only string value providing the\nURL from which to fetch the payment handler-specific data needed to validate the\nmerchant."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ANGLE_instanced_arrays/drawArraysInstancedANGLE",
    "pageType": "web-api-instance-method",
    "summary": "The ANGLE_instanced_arrays.drawArraysInstancedANGLE() method of the WebGL API renders primitives from array data like the gl.drawArrays() method. In addition, it can execute multiple instances of the range of elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MerchantValidationEvent/MerchantValidationEvent",
    "pageType": "web-api-constructor",
    "summary": "The MerchantValidationEvent() constructor creates a new MerchantValidationEvent object. You should not have to create these events yourself; instead, just handle the merchantvalidation event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ANGLE_instanced_arrays/drawElementsInstancedANGLE",
    "pageType": "web-api-instance-method",
    "summary": "The ANGLE_instanced_arrays.drawElementsInstancedANGLE() method of the WebGL API renders primitives from array data like the gl.drawElements() method. In addition, it can execute multiple instances of a set of elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRAnchorSet",
    "pageType": "web-api-interface",
    "summary": "The XRAnchorSet interface exposes a collection of anchors. Its instances are returned by XRFrame.trackedAnchors and are Set-like objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ClipboardEvent",
    "pageType": "web-api-interface",
    "summary": "The ClipboardEvent interface of the Clipboard API represents events providing information related to modification of the clipboard, that is cut, copy, and paste events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Magnetometer",
    "pageType": "web-api-interface",
    "summary": "The Magnetometer interface of the Sensor APIs provides information about the magnetic field as detected by the device's primary magnetometer sensor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Magnetometer/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the\nMagnetometer interface returns a number specifying\nthe magnetic field around the device's x-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ClipboardEvent/clipboardData",
    "pageType": "web-api-instance-property",
    "summary": "The clipboardData property of the ClipboardEvent interface holds a DataTransfer object, which can be used to:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ClipboardEvent/ClipboardEvent",
    "pageType": "web-api-constructor",
    "summary": "The ClipboardEvent() constructor returns a new ClipboardEvent, representing an event providing information related to modification of the clipboard, that is cut, copy, and paste events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Magnetometer/Magnetometer",
    "pageType": "web-api-constructor",
    "summary": "The Magnetometer() constructor\ncreates a new Magnetometer object which returns information about the\nmagnetic field as detected by a device's primary magnetometer sensor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Magnetometer/z",
    "pageType": "web-api-instance-property",
    "summary": "The z read-only property of the\nMagnetometer interface returns a number specifying\nthe magnetic field around the device's z-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker",
    "pageType": "web-api-interface",
    "summary": "The TreeWalker object represents the nodes of a document subtree and a position within them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Magnetometer/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the\nMagnetometer interface returns a number specifying\nthe magnetic field around the device's y-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/firstChild",
    "pageType": "web-api-instance-method",
    "summary": "The TreeWalker.firstChild() method moves the current\nNode to the first visible child of the current node, and returns\nthe found child. If no such child exists, it returns null and the current node is not changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextElement",
    "pageType": "web-api-interface",
    "summary": "The SVGTextElement interface corresponds to the <text> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/whatToShow",
    "pageType": "web-api-instance-property",
    "summary": "The TreeWalker.whatToShow read-only property returns a\nbitmask that indicates the types of\nnodes to show. Non-matching nodes are skipped, but their\nchildren may be included, if relevant."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorage",
    "pageType": "web-api-interface",
    "summary": "The SharedStorage interface of the Shared Storage API represents the shared storage for a particular origin, defining methods to write data to the shared storage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/currentNode",
    "pageType": "web-api-instance-property",
    "summary": "The TreeWalker.currentNode property represents the\nNode which the TreeWalker is currently pointing at."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorage/set",
    "pageType": "web-api-instance-method",
    "summary": "The set() method of the SharedStorage interface either stores a new key-value pair in the current origin's shared storage or updates an existing one."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/filter",
    "pageType": "web-api-instance-property",
    "summary": "The TreeWalker.filter read-only property returns the NodeFilter\nassociated with the TreeWalker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/lastChild",
    "pageType": "web-api-instance-method",
    "summary": "The TreeWalker.lastChild() method moves the current\nNode to the last visible child of the current node, and returns\nthe found child. If no such child exists, it returns null and the current node is not changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorage/append",
    "pageType": "web-api-instance-method",
    "summary": "The append() method of the SharedStorage interface appends a string to the value of an existing key-value pair in the current origin's shared storage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/nextSibling",
    "pageType": "web-api-instance-method",
    "summary": "The TreeWalker.nextSibling() method moves the current\nNode to its next sibling, if any, and returns the found sibling. If there\nis no such node, it returns null and the current node is not changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorage/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the SharedStorage interface deletes an existing key-value pair from the current origin's shared storage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorage/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the SharedStorage interface clears the current origin's shared storage, removing all data from it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/previousNode",
    "pageType": "web-api-instance-method",
    "summary": "The TreeWalker.previousNode() method moves the current\nNode to the previous visible node in the document order, and\nreturns the found node. If no such node\nexists, or if it is before that the root node defined at the object\nconstruction, it returns null and the current node is not changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/parentNode",
    "pageType": "web-api-instance-method",
    "summary": "The TreeWalker.parentNode() method moves the current\nNode to the first visible ancestor node in the document order,\nand returns the found node. If no such node exists, or if it is above the\nTreeWalker's root node, it returns null and the current\nnode is not changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDetector/change_event",
    "pageType": "web-api-event",
    "summary": "The change event of the IdleDetector interface fires when the value of userState or screenState has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/root",
    "pageType": "web-api-instance-property",
    "summary": "The TreeWalker.root read-only property returns the root Node that the TreeWalker traverses."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDetector",
    "pageType": "web-api-interface",
    "summary": "The IdleDetector interface of the Idle Detection API provides methods and events for detecting user activity on a device or screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDetector/IdleDetector",
    "pageType": "web-api-constructor",
    "summary": "The IdleDetector() constructor creates a new IdleDetector\nobject which provides events indicating when the user is no longer interacting\nwith their device or the screen has locked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/previousSibling",
    "pageType": "web-api-instance-method",
    "summary": "The TreeWalker.previousSibling() method moves the current\nNode to its previous sibling, if any, and returns the found sibling. If\nthere is no such node, it returns null and the current node is not changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDetector/start",
    "pageType": "web-api-instance-method",
    "summary": "The start() method of the IdleDetector interface returns a\nPromise that resolves when the detector starts listening for changes in the\nuser's idle state. This\nmethod takes an optional options object with the threshold in milliseconds\nwhere inactivity should be reported and signal for an AbortSignal to abort\nthe idle detector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TreeWalker/nextNode",
    "pageType": "web-api-instance-method",
    "summary": "The TreeWalker.nextNode() method moves the current\nNode to the next visible node in the document order, and returns\nthe found node. If no such node exists, it returns null and the current node is not changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDetector/screenState",
    "pageType": "web-api-instance-property",
    "summary": "The screenState read-only property of the IdleDetector interface\nreturns a string indicating whether the screen is locked, one of \"locked\" or\n\"unlocked\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_shader_texture_lod",
    "pageType": "webgl-extension",
    "summary": "The EXT_shader_texture_lod extension is part of the WebGL API and adds additional texture functions to the OpenGL ES Shading Language which provide the shader writer with explicit control of LOD (Level of detail)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDetector/requestPermission_static",
    "pageType": "web-api-static-method",
    "summary": "The requestPermission() static method of the IdleDetector\ninterface returns a Promise that resolves with a string when the user has chosen\nwhether to grant the origin access to their idle state. Resolves with\n\"granted\" on acceptance and \"denied\" on refusal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/QuotaExceededError",
    "pageType": "web-api-interface",
    "summary": "The QuotaExceededError interface represents an error when a requested operation would exceed a system-imposed storage quota."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdleDetector/userState",
    "pageType": "web-api-instance-property",
    "summary": "The userState read-only property of the IdleDetector interface returns a string indicating whether the user has interacted with the device since the call to start()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/QuotaExceededError/requested",
    "pageType": "web-api-instance-property",
    "summary": "The requested read-only property of the QuotaExceededError interface returns the number of bytes that were requested when the error occurred, or undefined if the information is not available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserverEntryList",
    "pageType": "web-api-interface",
    "summary": "The PerformanceObserverEntryList interface is a list of performance events that were explicitly observed via the observe() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/QuotaExceededError/quota",
    "pageType": "web-api-instance-property",
    "summary": "The quota read-only property of the QuotaExceededError interface returns the system-defined storage quota (in bytes) that the operation attempted to exceed, or undefined if the information is not available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserverEntryList/getEntries",
    "pageType": "web-api-instance-method",
    "summary": "The getEntries() method of the PerformanceObserverEntryList interface returns a list of explicitly observed performance entry objects. The list's members are determined by the set of entry types specified in the call to the observe() method. The list is available in the observer's callback function (as the first parameter in the callback)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/QuotaExceededError/QuotaExceededError",
    "pageType": "web-api-constructor",
    "summary": "The QuotaExceededError() constructor creates a new QuotaExceededError object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByName",
    "pageType": "web-api-instance-method",
    "summary": "The getEntriesByName() method of the PerformanceObserverEntryList interface returns a list of explicitly observed PerformanceEntry objects for a given name and entryType. The list's members are determined by the set of entry types specified in the call to the observe() method. The list is available in the observer's callback function (as the first parameter in the callback)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin read-only property of the HTMLAreaElement interface returns a string containing the Unicode serialization of the origin of the <area> element's href."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByType",
    "pageType": "web-api-instance-method",
    "summary": "The getEntriesByType() method of the PerformanceObserverEntryList returns a list of explicitly observed performance entry objects for a given performance entry type. The list's members are determined by the set of entry types specified in the call to the observe() method. The list is available in the observer's callback function (as the first parameter in the callback)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLAreaElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <area> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API",
    "pageType": "web-api-overview",
    "summary": "WebGL (Web Graphics Library) is a JavaScript API for rendering high-performance interactive 3D and 2D graphics within any compatible web browser without the use of plug-ins. WebGL does so by introducing an API that closely conforms to OpenGL ES 2.0 that can be used in HTML <canvas> elements. This conformance makes it possible for the API to take advantage of hardware graphics acceleration provided by the user's device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/ping",
    "pageType": "web-api-instance-property",
    "summary": "The ping property of the HTMLAreaElement interface is a space-separated list of URLs. When the link is followed, the browser will send POST requests with the body PING to the URLs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/download",
    "pageType": "web-api-instance-property",
    "summary": "The download property of the HTMLAreaElement interface is a string indicating that the linked resource is intended to be downloaded rather than displayed in the browser. The value represent the proposed name of the file. If the name is not a valid filename of the underlying OS, browser will adjust it accordingly."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Constants",
    "pageType": "guide",
    "summary": "The WebGL API provides several constants that are passed into or returned by functions. All constants are of type GLenum."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/pathname",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAreaElement.pathname property is a\nstring containing an initial '/' followed by the path of\nthe URL not including the query string or fragment (or the empty string if there is no\npath)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/host",
    "pageType": "web-api-instance-property",
    "summary": "The host property of the HTMLAreaElement interface is a string containing the host, which is the hostname, and then, if the port of the URL is nonempty, a \":\", followed by the port of the URL. If the URL does not have a hostname, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example",
    "pageType": "guide",
    "summary": "WebGL by example is a series of live samples with short explanations that showcase WebGL concepts and capabilities."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol property of the HTMLAreaElement interface is a string containing the protocol or scheme of the <area> element's href, including the final \":\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Basic_scissoring",
    "pageType": "guide",
    "summary": "In this example, we see how to draw rectangles and squares using WebGL scissoring operations. Scissoring establishes a clipping region outside which drawing will not occur."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Boilerplate_1",
    "pageType": "guide",
    "summary": "This example describes repeated pieces of code that will be hidden from now on, as well as defining a JavaScript utility function to make WebGL initialization easier."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/search",
    "pageType": "web-api-instance-property",
    "summary": "The search property of the HTMLAreaElement interface is a search string, also called a query string, that is a string containing a \"?\" followed by the parameters of the <area> element's href. If the URL does not have a search query, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Clearing_by_clicking",
    "pageType": "guide",
    "summary": "This example demonstrates how to combine user interaction with WebGL graphics operations by clearing the rendering context with a random color when the user clicks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/username",
    "pageType": "web-api-instance-property",
    "summary": "The username property of the HTMLAreaElement interface is a string containing the username component of the <area> element's href. If the URL does not have a username, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Raining_rectangles",
    "pageType": "guide",
    "summary": "A simple WebGL game that demonstrates clearing with solid colors, scissoring, animation, and user interaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/hostname",
    "pageType": "web-api-instance-property",
    "summary": "The hostname property of the HTMLAreaElement interface is a string containing either the domain name or IP address of the <area> element's URL. If the URL does not have a hostname, this property contains an empty string, \"\". IPv4 and IPv6 addresses are normalized, such as stripping leading zeros, and domain names are converted to IDN."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Clearing_with_colors",
    "pageType": "guide",
    "summary": "An example showing how to clear a WebGL rendering context to a solid color."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/port",
    "pageType": "web-api-instance-property",
    "summary": "The port property of the HTMLAreaElement interface is a string containing the port number of the <area> element's href. If the port is the default for the protocol (80 for ws: and http:, 443 for wss: and https:, and 21 for ftp:), this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Detect_WebGL",
    "pageType": "guide",
    "summary": "This example demonstrates how to detect a WebGL rendering context and reports the result to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/referrerPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The\nHTMLAreaElement.referrerPolicy\nproperty reflect the HTML referrerpolicy attribute of the\n<area> element defining which referrer is sent when fetching the\nresource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/target",
    "pageType": "web-api-instance-property",
    "summary": "The target property of the HTMLAreaElement interface is a string that indicates where to display the linked resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Simple_color_animation",
    "pageType": "guide",
    "summary": "A very basic color animation created using WebGL, performed by clearing the drawing buffer with a different random color every second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Scissor_animation",
    "pageType": "guide",
    "summary": "A simple WebGL example in which we have some animation fun using scissoring and clearing operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/alt",
    "pageType": "web-api-instance-property",
    "summary": "The alt property of the HTMLAreaElement interface specifies the text of the hyperlink, defining the textual label for an image map's link. It reflects the <area> element's alt attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Canvas_size_and_WebGL",
    "pageType": "guide",
    "summary": "This WebGL example explores the effect of setting (or not setting) the canvas size to its element size in CSS pixels, as it appears in the browser window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/hash",
    "pageType": "web-api-instance-property",
    "summary": "The hash property of the HTMLAreaElement interface is a string containing a \"#\" followed by the fragment identifier of the <area> element's href. If the URL does not have a fragment identifier, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/password",
    "pageType": "web-api-instance-property",
    "summary": "The password property of the HTMLAreaElement interface is a string containing the password component of the <area> element's href. If the URL does not have a password, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Hello_vertex_attributes",
    "pageType": "guide",
    "summary": "This WebGL example demonstrates how to combine shader programming and user interaction by sending user input to the shader using vertex attributes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/coords",
    "pageType": "web-api-instance-property",
    "summary": "The coords property of the HTMLAreaElement interface specifies the coordinates of the element's shape as a list of floating-point numbers. It reflects the <area> element's coords attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Color_masking",
    "pageType": "guide",
    "summary": "This WebGL example modifies random colors by applying color masking to limit the range of displayed colors to specific shades."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Textures_from_code",
    "pageType": "guide",
    "summary": "This WebGL example provides a simple demonstration of procedural texturing with fragment shaders. That is, using code to generate textures for use in shading WebGL objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/relList",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAreaElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the <area> element and the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Video_textures",
    "pageType": "guide",
    "summary": "This example demonstrates how to use video files as textures for WebGL surfaces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAreaElement.href property is a\nstringifier that returns a string containing the whole URL, and allows\nthe href to be updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/rel",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAreaElement.rel property reflects the rel attribute. It is a string containing a space-separated list of link types indicating the relationship between the resource represented by the <area> element and the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/By_example/Hello_GLSL",
    "pageType": "guide",
    "summary": "This WebGL example demonstrates a very basic GLSL shader program that draws a solid color square."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/shape",
    "pageType": "web-api-instance-property",
    "summary": "The shape property of the HTMLAreaElement interface specifies the shape of an image map area. It reflects the <area> element's shape attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Tutorial",
    "pageType": "guide",
    "summary": "This tutorial describes how to use the <canvas> element to draw WebGL graphics, starting with the basics. The examples provided should give you some clear ideas of what you can do with WebGL and will provide code snippets that may get you started in building your own content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAreaElement/toString",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLAreaElement.toString() stringifier\nmethod returns a string containing the whole URL. It is a read-only\nversion of HTMLAreaElement.href."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL",
    "pageType": "guide",
    "summary": "Now that our sample program has a rotating 3D cube, let's map a texture onto it instead of having its faces be solid colors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL",
    "pageType": "guide",
    "summary": "WebGL enables web content to use an API based on OpenGL ES 2.0 to perform 2D and 3D rendering in an HTML canvas in browsers that support it without the use of plug-ins."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackGenerator/muted",
    "pageType": "web-api-instance-property",
    "summary": "The muted Boolean property of the VideoTrackGenerator interface can be used to temporarily halt or resume the generation of video frames in the output track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackGenerator",
    "pageType": "web-api-interface",
    "summary": "The VideoTrackGenerator interface of the Insertable Streams for MediaStreamTrack API has a WritableStream property that acts as a MediaStreamTrack source, by consuming a stream of VideoFrames as input."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context",
    "pageType": "guide",
    "summary": "Once you've successfully created a WebGL context, you can start rendering into it. A simple thing we can do is draw an untextured square plane, so let's start there."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Tutorial/Animating_objects_with_WebGL",
    "pageType": "guide",
    "summary": "In this example, we'll actually rotate our camera. By doing so, it will look as if we are rotating the square. First we'll need some variables in which to track the current rotation of the camera."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackGenerator/track",
    "pageType": "web-api-instance-property",
    "summary": "The track property of the VideoTrackGenerator interface returns a MediaStreamTrack. VideoFrames written to VideoTrackGenerator.writable will be generated in this track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Tutorial/Creating_3D_objects_using_WebGL",
    "pageType": "guide",
    "summary": "Let's take our square plane into three dimensions by adding five more faces to create a cube. To do this efficiently, we're going to switch from drawing using the vertices directly by calling the gl.drawArrays() method to using the vertex array as a table, and referencing individual vertices in that table to define the positions of each face's vertices, by calling gl.drawElements()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackGenerator/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable property of the VideoTrackGenerator interface returns a WritableStream. This allows the writing of VideoFrames to the VideoTrackGenerator.track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Tutorial/Lighting_in_WebGL",
    "pageType": "guide",
    "summary": "As should be clear by now, WebGL doesn't have much built-in knowledge. It just runs two functions you supply — a vertex shader and a fragment shader — and expects you to write creative functions to get the results you want. In other words, if you want lighting you have to calculate it yourself. Fortunately, it's not all that hard to do, and this article will cover some of the basics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoTrackGenerator/VideoTrackGenerator",
    "pageType": "web-api-constructor",
    "summary": "The VideoTrackGenerator() constructor creates a new VideoTrackGenerator object which consumes a stream of media frames and exposes a MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Tutorial/Using_shaders_to_apply_color_in_WebGL",
    "pageType": "guide",
    "summary": "Having created a square plane in the previous demonstration, the next obvious step is to add a splash of color to it. We can do this by revising the shaders."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance_API/Monitoring_bfcache_blocking_reasons",
    "pageType": "guide",
    "summary": "The PerformanceNavigationTiming.notRestoredReasons property reports information on why the current document was blocked from using the bfcache on navigation. Developers can use this information to identify pages that need updates to make them bfcache-compatible, thereby improving site performance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Tutorial/Animating_textures_in_WebGL",
    "pageType": "guide",
    "summary": "In this demonstration, we build upon the previous example by replacing our static textures with the frames of an mp4 video file that's playing. This is actually pretty easy to do and fun to watch, so let's get started. You can use similar code to use any sort of data (such as a <canvas>) as the source for your textures."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance_API",
    "pageType": "web-api-overview",
    "summary": "The Performance API is a group of standards used to measure the performance of web applications."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/WebGL_model_view_projection",
    "pageType": "guide",
    "summary": "This article explores how to take data within a WebGL project, and project it into the proper spaces to display it on the screen. It assumes a knowledge of basic matrix math using translation, scale, and rotation matrices. It explains the three core matrices that are typically used when composing a 3D scene: the model, view and projection matrices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance_API/Long_animation_frame_timing",
    "pageType": "guide",
    "summary": "Long animation frames (LoAFs) can impact the user experience of a website. They can cause slow user interface (UI) updates, resulting in seemingly unresponsive controls and janky (or non-smooth) animated effects and scrolling, leading to user frustration. The Long Animation Frames API allows developers to get information about the long animation frames and better understand their root causes. This article shows how to use the Long Animation Frames API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Data",
    "pageType": "guide",
    "summary": "Shader programs have access to three kinds of data storage, each of which has a specific use case. Each kind of variable is accessible by one or both types of shader program (depending on the data store type) and possibly by the site's JavaScript code, depending on the specific type of variable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Compressed_texture_formats",
    "pageType": "guide",
    "summary": "The WebGL API provides methods to use compressed texture formats. These are useful to increase texture detail while limiting the additional video memory necessary. By default, no compressed formats are available: a corresponding compressed texture format extension must first be enabled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance_API/Performance_data",
    "pageType": "guide",
    "summary": "The Performance API measures and exposes performance data that can be collected as performance metrics for your web application. It provides methods to observe aspects of application performance. It doesn't provide performance data analysis, or visualizations. However, the Performance API is integrated well with developer tools in browsers and its data is often sent to analytics end points and libraries to record performance metrics which help you to evaluate the data to find performance bottlenecks affecting your users."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance_API/High_precision_timing",
    "pageType": "guide",
    "summary": "The Performance API allows high precision measurements that are based on time in potential sub-millisecond resolution and a stable monotonic clock that is not subject to system clock skew or adjustments.\nThe high resolution timers are needed for accurate benchmarking instead of the less precise and non-monotonic Date timestamps."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Basic_2D_animation_example",
    "pageType": "guide",
    "summary": "In this WebGL example, we create a canvas and within it render a rotating square using WebGL. The coordinate system we use to represent our scene is the same as the canvas's coordinate system. That is, (0, 0) is at the top-left corner and the bottom-right corner is at (600, 460)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Using_Extensions",
    "pageType": "guide",
    "summary": "WebGL, like its sister APIs (OpenGL and OpenGL ES), supports extensions. A complete list of extensions is available in the khronos webgl extension registry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance_API/Resource_timing",
    "pageType": "web-api-overview",
    "summary": "Resource Timing is part of the Performance API and enables retrieving and analyzing detailed network timing data for the loading of an application's resources. An application can use the timing metrics to determine, for example, the length of time it takes to load a specific resource (such as an image or a script) either implicitly as part of page load or explicitly from JavaScript, for example using the fetch() API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance_API/User_timing",
    "pageType": "guide",
    "summary": "User Timing is part of the Performance API and allows you to measure the performance of applications using high-precision timestamps that are part of the browser's performance timeline.\nThere are two types of timing performance entries:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Types",
    "pageType": "guide",
    "summary": "The following types are used in WebGL interfaces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance_API/Server_timing",
    "pageType": "guide",
    "summary": "Server-Timing is a part of the Performance API and allows servers to communicate metrics about the request-response cycle to the user agent. You can collect this information and act on server-side metrics in the same way as all the other metrics processed with the Performance API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/Matrix_math_for_the_web",
    "pageType": "guide",
    "summary": "Matrices can be used to represent transformations of objects in space, and are used for performing many key types of computation when constructing images and visualizing data on the Web. This article explores how to create matrices and how to use them with CSS transforms and the matrix3d transform type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance_API/Navigation_timing",
    "pageType": "web-api-overview",
    "summary": "Navigation Timing is part of the Performance API and provides metrics associated with navigating from one page to another. For example, you can determine how much time it takes to load or unload a document, or log the time it took until DOM construction has finished and interaction with the DOM is possible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL_API/WebGL_best_practices",
    "pageType": "guide",
    "summary": "WebGL is a complicated API, and it's often not obvious what the recommended ways to use it are. This page tackles recommendations across the spectrum of expertise, and not only highlights dos and don'ts, but also details why. You can rely on this document to guide your choice of approach, and ensure you're on the right track no matter what browser or hardware your users run."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Badging_API",
    "pageType": "web-api-overview",
    "summary": "The Badging API gives web developers a method of setting a badge on a document or application, to act as a notification that state has changed without displaying a more distracting notification. A common use case for this would be an application with a messaging feature displaying a badge on the app icon to show that new messages have arrived."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EcKeyGenParams",
    "pageType": "web-api-interface",
    "summary": "The EcKeyGenParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.generateKey(), when generating any elliptic-curve-based key pair: that is, when the algorithm is identified as either of ECDSA or ECDH."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLProgressElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLProgressElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <progress> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLProgressElement/position",
    "pageType": "web-api-instance-property",
    "summary": "The position read-only property of the HTMLProgressElement interface returns current progress of the <progress> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/deleteShader",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.deleteShader() method of the WebGL API marks a given\nWebGLShader object for deletion. It will then be deleted whenever the\nshader is no longer in use. This method has no effect if the shader has already been\ndeleted, and the WebGLShader is automatically marked for deletion when it\nis destroyed by the garbage collector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLProgressElement/max",
    "pageType": "web-api-instance-property",
    "summary": "The max property of the HTMLProgressElement interface represents the upper bound of the <progress> element's range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/texSubImage2D",
    "pageType": "web-api-instance-method",
    "summary": "The texSubImage2D() method of the WebGLRenderingContext interface of the WebGL API specifies a two-dimensional sub-rectangle for a texture image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLProgressElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the HTMLProgressElement interface represents the current progress of the <progress> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/polygonOffset",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.polygonOffset() method of the\nWebGL API specifies the scale factors and\nunits to calculate depth values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLProgressElement/labels",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLProgressElement.labels read-only property returns\na NodeList of the <label> elements associated with the\n<progress> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/unpackColorSpace",
    "pageType": "web-api-instance-property",
    "summary": "The WebGLRenderingContext.unpackColorSpace property specifies the color space to convert to when importing textures. Along with the default (srgb), the display-p3 color space can be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getShaderInfoLog",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getShaderInfoLog returns the information log\nfor the specified WebGLShader object. It contains warnings, debugging and\ncompile information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Cookie_Store_API",
    "pageType": "web-api-overview",
    "summary": "The Cookie Store API is an asynchronous API for managing cookies, available in windows and also service workers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/bufferSubData",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.bufferSubData() method of the\nWebGL API updates a subset of a buffer\nobject's data store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clients",
    "pageType": "web-api-interface",
    "summary": "The Clients interface provides access to Client objects. Access it via self.clients within a service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext",
    "pageType": "web-api-interface",
    "summary": "The WebGLRenderingContext interface provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clients/claim",
    "pageType": "web-api-instance-method",
    "summary": "The claim() method of the Clients interface allows an active service worker to set itself as the controller for all clients within its scope.\nThis triggers a controllerchange event on navigator.serviceWorker in any clients that become controlled by this service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getShaderParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getShaderParameter() method of\nthe WebGL API returns information about the\ngiven shader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clients/matchAll",
    "pageType": "web-api-instance-method",
    "summary": "The matchAll() method of the Clients\ninterface returns a Promise for a list of service worker\nClient objects. Include the options parameter to return all service worker\nclients whose origin is the same as the associated service worker's origin. If options\nare not included, the method returns only the service worker clients controlled by the\nservice worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/bindAttribLocation",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.bindAttribLocation() method of\nthe WebGL API binds a generic vertex index\nto an attribute variable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clients/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the\nClients interface gets a service worker client matching a given\nid and returns it in a Promise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/copyTexSubImage2D",
    "pageType": "web-api-instance-method",
    "summary": "The copyTexSubImage2D() method of the WebGLRenderingContext interface of the WebGL API copies pixels from the current WebGLFramebuffer into a 2D texture sub-image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clients/openWindow",
    "pageType": "web-api-instance-method",
    "summary": "The openWindow() method of the Clients\ninterface creates a new top level browsing context and loads a given URL. If the calling\nscript doesn't have permission to show popups, openWindow() will throw an\nInvalidAccessError."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer",
    "pageType": "web-api-instance-method",
    "summary": "The\nWebGLRenderingContext.vertexAttribPointer() method of the\nWebGL API binds the buffer currently bound\nto gl.ARRAY_BUFFER to a generic vertex attribute of the current vertex\nbuffer object and specifies its layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/blendFuncSeparate",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.blendFuncSeparate() method of\nthe WebGL API defines which function is used\nfor blending pixel arithmetic for RGB and alpha components separately."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice",
    "pageType": "web-api-interface",
    "summary": "The USBDevice interface of the WebUSB API provides access to metadata about a paired USB device and methods for controlling it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/disableVertexAttribArray",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.disableVertexAttribArray()\nmethod of the WebGL API turns the generic\nvertex attribute array off at a given index position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/claimInterface",
    "pageType": "web-api-instance-method",
    "summary": "The claimInterface() method of the\nUSBDevice interface returns a promise that resolves when\nthe requested interface is claimed for exclusive access."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/sampleCoverage",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.sampleCoverage() method of the\nWebGL API specifies multi-sample coverage\nparameters for anti-aliasing effects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getSupportedExtensions",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getSupportedExtensions() method\nreturns a list of all the supported WebGL\nextensions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/open",
    "pageType": "web-api-instance-method",
    "summary": "The open() method of the USBDevice\ninterface returns a promise that resolves when a device session has\nstarted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/linkProgram",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext interface's\nlinkProgram() method links a given\nWebGLProgram, completing the process of preparing the GPU code for the\nprogram's fragment and vertex shaders."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/deviceClass",
    "pageType": "web-api-instance-property",
    "summary": "The deviceClass read only property of the\nUSBDevice interface one of three properties that identify USB devices for\nthe purpose of loading a USB driver that will work with that device. The other two\nproperties are USBDevice.deviceSubclass and USBDevice.deviceProtocol."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/compileShader",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.compileShader() method of the WebGL API compiles a GLSL shader into binary\ndata so that it can be used by a WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getActiveAttrib",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getActiveAttrib() method of the\nWebGL API returns a\nWebGLActiveInfo object containing size, type, and name of a vertex\nattribute. It is generally used when querying unknown attributes either for debugging or\ngeneric library creation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/controlTransferOut",
    "pageType": "web-api-instance-method",
    "summary": "The controlTransferOut() method of the USBDevice interface returns a Promise that resolves with a USBOutTransferResult when a command or status operation has been transmitted from the USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.framebufferTexture2D() method\nof the WebGL API attaches a texture to a\nWebGLFramebuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/productId",
    "pageType": "web-api-instance-property",
    "summary": "The productId read only property of the\nUSBDevice interface the manufacturer-defined code that identifies a USB\ndevice."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getShaderSource",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getShaderSource() method of the\nWebGL API returns the source code of a\nWebGLShader as a string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.pixelStorei() method of the WebGL API specifies the pixel storage modes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/selectAlternateInterface",
    "pageType": "web-api-instance-method",
    "summary": "The selectAlternateInterface() method of the\nUSBDevice interface returns a promise that resolves when\nthe specified alternative endpoint is selected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/copyTexImage2D",
    "pageType": "web-api-instance-method",
    "summary": "The copyTexImage2D() method of the WebGLRenderingContext interface of the WebGL API copies pixels from the current WebGLFramebuffer into a 2D texture image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/opened",
    "pageType": "web-api-instance-property",
    "summary": "The opened read only property of the\nUSBDevice interface indicates whether a session has been started with a\npaired USB device. A device must be opened before it can be controlled by a web page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferWidth",
    "pageType": "web-api-instance-property",
    "summary": "The read-only WebGLRenderingContext.drawingBufferWidth\nproperty represents the actual width of the current drawing buffer. It should match the\nwidth attribute of the <canvas> element associated with\nthis context, but might differ if the implementation is not able to provide the\nrequested width."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/usbVersionSubminor",
    "pageType": "web-api-instance-property",
    "summary": "The usbVersionSubminor read only property of the\nUSBDevice interface is one of three properties that declare the USB\nprotocol version supported by the device. The other two properties\nare USBDevice.usbVersionMajor and USBDevice.usbVersionMinor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/isProgram",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.isProgram() method of the WebGL API returns true if the\npassed WebGLProgram is valid, false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/blendFunc",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.blendFunc() method of the WebGL API defines which function is used for\nblending pixel arithmetic."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/isochronousTransferIn",
    "pageType": "web-api-instance-method",
    "summary": "The isochronousTransferIn() method of the USBDevice interface returns a Promise that resolves with a USBIsochronousInTransferResult when time sensitive information has been transmitted to (received by) the USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/createBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.createBuffer() method of the WebGL API creates and initializes a\nWebGLBuffer storing data such as vertices or colors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/manufacturerName",
    "pageType": "web-api-instance-property",
    "summary": "The manufacturerName read only property of the\nUSBDevice interface the of the organization that manufactured the USB\ndevice."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getActiveUniform",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getActiveUniform() method of\nthe WebGL API returns a\nWebGLActiveInfo object containing size, type, and name of a uniform\nattribute. It is generally used when querying unknown uniforms either for debugging or\ngeneric library creation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/validateProgram",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.validateProgram() method of the\nWebGL API validates a\nWebGLProgram. It checks if it is successfully linked and if it can be\nused in the current WebGL state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/deviceSubclass",
    "pageType": "web-api-instance-property",
    "summary": "The deviceSubclass read only property of the\nUSBDevice interface one of three properties that identify USB devices for\nthe purpose of loading a USB driver that will work with that device. The other two\nproperties are USBDevice.deviceClass and USBDevice.deviceProtocol."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getVertexAttrib",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getVertexAttrib() method of the\nWebGL API returns information about a vertex\nattribute at a given position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/reset",
    "pageType": "web-api-instance-method",
    "summary": "The reset() method of the USBDevice\ninterface returns a promise that resolves when the device is reset and all\napp operations canceled and their promises rejected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/deleteFramebuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.deleteFramebuffer() method of\nthe WebGL API deletes a given\nWebGLFramebuffer object. This method has no effect if the frame buffer\nhas already been deleted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/isBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.isBuffer() method of the WebGL API returns true if the\npassed WebGLBuffer is valid and false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/configurations",
    "pageType": "web-api-instance-property",
    "summary": "The configurations read only property of the\nUSBDevice interface an array of device-specific interfaces\nfor controlling a paired USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferColorSpace",
    "pageType": "web-api-instance-property",
    "summary": "The WebGLRenderingContext.drawingBufferColorSpace property specifies the color space of the WebGL drawing buffer. Along with the default (srgb), the display-p3 color space can be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/isochronousTransferOut",
    "pageType": "web-api-instance-method",
    "summary": "The isochronousTransferOut() method of the\nUSBDevice interface returns a Promise that resolves with a USBIsochronousOutTransferResult when time sensitive information has been transmitted from the USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getParameter() method of the WebGL API returns a value for the passed\nparameter name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getAttachedShaders",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getAttachedShaders() method of\nthe WebGL API returns a list of\nWebGLShader objects attached to a WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/vendorId",
    "pageType": "web-api-instance-property",
    "summary": "The vendorId read only property of the\nUSBDevice interface is the official usb.org-assigned vendor ID."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/isRenderbuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.isRenderbuffer() method of the\nWebGL API returns true if the\npassed WebGLRenderbuffer is valid and false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/transferOut",
    "pageType": "web-api-instance-method",
    "summary": "The transferOut() method of the USBDevice\ninterface returns a promise that resolves with a\nUSBOutTransferResult when bulk or interrupt data is sent to the USB\ndevice."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/deleteBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.deleteBuffer() method of the WebGL API deletes a given\nWebGLBuffer. This method has no effect if the buffer has already been\ndeleted. Normally you don't need to call this method yourself, when the buffer object is dereferenced it will be marked as free."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/hint",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.hint() method of the WebGL API specifies hints for certain\nbehaviors. The interpretation of these hints depend on the implementation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the USBDevice\ninterface returns a promise that resolves when all open interfaces are\nreleased and the device session has ended."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/framebufferRenderbuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.framebufferRenderbuffer()\nmethod of the WebGL API attaches a\nWebGLRenderbuffer object to a WebGLFramebuffer object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/usbVersionMinor",
    "pageType": "web-api-instance-property",
    "summary": "The usbVersionMinor read only property of the\nUSBDevice interface is one of three properties that declare the USB\nprotocol version supported by the device. The other two properties\nare USBDevice.usbVersionMajor and USBDevice.usbVersionSubminor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/readPixels",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.readPixels() method of the WebGL API reads a block of pixels from a\nspecified rectangle of the current color framebuffer into a TypedArray or a DataView object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/deviceProtocol",
    "pageType": "web-api-instance-property",
    "summary": "The deviceProtocol read only property of the\nUSBDevice interface one of three properties that identify USB devices for\nthe purpose of loading a USB driver that will work with that device. The other two\nproperties are USBDevice.deviceClass\nand USBDevice.deviceSubclass."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getTexParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getTexParameter() method of the\nWebGL API returns information about the\ngiven texture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/useProgram",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.useProgram() method of the WebGL API sets the specified\nWebGLProgram as part of the current rendering state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/controlTransferIn",
    "pageType": "web-api-instance-method",
    "summary": "The controlTransferIn() method of the USBDevice interface returns a Promise that resolves with a USBInTransferResult when a command or status request has been transmitted to (received by) the USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/canvas",
    "pageType": "web-api-instance-property",
    "summary": "The WebGLRenderingContext.canvas property is a read-only\nreference to the HTMLCanvasElement or OffscreenCanvas\nobject that is associated with the context. It might be null if it is not\nassociated with a <canvas> element or an OffscreenCanvas\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/configuration",
    "pageType": "web-api-instance-property",
    "summary": "The configuration read only property of the\nUSBDevice interface returns a USBConfiguration object for\nthe currently selected interface for a paired USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/clearStencil",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.clearStencil() method of the WebGL API specifies the clear value for the\nstencil buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/lineWidth",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.lineWidth() method of the WebGL API sets the line width of rasterized\nlines."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/selectConfiguration",
    "pageType": "web-api-instance-method",
    "summary": "The selectConfiguration() method of the\nUSBDevice interface returns a promise that resolves when\nthe specified configuration is selected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/drawArrays",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.drawArrays() method of the WebGL API renders primitives from array data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/deviceVersionMajor",
    "pageType": "web-api-instance-property",
    "summary": "The deviceVersionMajor read only property of the\nUSBDevice interface he major version number of the device in a semantic\nversioning scheme."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/generateMipmap",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.generateMipmap() method of the\nWebGL API generates a set of mipmaps for a\nWebGLTexture object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/serialNumber",
    "pageType": "web-api-instance-property",
    "summary": "The serialNumber read only property of the\nUSBDevice interface is the manufacturer-defined serial number for the\nspecific USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/deleteTexture",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.deleteTexture() method of the\nWebGL API deletes a given\nWebGLTexture object. This method has no effect if the texture has already\nbeen deleted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D",
    "pageType": "web-api-instance-method",
    "summary": "The compressedTexSubImage2D() method of the WebGLRenderingContext interface of the WebGL API specifies a two-dimensional sub-rectangle for a texture image in a compressed format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/deviceVersionSubminor",
    "pageType": "web-api-instance-property",
    "summary": "The deviceVersionSubminor read only property of the\nUSBDevice interface the patch version number of the device in a semantic\nversioning scheme."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/deleteProgram",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.deleteProgram() method of the\nWebGL API deletes a given\nWebGLProgram object. This method has no effect if the program has already\nbeen deleted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/productName",
    "pageType": "web-api-instance-property",
    "summary": "The productName read only property of the\nUSBDevice interface the manufacturer-defined name that identifies a USB\ndevice."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]()\nmethods of the WebGL API specify constant\nvalues for generic vertex attributes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/clearHalt",
    "pageType": "web-api-instance-method",
    "summary": "The clearHalt() method of the USBDevice\ninterface returns a promise that resolves when a halt condition is\ncleared. A halt condition is when a data transfer to or from the device has a status\nof 'stall', which requires the web page (the host system, in USB\nterminology) to clear that condition. See the for details."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.bindFramebuffer() method of the\nWebGL API binds to the specified target the provided WebGLFramebuffer, or, if the framebuffer argument is null, the default WebGLFramebuffer, which is associated with the canvas rendering context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/releaseInterface",
    "pageType": "web-api-instance-method",
    "summary": "The releaseInterface() method of the\nUSBDevice interface returns a promise that resolves when a\nclaimed interface is released from exclusive access."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/stencilOp",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.stencilOp() method of the WebGL API sets both the front and back-facing\nstencil test actions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/bindTexture",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.bindTexture() method of the WebGL API binds a given\nWebGLTexture to a target (binding point)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/forget",
    "pageType": "web-api-instance-method",
    "summary": "The forget() method of the USBDevice interface returns a Promise that resolves when all pending operations are aborted, all open interfaces are released, the device session has ended, and the permission is reset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getUniformLocation",
    "pageType": "web-api-instance-method",
    "summary": "Part of the WebGL API, the WebGLRenderingContext method\ngetUniformLocation() returns the location of a\nspecific uniform variable which is part of a given\nWebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/deviceVersionMinor",
    "pageType": "web-api-instance-property",
    "summary": "The deviceVersionMinor read only property of the\nUSBDevice interface the minor version number of the device in a semantic\nversioning scheme."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/flush",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.flush() method of the WebGL API empties different buffer commands,\ncausing all commands to be executed as quickly as possible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/transferIn",
    "pageType": "web-api-instance-method",
    "summary": "The transferIn() method of the USBDevice\ninterface returns a promise that resolves with a\nUSBInTransferResult when bulk or interrupt data is received from the USB\ndevice."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/enable",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.enable() method of the WebGL API enables specific WebGL capabilities\nfor this context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/bindRenderbuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.bindRenderbuffer() method of\nthe WebGL API binds a given\nWebGLRenderbuffer to a target, which must be\ngl.RENDERBUFFER."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBDevice/usbVersionMajor",
    "pageType": "web-api-instance-property",
    "summary": "The usbVersionMajor read only property of the\nUSBDevice interface is one of three properties that declare the USB\nprotocol version supported by the device. The other two properties\nare USBDevice.usbVersionMinor and USBDevice.usbVersionSubminor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/blendEquationSeparate",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.blendEquationSeparate() method\nof the WebGL API is used to set the RGB\nblend equation and alpha blend equation separately."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSessionDescription",
    "pageType": "web-api-interface",
    "summary": "The RTCSessionDescription interface describes one end of a connection—or potential connection—and how it's configured. Each RTCSessionDescription consists of a description type indicating which part of the offer/answer negotiation process it describes and of the SDP descriptor of the session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/createFramebuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.createFramebuffer() method of\nthe WebGL API creates and initializes a\nWebGLFramebuffer object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getContextAttributes",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getContextAttributes() method\nreturns a WebGLContextAttributes object that contains the actual context\nparameters. Might return null, if the context is lost."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSessionDescription/type",
    "pageType": "web-api-instance-property",
    "summary": "The property RTCSessionDescription.type is a read-only\nstring value which describes the description's type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/uniform",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods\nof the WebGL API specify values of uniform\nvariables. All active uniform variables defined in a program object are initialized to 0\nwhen the program object is linked successfully. They retain the values assigned to them\nby a call to this method until the next successful link operation occurs on the program\nobject, when they are once again initialized to 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSessionDescription/RTCSessionDescription",
    "pageType": "web-api-constructor",
    "summary": "The RTCSessionDescription() constructor creates a new\nRTCSessionDescription with its properties initialized as described in the\nspecified object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/viewport",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.viewport() method of the WebGL API sets the viewport, which specifies\nthe affine transformation of x and y from normalized device coordinates to window\ncoordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/stencilFunc",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.stencilFunc() method of the WebGL API sets the front and back function\nand reference value for stencil testing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSessionDescription/sdp",
    "pageType": "web-api-instance-property",
    "summary": "The property RTCSessionDescription.sdp is a read-only\nstring containing the SDP which describes the session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getAttribLocation",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getAttribLocation() method of\nthe WebGL API returns the location of an\nattribute variable in a given WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSessionDescription/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The RTCSessionDescription.toJSON() method generates a\nJSON description of the object. Both properties,\ntype and\nsdp, are contained in the generated JSON."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/createProgram",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.createProgram() method of the\nWebGL API creates and initializes a\nWebGLProgram object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/attachShader",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.attachShader() method of the WebGL API attaches either a fragment or\nvertex WebGLShader to a WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/frontFace",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.frontFace() method of the WebGL API specifies whether polygons are\nfront- or back-facing by setting a winding orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemSyncAccessHandle/read",
    "pageType": "web-api-instance-method",
    "summary": "The read() method of the\nFileSystemSyncAccessHandle interface reads the content of the file associated with the handle into a specified buffer, optionally at a given offset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemSyncAccessHandle",
    "pageType": "web-api-interface",
    "summary": "The FileSystemSyncAccessHandle interface of the File System API represents a synchronous handle to a file system entry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/texImage2D",
    "pageType": "web-api-instance-method",
    "summary": "The texImage2D() method of the WebGLRenderingContext interface of the WebGL API specifies a two-dimensional texture image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemSyncAccessHandle/write",
    "pageType": "web-api-instance-method",
    "summary": "The write() method of the\nFileSystemSyncAccessHandle interface writes the content of a specified buffer to the file associated with the handle, optionally at a given offset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/finish",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.finish() method of the WebGL API blocks execution until all\npreviously called commands are finished."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getError",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getError() method of the WebGL API returns error information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemSyncAccessHandle/truncate",
    "pageType": "web-api-instance-method",
    "summary": "The truncate() method of the\nFileSystemSyncAccessHandle interface resizes the file associated with the handle to a specified number of bytes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/deleteRenderbuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.deleteRenderbuffer() method of\nthe WebGL API deletes a given\nWebGLRenderbuffer object. This method has no effect if the render buffer\nhas already been deleted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemSyncAccessHandle/flush",
    "pageType": "web-api-instance-method",
    "summary": "The flush() method of the\nFileSystemSyncAccessHandle interface persists any changes made to the file associated with the handle via the write() method to disk."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getExtension",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getExtension() method enables a\nWebGL extension."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferHeight",
    "pageType": "web-api-instance-property",
    "summary": "The read-only WebGLRenderingContext.drawingBufferHeight\nproperty represents the actual height of the current drawing buffer. It should match the\nheight attribute of the <canvas> element associated with\nthis context, but might differ if the implementation is not able to provide the\nrequested height."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemSyncAccessHandle/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the\nFileSystemSyncAccessHandle interface closes an open synchronous file handle, disabling any further operations on it and releasing the exclusive lock previously put on the file associated with the file handle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/clear",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.clear() method of the WebGL API clears buffers to preset values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemSyncAccessHandle/getSize",
    "pageType": "web-api-instance-method",
    "summary": "The getSize() method of the\nFileSystemSyncAccessHandle interface returns the size of the file associated with the handle in bytes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/clearDepth",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.clearDepth() method of the WebGL API specifies the clear value for the\ndepth buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMHighResTimeStamp",
    "pageType": "web-api-interface",
    "summary": "The DOMHighResTimeStamp type is a double and is used to store a time value in milliseconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/createRenderbuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.createRenderbuffer() method of\nthe WebGL API creates and initializes a\nWebGLRenderbuffer object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_texture_filter_anisotropic",
    "pageType": "webgl-extension",
    "summary": "The EXT_texture_filter_anisotropic extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/depthFunc",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.depthFunc() method of the WebGL API specifies a function that compares\nincoming pixel depth to the current depth buffer value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RestrictionTarget",
    "pageType": "web-api-interface",
    "summary": "The RestrictionTarget interface of the Screen Capture API provides a static method, fromElement(), which returns a RestrictionTarget instance that can be used to restrict a captured video track to a specified DOM element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/createTexture",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.createTexture() method of the\nWebGL API creates and initializes a\nWebGLTexture object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/compressedTexImage2D",
    "pageType": "web-api-instance-method",
    "summary": "The compressedTexImage2D() method of the WebGLRenderingContext interface of the WebGL API specifies a two-dimensional texture image in a compressed format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RestrictionTarget/fromElement_static",
    "pageType": "web-api-static-method",
    "summary": "The fromElement() static method of the RestrictionTarget interface returns a RestrictionTarget instance that can be used to restrict a captured video track to a specified DOM element (plus its descendants)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/isTexture",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.isTexture() method of the WebGL API returns true if the\npassed WebGLTexture is valid and false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FederatedCredentialInit",
    "pageType": "web-api-interface",
    "summary": "The FederatedCredentialInit dictionary represents the object passed to CredentialsContainer.create() as the value of the federated option: that is, when creating a FederatedCredential object representing a credential associated with a federated identify provider."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getVertexAttribOffset() method\nof the WebGL API returns the address of a\nspecified vertex attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/scissor",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.scissor() method of the WebGL API sets a scissor box, which limits\nthe drawing to a specified rectangle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Broadcast_Channel_API",
    "pageType": "web-api-overview",
    "summary": "The Broadcast Channel API allows basic communication between browsing contexts (that is, windows, tabs, frames, or iframes) and workers on the same origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/makeXRCompatible",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext method\nmakeXRCompatible() ensures that the rendering context\ndescribed by the WebGLRenderingContext is ready to render the scene for the\nimmersive WebXR device on which it\nwill be displayed. If necessary, the WebGL\nlayer may reconfigure the context to be ready to render to a different device than it\noriginally was."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaElementAudioSourceNode",
    "pageType": "web-api-interface",
    "summary": "The MediaElementAudioSourceNode interface represents an audio source consisting of an HTML <audio> or <video> element. It is an AudioNode that acts as an audio source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/bufferData",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.bufferData() method of the WebGL API initializes and creates the\nbuffer object's data store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/clearColor",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.clearColor() method of the WebGL API specifies the color values used\nwhen clearing color buffers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaElementAudioSourceNode/mediaElement",
    "pageType": "web-api-instance-property",
    "summary": "The MediaElementAudioSourceNode interface's\nread-only mediaElement property indicates the\nHTMLMediaElement that contains the audio track from which the node is\nreceiving audio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter",
    "pageType": "web-api-instance-method",
    "summary": "The\nWebGLRenderingContext.getFramebufferAttachmentParameter()\nmethod of the WebGL API returns information\nabout a framebuffer's attachment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaElementAudioSourceNode/MediaElementAudioSourceNode",
    "pageType": "web-api-constructor",
    "summary": "The MediaElementAudioSourceNode() constructor creates a new MediaElementAudioSourceNode object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/drawElements",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.drawElements() method of the WebGL API renders primitives from array data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/isShader",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.isShader() method of the WebGL API returns true if the\npassed WebGLShader is valid, false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEConvolveMatrixElement interface corresponds to the <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/renderbufferStorage",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.renderbufferStorage() method of\nthe WebGL API creates and initializes a\nrenderbuffer object's data store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/orderY",
    "pageType": "web-api-instance-property",
    "summary": "The orderY read-only property of the SVGFEConvolveMatrixElement interface reflects the order attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/colorMask",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.colorMask() method of the WebGL API sets which color components to\nenable or to disable when drawing or rendering to a WebGLFramebuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/detachShader",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.detachShader() method of the WebGL API detaches a previously\nattached WebGLShader from a WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/edgeMode",
    "pageType": "web-api-instance-property",
    "summary": "The edgeMode read-only property of the SVGFEConvolveMatrixElement interface reflects the edgeMode attribute of the given <feConvolveMatrix> element. The SVG_EDGEMODE_* constants defined on this interface are represented by the numbers 1 through 3, where the default duplicate is 1, wrap is 2, and none is 3."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/depthRange",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.depthRange() method of the WebGL API specifies the depth range mapping\nfrom normalized device coordinates to window or viewport coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEConvolveMatrixElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/cullFace",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.cullFace() method of the WebGL API specifies whether or not front-\nand/or back-facing polygons can be culled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/checkFramebufferStatus",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.checkFramebufferStatus() method\nof the WebGL API returns the completeness\nstatus of the WebGLFramebuffer object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/kernelUnitLengthX",
    "pageType": "web-api-instance-property",
    "summary": "The kernelUnitLengthX read-only property of the SVGFEConvolveMatrixElement interface reflects the kernelUnitLength attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getProgramParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getProgramParameter() method of\nthe WebGL API returns information about the\ngiven program."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/kernelUnitLengthY",
    "pageType": "web-api-instance-property",
    "summary": "The kernelUnitLengthY read-only property of the SVGFEConvolveMatrixElement interface reflects the kernelUnitLength attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/stencilFuncSeparate",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.stencilFuncSeparate() method of\nthe WebGL API sets the front and/or back\nfunction and reference value for stencil testing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/orderX",
    "pageType": "web-api-instance-property",
    "summary": "The orderX read-only property of the SVGFEConvolveMatrixElement interface reflects the order attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/stencilOpSeparate",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.stencilOpSeparate() method of\nthe WebGL API sets the front and/or\nback-facing stencil test actions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/disable",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.disable() method of the WebGL API disables specific WebGL\ncapabilities for this context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEConvolveMatrixElement interface reflects the in attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/isContextLost",
    "pageType": "web-api-instance-method",
    "summary": "The\nWebGLRenderingContext.isContextLost() method returns a\nboolean value indicating whether or not the WebGL context has been lost and\nmust be re-established before rendering can resume."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/bias",
    "pageType": "web-api-instance-property",
    "summary": "The bias read-only property of the SVGFEConvolveMatrixElement interface reflects the bias attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.bindBuffer() method of the WebGL API binds a given\nWebGLBuffer to a target."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/divisor",
    "pageType": "web-api-instance-property",
    "summary": "The divisor read-only property of the SVGFEConvolveMatrixElement interface reflects the divisor attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getUniform",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getUniform() method of the WebGL API returns the value of a uniform\nvariable at a given location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEConvolveMatrixElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getProgramInfoLog",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getProgramInfoLog returns the information\nlog for the specified WebGLProgram object. It contains errors that\noccurred during failed linking or validation of WebGLProgram objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/targetX",
    "pageType": "web-api-instance-property",
    "summary": "The targetX read-only property of the SVGFEConvolveMatrixElement interface reflects the targetX attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getRenderbufferParameter()\nmethod of the WebGL API returns information\nabout the renderbuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/depthMask",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.depthMask() method of the WebGL API sets whether writing into the depth\nbuffer is enabled or disabled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEConvolveMatrixElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/createShader",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext\nmethod createShader() of the WebGL API creates a\nWebGLShader that can then be configured further using\nWebGLRenderingContext.shaderSource() and\nWebGLRenderingContext.compileShader()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/targetY",
    "pageType": "web-api-instance-property",
    "summary": "The targetY read-only property of the SVGFEConvolveMatrixElement interface reflects the targetY attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/isEnabled",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.isEnabled() method of the WebGL API tests whether a specific WebGL\ncapability is enabled or not for this context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEConvolveMatrixElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/blendColor",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.blendColor() method of the WebGL API is used to set the source and\ndestination blending factors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/kernelMatrix",
    "pageType": "web-api-instance-property",
    "summary": "The kernelMatrix read-only property of the SVGFEConvolveMatrixElement interface reflects the kernelMatrix attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/shaderSource",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.shaderSource() method of the WebGL API sets the source code of a\nWebGLShader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/preserveAlpha",
    "pageType": "web-api-instance-property",
    "summary": "The preserveAlpha read-only property of the SVGFEConvolveMatrixElement interface reflects the preserveAlpha attribute of the given <feConvolveMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/enableVertexAttribArray",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext method\nenableVertexAttribArray(), part of the WebGL API, turns on the generic vertex\nattribute array at the specified index into the list of attribute arrays."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEConvolveMatrixElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEConvolveMatrixElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/blendEquation",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.blendEquation() method of the\nWebGL API is used to set both the RGB blend\nequation and alpha blend equation to a single equation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/isFramebuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.isFramebuffer() method of the\nWebGL API returns true if the\npassed WebGLFramebuffer is valid and false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getBufferParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.getBufferParameter() method of\nthe WebGL API returns information about the\nbuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/trace_static",
    "pageType": "web-api-static-method",
    "summary": "The console.trace() static method outputs a stack trace to the console."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/texParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.texParameter[fi]() methods of\nthe WebGL API set texture parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/warn_static",
    "pageType": "web-api-static-method",
    "summary": "The console.warn() static method outputs a warning message to the console at the \"warning\" log level. The message is only displayed to the user if the console is configured to display warning output. In most cases, the log level is configured within the console UI. The message may receive special formatting, such as yellow colors and a warning icon."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/stencilMaskSeparate",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.stencilMaskSeparate() method of\nthe WebGL API controls enabling and\ndisabling of front and/or back writing of individual bits in the stencil planes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console",
    "pageType": "web-api-interface",
    "summary": "The console object provides access to the debugging console (e.g., the Web console in Firefox)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/activeTexture",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.activeTexture() method of the\nWebGL API specifies which texture unit to\nmake active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/debug_static",
    "pageType": "web-api-static-method",
    "summary": "The console.debug() static method outputs a message to the console at the \"debug\" log level. The message is only displayed to the user if the console is configured to display debug output. In most cases, the log level is configured within the console UI. This log level might correspond to the Debug or Verbose log level."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat",
    "pageType": "web-api-instance-method",
    "summary": "The\nWebGLRenderingContext.getShaderPrecisionFormat() method of\nthe WebGL API returns a new\nWebGLShaderPrecisionFormat object describing the range and precision for\nthe specified shader numeric format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/count_static",
    "pageType": "web-api-static-method",
    "summary": "The console.count() static method logs the number of times that this particular call to count() has been called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/uniformMatrix",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.uniformMatrix[234]fv() methods\nof the WebGL API specify matrix values for\nuniform variables."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderingContext/stencilMask",
    "pageType": "web-api-instance-method",
    "summary": "The WebGLRenderingContext.stencilMask() method of the WebGL API controls enabling and disabling of\nboth the front and back writing of individual bits in the stencil planes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/error_static",
    "pageType": "web-api-static-method",
    "summary": "The console.error() static method outputs a message to the console at the \"error\" log level. The message is only displayed to the user if the console is configured to display error output. In most cases, the log level is configured within the console UI. The message may be formatted as an error, with red colors and call stack information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/log_static",
    "pageType": "web-api-static-method",
    "summary": "The console.log() static method outputs a message to the console."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableMessageEvent/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin read-only property of the\nExtendableMessageEvent interface returns the origin of the\nClient that sent the message."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableMessageEvent",
    "pageType": "web-api-interface",
    "summary": "The ExtendableMessageEvent interface of the Service Worker API represents the event object of a message event fired on a service worker (when a message is received on the ServiceWorkerGlobalScope from another context) — extends the lifetime of such events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/profile_static",
    "pageType": "web-api-static-method",
    "summary": "The console.profile() static method starts recording a performance profile (for example, the Firefox performance tool)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableMessageEvent/source",
    "pageType": "web-api-instance-property",
    "summary": "The source read-only property of the\nExtendableMessageEvent interface returns a reference to the\nClient object from which the message was sent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableMessageEvent/ports",
    "pageType": "web-api-instance-property",
    "summary": "The ports read-only property of the\nExtendableMessageEvent interface returns the array containing the\nMessagePort objects representing the ports of the associated message\nchannel (the channel the message is being sent through.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/table_static",
    "pageType": "web-api-static-method",
    "summary": "The console.table() static method displays tabular data as a table."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableMessageEvent/data",
    "pageType": "web-api-instance-property",
    "summary": "The data read-only property of the\nExtendableMessageEvent interface returns the event's data. It can be any\ndata type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/dir_static",
    "pageType": "web-api-static-method",
    "summary": "The console.dir() static method displays a list of the properties of the specified JavaScript object. In browser consoles, the output is presented as a hierarchical listing with disclosure triangles that let you see the contents of child objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableMessageEvent/lastEventId",
    "pageType": "web-api-instance-property",
    "summary": "The lastEventID read-only property of the\nExtendableMessageEvent interface represents, in server-sent events, the last event ID of the event source. This is an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableMessageEvent/ExtendableMessageEvent",
    "pageType": "web-api-constructor",
    "summary": "The ExtendableMessageEvent() constructor creates a new ExtendableMessageEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/time_static",
    "pageType": "web-api-static-method",
    "summary": "The console.time() static method starts a timer you can use to track how long an operation takes. You give each timer a unique name, and may have up to 10,000 timers running on a given page. When you call console.timeEnd() with the same name, the browser will output the time, in milliseconds, that elapsed since the timer was started."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEventRotationRate",
    "pageType": "web-api-interface",
    "summary": "A DeviceMotionEventRotationRate interface of the Device Orientation Events provides information about the rate at which the device is rotating around all three axes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/groupCollapsed_static",
    "pageType": "web-api-static-method",
    "summary": "The console.groupCollapsed() static method creates a new inline group in the console. Unlike console.group(), however, the new group is created collapsed. The user will need to use the disclosure button next to it to expand it, revealing the entries created in the group."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEventRotationRate/gamma",
    "pageType": "web-api-instance-property",
    "summary": "The gamma read-only property of the DeviceMotionEventRotationRate interface indicates the rate of rotation around the Y axis, in degrees per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/clear_static",
    "pageType": "web-api-static-method",
    "summary": "The console.clear() static method clears the console if possible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEventRotationRate/beta",
    "pageType": "web-api-instance-property",
    "summary": "The beta read-only property of the DeviceMotionEventRotationRate interface indicates the rate of rotation around the X axis, in degrees per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/info_static",
    "pageType": "web-api-static-method",
    "summary": "The console.info() static method outputs a message to the console at the \"info\" log level. The message is only displayed to the user if the console is configured to display info output. In most cases, the log level is configured within the console UI. The message may receive special formatting, such as a small \"i\" icon next to it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEventRotationRate/alpha",
    "pageType": "web-api-instance-property",
    "summary": "The alpha read-only property of the DeviceMotionEventRotationRate interface indicates the rate of rotation around the Z axis, in degrees per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeferredRequestInit",
    "pageType": "web-api-interface",
    "summary": "The DeferredRequestInit dictionary of the fetchLater() API represents the set of options that can be used to configure a deferred fetch request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/profileEnd_static",
    "pageType": "web-api-static-method",
    "summary": "The console.profileEnd() static method stops recording a profile previously started with console.profile()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowControlsOverlayGeometryChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The WindowControlsOverlayGeometryChangeEvent interface of the Window Controls Overlay API is passed to geometrychange when the size or visibility of a desktop Progress Web App's title bar region changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/timeEnd_static",
    "pageType": "web-api-static-method",
    "summary": "The console.timeEnd() static method stops a timer that was previously started by calling console.time()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowControlsOverlayGeometryChangeEvent/visible",
    "pageType": "web-api-instance-property",
    "summary": "The visible read-only property of the WindowControlsOverlayGeometryChangeEvent interface is a boolean flag that indicates whether the window controls overlay is visible or not in a desktop-installed Progressive Web App."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/assert_static",
    "pageType": "web-api-static-method",
    "summary": "The console.assert() static method writes an error message to the console if the assertion is false. If the assertion is true, nothing happens."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowControlsOverlayGeometryChangeEvent/titlebarAreaRect",
    "pageType": "web-api-instance-property",
    "summary": "The titlebarAreaRect read-only property of the WindowControlsOverlayGeometryChangeEvent interface is a DOMRect representing the position and size of the area occupied by the title bar in a desktop-installed Progressive Web App."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/groupEnd_static",
    "pageType": "web-api-static-method",
    "summary": "The console.groupEnd() static method exits the current inline group in the console. See Using groups in the console in the console documentation for details and examples."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowControlsOverlayGeometryChangeEvent/WindowControlsOverlayGeometryChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The WindowControlsOverlayGeometryChangeEvent() constructor returns a new WindowControlsOverlayGeometryChangeEvent object, representing the current geometry of a desktop Progressive Web App's title bar area."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/timeLog_static",
    "pageType": "web-api-static-method",
    "summary": "The console.timeLog() static method logs the current value of a timer that was previously started by calling console.time()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathSum",
    "pageType": "web-api-interface",
    "summary": "The CSSMathSum interface of the CSS Typed Object Model API represents the result obtained by calling add(), sub(), or toSum() on CSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathSum/values",
    "pageType": "web-api-instance-property",
    "summary": "The CSSMathSum.values read-only property\nof the CSSMathSum interface returns a CSSNumericArray\nobject which contains one or more CSSNumericValue objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/timeStamp_static",
    "pageType": "web-api-static-method",
    "summary": "The console.timeStamp() static method adds a single marker to the browser's Performance tool (Firefox bug 1387528, Chrome). This lets you correlate a point in your code with the other events recorded in the timeline, such as layout and paint events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathSum/CSSMathSum",
    "pageType": "web-api-constructor",
    "summary": "The CSSMathSum() constructor creates a\nnew CSSMathSum object which creates a new CSSKeywordValue\nobject which represents the result obtained by calling\nadd(), sub(),\nor toSum() on CSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/group_static",
    "pageType": "web-api-static-method",
    "summary": "The console.group() static method creates a new inline group in the Web console log, causing any subsequent console messages to be indented by an additional level, until console.groupEnd() is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetails/currentscreenchange_event",
    "pageType": "web-api-event",
    "summary": "The currentscreenchange event of the ScreenDetails interface is fired when the ScreenDetails.currentScreen changes in one of the following ways:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/countReset_static",
    "pageType": "web-api-static-method",
    "summary": "The console.countReset() static method resets counter used with console.count()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetails",
    "pageType": "web-api-interface",
    "summary": "The ScreenDetails interface of the Window Management API represents the details of all the screens available to the user's device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetails/screenschange_event",
    "pageType": "web-api-event",
    "summary": "The screenschange event of the ScreenDetails interface is fired when the set of screens available to the system has changed: that is, a new screen has become available or an existing screen has become unavailable. This will be reflected in a change in the screens array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/console/dirxml_static",
    "pageType": "web-api-static-method",
    "summary": "The console.dirxml() static method displays an interactive tree of the descendant elements of the specified XML/HTML element. If it is not possible to display as an element the JavaScript Object view is shown instead. The output is presented as a hierarchical listing of expandable nodes that let you see the contents of child nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetails/screens",
    "pageType": "web-api-instance-property",
    "summary": "The screens read-only property of the\nScreenDetails interface contains an array of ScreenDetailed objects, each one representing detailed information about one specific screen available to the user's device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletNode",
    "pageType": "web-api-interface",
    "summary": "The AudioWorkletNode interface of the Web Audio API represents a base class for a user-defined AudioNode, which can be connected to an audio routing graph along with other nodes. It has an associated AudioWorkletProcessor, which does the actual audio processing in a Web Audio rendering thread."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetails/currentScreen",
    "pageType": "web-api-instance-property",
    "summary": "The currentScreen read-only property of the\nScreenDetails interface contains a single ScreenDetailed object representing detailed information about the screen that the current browser window is displayed in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletNode/parameters",
    "pageType": "web-api-instance-property",
    "summary": "The read-only parameters property of the\nAudioWorkletNode interface returns the associated\nAudioParamMap — that is, a Map-like collection of\nAudioParam objects. They are instantiated during creation of the\nunderlying AudioWorkletProcessor according to its\nparameterDescriptors static\ngetter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRProjectionLayer",
    "pageType": "web-api-interface",
    "summary": "The XRProjectionLayer interface of the WebXR Device API is a layer that fills the entire view of the observer and is refreshed close to the device's native frame rate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletNode/AudioWorkletNode",
    "pageType": "web-api-constructor",
    "summary": "The AudioWorkletNode()\nconstructor creates a new AudioWorkletNode object, which represents an\nAudioNode that uses a JavaScript function to perform custom audio\nprocessing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRProjectionLayer/textureWidth",
    "pageType": "web-api-instance-property",
    "summary": "The read-only textureWidth property of the XRProjectionLayer interface indicates the width in pixels of the color textures of this layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRProjectionLayer/ignoreDepthValues",
    "pageType": "web-api-instance-property",
    "summary": "The read-only ignoreDepthValues property of the XRProjectionLayer interface is a boolean indicating if the XR compositor is not making use of depth buffer values when rendering the layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletNode/port",
    "pageType": "web-api-instance-property",
    "summary": "The read-only port property of the\nAudioWorkletNode interface returns the associated\nMessagePort. It can be used to communicate between the node and its\nassociated AudioWorkletProcessor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRProjectionLayer/fixedFoveation",
    "pageType": "web-api-instance-property",
    "summary": "The fixedFoveation property of the XRProjectionLayer interface is a number indicating the amount of foveation used by the XR compositor for the layer. Fixed Foveated Rendering (FFR) renders the edges of the eye textures at a lower resolution than the center and reduces the GPU load."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletNode/processorerror_event",
    "pageType": "web-api-event",
    "summary": "The processorerror event fires when the underlying AudioWorkletProcessor behind the node throws an exception in its constructor, the process method, or any user-defined class method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRProjectionLayer/textureArrayLength",
    "pageType": "web-api-instance-property",
    "summary": "The read-only textureArrayLength property of the XRProjectionLayer interface indicates layer's layer count for array textures when using texture-array as the textureType."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRProjectionLayer/textureHeight",
    "pageType": "web-api-instance-property",
    "summary": "The read-only textureHeight property of the XRProjectionLayer interface indicates the height in pixels of the color textures of this layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/qualityLimitationDurations",
    "pageType": "web-api-instance-property",
    "summary": "The qualityLimitationDurations property of the RTCOutboundRtpStreamStats dictionary is a map of the reasons that a media stream's quality has been reduced by a codec during encoding, and the time during which the quality was reduced for each reason."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Clipboard_API",
    "pageType": "web-api-overview",
    "summary": "The Clipboard API provides the ability to respond to clipboard commands (cut, copy, and paste), as well as to asynchronously read from and write to the system clipboard."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/framesEncoded",
    "pageType": "web-api-instance-property",
    "summary": "The framesEncoded property of\nthe RTCOutboundRtpStreamStats dictionary indicates the total number of\nframes that have been encoded by this RTCRtpSender for this media\nsource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRigidTransform",
    "pageType": "web-api-interface",
    "summary": "The XRRigidTransform is a WebXR API interface that represents the 3D geometric transform described by a position and orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats",
    "pageType": "web-api-interface",
    "summary": "The RTCOutboundRtpStreamStats dictionary of the WebRTC API is used to report metrics and statistics related to an outbound RTP stream being sent by an RTCRtpSender."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRigidTransform/position",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRRigidTransform property\nposition is a DOMPointReadOnly object which\nprovides the 3D point, specified in meters, describing the translation component of the\ntransform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/qualityLimitationReason",
    "pageType": "web-api-instance-property",
    "summary": "The qualityLimitationReason property of the RTCOutboundRtpStreamStats dictionary is a string indicating the reason why the media quality in the stream is currently being reduced by the codec during encoding, or none if no quality reduction is being performed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRigidTransform/inverse",
    "pageType": "web-api-instance-property",
    "summary": "The read-only inverse property\nof the XRRigidTransform interface returns another\nXRRigidTransform object which is the inverse of its owning\ntransform. That is, you can always get the inverse of any\nXRRigidTransform using its inverse property, instead of having\nto explicitly generate it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRigidTransform/orientation",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRRigidTransform property\norientation is a DOMPointReadOnly\ncontaining a normalized quaternion (also called a unit\nquaternion or versor)\nspecifying the rotational component of the transform represented by the object.\nIf you specify a quaternion whose length is not exactly 1.0 meters, it will be\nnormalized for you."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind property of the RTCOutboundRtpStreamStats dictionary is a string indicating whether the described RTP stream contains audio or video media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRigidTransform/matrix",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRRigidTransform property matrix returns the transform matrix represented by the object. The returned matrix can then be premultiplied with a column vector to rotate the vector by the 3D rotation specified by the orientation, then translate it by the position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCOutboundRtpStreamStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRigidTransform/XRRigidTransform",
    "pageType": "web-api-constructor",
    "summary": "The\nXRRigidTransform() constructor creates\na new XRRigidTransform object, representing the position and\norientation of a point or object. Among other things,\nXRRigidTransform is used when providing a transform to translate between\ncoordinate systems across spaces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/codecId",
    "pageType": "web-api-instance-property",
    "summary": "The codecId property of the RTCOutboundRtpStreamStats dictionary is a string that uniquely identifies the object that was inspected to produce the data in the RTCCodecStats for the RTP stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Push_API",
    "pageType": "web-api-overview",
    "summary": "The Push API gives web applications the ability to receive messages pushed to them from a server, whether or not the web app is in the foreground, or even currently loaded, on a user agent. This lets developers deliver asynchronous notifications and updates to users that opt in, resulting in better engagement with timely new content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Push_API/Best_Practices",
    "pageType": "guide",
    "summary": "This article provides a useful summary of best practices to keep in mind when developing websites and applications that use Push Notifications for user engagement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/packetsSent",
    "pageType": "web-api-instance-property",
    "summary": "The packetsSent property of the RTCOutboundRtpStreamStats dictionary represents the total number of RTP packets sent on this stream, including retransmissions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCOutboundRtpStreamStats dictionary is a string with the value \"outbound-rtp\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Session_lifetime",
    "pageType": "guide",
    "summary": "WebRTC lets you build peer-to-peer communication of arbitrary data, audio, or video—or any combination thereof—into a browser application. In this article, we'll look at the lifetime of a WebRTC session, from establishing the connection all the way through closing the connection when it's no longer needed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API",
    "pageType": "web-api-overview",
    "summary": "WebRTC (Web Real-Time Communication) is a technology that enables Web applications and sites to capture and optionally stream audio and/or video media, as well as to exchange arbitrary data between browsers without requiring an intermediary. The set of standards that comprise WebRTC makes it possible to share data and perform teleconferencing peer-to-peer, without requiring that the user install plug-ins or any other third-party software."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/totalPacketSendDelay",
    "pageType": "web-api-instance-property",
    "summary": "The totalPacketSendDelay property of the RTCOutboundRtpStreamStats dictionary represents the total time in seconds that packets have spent buffered locally before being transmitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Using_data_channels",
    "pageType": "guide",
    "summary": "In this guide, we'll examine how to add a data channel to a peer connection, which can then be used to securely exchange arbitrary data; that is, any kind of data we wish, in any format we choose."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/totalEncodedBytesTarget",
    "pageType": "web-api-instance-property",
    "summary": "The totalEncodedBytesTarget property of the RTCOutboundRtpStreamStats dictionary represents the sum of the target frame sizes for all of the frames encoded so far."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Intro_to_RTP",
    "pageType": "guide",
    "summary": "The Real-time Transport Protocol (RTP), defined in RFC 3550, is an IETF standard protocol to enable real-time connectivity for exchanging data that needs real-time priority. This article provides an overview of what RTP is and how it functions in the context of WebRTC."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/keyFramesEncoded",
    "pageType": "web-api-instance-property",
    "summary": "The keyFramesEncoded property of the RTCOutboundRtpStreamStats dictionary represents the total number of key frames successfully encoded in this RTP media stream.\nThis includes, for example, key frames in VP8 (RFC 6386) or IDR-frames in H.264 (RFC 6184)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Perfect_negotiation",
    "pageType": "guide",
    "summary": "This article introduces WebRTC perfect negotiation, describing how it works and why it's the recommended way to negotiate a WebRTC connection between peers, and provides sample code to demonstrate the technique."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/totalEncodeTime",
    "pageType": "web-api-instance-property",
    "summary": "The totalEncodeTime property of the RTCOutboundRtpStreamStats dictionary represents the total number of seconds spent encoding the framesEncoded frames for this stream (RTCRtpSender)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Using_DTMF",
    "pageType": "guide",
    "summary": "In order to more fully support audio/video conferencing, WebRTC supports sending DTMF to the remote peer on an RTCPeerConnection. This article offers a brief high-level overview of how DTMF works over WebRTC, then provides a guide for everyday developers about how to send DTMF over an RTCPeerConnection. The DTMF system is often referred to as \"touch tone,\" after an old trade name for the system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/mediaSourceId",
    "pageType": "web-api-instance-property",
    "summary": "The mediaSourceId property of the RTCOutboundRtpStreamStats dictionary represents the ID of the statistics object of the track currently attached to the sender of this stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Signaling_and_video_calling",
    "pageType": "guide",
    "summary": "WebRTC allows real-time, peer-to-peer, media exchange between two devices. A connection is established through a discovery and negotiation process called signaling. This tutorial will guide you through building a two-way video-call."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Connectivity",
    "pageType": "guide",
    "summary": "This article describes how the various WebRTC-related protocols interact with one another in order to create a connection and transfer data and/or media among peers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/framesSent",
    "pageType": "web-api-instance-property",
    "summary": "The framesSent property of the RTCOutboundRtpStreamStats dictionary indicates the total number of encoded frames sent on this RTP stream over its lifetime."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Using_Encoded_Transforms",
    "pageType": "guide",
    "summary": "WebRTC Encoded Transforms provide a mechanism to inject a high performance Stream API for modifying encoded video and audio frame into the incoming and outgoing WebRTC pipelines.\nThis enables use cases such as end-to-end encryption of encoded frames by third-party code."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/framesPerSecond",
    "pageType": "web-api-instance-property",
    "summary": "The framesPerSecond property of the RTCOutboundRtpStreamStats dictionary indicates the number of encoded frames sent in the last second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Protocols",
    "pageType": "guide",
    "summary": "This article introduces the protocols on top of which the WebRTC API is built."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/headerBytesSent",
    "pageType": "web-api-instance-property",
    "summary": "The headerBytesSent property of the RTCOutboundRtpStreamStats dictionary indicates the total number of RTP header and padding bytes sent for this synchronization source (SSRC)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs/Connect_peers",
    "pageType": "guide",
    "summary": "In the last article we set up our server, but it doesn't do anything yet because we are not serving anything. This is the part you've been waiting for — actually creating the client-side peer connection and call logic. This is going to be an involved process, but we've split it into numerous subsections so you can tackle the different parts in easy bite-sized chunks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/targetBitrate",
    "pageType": "web-api-instance-property",
    "summary": "The targetBitrate property of the RTCOutboundRtpStreamStats dictionary represents the current target bitrate of the codec in use by the stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs/Connect_peers/End_a_call",
    "pageType": "guide",
    "summary": "The last thing you want to do is ensure your callers have a way of ending a call.\nThe most graceful way of doing this is to close the connection using the close() function, which you can do in an event listener for the hang up button."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/retransmittedPacketsSent",
    "pageType": "web-api-instance-property",
    "summary": "The retransmittedPacketsSent property of the RTCOutboundRtpStreamStats dictionary represents the total number of packets retransmitted for the source associated with this stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs/Connect_peers/Answer_a_call",
    "pageType": "guide",
    "summary": "Now our users can make a call, but they can't answer one. Let's add the next piece of the puzzle so that users can answer calls made to them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/remoteId",
    "pageType": "web-api-instance-property",
    "summary": "The remoteId property of the RTCOutboundRtpStreamStats dictionary specifies the id of the RTCRemoteInboundRtpStreamStats object representing the remote peer's RTCRtpReceiver which is sending the media to the local peer for this SSRC."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs/Connect_peers/Creating_a_call",
    "pageType": "guide",
    "summary": "Exciting times — now you're going to give your users the ability to create calls."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs/Connect_peers/Show_hide_html",
    "pageType": "guide",
    "summary": "Alright, so you've got the microphone permissions set up. The next step is to make sure each user knows what their peer ID is so that they can make connections. The peerJS framework gives us a bunch of event listeners we can call on the peer we created earlier on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/frameWidth",
    "pageType": "web-api-instance-property",
    "summary": "The frameWidth property of the RTCOutboundRtpStreamStats dictionary is a positive integer that indicates the width of the last encoded frame, in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs/Connect_peers/Get_microphone_permission",
    "pageType": "guide",
    "summary": "After you've created the peer, you'll want to get the browser's permission to access the microphone. We'll be using the getUserMedia() method on the navigator.mediaDevices object.\nThe getUserMedia() endpoint takes a constraints object that specifies which permissions are needed. getUserMedia() is a promise which, when successfully resolved, returns a MediaStream object. In our case this is going to contain the audio from our stream. If the promise isn't successfully resolved, you'll want to catch and display the error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/ssrc",
    "pageType": "web-api-instance-property",
    "summary": "The ssrc property of the RTCOutboundRtpStreamStats dictionary contains a positive integer value that identifies the synchronization source (SSRC) of this stream of RTP packets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs/Connect_peers/Create_a_peer_connection",
    "pageType": "guide",
    "summary": "Next, you want to ensure your users have a way of connecting with their peers. In order to connect two peers, you'll need the peer ID for one of them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs/Build_the_server",
    "pageType": "guide",
    "summary": "In this article we'll set up the server for our phone app. The server file will look like a regular Express server file with one difference, the Peer server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/qpSum",
    "pageType": "web-api-instance-property",
    "summary": "The qpSum property of the RTCOutboundRtpStreamStats dictionary is a value generated by adding the Quantization Parameter (QP) values for every frame this sender has produced to date on the video track corresponding to this RTCOutboundRtpStreamStats object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs",
    "pageType": "guide",
    "summary": "One of WebRTC's main issues is that it is pretty complicated to use and develop with — handling the signalling service and knowing when to call the right endpoint can get confusing. But there is some good news; PeerJS is a WebRTC framework that abstracts away all of the ice and signalling logic so that you can focus on the functionality of your application. There are two parts to PeerJS, the client-side framework and the server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/active",
    "pageType": "web-api-instance-property",
    "summary": "The active property of the RTCOutboundRtpStreamStats dictionary is a boolean that indicates whether this RTP stream is configured to be sent, or is disabled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Build_a_phone_with_peerjs/Setup",
    "pageType": "guide",
    "summary": "So let's get started by setting up the basis for our WebRTC-powered phone app."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/bytesSent",
    "pageType": "web-api-instance-property",
    "summary": "The bytesSent property of the RTCOutboundRtpStreamStats dictionary indicates the total number of payload bytes sent on this stream (RTCDataChannel)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebRTC_API/Simple_RTCDataChannel_sample",
    "pageType": "guide",
    "summary": "The RTCDataChannel interface is a feature of the WebRTC API which lets you open a channel between two peers over which you may send and receive arbitrary data. The API is intentionally similar to the WebSocket API, so that the same programming model can be used for each."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/transportId",
    "pageType": "web-api-instance-property",
    "summary": "The transportId property of the RTCOutboundRtpStreamStats dictionary is a string that uniquely identifies the associated RTCTransportStats statistics object for this RTP stream's underlying transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushEvent",
    "pageType": "web-api-interface",
    "summary": "The PushEvent interface of the Push API represents a push message that has been received. This event is sent to the global scope of a ServiceWorker. It contains the information sent from an application server to a PushSubscription."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/scalabilityMode",
    "pageType": "web-api-instance-property",
    "summary": "The scalabilityMode property of the RTCOutboundRtpStreamStats dictionary represents the scalability mode for the RTP stream, if one has been configured.\nIf not configured, the property is undefined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushEvent/data",
    "pageType": "web-api-instance-property",
    "summary": "The data read-only property of the PushEvent interface returns a reference to a PushMessageData object containing data sent to the PushSubscription."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushEvent/PushEvent",
    "pageType": "web-api-constructor",
    "summary": "The PushEvent() constructor creates a new\nPushEvent object. Note that this constructor is exposed only to a\nservice worker context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/nackCount",
    "pageType": "web-api-instance-property",
    "summary": "The nackCount property of the\nRTCOutboundRtpStreamStats dictionary is a numeric value indicating the\nnumber of times the RTCRtpSender described by this object received a\nNACK packet from the remote receiver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBindGroup",
    "pageType": "web-api-interface",
    "summary": "The GPUBindGroup interface of the WebGPU API is based on a GPUBindGroupLayout and defines a set of resources to be bound together in a group and how those resources are used in shader stages."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/rid",
    "pageType": "web-api-instance-property",
    "summary": "The rid property of the RTCOutboundRtpStreamStats dictionary is a string that specifies the RTP stream ID, if defined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBindGroup/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUBindGroup interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCOutboundRtpStreamStats dictionary is a string that uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MimeType",
    "pageType": "web-api-interface",
    "summary": "The MimeType interface provides contains information about a MIME type associated with a particular plugin. Navigator.mimeTypes returns an array of this object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/mid",
    "pageType": "web-api-instance-property",
    "summary": "The mid property of the RTCOutboundRtpStreamStats dictionary is a string that contains the media ID negotiated between the local and remote peers.\nThis uniquely identifies the pairing of source and destination for the transceiver's stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic",
    "pageType": "web-api-interface",
    "summary": "The BluetoothRemoteGattCharacteristic interface of the Web Bluetooth API represents a GATT Characteristic, which is a basic data element that provides further information about a peripheral's service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/retransmittedBytesSent",
    "pageType": "web-api-instance-property",
    "summary": "The retransmittedBytesSent property of the RTCOutboundRtpStreamStats dictionary represents the total number of payload bytes retransmitted for the source associated with this stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/writeValueWithoutResponse",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTCharacteristic.writeValueWithoutResponse() method sets a BluetoothRemoteGATTCharacteristic object's value property to the bytes contained in a given ArrayBuffer, TypedArray, or DataView, writes the characteristic value without response, and returns the resulting Promise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/getDescriptor",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTCharacteristic.getDescriptor() method\nreturns a Promise that resolves to the\nfirst BluetoothRemoteGATTDescriptor for a given descriptor UUID."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCOutboundRtpStreamStats/frameHeight",
    "pageType": "web-api-instance-property",
    "summary": "The frameHeight property of the RTCOutboundRtpStreamStats dictionary is a positive integer that indicates the height of the last encoded frame, in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/readValue",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTCharacteristic.readValue() method\nreturns a Promise that resolves to a DataView holding a\nduplicate of the value property if it is available and supported. Otherwise\nit throws an error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStyleElement",
    "pageType": "web-api-interface",
    "summary": "The SVGStyleElement interface corresponds to the SVG <style> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/getDescriptors",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTCharacteristic.getDescriptors() method\nreturns a Promise that resolves to an Array of all\nBluetoothRemoteGATTDescriptor objects for a given descriptor UUID."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/value",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothRemoteGATTCharacteristic.value read-only\nproperty returns currently cached characteristic value. This value gets updated when the\nvalue of the characteristic is read or updated via a notification or indication."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStyleElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The SVGStyleElement.disabled property can be used to get and set whether the stylesheet is disabled (true) or not (false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/writeValue",
    "pageType": "web-api-instance-method",
    "summary": "Use BluetoothRemoteGATTCharacteristic.writeValueWithResponse() and BluetoothRemoteGATTCharacteristic.writeValueWithoutResponse() instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStyleElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The SVGStyleElement.type property returns the type of the current style.\nThe value reflects the associated SVG <style> element's type attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/properties",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothRemoteGATTCharacteristic.properties\nread-only property returns a BluetoothCharacteristicProperties instance\ncontaining the properties of this characteristic."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStyleElement/sheet",
    "pageType": "web-api-instance-property",
    "summary": "The SVGStyleElement.sheet read-only property returns the CSSStyleSheet corresponding to the given SVG style element, or null if there is none."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/stopNotifications",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTCharacteristic.stopNotifications() method\nreturns a Promise to the BluetoothRemoteGATTCharacteristic instance when\nthere is no longer an active notification on it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/service",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothRemoteGATTCharacteristic.service read-only\nproperty returns the BluetoothRemoteGATTService this characteristic belongs to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStyleElement/media",
    "pageType": "web-api-instance-property",
    "summary": "The SVGStyleElement.media property is a media query string corresponding to the media attribute of the given SVG style element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/writeValueWithResponse",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTCharacteristic.writeValueWithResponse() method sets a BluetoothRemoteGATTCharacteristic object's value property to the bytes contained in a given ArrayBuffer, TypedArray, or DataView, writes the characteristic value with required response, and returns the resulting Promise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStyleElement/title",
    "pageType": "web-api-instance-property",
    "summary": "The SVGStyleElement.title property is a string corresponding to the title attribute of the given SVG style element.\nIt may be used to select between alternate style sheets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/startNotifications",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTCharacteristic.startNotifications() method\nreturns a Promise to the BluetoothRemoteGATTCharacteristic instance when\nthere is an active notification on it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Selection_API",
    "pageType": "web-api-overview",
    "summary": "The Selection API enables developers to access and manipulate the portion of a document selected by the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTCharacteristic/uuid",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothRemoteGATTCharacteristic.uuid read-only\nproperty returns a string containing the UUID of the characteristic, for\nexample '00002a37-0000-1000-8000-00805f9b34fb' for the Heart Rate\nMeasurement characteristic."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement/showModal",
    "pageType": "web-api-instance-method",
    "summary": "The showModal() method of the\nHTMLDialogElement interface displays the dialog as a modal, over the top\nof any other dialogs that might be present. It displays in the top layer, along with a\n::backdrop pseudo-element. Elements inside the same document as the dialog, except the dialog and its descendants, become inert (as if the inert attribute is specified). Only the containing document becomes blocked; if the dialog is rendered inside an iframe, the rest of the page remains interactive."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/refDistance",
    "pageType": "web-api-instance-property",
    "summary": "The refDistance property of the PannerNode interface is a double value representing the reference distance for reducing volume as the audio source moves further from the listener – i.e., the distance at which the volume reduction starts taking effect. This value is used by all distance models."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLDialogElement interface provides methods to manipulate <dialog> elements. It inherits properties and methods from the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode",
    "pageType": "web-api-interface",
    "summary": "The PannerNode interface defines an audio-processing object that represents the location, direction, and behavior of an audio source signal in a simulated physical space. This AudioNode uses right-hand Cartesian coordinates to describe the source's position as a vector and its orientation as a 3D directional cone."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement/open",
    "pageType": "web-api-instance-property",
    "summary": "The open property of the\nHTMLDialogElement interface is a boolean value reflecting the\nopen HTML attribute, indicating whether the <dialog> is\navailable for interaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/coneOuterGain",
    "pageType": "web-api-instance-property",
    "summary": "The coneOuterGain property of the PannerNode interface is a double value, describing the amount of volume reduction outside the cone, defined by the coneOuterAngle attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement/close_event",
    "pageType": "web-api-event",
    "summary": "The close event is fired on an HTMLDialogElement object when the <dialog> it represents has been closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement/closedBy",
    "pageType": "web-api-instance-property",
    "summary": "The closedBy property of the\nHTMLDialogElement interface indicates the types of user actions that can be used to close the associated <dialog> element. It sets or returns the dialog's closedby attribute value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/coneInnerAngle",
    "pageType": "web-api-instance-property",
    "summary": "The coneInnerAngle property of the PannerNode interface is a double value describing the angle, in degrees, of a cone inside of which there will be no volume reduction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement/returnValue",
    "pageType": "web-api-instance-property",
    "summary": "The returnValue property of the HTMLDialogElement interface is a string representing the return value for a <dialog> element when it's closed.\nYou can set the value directly (dialog.returnValue = \"result\") or by providing the value as a string argument to close() or requestClose()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/PannerNode",
    "pageType": "web-api-constructor",
    "summary": "The PannerNode() constructor of the Web Audio API creates a new PannerNode object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the HTMLDialogElement interface closes the <dialog>.\nAn optional string may be passed as an argument, updating the returnValue of the dialog."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/maxDistance",
    "pageType": "web-api-instance-property",
    "summary": "The maxDistance property of the PannerNode interface is a double value representing the maximum distance between the audio source and the listener, after which the volume is not reduced any further. This value is used only by the linear distance model."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement/requestClose",
    "pageType": "web-api-instance-method",
    "summary": "The requestClose() method of the HTMLDialogElement interface requests to close the <dialog>.\nAn optional string may be passed as an argument, updating the returnValue of the dialog."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/orientationZ",
    "pageType": "web-api-instance-property",
    "summary": "The orientationZ property of the PannerNode interface\nindicates the Z (depth) component of the direction the audio source is facing, in 3D Cartesian coordinate space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement/cancel_event",
    "pageType": "web-api-event",
    "summary": "The cancel event fires on a <dialog> element when the user instructs the browser that they wish to dismiss the current open dialog. The browser fires this event when the user presses the Esc key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDialogElement/show",
    "pageType": "web-api-instance-method",
    "summary": "The show() method of the HTMLDialogElement\ninterface displays the dialog modelessly, i.e., still allowing interaction with content\noutside of the dialog."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/distanceModel",
    "pageType": "web-api-instance-property",
    "summary": "The distanceModel property of the PannerNode interface is an enumerated value determining which algorithm to use to reduce the volume of the audio source as it moves away from the listener."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AesDerivedKeyParams",
    "pageType": "web-api-interface",
    "summary": "The AesDerivedKeyParams dictionary of the Web Crypto API represents the object that should be passed as the derivedKeyType parameter into SubtleCrypto.deriveKey(), when deriving an AES key: that is, when the algorithm is identified as any of AES-CBC, AES-CTR, AES-GCM, or AES-KW."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/orientationY",
    "pageType": "web-api-instance-property",
    "summary": "The orientationY property of the PannerNode interface\nindicates the Y (vertical) component of the direction the audio source is facing, in 3D Cartesian coordinate space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationDestination",
    "pageType": "web-api-interface",
    "summary": "The NavigationDestination interface of the Navigation API represents the destination being navigated to in the current navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/setOrientation",
    "pageType": "web-api-instance-method",
    "summary": "The setOrientation() method of the PannerNode Interface defines the direction the audio source is playing in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationDestination/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the\nNavigationDestination interface returns the URL being navigated to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/positionZ",
    "pageType": "web-api-instance-property",
    "summary": "The positionZ property of the PannerNode interface specifies the Z coordinate of the audio source's position in 3D Cartesian\ncoordinates, corresponding to the depth axis (behind-in front of the\nlistener). The complete vector is defined by the position of the audio source, given\nas (positionX,\npositionY,\npositionZ),\nand the orientation of the audio source (that is, the direction in\nwhich it's facing), given as (orientationX,\norientationY,\norientationZ)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationDestination/getState",
    "pageType": "web-api-instance-method",
    "summary": "The getState() method of the\nNavigationDestination interface returns a clone of the developer-supplied state associated with the destination NavigationHistoryEntry, or navigation operation (e.g., navigate()) as appropriate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationDestination/key",
    "pageType": "web-api-instance-property",
    "summary": "The key read-only property of the\nNavigationDestination interface returns the key value of the destination NavigationHistoryEntry if the NavigateEvent.navigationType is traverse, or an empty string otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/setPosition",
    "pageType": "web-api-instance-method",
    "summary": "The setPosition() method of the PannerNode Interface defines the position of the audio source relative to the listener (represented by an AudioListener object stored in the BaseAudioContext.listener attribute.) The three parameters x, y and z are unitless and describe the source's position in 3D space using the right-hand Cartesian coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationDestination/index",
    "pageType": "web-api-instance-property",
    "summary": "The index read-only property of the\nNavigationDestination interface returns the index value of the destination NavigationHistoryEntry if the NavigateEvent.navigationType is traverse, or -1 otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/positionX",
    "pageType": "web-api-instance-property",
    "summary": "The positionX property of the PannerNode interface specifies the X coordinate of the audio source's position in 3D Cartesian\ncoordinates, corresponding to the horizontal axis (left-right)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationDestination/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the\nNavigationDestination interface returns the id value of the destination NavigationHistoryEntry if the NavigateEvent.navigationType is traverse, or an empty string otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/panningModel",
    "pageType": "web-api-instance-property",
    "summary": "The panningModel property of the PannerNode interface is an enumerated value determining which spatialization algorithm to use to position the audio in 3D space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationDestination/sameDocument",
    "pageType": "web-api-instance-property",
    "summary": "The sameDocument read-only property of the\nNavigationDestination interface returns true if the navigation is to the same document as the current Document value, or false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/orientationX",
    "pageType": "web-api-instance-property",
    "summary": "The orientationX property of the PannerNode interface indicates the X (horizontal) component of the\ndirection in which the audio source is facing, in a 3D Cartesian coordinate space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream",
    "pageType": "web-api-interface",
    "summary": "The MediaStream interface of the Media Capture and Streams API represents a stream of media content. A stream consists of several tracks, such as video or audio tracks. Each track is specified as an instance of MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/positionY",
    "pageType": "web-api-instance-property",
    "summary": "The positionY property of the PannerNode interface specifies the Y coordinate of the audio source's position in 3D Cartesian\ncoordinates, corresponding to the vertical axis (top-bottom). The complete\nvector is defined by the position of the audio source, given as\n(positionX, positionY, positionZ), and the orientation\nof the audio source (that is, the direction in which it's facing), given as\n(orientationX,\norientationY,\norientationZ)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/getTracks",
    "pageType": "web-api-instance-method",
    "summary": "The getTracks() method of the\nMediaStream interface returns a sequence that represents all the\nMediaStreamTrack objects in this\nstream's track set,\nregardless of MediaStreamTrack.kind."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/coneOuterAngle",
    "pageType": "web-api-instance-property",
    "summary": "The coneOuterAngle property of the PannerNode interface is a double value describing the angle, in degrees, of a cone outside of which the volume will be reduced by a constant value, defined by the coneOuterGain property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/addtrack_event",
    "pageType": "web-api-event",
    "summary": "The addtrack event is fired when a new MediaStreamTrack object has been added to a MediaStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/removeTrack",
    "pageType": "web-api-instance-method",
    "summary": "The removeTrack() method of the MediaStream interface removes a\nMediaStreamTrack from a stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PannerNode/rolloffFactor",
    "pageType": "web-api-instance-property",
    "summary": "The rolloffFactor property of the PannerNode interface is a double value describing how quickly the volume is reduced as the source moves away from the listener. This value is used by all distance models. The rolloffFactor property's default value is 1."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/clone",
    "pageType": "web-api-instance-method",
    "summary": "The clone() method of the MediaStream\ninterface creates a duplicate of the MediaStream. This new\nMediaStream object has a new unique id and\ncontains clones of every MediaStreamTrack contained by the\nMediaStream on which clone() was called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongTaskTiming/attribution",
    "pageType": "web-api-instance-property",
    "summary": "The attribution read-only property of the PerformanceLongTaskTiming interface returns an array of TaskAttributionTiming objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/removetrack_event",
    "pageType": "web-api-event",
    "summary": "The removetrack event is fired when a new MediaStreamTrack object has been removed from a MediaStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongTaskTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformanceLongTaskTiming interface provides information about tasks that occupy the UI thread for 50 milliseconds or more."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/getAudioTracks",
    "pageType": "web-api-instance-method",
    "summary": "The getAudioTracks() method of the\nMediaStream interface returns a sequence that represents all the\nMediaStreamTrack objects in this\nstream's track set where MediaStreamTrack.kind\nis audio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongTaskTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PerformanceLongTaskTiming interface is a serializer; it returns a JSON representation of the PerformanceLongTaskTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/getVideoTracks",
    "pageType": "web-api-instance-method",
    "summary": "The getVideoTracks() method of the\nMediaStream interface returns a sequence of\nMediaStreamTrack objects representing the video tracks in this stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Permissions",
    "pageType": "web-api-interface",
    "summary": "The Permissions interface of the Permissions API provides the core Permission API functionality, such as methods for querying and revoking permissions"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/active",
    "pageType": "web-api-instance-property",
    "summary": "The active read-only property of the\nMediaStream interface returns a Boolean value which is\ntrue if the stream is currently active; otherwise, it returns\nfalse. A stream is considered active if at least one of\nits MediaStreamTracks does not have its property MediaStreamTrack.readyState\nset to ended. Once every track has ended, the stream's active property becomes\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Permissions/revoke",
    "pageType": "web-api-instance-method",
    "summary": "The revoke() method of the Permissions interface reverts a currently set permission back to its default state, which is usually prompt.\nThis method is called on the global Permissions object navigator.permissions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the MediaStream interface is a\nstring containing 36 characters denoting a unique identifier (GUID)\nfor the object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/getTrackById",
    "pageType": "web-api-instance-method",
    "summary": "The getTrackById() method of the MediaStream interface\nreturns a MediaStreamTrack object representing the track with the specified ID\nstring. If there is no track with the specified ID, this method returns null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Permissions/query",
    "pageType": "web-api-instance-method",
    "summary": "The query() method of the Permissions interface returns the state of a user permission on the global scope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/MediaStream",
    "pageType": "web-api-constructor",
    "summary": "The MediaStream() constructor returns a newly-created MediaStream, which serves as a collection of media tracks, each represented by a MediaStreamTrack object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream/addTrack",
    "pageType": "web-api-instance-method",
    "summary": "The addTrack() method of the MediaStream interface adds a new track to the\nstream. The track is specified as a parameter of type MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/soundend_event",
    "pageType": "web-api-event",
    "summary": "The soundend event of the Web Speech API is fired when any sound — recognizable speech or not — has stopped being detected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the File interface returns the name of the file represented by a File object. For security\nreasons, the path is excluded from this property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/processLocally",
    "pageType": "web-api-instance-property",
    "summary": "The processLocally property of the\nSpeechRecognition interface specifies whether speech recognition must be performed locally on the user's device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File",
    "pageType": "web-api-interface",
    "summary": "The File interface provides information about files and allows JavaScript in a web page to access their content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition",
    "pageType": "web-api-interface",
    "summary": "The SpeechRecognition interface of the Web Speech API is the controller interface for the recognition service; this also handles the SpeechRecognitionEvent sent from the recognition service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File/lastModifiedDate",
    "pageType": "web-api-instance-property",
    "summary": "The lastModifiedDate read-only property of the File interface returns the last modified date of the file. Files without a known last modified date return the current date."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/speechend_event",
    "pageType": "web-api-event",
    "summary": "The speechend event of the Web Speech API is fired when speech recognized by the speech recognition service has stopped being detected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File/lastModified",
    "pageType": "web-api-instance-property",
    "summary": "The lastModified read-only property of the File interface provides the\nlast modified date of the file as the number of milliseconds since the Unix\nepoch (January 1, 1970 at midnight). Files without a known last modified date return the\ncurrent date."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/stop",
    "pageType": "web-api-instance-method",
    "summary": "The stop() method of the Web Speech API stops the speech recognition service from listening for incoming audio and attempts to return a SpeechRecognitionResult based on the results captured so far."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File/webkitRelativePath",
    "pageType": "web-api-instance-property",
    "summary": "The webkitRelativePath read-only property of the File interface\ncontains a string which specifies the file's path relative to the\ndirectory selected by the user in an <input> element with its\nwebkitdirectory attribute set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File/File",
    "pageType": "web-api-constructor",
    "summary": "The File() constructor creates a new File\nobject instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/maxAlternatives",
    "pageType": "web-api-instance-property",
    "summary": "The maxAlternatives property of the\nSpeechRecognition interface sets the maximum number of\nSpeechRecognitionAlternatives provided per\nSpeechRecognitionResult."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad",
    "pageType": "web-api-interface",
    "summary": "The Gamepad interface of the Gamepad API defines an individual gamepad or other controller, allowing access to information such as button presses, axis positions, and id."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/nomatch_event",
    "pageType": "web-api-event",
    "summary": "The nomatch event of the Web Speech API is fired when the speech recognition service returns a final result with no significant recognition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/displayId",
    "pageType": "web-api-instance-property",
    "summary": "The displayId read-only property of the Gamepad interface returns the VRDisplay.displayId of the associated VRDisplay — the VRDisplay that the gamepad is controlling the displayed scene of."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/soundstart_event",
    "pageType": "web-api-event",
    "summary": "The soundstart event of the Web Speech API is fired when any sound — recognizable speech or not — has been detected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The Gamepad.timestamp property of the\nGamepad interface returns a DOMHighResTimeStamp\nrepresenting the last time the data for this gamepad was updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/grammars",
    "pageType": "web-api-instance-property",
    "summary": "The grammars property of the\nSpeechRecognition interface returns and sets a collection of\nSpeechGrammar objects that represent the grammars that will be understood\nby the current SpeechRecognition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/connected",
    "pageType": "web-api-instance-property",
    "summary": "The Gamepad.connected property of the\nGamepad interface returns a boolean indicating whether the gamepad is\nstill connected to the system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/speechstart_event",
    "pageType": "web-api-event",
    "summary": "The speechstart event of the Web Speech API is fired when sound recognized by the speech recognition service as speech has been detected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/hapticActuators",
    "pageType": "web-api-instance-property",
    "summary": "The hapticActuators read-only property of the Gamepad interface returns an array containing GamepadHapticActuator objects, each of which represents haptic feedback hardware available on the controller."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/SpeechRecognition",
    "pageType": "web-api-constructor",
    "summary": "The SpeechRecognition() constructor creates a new\nSpeechRecognition object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/pose",
    "pageType": "web-api-instance-property",
    "summary": "The pose read-only property of the Gamepad interface returns a GamepadPose object representing the pose information associated with a WebVR controller (e.g., its position and orientation in 3D space)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/result_event",
    "pageType": "web-api-event",
    "summary": "The result event of the Web Speech API is fired when the speech recognition service returns a result — a word or phrase has been positively recognized and this has been communicated back to the app"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/index",
    "pageType": "web-api-instance-property",
    "summary": "The Gamepad.index property of the Gamepad\ninterface returns an integer that is auto-incremented to be unique for each device\ncurrently connected to the system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/axes",
    "pageType": "web-api-instance-property",
    "summary": "The Gamepad.axes property of the Gamepad\ninterface returns an array representing the controls with axes present on the device\n(e.g., analog thumb sticks)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/available_static",
    "pageType": "web-api-static-method",
    "summary": "The available() static method of the Web Speech API checks whether the specified languages are available for speech recognition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/hand",
    "pageType": "web-api-instance-property",
    "summary": "The hand read-only property of the Gamepad interface returns an enum defining what hand the controller is being held in, or is most likely to be held in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/start",
    "pageType": "web-api-instance-method",
    "summary": "The start() method of the Web Speech API starts the speech recognition service to listen for incoming audio (from a microphone or an audio track) and returns the results of that recognition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/id",
    "pageType": "web-api-instance-property",
    "summary": "The Gamepad.id property of the Gamepad\ninterface returns a string containing some information about the controller."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/buttons",
    "pageType": "web-api-instance-property",
    "summary": "The buttons property of the Gamepad interface returns an array of GamepadButton objects representing the buttons present on the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/phrases",
    "pageType": "web-api-instance-property",
    "summary": "The phrases property of the\nSpeechRecognition interface sets an array of SpeechRecognitionPhrase objects to be used for contextual biasing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/mapping",
    "pageType": "web-api-instance-property",
    "summary": "The Gamepad.mapping property of the\nGamepad interface returns a string indicating whether the browser has\nremapped the controls on the device to a known layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/audioend_event",
    "pageType": "web-api-event",
    "summary": "The audioend event of the Web Speech API is fired when the user agent has finished capturing audio for speech recognition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad/vibrationActuator",
    "pageType": "web-api-instance-property",
    "summary": "The vibrationActuator read-only property of the Gamepad interface returns a GamepadHapticActuator object, which represents haptic feedback hardware available on the controller."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/continuous",
    "pageType": "web-api-instance-property",
    "summary": "The continuous property of the\nSpeechRecognition interface controls whether continuous results are\nreturned for each recognition, or only a single result."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationCoordinates/altitudeAccuracy",
    "pageType": "web-api-instance-property",
    "summary": "The altitudeAccuracy read-only property of the GeolocationCoordinates interface is a strictly positive double representing the accuracy, with a 95% confidence level, of the altitude expressed in meters. This value is null if the implementation doesn't support measuring altitude."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/install_static",
    "pageType": "web-api-static-method",
    "summary": "The install() static method of the Web Speech API installs the required language packs for on-device speech recognition in the specified languages."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationCoordinates",
    "pageType": "web-api-interface",
    "summary": "The GeolocationCoordinates interface represents the position and altitude of the device on Earth, as well as the accuracy with which these properties are calculated.\nThe geographic position information is provided in terms of World Geodetic System coordinates (WGS84)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationCoordinates/altitude",
    "pageType": "web-api-instance-property",
    "summary": "The altitude read-only property of the GeolocationCoordinates interface is a double representing the altitude of the position in meters above the WGS84 ellipsoid (which defines the nominal sea level surface). This value is null if the implementation cannot provide this data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/lang",
    "pageType": "web-api-instance-property",
    "summary": "The lang property of the SpeechRecognition\ninterface returns and sets the language of the current SpeechRecognition.\nIf not specified, this defaults to the HTML lang attribute\nvalue, or the user agent's language setting if that isn't set either."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationCoordinates/latitude",
    "pageType": "web-api-instance-property",
    "summary": "The latitude read-only property of the GeolocationCoordinates interface is a double representing the latitude of the position in decimal degrees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/end_event",
    "pageType": "web-api-event",
    "summary": "The end event of the Web Speech API SpeechRecognition object is fired when the speech recognition service has disconnected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationCoordinates/longitude",
    "pageType": "web-api-instance-property",
    "summary": "The longitude read-only property of the GeolocationCoordinates interface is a number which represents the longitude of a geographical position, specified in decimal degrees.\nTogether with a timestamp, given as Unix time in milliseconds, indicating a time of measurement, the GeolocationCoordinates object is part of the GeolocationPosition interface, which is the object type returned by Geolocation API functions that obtain and return a geographical position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/audiostart_event",
    "pageType": "web-api-event",
    "summary": "The audiostart event of the Web Speech API is fired when the user agent has started to capture audio for speech recognition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationCoordinates/accuracy",
    "pageType": "web-api-instance-property",
    "summary": "The accuracy read-only property of the GeolocationCoordinates interface is a strictly positive double representing the accuracy, with a 95% confidence level, of the GeolocationCoordinates.latitude and GeolocationCoordinates.longitude properties expressed in meters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationCoordinates/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the GeolocationCoordinates interface is a serializer; it returns a JSON representation of the GeolocationCoordinates object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/abort",
    "pageType": "web-api-instance-method",
    "summary": "The abort() method of the Web Speech API stops the speech\nrecognition service from listening to incoming audio, and doesn't attempt to return a\nSpeechRecognitionResult."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationCoordinates/heading",
    "pageType": "web-api-instance-property",
    "summary": "The heading read-only property of the GeolocationCoordinates interface is a double representing the direction in which the device is traveling. This value, specified in degrees, indicates how far off from heading due north the device is. 0 degrees represents true north, and the direction is determined clockwise (which means that east is 90 degrees and west is 270 degrees). If GeolocationCoordinates.speed is 0 or the device is not able to provide heading information, heading is null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the Web Speech API SpeechRecognition object is fired when a speech recognition error occurs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationCoordinates/speed",
    "pageType": "web-api-instance-property",
    "summary": "The speed read-only property of the GeolocationCoordinates interface is a double representing the velocity of the device in meters per second. This value is null if the implementation is not able to measure it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/start_event",
    "pageType": "web-api-event",
    "summary": "The start event of the Web Speech API SpeechRecognition object is fired when the speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current SpeechRecognition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletProcessor",
    "pageType": "web-api-interface",
    "summary": "The AudioWorkletProcessor interface of the Web Audio API represents an audio processing code behind a custom AudioWorkletNode. It lives in the AudioWorkletGlobalScope and runs on the Web Audio rendering thread. In turn, an AudioWorkletNode based on it runs on the main thread."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognition/interimResults",
    "pageType": "web-api-instance-property",
    "summary": "The interimResults property of the\nSpeechRecognition interface controls whether interim results should be\nreturned (true) or not (false). Interim results are results\nthat are not yet final (e.g., the SpeechRecognitionResult.isFinal property\nis false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletProcessor/port",
    "pageType": "web-api-instance-property",
    "summary": "The read-only port property of the\nAudioWorkletProcessor interface returns the associated\nMessagePort. It can be used to communicate between the processor and the\nAudioWorkletNode to which it belongs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Console_API",
    "pageType": "web-api-overview",
    "summary": "The Console API provides functionality to allow developers to perform debugging tasks, such as logging messages or the values of variables at set points in your code, or timing how long an operation takes to complete."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletProcessor/parameterDescriptors_static",
    "pageType": "web-api-static-property",
    "summary": "The read-only parameterDescriptors property of an AudioWorkletProcessor-derived class is a static getter,\nwhich returns an iterable of AudioParamDescriptor-based objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletProcessor/AudioWorkletProcessor",
    "pageType": "web-api-constructor",
    "summary": "The AudioWorkletProcessor()\nconstructor creates a new AudioWorkletProcessor object, which\nrepresents an underlying audio processing mechanism of an\nAudioWorkletNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/region",
    "pageType": "web-api-instance-property",
    "summary": "The region property of the VTTCue interface returns and sets the VTTRegion that this cue belongs to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorkletProcessor/process",
    "pageType": "web-api-instance-method",
    "summary": "The process()\nmethod of an AudioWorkletProcessor-derived class implements the audio\nprocessing algorithm for the audio processor worklet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue",
    "pageType": "web-api-interface",
    "summary": "The VTTCue interface of the WebVTT API represents a cue that can be added to the text track associated with a particular video (or other media)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathProduct",
    "pageType": "web-api-interface",
    "summary": "The CSSMathProduct interface of the CSS Typed Object Model API represents the result obtained by calling add(), sub(), or toSum() on CSSNumericValue. It inherits properties and methods from its parent CSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathProduct/values",
    "pageType": "web-api-instance-property",
    "summary": "The CSSMathProduct.values read-only\nproperty of the CSSMathProduct interface returns a\nCSSNumericArray object which contains one or more\nCSSNumericValue objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/lineAlign",
    "pageType": "web-api-instance-property",
    "summary": "The lineAlign property of the VTTCue interface represents the alignment of this VTT cue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathProduct/CSSMathProduct",
    "pageType": "web-api-constructor",
    "summary": "The CSSMathProduct() constructor creates\na new CSSMathProduct object which creates a new\nCSSMathProduct object which multiplies the arguments passed into it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/align",
    "pageType": "web-api-instance-property",
    "summary": "The align property of the VTTCue interface represents the alignment of all of the lines of text in the text box."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEvent",
    "pageType": "web-api-interface",
    "summary": "The DeviceMotionEvent interface of the Device Orientation Events provides web developers with information about the speed of changes for the device's position and orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/vertical",
    "pageType": "web-api-instance-property",
    "summary": "The vertical property of the VTTCue interface is a string representing the cue's writing direction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEvent/rotationRate",
    "pageType": "web-api-instance-property",
    "summary": "The rotationRate read-only property of the DeviceMotionEvent interface returns the rate at which the device is rotating around each of its axes in degrees per\nsecond."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/snapToLines",
    "pageType": "web-api-instance-property",
    "summary": "The snapToLines property of the VTTCue interface is a Boolean indicating if the VTTCue.line property is an integer number of lines, or a percentage of the video size."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEvent/acceleration",
    "pageType": "web-api-instance-property",
    "summary": "The acceleration read-only property of the DeviceMotionEvent interface returns the acceleration recorded by\nthe device, in meters per second squared (m/s²).\nThis value does not include the effect of\nthe gravitational force, in contrast to DeviceMotionEvent.accelerationIncludingGravity."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEvent/interval",
    "pageType": "web-api-instance-property",
    "summary": "The interval read-only property of the DeviceMotionEvent interface returns the interval, in milliseconds, at which data is obtained from the underlying\nhardware. You can use this to determine the granularity of motion events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/VTTCue",
    "pageType": "web-api-constructor",
    "summary": "The VTTCue() constructor creates and returns a new\nVTTCue object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEvent/accelerationIncludingGravity",
    "pageType": "web-api-instance-property",
    "summary": "The accelerationIncludingGravity read-only property of the DeviceMotionEvent interface returns the\namount of acceleration recorded by the device, in meters per second squared (m/s²). Unlike DeviceMotionEvent.acceleration\nwhich compensates for the influence of gravity, its value is the sum of the acceleration\nof the device as induced by the user and an acceleration equal and opposite to that\ncaused by gravity. In other words, it measures the\ng-force. In practice, this value represents\nthe raw data measured by an accelerometer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/size",
    "pageType": "web-api-instance-property",
    "summary": "The size property of the VTTCue interface represents the size of the cue as a percentage of the video size."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceMotionEvent/DeviceMotionEvent",
    "pageType": "web-api-constructor",
    "summary": "The DeviceMotionEvent() constructor creates a new DeviceMotionEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/getCueAsHTML",
    "pageType": "web-api-instance-method",
    "summary": "The getCueAsHTML() method of the VTTCue interface returns a DocumentFragment containing the cue content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedAudioChunk",
    "pageType": "web-api-interface",
    "summary": "The EncodedAudioChunk interface of the WebCodecs API represents a chunk of encoded audio data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/position",
    "pageType": "web-api-instance-property",
    "summary": "The position property of the VTTCue interface represents the indentation of the cue within the line."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedAudioChunk/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp read-only property of the EncodedAudioChunk interface returns an integer indicating the timestamp of the audio in microseconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedAudioChunk/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the EncodedAudioChunk interface returns a value indicating whether the audio chunk is a key chunk, which does not relying on other frames for decoding."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/positionAlign",
    "pageType": "web-api-instance-property",
    "summary": "The positionAlign property of the VTTCue interface is used to determine what VTTCue.position is anchored to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedAudioChunk/byteLength",
    "pageType": "web-api-instance-property",
    "summary": "The byteLength read-only property of the EncodedAudioChunk interface returns the length in bytes of the encoded audio data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/text",
    "pageType": "web-api-instance-property",
    "summary": "The text property of the VTTCue interface represents the text contents of the cue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedAudioChunk/duration",
    "pageType": "web-api-instance-property",
    "summary": "The duration read-only property of the EncodedAudioChunk interface returns an integer indicating the duration of the audio in microseconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTCue/line",
    "pageType": "web-api-instance-property",
    "summary": "The line property of the VTTCue interface represents the cue line of this WebVTT cue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedAudioChunk/copyTo",
    "pageType": "web-api-instance-method",
    "summary": "The copyTo() method of the EncodedAudioChunk interface copies the encoded chunk of audio data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedAudioChunk/EncodedAudioChunk",
    "pageType": "web-api-constructor",
    "summary": "The EncodedAudioChunk() constructor creates a new EncodedAudioChunk object representing a chunk of encoded audio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats",
    "pageType": "web-api-interface",
    "summary": "The RTCCodecStats dictionary of the WebRTC API provides statistics about a codec used by RTP streams that are being sent or received by the associated RTCPeerConnection object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotificationEvent/notification",
    "pageType": "web-api-instance-property",
    "summary": "The notification read-only property of the NotificationEvent interface returns the instance of the Notification that was clicked to fire the event. The Notification provides read-only access to many properties that were set at the instantiation time of the Notification such as tag and data attributes that allow you to store information for deferred use in the notificationclick event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats/channels",
    "pageType": "web-api-instance-property",
    "summary": "The channels property of the RTCCodecStats dictionary is a positive number containing the number of channels supported by the codec."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotificationEvent",
    "pageType": "web-api-interface",
    "summary": "The NotificationEvent interface of the Notifications API represents a notification event dispatched on the ServiceWorkerGlobalScope of a ServiceWorker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotificationEvent/action",
    "pageType": "web-api-instance-property",
    "summary": "The action read-only property of the NotificationEvent interface returns the string ID of the notification button the user clicked. This value returns an empty string if the user clicked the notification somewhere other than an action button, or the notification does not have a button. The notification id is set during the creation of the Notification via the actions array attribute and can't be modified unless the notification is replaced."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCCodecStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotificationEvent/NotificationEvent",
    "pageType": "web-api-constructor",
    "summary": "The NotificationEvent() constructor creates a new NotificationEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCCodecStats dictionary is a string with the value \"codec\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Custom_Highlight_API",
    "pageType": "web-api-overview",
    "summary": "The CSS Custom Highlight API provides a mechanism for styling arbitrary text ranges on a document by using JavaScript to create the ranges, and CSS to style them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats/payloadType",
    "pageType": "web-api-instance-property",
    "summary": "The payloadType property of the RTCCodecStats dictionary is a positive integer in the range from 0 to 127 that describes the format of the RTP payload used in RTP encoding or decoding."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSubImage",
    "pageType": "web-api-interface",
    "summary": "The XRSubImage interface of the WebXR Device API represents what viewport of the GPU texture to use for rendering."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSubImage/viewport",
    "pageType": "web-api-instance-property",
    "summary": "The read-only viewport property of the XRSubImage interface represents the XRViewport that is used when rendering the sub image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats/transportId",
    "pageType": "web-api-instance-property",
    "summary": "The transportId property of the RTCCodecStats dictionary is a string that contains the unique identifier of the corresponding transport on which this codec is being used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamAudioDestinationNode",
    "pageType": "web-api-interface",
    "summary": "The MediaStreamAudioDestinationNode interface represents an audio destination consisting of a WebRTC MediaStream with a single AudioMediaStreamTrack, which can be used in a similar way to a MediaStream obtained from navigator.mediaDevices.getUserMedia()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats/sdpFmtpLine",
    "pageType": "web-api-instance-property",
    "summary": "The sdpFmtpLine property of the RTCCodecStats dictionary is a string containing the format-specific parameters of the codec."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamAudioDestinationNode/stream",
    "pageType": "web-api-instance-property",
    "summary": "The stream property of the AudioContext interface represents a MediaStream containing a single audio MediaStreamTrack with the same number of channels as the node itself."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCCodecStats dictionary is a string that uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamAudioDestinationNode/MediaStreamAudioDestinationNode",
    "pageType": "web-api-constructor",
    "summary": "The MediaStreamAudioDestinationNode() constructor of the Web Audio API creates a new MediaStreamAudioDestinationNode object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats/mimeType",
    "pageType": "web-api-instance-property",
    "summary": "The mimeType property of the RTCCodecStats dictionary is a string containing the codec's MIME type and subtype."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the MIDIPort interface returns the state of the port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCodecStats/clockRate",
    "pageType": "web-api-instance-property",
    "summary": "The clockRate property of the RTCCodecStats dictionary is a positive number containing the media sampling rate in hertz (Hz)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the MIDIPort interface returns the system name of the port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort",
    "pageType": "web-api-interface",
    "summary": "The MIDIPort interface of the Web MIDI API represents a MIDI input or output port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Visual_Viewport_API",
    "pageType": "web-api-overview",
    "summary": "The Visual Viewport API provides an explicit mechanism for querying and modifying the properties of the window's visual viewport. The visual viewport is the visual portion of a screen excluding on-screen keyboards, areas outside of a pinch-zoom area, or any other on-screen artifact that doesn't scale with the dimensions of a page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/open",
    "pageType": "web-api-instance-method",
    "summary": "The open() method of the MIDIPort interface makes the MIDI device connected to this MIDIPort explicitly available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/manufacturer",
    "pageType": "web-api-instance-property",
    "summary": "The manufacturer read-only property of the MIDIPort interface returns the manufacturer of the port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice",
    "pageType": "web-api-interface",
    "summary": "The HIDDevice interface of the WebHID API represents a HID Device. It provides properties for accessing information about the device, methods for opening and closing the connection, and the sending and receiving of reports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the MIDIPort interface returns the type of the port, indicating whether this is an input or output MIDI port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/open",
    "pageType": "web-api-instance-method",
    "summary": "The open() method of the HIDDevice interface requests that the operating system opens the HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/version",
    "pageType": "web-api-instance-property",
    "summary": "The version read-only property of the MIDIPort interface returns the version of the port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the MIDIPort interface makes the access to the MIDI device connected to this MIDIPort unavailable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/productId",
    "pageType": "web-api-instance-property",
    "summary": "The productId read-only property of the HIDDevice interface returns the product ID of the connected HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/connection",
    "pageType": "web-api-instance-property",
    "summary": "The connection read-only property of the MIDIPort interface returns the connection state of the port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/opened",
    "pageType": "web-api-instance-property",
    "summary": "The opened read-only property of the HIDDevice interface returns true if the connection to the HIDDevice is open and ready to transfer data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the MIDIPort interface returns the unique ID of the port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIPort/statechange_event",
    "pageType": "web-api-event",
    "summary": "The statechange event of the MIDIPort interface is fired when a port changes from open to closed, or closed to open."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/sendReport",
    "pageType": "web-api-instance-method",
    "summary": "The sendReport() method of the HIDDevice interface sends an output report to the HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Insertable_Streams_for_MediaStreamTrack_API",
    "pageType": "web-api-overview",
    "summary": "The Insertable Streams for MediaStreamTrack API provides a way to process the video frames of a MediaStreamTrack as they are consumed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/collections",
    "pageType": "web-api-instance-property",
    "summary": "The collections read-only property of the HIDDevice interface returns an array of report formats"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIOutputMap",
    "pageType": "web-api-interface",
    "summary": "The MIDIOutputMap read-only interface of the Web MIDI API provides the set of MIDI output ports that are currently available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/inputreport_event",
    "pageType": "web-api-event",
    "summary": "The inputreport event of the HIDDevice interface fires when a new report is received from the HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundle",
    "pageType": "web-api-interface",
    "summary": "The GPURenderBundle interface of the WebGPU API represents a container for pre-recorded bundles of commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderBundle/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the\nGPURenderBundle interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/vendorId",
    "pageType": "web-api-instance-property",
    "summary": "The vendorId read-only property of the HIDDevice interface returns the vendor ID of the connected HID device. This identifies the vendor of the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageBitmap",
    "pageType": "web-api-interface",
    "summary": "The ImageBitmap interface represents a bitmap image which can be drawn to a <canvas> without undue latency. It can be created from a variety of source objects using the Window.createImageBitmap() or WorkerGlobalScope.createImageBitmap() factory method. ImageBitmap provides an asynchronous and resource efficient pathway to prepare textures for rendering in WebGL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the HIDDevice interface closes the connection to the HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageBitmap/height",
    "pageType": "web-api-instance-property",
    "summary": "The ImageBitmap.height read-only property returns the ImageBitmap object's height in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageBitmap/close",
    "pageType": "web-api-instance-method",
    "summary": "The ImageBitmap.close()\nmethod disposes of all graphical resources associated with an ImageBitmap."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/receiveFeatureReport",
    "pageType": "web-api-instance-method",
    "summary": "The receiveFeatureReport() method of the HIDDevice interface receives a feature report from the HID device. Feature reports are a way for HID devices and applications to exchange non-standardized HID data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageBitmap/width",
    "pageType": "web-api-instance-property",
    "summary": "The ImageBitmap.width read-only property returns the ImageBitmap object's width in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/productName",
    "pageType": "web-api-instance-property",
    "summary": "The productName read-only property of the HIDDevice interface returns the product name of the connected HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadEvent",
    "pageType": "web-api-interface",
    "summary": "The GamepadEvent interface of the Gamepad API contains references to gamepads connected to the system, which is what the gamepad events gamepadconnected and gamepaddisconnected are fired in response to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/forget",
    "pageType": "web-api-instance-method",
    "summary": "The forget() method of the HIDDevice interface closes the connection to the HID device and forgets the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadEvent/GamepadEvent",
    "pageType": "web-api-constructor",
    "summary": "The GamepadEvent() constructor creates a new GamepadEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadEvent/gamepad",
    "pageType": "web-api-instance-property",
    "summary": "The GamepadEvent.gamepad property of the\nGamepadEvent interface returns a Gamepad\nobject, providing access to the associated gamepad data for fired\ngamepadconnected and gamepaddisconnected events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDDevice/sendFeatureReport",
    "pageType": "web-api-instance-method",
    "summary": "The sendFeatureReport() method of the HIDDevice interface sends a feature report to the HID device. Feature reports are a way for HID devices and applications to exchange non-standardized HID data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FragmentDirective",
    "pageType": "web-api-interface",
    "summary": "The FragmentDirective interface is an object exposed to allow code to check whether or not a browser supports text fragments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Media_Capabilities_API",
    "pageType": "web-api-overview",
    "summary": "The Media Capabilities API allows developers to determine decoding and encoding abilities of the device, exposing information such as whether media is supported and whether playback should be smooth and power efficient, with real time feedback about playback to better enable adaptive streaming, and access to display property information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystem/name",
    "pageType": "web-api-instance-property",
    "summary": "The read-only name property of the\nFileSystem interface indicates the file system's name. This\nstring is unique among all file systems currently exposed by the File and Directory Entries API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Media_Capabilities_API/Using_the_Media_Capabilities_API",
    "pageType": "guide",
    "summary": "The Media Capabilities API provides several key features to help you better decide how to handle media, but also to determine how well media is being handled, in real time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystem",
    "pageType": "web-api-interface",
    "summary": "The File and Directory Entries API interface FileSystem is used to represent a file system. These objects can be obtained from the filesystem property on any file system entry. Some browsers offer additional APIs to create and manage file systems, such as Chrome's requestFileSystem() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InterventionReportBody",
    "pageType": "web-api-interface",
    "summary": "The InterventionReportBody interface of the Reporting API represents the body of an intervention report."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystem/root",
    "pageType": "web-api-instance-property",
    "summary": "The read-only root property of the\nFileSystem interface specifies a FileSystemDirectoryEntry\nobject representing the root directory of the file system, for use with the File and Directory Entries API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InterventionReportBody/lineNumber",
    "pageType": "web-api-instance-property",
    "summary": "The lineNumber read-only property of the InterventionReportBody interface returns the line in the source file in which the intervention occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMap",
    "pageType": "web-api-interface",
    "summary": "The StylePropertyMap interface of the CSS Typed Object Model API provides a representation of a CSS declaration block that is an alternative to CSSStyleDeclaration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InterventionReportBody/columnNumber",
    "pageType": "web-api-instance-property",
    "summary": "The columnNumber read-only property of the InterventionReportBody interface returns the line in the source file in which the intervention occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMap/set",
    "pageType": "web-api-instance-method",
    "summary": "The set() method of the StylePropertyMap\ninterface changes the CSS declaration with the given property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InterventionReportBody/sourceFile",
    "pageType": "web-api-instance-property",
    "summary": "The sourceFile read-only property of the InterventionReportBody interface returns the path to the source file where the intervention occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMap/append",
    "pageType": "web-api-instance-method",
    "summary": "The append() method of the\nStylePropertyMap interface adds the passed CSS value to the\nStylePropertyMap with the given property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InterventionReportBody/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the InterventionReportBody interface is a serializer, and returns a JSON representation of the InterventionReportBody object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InterventionReportBody/message",
    "pageType": "web-api-instance-property",
    "summary": "The message read-only property of the InterventionReportBody interface returns a human-readable description of the intervention, including information such as how the intervention could be avoided. This typically matches the message a browser will display in its DevTools console when an intervention is imposed, if one is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMap/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the\nStylePropertyMap interface removes the CSS declaration with the given\nproperty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InterventionReportBody/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the InterventionReportBody interface returns a string identifying the intervention that generated the report. This can be used to group reports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StylePropertyMap/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the StylePropertyMap\ninterface removes all declarations in the StylePropertyMap."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CommandEvent",
    "pageType": "web-api-interface",
    "summary": "The CommandEvent interface represents an event notifying the user when a button element with valid commandForElement and command attributes is about to invoke an interactive element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSLayerStatementRule",
    "pageType": "web-api-interface",
    "summary": "The CSSLayerStatementRule represents a @layer statement rule. Unlike CSSLayerBlockRule, it doesn't contain other rules and merely defines one or several layers by providing their names."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CommandEvent/source",
    "pageType": "web-api-instance-property",
    "summary": "The source read-only property of the CommandEvent interface returns an EventTarget representing the control that invoked the given command."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSLayerStatementRule/nameList",
    "pageType": "web-api-instance-property",
    "summary": "The read-only nameList property of the CSSLayerStatementRule interface return the list of associated cascade layer names. The names can't be modified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CommandEvent/command",
    "pageType": "web-api-instance-property",
    "summary": "The command read-only property of the CommandEvent interface returns a string containing the value of the command property at the time the event was dispatched."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CommandEvent/CommandEvent",
    "pageType": "web-api-constructor",
    "summary": "The CommandEvent() constructor creates a new CommandEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDtlsTransport/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the\nRTCDtlsTransport interface provides information which describes a\nDatagram Transport Layer Security (DTLS) transport state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NamedNodeMap",
    "pageType": "web-api-interface",
    "summary": "The NamedNodeMap interface represents a collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDtlsTransport",
    "pageType": "web-api-interface",
    "summary": "The RTCDtlsTransport interface provides access to information about the Datagram Transport Layer Security (DTLS) transport over which a RTCPeerConnection's RTP and RTCP packets are sent and received by its RTCRtpSender and RTCRtpReceiver objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NamedNodeMap/getNamedItemNS",
    "pageType": "web-api-instance-method",
    "summary": "The getNamedItemNS() method of the NamedNodeMap interface returns the Attr corresponding to the given local name in the given namespace, or null if there is no corresponding attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDtlsTransport/iceTransport",
    "pageType": "web-api-instance-property",
    "summary": "The iceTransport read-only property of the RTCDtlsTransport interface contains a reference to the underlying RTCIceTransport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NamedNodeMap/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method of the NamedNodeMap interface\nreturns the item in the map matching the index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDtlsTransport/error_event",
    "pageType": "web-api-event",
    "summary": "An RTCDtlsTransport receives an error event when a transport-level error occurs on the RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NamedNodeMap/removeNamedItem",
    "pageType": "web-api-instance-method",
    "summary": "The removeNamedItem() method of the NamedNodeMap interface\nremoves the Attr corresponding to the given name from the map."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NamedNodeMap/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property of the NamedNodeMap interface\nis the number of objects stored in the map."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSctpTransport/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the RTCSctpTransport interface provides information which describes a Stream Control Transmission Protocol (SCTP) transport state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NamedNodeMap/setNamedItemNS",
    "pageType": "web-api-instance-method",
    "summary": "The setNamedItemNS() method of the NamedNodeMap interface\nputs the Attr identified by its name in the map.\nIf there was already an Attr with the same name in the map,\nit is replaced."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSctpTransport",
    "pageType": "web-api-interface",
    "summary": "The RTCSctpTransport interface provides information which describes a Stream Control Transmission Protocol (SCTP) transport. This provides information about limitations of the transport, but also provides a way to access the underlying Datagram Transport Layer Security (DTLS) transport over which SCTP packets for all of an RTCPeerConnection's data channels are sent and received."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NamedNodeMap/removeNamedItemNS",
    "pageType": "web-api-instance-method",
    "summary": "The removeNamedItemNS() method of the NamedNodeMap interface\nremoves the Attr corresponding to the given namespace and local name from the map."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSctpTransport/maxChannels",
    "pageType": "web-api-instance-property",
    "summary": "The maxChannels read-only property of the RTCSctpTransport interface indicates the maximum number of RTCDataChannel objects that can be opened simultaneously."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NamedNodeMap/getNamedItem",
    "pageType": "web-api-instance-method",
    "summary": "The getNamedItem() method of the NamedNodeMap interface returns the Attr corresponding to the given name, or null if there is no corresponding attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NamedNodeMap/setNamedItem",
    "pageType": "web-api-instance-method",
    "summary": "The setNamedItem() method of the NamedNodeMap interface\nputs the Attr identified by its name in the map.\nIf there is already an Attr with the same name in the map,\nit is replaced."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSctpTransport/transport",
    "pageType": "web-api-instance-property",
    "summary": "The transport read-only property of the RTCSctpTransport interface returns a RTCDtlsTransport object representing the DTLS transport used for the transmission and receipt of data packets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStoreManager",
    "pageType": "web-api-interface",
    "summary": "The CookieStoreManager interface of the Cookie Store API allows service workers to subscribe to cookie change events. Call subscribe() on a particular service worker registration to receive change events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSctpTransport/maxMessageSize",
    "pageType": "web-api-instance-property",
    "summary": "The maxMessageSize read-only property of the RTCSctpTransport interface indicates the maximum size of a message that can be sent using the RTCDataChannel.send() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStoreManager/unsubscribe",
    "pageType": "web-api-instance-method",
    "summary": "The unsubscribe() method of the CookieStoreManager interface stops the ServiceWorkerRegistration from receiving previously subscribed events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCSctpTransport/statechange_event",
    "pageType": "web-api-event",
    "summary": "A statechange event is sent to an RTCSctpTransport to provide notification when the RTCSctpTransport.state property has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStoreManager/getSubscriptions",
    "pageType": "web-api-instance-method",
    "summary": "The getSubscriptions() method of the CookieStoreManager interface returns a list of all the cookie change subscriptions for this ServiceWorkerRegistration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStoreManager/subscribe",
    "pageType": "web-api-instance-method",
    "summary": "The subscribe() method of the CookieStoreManager interface subscribes a ServiceWorkerRegistration to cookie change events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AesGcmParams",
    "pageType": "web-api-interface",
    "summary": "The AesGcmParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.encrypt(), SubtleCrypto.decrypt(), SubtleCrypto.wrapKey(), or SubtleCrypto.unwrapKey(), when using the AES-GCM algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Authentication_API",
    "pageType": "web-api-overview",
    "summary": "The Web Authentication API (WebAuthn) is an extension of the Credential Management API that enables strong authentication with public key cryptography, enabling passwordless authentication and secure multi-factor authentication (MFA) without SMS texts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/region",
    "pageType": "web-api-instance-property",
    "summary": "The read-only region property of the\nPaymentAddress interface returns a string containing the top-level\nadministrative subdivision of the country in which the address is located. For example,\nthis may be a state, province, oblast, or prefecture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress",
    "pageType": "web-api-interface",
    "summary": "The PaymentAddress interface of the Payment Request API is used to store shipping or payment address information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/country",
    "pageType": "web-api-instance-property",
    "summary": "The country read-only property of the\nPaymentAddress interface is a string identifying the address's country\nusing the ISO 3166-1 alpha-2 standard. The string is\nalways in its canonical upper-case form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Authentication_API/WebAuthn_extensions",
    "pageType": "guide",
    "summary": "The Web Authentication API has a system of extensions — extra functionality that can be requested during credential creation (navigator.credentials.create()) or authentication (navigator.credentials.get()) operations. This article explains how to request WebAuthn extensions, retrieve information about the responses from those requests, and the available extensions — including browser support and expected inputs and outputs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/organization",
    "pageType": "web-api-instance-property",
    "summary": "The organization read-only\nproperty of the PaymentAddress interface returns a string containing\nthe name of the organization, firm, company, or institution at the address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Authentication_API/Authenticator_data",
    "pageType": "guide",
    "summary": "The authenticator data structure contains information from the authenticator about the processing of a credential creation or authentication request — such as the Relying Party ID Hash (rpIdHash), a signature counter, test of user presence, user verification flags, and any extensions processed by the authenticator. This page explains what is contained in the data structure."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/phone",
    "pageType": "web-api-instance-property",
    "summary": "The read-only phone property of the\nPaymentAddress interface returns a string containing the telephone number\nof the recipient or contact person."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion",
    "pageType": "guide",
    "summary": "There are two different types of certificates used in WebAuthn for registration and authentication. They have similar names and similar purposes, but understanding the differences may be an initial point of confusion. The sections below describe attestation, which happens during registration, and assertion which happens during authentication."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/recipient",
    "pageType": "web-api-instance-property",
    "summary": "The read-only recipient property of the\nPaymentAddress interface returns a string containing the name of the\nrecipient, purchaser, or contact person at the payment address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/dependentLocality",
    "pageType": "web-api-instance-property",
    "summary": "The read-only dependentLocality\nproperty of the PaymentAddress interface is a string containing a\nsublocality designation within a city, such as a neighborhood, borough, district, or,\nin the United Kingdom, a dependent locality. Also known as a post\ntown."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLinearGradientElement",
    "pageType": "web-api-interface",
    "summary": "The SVGLinearGradientElement interface corresponds to the <linearGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/addressLine",
    "pageType": "web-api-instance-property",
    "summary": "The addressLine read-only\nproperty of the PaymentAddress interface is an array of\nstrings, each specifying a line of the address that is not\ncovered by one of the other properties of PaymentAddress."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLinearGradientElement/x2",
    "pageType": "web-api-instance-property",
    "summary": "The x2 read-only property of the SVGLinearGradientElement interface describes the x-axis coordinate of the start point of the gradient as an SVGAnimatedLength. It reflects the computed value of the x2 attribute on the <linearGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/postalCode",
    "pageType": "web-api-instance-property",
    "summary": "The postalCode read-only property of the\nPaymentAddress interface returns a string containing a code used by a\njurisdiction for mail routing, for example, the ZIP Code\nin the United States or the Postal Index Number (PIN code)\nin India."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLinearGradientElement/y1",
    "pageType": "web-api-instance-property",
    "summary": "The y1 read-only property of the SVGLinearGradientElement interface describes the y-axis coordinate of the start point of the gradient as an SVGAnimatedLength. It reflects the computed value of the y1 attribute on the <linearGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PaymentAddress interface is a standard serializer that returns a JSON representation of the PaymentAddress object's properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLinearGradientElement/x1",
    "pageType": "web-api-instance-property",
    "summary": "The x1 read-only property of the SVGLinearGradientElement interface describes the x-axis coordinate of the start point of the gradient as an SVGAnimatedLength. It reflects the computed value of the x1 attribute on the <linearGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/sortingCode",
    "pageType": "web-api-instance-property",
    "summary": "The sortingCode read-only property of the\nPaymentAddress interface returns a string containing a postal sorting\ncode such as is used in France."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLinearGradientElement/y2",
    "pageType": "web-api-instance-property",
    "summary": "The y2 read-only property of the SVGLinearGradientElement interface describes the y-axis coordinate of the start point of the gradient as an SVGAnimatedLength. It reflects the computed value of the y2 attribute on the <linearGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentAddress/city",
    "pageType": "web-api-instance-property",
    "summary": "The city read-only property of\nthe PaymentAddress interface returns a string containing the city or\ntown portion of the address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTDescriptor",
    "pageType": "web-api-interface",
    "summary": "The BluetoothRemoteGATTDescriptor interface of the Web Bluetooth API provides a GATT Descriptor,\nwhich provides further information about a characteristic's value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response",
    "pageType": "web-api-interface",
    "summary": "The Response interface of the Fetch API represents the response to a request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/json_static",
    "pageType": "web-api-static-method",
    "summary": "The json() static method of the Response interface returns a Response that contains the provided JSON data as body, and a Content-Type header which is set to application/json.\nThe response status, status message, and additional headers can also be set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTDescriptor/readValue",
    "pageType": "web-api-instance-method",
    "summary": "The\nBluetoothRemoteGATTDescriptor.readValue()\nmethod returns a Promise that resolves to\na DataView holding a duplicate of the value property if\nit is available and supported. Otherwise it throws an error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/blob",
    "pageType": "web-api-instance-method",
    "summary": "The blob() method of the Response interface takes\na Response stream and reads it to completion. It returns a promise that\nresolves with a Blob."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTDescriptor/characteristic",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothRemoteGATTDescriptor.characteristic\nread-only property returns the BluetoothRemoteGATTCharacteristic this\ndescriptor belongs to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/headers",
    "pageType": "web-api-instance-property",
    "summary": "The headers read-only property of the\nResponse interface contains the Headers object associated\nwith the response."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTDescriptor/value",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothRemoteGATTDescriptor.value\nread-only property returns a DataView containing the currently cached\ndescriptor value. This value gets updated when the value of the descriptor is read."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/status",
    "pageType": "web-api-instance-property",
    "summary": "The status read-only property of the Response interface contains the HTTP status codes of the response."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/statusText",
    "pageType": "web-api-instance-property",
    "summary": "The statusText read-only property of the Response interface contains the status message corresponding to the HTTP status code in Response.status."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTDescriptor/writeValue",
    "pageType": "web-api-instance-method",
    "summary": "The BluetoothRemoteGATTDescriptor.writeValue()\nmethod sets the value property to the bytes contained in\nan ArrayBuffer, TypedArray, or DataView and returns a Promise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the Response interface contains the type of the response. The type determines whether scripts are able to access the response body and headers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothRemoteGATTDescriptor/uuid",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothRemoteGATTDescriptor.uuid read-only property returns the UUID of the characteristic descriptor.\nFor example \"00002902-0000-1000-8000-00805f9b34fb\" for the Client Characteristic Configuration descriptor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/error_static",
    "pageType": "web-api-static-method",
    "summary": "The error() static method of the Response interface returns a new Response object associated with a network error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/redirected",
    "pageType": "web-api-instance-property",
    "summary": "The redirected read-only property of the Response interface indicates whether or not the response is the result of a request you made which was redirected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextUpdateEvent",
    "pageType": "web-api-interface",
    "summary": "The TextUpdateEvent interface is a DOM event that represents a text or selection update in an editable text region that's attached to an EditContext instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/body",
    "pageType": "web-api-instance-property",
    "summary": "The body read-only property of the Response interface is a ReadableStream of the body contents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextUpdateEvent/selectionStart",
    "pageType": "web-api-instance-property",
    "summary": "The TextUpdateEvent.selectionStart read-only property indicates the position of the start of the selection (or caret) within the text content of the editable region attached to the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the Response interface contains the URL of the response.\nThe value of the url property will be the final URL obtained after any redirects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextUpdateEvent/selectionEnd",
    "pageType": "web-api-instance-property",
    "summary": "The TextUpdateEvent.selectionEnd read-only property indicates the position of the end of the selection (or caret) within the text content of the editable region attached to the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/bodyUsed",
    "pageType": "web-api-instance-property",
    "summary": "The bodyUsed read-only property of the Response interface is a boolean value that indicates whether the body has been read yet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextUpdateEvent/updateRangeEnd",
    "pageType": "web-api-instance-property",
    "summary": "The TextUpdateEvent.updateRangeEnd read-only property indicates the end position of the text range that is being replaced in the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/clone",
    "pageType": "web-api-instance-method",
    "summary": "The clone() method of the Response interface creates a clone of a response object, identical in every way, but stored in a different variable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/json",
    "pageType": "web-api-instance-method",
    "summary": "The json() method of the Response interface takes\na Response stream and reads it to completion. It returns a promise which\nresolves with the result of parsing the body text as JSON."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextUpdateEvent/TextUpdateEvent",
    "pageType": "web-api-constructor",
    "summary": "The TextUpdateEvent() constructor returns a new TextUpdateEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/redirect_static",
    "pageType": "web-api-static-method",
    "summary": "The redirect() static method of the Response interface returns a Response resulting in a redirect to the specified URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextUpdateEvent/updateRangeStart",
    "pageType": "web-api-instance-property",
    "summary": "The TextUpdateEvent.updateRangeStart read-only property indicates the start position of the text range that is being replaced in the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/text",
    "pageType": "web-api-instance-method",
    "summary": "The text() method of the Response interface takes a Response stream and reads it to completion.\nIt returns a promise that resolves with a String.\nThe response is always decoded using UTF-8."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextUpdateEvent/text",
    "pageType": "web-api-instance-property",
    "summary": "The TextUpdateEvent.text read-only property contains the text that was inserted within the updated range of an EditContext's textupdate event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/arrayBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The arrayBuffer() method of the Response interface\ntakes a Response stream and reads it to completion. It returns a promise\nthat resolves with an ArrayBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/formData",
    "pageType": "web-api-instance-method",
    "summary": "The formData() method of the Response interface\ntakes a Response stream and reads it to completion. It returns a promise\nthat resolves with a FormData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReader",
    "pageType": "web-api-interface",
    "summary": "The NDEFReader interface of the Web NFC API is used to read from and write data to compatible NFC devices, e.g., NFC tags supporting NDEF, when these devices are within the reader's magnetic induction field."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/Response",
    "pageType": "web-api-constructor",
    "summary": "The Response() constructor creates a new Response object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReader/write",
    "pageType": "web-api-instance-method",
    "summary": "The write() method of the NDEFReader interface attempts to write an NDEF message to a tag and returns a Promise that either resolves when a message has been written to the tag or rejects if a hardware or permission error is encountered. This method triggers a permission prompt if the \"nfc\" permission has not been previously granted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/bytes",
    "pageType": "web-api-instance-method",
    "summary": "The bytes() method of the Response interface takes a Response stream and reads it to completion.\nIt returns a promise that resolves with a Uint8Array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReader/NDEFReader",
    "pageType": "web-api-constructor",
    "summary": "The NDEFReader()\nconstructor of the NDEFReader interface returns a\nnew NDEFReader object, which is used to read NDEF messages from\ncompatible NFC devices, e.g., NDEF tags, within the reader's magnetic induction\nfield."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Response/ok",
    "pageType": "web-api-instance-property",
    "summary": "The ok read-only property of the Response interface contains a Boolean stating whether the response was successful (status in the range 200-299) or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Credential_Management_API",
    "pageType": "web-api-overview",
    "summary": "The Credential Management API enables a website to create, store, and retrieve credentials. A credential is an item which enables a system to make an authentication decision: for example, to decide whether to sign a user into an account. We can think of it as a piece of evidence that a user presents to a website to demonstrate that they really are the person they are claiming to be."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReader/readingerror_event",
    "pageType": "web-api-event",
    "summary": "The readingerror event of the NDEFReader interface is fired whenever an error occurs during reading of NFC tags, e.g., when tags leave the reader's magnetic induction field."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Credential_Management_API/Credential_types",
    "pageType": "guide",
    "summary": "The Credential Management API enables a website to create, store, and retrieve the credentials that allow a user to securely log in. It supports four different types of credentials:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReader/reading_event",
    "pageType": "web-api-event",
    "summary": "The reading event of the NDEFReader interface is fired whenever a new reading is available from compatible NFC devices (e.g., NFC tags supporting NDEF) when these devices are within the reader's magnetic induction field."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_DOM_API",
    "pageType": "web-api-overview",
    "summary": "The HTML DOM API is made up of the interfaces that define the functionality of each of the elements in HTML, as well as any supporting types and interfaces they rely upon."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReader/scan",
    "pageType": "web-api-instance-method",
    "summary": "The scan() method of the NDEFReader interface activates a reading device and returns a Promise that either resolves when an NFC tag read operation is scheduled or rejects if a hardware or permission error is encountered. This method triggers a permission prompt if the \"nfc\" permission has not been previously granted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide",
    "pageType": "guide",
    "summary": "A microtask is a short function which is executed after the function or program which created it exits and only if the JavaScript execution stack is empty, but before returning control to the event loop being used by the user agent to drive the script's execution environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIInputMap",
    "pageType": "web-api-interface",
    "summary": "The MIDIInputMap read-only interface of the Web MIDI API provides the set of MIDI input ports that are currently available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide/In_depth",
    "pageType": "guide",
    "summary": "When debugging or, possibly, when trying to decide upon the best approach to solving a problem around timing and scheduling of tasks and microtasks, there are things about how the JavaScript runtime operates under the hood that may be useful to understand."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLHeadElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLHeadElement interface contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormControlsCollection",
    "pageType": "web-api-interface",
    "summary": "The HTMLFormControlsCollection interface represents a collection of HTML form control elements, returned by the HTMLFormElement interface's elements property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionResult",
    "pageType": "web-api-interface",
    "summary": "The SpeechRecognitionResult interface of the Web Speech API represents a single recognition match, which may contain multiple SpeechRecognitionAlternative objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormControlsCollection/namedItem",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLFormControlsCollection.namedItem() method returns\nthe RadioNodeList or the Element in the collection whose\nname or id match the specified name, or null if\nno node matches."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionResult/isFinal",
    "pageType": "web-api-instance-property",
    "summary": "The isFinal read-only property of the\nSpeechRecognitionResult interface is a boolean value that states\nwhether this result is final (true) or not (false) — if so,\nthen this is the final time this result will be returned; if not, then this result is an\ninterim result, and may be updated later on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRJointPose",
    "pageType": "web-api-interface",
    "summary": "The XRJointPose interface is an XRPose with additional information about the size of the skeleton joint it represents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRJointPose/radius",
    "pageType": "web-api-instance-property",
    "summary": "The read-only radius property of the XRJointPose interface indicates the radius (distance from skin) for a joint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionResult/item",
    "pageType": "web-api-instance-method",
    "summary": "The item getter of the\nSpeechRecognitionResult interface is a standard getter that allows\nSpeechRecognitionAlternative objects within the result to be accessed via\narray syntax."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Accelerometer",
    "pageType": "web-api-interface",
    "summary": "The Accelerometer interface of the Sensor APIs provides on each reading the acceleration applied to the device along all three axes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionResult/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the\nSpeechRecognitionResult interface returns the length of the \"array\"\n— the number of SpeechRecognitionAlternative objects contained\nin the result (also referred to as \"n-best alternatives\".)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Accelerometer/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the Accelerometer interface returns a number specifying the acceleration of the device along its x-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Accelerometer/z",
    "pageType": "web-api-instance-property",
    "summary": "The z read-only property of the Accelerometer interface returns a number specifying the acceleration of the device along its z-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Accelerometer/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the Accelerometer interface returns a number specifying the acceleration of the device along its y-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Accelerometer/Accelerometer",
    "pageType": "web-api-constructor",
    "summary": "The Accelerometer() constructor creates a new Accelerometer object which returns the acceleration of the device along all three axes at the time it is read."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoderStream",
    "pageType": "web-api-interface",
    "summary": "The TextEncoderStream interface of the Encoding API converts a stream of strings into bytes in the UTF-8 encoding. It is the streaming equivalent of TextEncoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoderStream/encoding",
    "pageType": "web-api-instance-property",
    "summary": "The encoding read-only property of the TextEncoderStream interface returns a\nstring containing the name of the encoding algorithm used by the current TextEncoderStream object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/pageshow_event",
    "pageType": "web-api-event",
    "summary": "The pageshow event is sent to a Window when the browser displays the window's document due to navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoderStream/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable read-only property of the TextEncoderStream interface returns a ReadableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/statusbar",
    "pageType": "web-api-instance-property",
    "summary": "Returns the statusbar object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoderStream/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable read-only property of the TextEncoderStream interface returns a WritableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/documentPictureInPicture",
    "pageType": "web-api-instance-property",
    "summary": "The documentPictureInPicture read-only property of the\nWindow interface returns a reference to the DocumentPictureInPicture object for the current document context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoderStream/TextEncoderStream",
    "pageType": "web-api-constructor",
    "summary": "The TextEncoderStream() constructor creates a new TextEncoderStream object which is used to convert a stream of strings into bytes using UTF-8 encoding."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionResultList",
    "pageType": "web-api-interface",
    "summary": "The SpeechRecognitionResultList interface of the Web Speech API represents a list of SpeechRecognitionResult objects, or a single one if results are being captured in non-continuous mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/toolbar",
    "pageType": "web-api-instance-property",
    "summary": "Returns the toolbar object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionResultList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item getter of the\nSpeechRecognitionResultList interface is a standard getter — it allows\nSpeechRecognitionResult objects in the list to be accessed via array\nsyntax."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/pageswap_event",
    "pageType": "web-api-event",
    "summary": "The pageswap event is fired when you navigate across documents, when the previous document is about to unload."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionResultList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the\nSpeechRecognitionResultList interface returns the length of the\n\"array\" — the number of SpeechRecognitionResult objects in the\nlist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/gamepaddisconnected_event",
    "pageType": "web-api-event",
    "summary": "The gamepaddisconnected event is fired when the browser detects that a gamepad has been disconnected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicy/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the TrustedTypePolicy interface returns the name of the policy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicy",
    "pageType": "web-api-interface",
    "summary": "The TrustedTypePolicy interface of the Trusted Types API defines a group of functions which create TrustedType objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/name",
    "pageType": "web-api-instance-property",
    "summary": "The Window.name property\ngets/sets the name of the window's browsing context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicy/createScript",
    "pageType": "web-api-instance-method",
    "summary": "The createScript() method of the TrustedTypePolicy interface creates a TrustedScript object using a policy created by TrustedTypePolicyFactory.createPolicy()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/print",
    "pageType": "web-api-instance-method",
    "summary": "Opens the print dialog to print the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicy/createHTML",
    "pageType": "web-api-instance-method",
    "summary": "The createHTML() method of the TrustedTypePolicy interface creates a TrustedHTML object using a policy created by TrustedTypePolicyFactory.createPolicy()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin read-only property of the Window interface returns the origin of the global scope, serialized as a string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedTypePolicy/createScriptURL",
    "pageType": "web-api-instance-method",
    "summary": "The createScriptURL() method of the TrustedTypePolicy interface creates a TrustedScriptURL object using a policy created by TrustedTypePolicyFactory.createPolicy()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window",
    "pageType": "web-api-interface",
    "summary": "The Window interface represents a window containing a DOM document; the document property points to the DOM document loaded in that window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Shared_Storage_API",
    "pageType": "web-api-overview",
    "summary": "The Shared Storage API is a client-side storage mechanism that enables unpartitioned, cross-site data access while preserving privacy (i.e., without relying on tracking cookies)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMStringMap",
    "pageType": "web-api-interface",
    "summary": "The DOMStringMap interface is used for the HTMLElement.dataset attribute, to represent data for custom attributes added to elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/open",
    "pageType": "web-api-instance-method",
    "summary": "The open() method of the Window interface loads a specified resource into a new or existing browsing context (that is, a tab, a window, or an iframe) under a specified name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ProcessingInstruction",
    "pageType": "web-api-interface",
    "summary": "The ProcessingInstruction interface represents a processing instruction; that is, a Node which embeds an instruction targeting a specific application but that can be ignored by any other applications which don't recognize the instruction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/hashchange_event",
    "pageType": "web-api-event",
    "summary": "The hashchange event is fired when the fragment identifier of the URL has changed (the part of the URL beginning with and following the # symbol)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ProcessingInstruction/sheet",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sheet property of the ProcessingInstruction interface\ncontains the stylesheet associated to the ProcessingInstruction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/frameElement",
    "pageType": "web-api-instance-property",
    "summary": "The Window.frameElement property\nreturns the element (such as <iframe> or <object>)\nin which the window is embedded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ProcessingInstruction/target",
    "pageType": "web-api-instance-property",
    "summary": "The read-only target property of the ProcessingInstruction interface\nrepresent the application to which the ProcessingInstruction is targeted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/afterprint_event",
    "pageType": "web-api-event",
    "summary": "The afterprint event is fired after the associated document has started printing or the print preview has been closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSourceElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLSourceElement interface provides special properties (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating <source> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSourceElement/src",
    "pageType": "web-api-instance-property",
    "summary": "The src property of the HTMLSourceElement interface is a string indicating the URL of a media resource to use as the source for the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/getComputedStyle",
    "pageType": "web-api-instance-method",
    "summary": "The Window.getComputedStyle() method returns a live read-only CSSStyleProperties object containing the resolved values of all CSS properties of an element, after applying active stylesheets and resolving any computation those values may contain."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSourceElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the HTMLSourceElement interface is a string representing the MIME type of the media resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/launchQueue",
    "pageType": "web-api-instance-property",
    "summary": "The launchQueue read-only property of the Window interface provides access to the LaunchQueue class, which allows custom launch navigation handling to be implemented in a progressive web app (PWA), with the handling context signified by the launch_handler manifest field client_mode value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSourceElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the HTMLSourceElement interface is a non-negative number indicating the height of the image resource in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollsnapchanging_event",
    "pageType": "web-api-event",
    "summary": "The scrollsnapchanging event of the Window interface is fired on the window when the browser determines a new scroll snap target is pending, i.e., it will be selected when the current scroll gesture ends."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSourceElement/srcset",
    "pageType": "web-api-instance-property",
    "summary": "The srcset property of the HTMLSourceElement interface is a string containing a comma-separated list of candidate images."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSourceElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the HTMLSourceElement interface is a non-negative number indicating the width of the image resource in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/pagereveal_event",
    "pageType": "web-api-event",
    "summary": "The pagereveal event is fired when a document is first rendered, either when loading a fresh document from the network or activating a document (either from back/forward cache (bfcache) or prerender)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSourceElement/sizes",
    "pageType": "web-api-instance-property",
    "summary": "The sizes property of the HTMLSourceElement interface is a string representing a list of one or more sizes, representing sizes between breakpoints, to which the resource applies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/postMessage",
    "pageType": "web-api-instance-method",
    "summary": "The window.postMessage() method safely enables cross-origin communication between Window objects; e.g., between a page and a pop-up that it spawned, or between a page and an iframe embedded within it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSourceElement/media",
    "pageType": "web-api-instance-property",
    "summary": "The media property of the HTMLSourceElement interface is a string representing the intended destination medium for the resource. The value is a media query, which is a comma separated list of media-types, media-features, and logical operators."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/stop",
    "pageType": "web-api-instance-method",
    "summary": "The window.stop() stops further resource loading in the current\nbrowsing context, equivalent to the stop button in the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathNegate",
    "pageType": "web-api-interface",
    "summary": "The CSSMathNegate interface of the CSS Typed Object Model API negates the value passed into it. It inherits properties and methods from its parent CSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathNegate/value",
    "pageType": "web-api-instance-property",
    "summary": "The CSSMathNegate.value read-only property of the\nCSSMathNegate interface returns a CSSNumericValue object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/alert",
    "pageType": "web-api-instance-method",
    "summary": "window.alert() instructs the browser to display a dialog with an optional message, and to wait until the user dismisses the dialog."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathNegate/CSSMathNegate",
    "pageType": "web-api-constructor",
    "summary": "The CSSMathNegate() constructor creates a\nnew CSSMathNegate object which negates the value passed into it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/focus",
    "pageType": "web-api-instance-method",
    "summary": "Makes a request to bring the window to the front. It may fail due to user settings and the window isn't guaranteed to be frontmost before this method returns."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMError",
    "pageType": "web-api-interface",
    "summary": "The DOMError interface describes an error object that contains an error name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/history",
    "pageType": "web-api-instance-property",
    "summary": "The Window.history read-only property returns a reference to the History object, which provides an interface for manipulating the browser session history (pages visited in the tab or frame that the current page is loaded in)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCompilationInfo",
    "pageType": "web-api-interface",
    "summary": "The GPUCompilationInfo interface of the WebGPU API represents an array of GPUCompilationMessage objects generated by the GPU shader module compiler to help diagnose problems with shader code."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCompilationInfo/messages",
    "pageType": "web-api-instance-property",
    "summary": "The messages read-only property of the\nGPUCompilationInfo interface is an array of GPUCompilationMessage objects, each one containing the details of an individual shader compilation message. Messages can be informational, warnings, or errors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/screenY",
    "pageType": "web-api-instance-property",
    "summary": "The Window.screenY read-only property returns the vertical distance, in CSS pixels, of the top border of the user's browser viewport to the top edge of the screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/beforeunload_event",
    "pageType": "web-api-event",
    "summary": "The beforeunload event is fired when the current window, contained document, and associated resources are about to be unloaded. The document is still visible and the event is still cancelable at this point."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/copyBufferToBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The copyBufferToBuffer() method of the\nGPUCommandEncoder interface encodes a command that copies data from one GPUBuffer to another."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder",
    "pageType": "web-api-interface",
    "summary": "The GPUCommandEncoder interface of the WebGPU API represents an encoder that collects a sequence of GPU commands to be issued to the GPU."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/status",
    "pageType": "web-api-instance-property",
    "summary": "The status property of the\nWindow interface was originally intended to set the text in the status\nbar at the bottom of the browser window. However, the HTML standard now requires\nsetting window.status to have no effect on the text displayed in the\nstatus bar."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the\nGPUCommandEncoder interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/load_event",
    "pageType": "web-api-event",
    "summary": "The load event is fired when the whole page has loaded, including all dependent resources such as stylesheets, scripts (including async, deferred, and module scripts), iframes, and images, except those that are loaded lazily.\nThis is in contrast to DOMContentLoaded, which is fired as soon as the page DOM has been loaded, without waiting for resources to finish loading."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/message_event",
    "pageType": "web-api-event",
    "summary": "The message event is fired on a Window object when the window receives a message, for example from a call to Window.postMessage() from another browsing context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/copyBufferToTexture",
    "pageType": "web-api-instance-method",
    "summary": "The copyBufferToTexture() method of the\nGPUCommandEncoder interface encodes a command that copies data from a GPUBuffer to a GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/captureEvents",
    "pageType": "web-api-instance-method",
    "summary": "The Window.captureEvents() method does nothing. Its original behavior has been removed from the specification, but the method itself has been retained so as not to break code that calls it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/copyTextureToTexture",
    "pageType": "web-api-instance-method",
    "summary": "The copyTextureToTexture() method of the\nGPUCommandEncoder interface encodes a command that copies data from one GPUTexture to another."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/requestFileSystem",
    "pageType": "web-api-instance-method",
    "summary": "The non-standard Window method\nrequestFileSystem() method is a Google Chrome-specific\nmethod which lets a website or app gain access to a sandboxed file system for its own\nuse. The returned FileSystem is then available for use with the other file system APIs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/copyTextureToBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The copyTextureToBuffer() method of the\nGPUCommandEncoder interface encodes a command that copies data from a GPUTexture to a GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/unhandledrejection_event",
    "pageType": "web-api-event",
    "summary": "The unhandledrejection event is sent to the global scope of a script when a JavaScript Promise that has no rejection handler is rejected; typically, this is the window, but may also be a Worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/fullScreen",
    "pageType": "web-api-instance-property",
    "summary": "The fullScreen property of the Window\ninterface indicates whether the window is displayed in full screen mode or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass",
    "pageType": "web-api-instance-method",
    "summary": "The beginRenderPass() method of the\nGPUCommandEncoder interface starts encoding a render pass, returning a GPURenderPassEncoder that can be used to control rendering."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/moveTo",
    "pageType": "web-api-instance-method",
    "summary": "The moveTo() method of the Window\ninterface moves the current window to the specified coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/finish",
    "pageType": "web-api-instance-method",
    "summary": "The finish() method of the\nGPUCommandEncoder interface completes recording of the command sequence encoded on this GPUCommandEncoder, returning a corresponding GPUCommandBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/find",
    "pageType": "web-api-instance-method",
    "summary": "The Window.find() method finds a string in a window sequentially."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/resolveQuerySet",
    "pageType": "web-api-instance-method",
    "summary": "The resolveQuerySet() method of the\nGPUCommandEncoder interface encodes a command that resolves a GPUQuerySet, copying the results into a specified GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/blur",
    "pageType": "web-api-instance-method",
    "summary": "The Window.blur() method does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/beginComputePass",
    "pageType": "web-api-instance-method",
    "summary": "The beginComputePass() method of the\nGPUCommandEncoder interface starts encoding a compute pass, returning a GPUComputePassEncoder that can be used to control computation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/queueMicrotask",
    "pageType": "web-api-instance-method",
    "summary": "The queueMicrotask() method of the Window interface\nqueues a microtask to be executed at a safe time prior to control returning to the\nbrowser's event loop."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/writeTimestamp",
    "pageType": "web-api-instance-method",
    "summary": "The writeTimestamp() method of the\nGPUCommandEncoder interface encodes a command that writes a timestamp into a GPUQuerySet once the previous commands recorded into the same queued GPUCommandBuffer have been executed by the GPU."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/reportError",
    "pageType": "web-api-instance-method",
    "summary": "The reportError() method of the Window interface may be used to report errors to the console or event handlers of global scopes, emulating an uncaught JavaScript exception."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/popDebugGroup",
    "pageType": "web-api-instance-method",
    "summary": "The popDebugGroup() method of the\nGPUCommandEncoder interface ends a debug group, which is begun with a pushDebugGroup() call."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/outerWidth",
    "pageType": "web-api-instance-property",
    "summary": "Window.outerWidth read-only property returns the width of the outside of the browser window. It represents the width of the whole browser window including sidebar (if expanded), window chrome and window resizing borders/handles."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/insertDebugMarker",
    "pageType": "web-api-instance-method",
    "summary": "The insertDebugMarker() method of the\nGPUCommandEncoder interface marks a specific point in a series of encoded commands with a label."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/sharedStorage",
    "pageType": "web-api-instance-property",
    "summary": "The global read-only sharedStorage property returns the WindowSharedStorage object for the current origin. This is the main entry point for writing data to shared storage using the Shared Storage API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/clearBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The clearBuffer() method of the\nGPUCommandEncoder interface encodes a command that fills a region of a GPUBuffer with zeroes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/parent",
    "pageType": "web-api-instance-property",
    "summary": "The Window.parent property is a reference to the parent\nof the current window or subframe."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCommandEncoder/pushDebugGroup",
    "pageType": "web-api-instance-method",
    "summary": "The pushDebugGroup() method of the\nGPUCommandEncoder interface begins a debug group, which is marked with a specified label, and will contain all subsequent encoded commands up until a popDebugGroup() method is invoked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/vrdisplaypresentchange_event",
    "pageType": "web-api-event",
    "summary": "The vrdisplaypresentchange event of the WebVR API is fired when the presenting state of a VR display changes — i.e., goes from presenting to not presenting, or vice versa."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBIsochronousOutTransferPacket",
    "pageType": "web-api-interface",
    "summary": "The USBIsochronousOutTransferPacket interface of the WebUSB API is part of the response from a call to the isochronousTransferOut() method of the USBDevice interface. It represents the status of an individual packet from a request to transfer data from the USB host to the USB device over an isochronous endpoint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/gamepadconnected_event",
    "pageType": "web-api-event",
    "summary": "The gamepadconnected event is fired when the browser detects that a gamepad has been connected or the first time a button/axis of the gamepad is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationHistoryEntry",
    "pageType": "web-api-interface",
    "summary": "The NavigationHistoryEntry interface of the Navigation API represents a single navigation history entry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/sizeToContent",
    "pageType": "web-api-instance-method",
    "summary": "The Window.sizeToContent() method sizes the window\naccording to its content. In order for it to work, the DOM content should be loaded when\nthis function is called—for example, once the DOMContentLoaded event has\nbeen thrown."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/languagechange_event",
    "pageType": "web-api-event",
    "summary": "The languagechange event is fired at the global scope object when the user's preferred language changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationHistoryEntry/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the NavigationHistoryEntry interface returns the absolute URL of this history entry. If the entry corresponds to a different Document than the current one (like sameDocument property is false), and that Document was fetched with a Referrer-Policy header set to no-referrer or origin, the property returns null. If current document is not fully active, it returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollX",
    "pageType": "web-api-instance-property",
    "summary": "The read-only scrollX property of the Window interface returns the number of pixels by which the document is currently scrolled horizontally. This value is subpixel precise in modern browsers, meaning that it isn't necessarily a whole number. You can get the number of pixels the document is scrolled vertically from the scrollY property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationHistoryEntry/getState",
    "pageType": "web-api-instance-method",
    "summary": "The getState() method of the NavigationHistoryEntry interface returns a clone of the developer-supplied state associated with this history entry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/window",
    "pageType": "web-api-instance-property",
    "summary": "The window property of a Window object points to the window object itself."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationHistoryEntry/key",
    "pageType": "web-api-instance-property",
    "summary": "The key read-only property of the NavigationHistoryEntry interface returns the key of the history entry, or an empty string if current document is not fully active. This is a unique, UA-generated value that represents the history entry's slot in the entries list. It is used to navigate that particular slot via Navigation.traverseTo(). The key will be reused by other entries that replace the entry in the list (that is, if the NavigateEvent.navigationType is replace)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/moveBy",
    "pageType": "web-api-instance-method",
    "summary": "The moveBy() method of the Window\ninterface moves the current window by a specified amount."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationHistoryEntry/index",
    "pageType": "web-api-instance-property",
    "summary": "The index read-only property of the NavigationHistoryEntry interface returns the index of the history entry in the history entries list (that is, the list returned by Navigation.entries()), or -1 if the entry does not appear in the list or if current document is not fully active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/cookieStore",
    "pageType": "web-api-instance-property",
    "summary": "The cookieStore read-only property of the Window interface returns a reference to the CookieStore object for the current document context. This is an entry point for the Cookie Store API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationHistoryEntry/dispose_event",
    "pageType": "web-api-event",
    "summary": "The dispose event of the NavigationHistoryEntry interface is fired when the entry is no longer part of the history entry list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/navigation",
    "pageType": "web-api-instance-property",
    "summary": "The navigation read-only property of the Window interface returns the current window's associated Navigation object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationHistoryEntry/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the NavigationHistoryEntry interface returns the id of the history entry, or an empty string if current document is not fully active. This is a unique, UA-generated value that always represents a specific history entry, useful to correlate it with an external resource such as a storage cache."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/setResizable",
    "pageType": "web-api-instance-method",
    "summary": "This method does nothing; it is a no-op. It is solely kept for compatibility with Netscape 4.x."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationHistoryEntry/sameDocument",
    "pageType": "web-api-instance-property",
    "summary": "The sameDocument read-only property of the NavigationHistoryEntry interface returns true if this history entry is for the same document as the current Document value and current document is fully active, or false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/confirm",
    "pageType": "web-api-instance-method",
    "summary": "window.confirm() instructs the browser to display a dialog with an optional message, and to wait until the user either confirms or cancels the dialog."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange",
    "pageType": "web-api-interface",
    "summary": "The IDBKeyRange interface of the IndexedDB API represents a continuous interval over some data type that is used for keys. Records can be retrieved from IDBObjectStore and IDBIndex objects using keys or a range of keys. You can limit the range using lower and upper bounds. For example, you can iterate over all values of a key in the value range A–Z."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/orientationchange_event",
    "pageType": "web-api-event",
    "summary": "The orientationchange event is fired when the orientation of the device has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange/lowerOpen",
    "pageType": "web-api-instance-property",
    "summary": "The lowerOpen read-only property of the\nIDBKeyRange interface returns a boolean indicating whether the\nlower-bound value is included in the key range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/beforeinstallprompt_event",
    "pageType": "web-api-event",
    "summary": "The beforeinstallprompt event fires when the browser has detected that a website can be installed as a Progressive Web App."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange/lowerBound_static",
    "pageType": "web-api-static-method",
    "summary": "The lowerBound() static method of the\nIDBKeyRange interface creates a new key range with only a lower bound.\nBy default, it includes the lower endpoint value and is closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/unload_event",
    "pageType": "web-api-event",
    "summary": "The unload event is fired when the document or a child resource is being unloaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange/only_static",
    "pageType": "web-api-static-method",
    "summary": "The only() static method of the IDBKeyRange\ninterface creates a new key range containing a single value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/screenTop",
    "pageType": "web-api-instance-property",
    "summary": "The Window.screenTop read-only property returns the\nvertical distance, in CSS pixels, from the top border of the user's browser viewport to\nthe top side of the screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange/bound_static",
    "pageType": "web-api-static-method",
    "summary": "The bound() static method of the IDBKeyRange\ninterface creates a new key range with the specified upper and lower bounds. The\nbounds can be open (that is, the bounds exclude the endpoint values) or closed (that\nis, the bounds include the endpoint values). By default, the bounds are closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/caches",
    "pageType": "web-api-instance-property",
    "summary": "The caches read-only property of the Window interface returns the CacheStorage object associated with the current context.\nThis object enables functionality such as storing assets for offline use, and generating custom responses to requests."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange/upper",
    "pageType": "web-api-instance-property",
    "summary": "The upper read-only property of the\nIDBKeyRange interface returns the upper bound of the key range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/visualViewport",
    "pageType": "web-api-instance-property",
    "summary": "The visualViewport read-only property of the Window interface returns a VisualViewport object representing the visual viewport for a given window, or null if current document is not fully active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange/includes",
    "pageType": "web-api-instance-method",
    "summary": "The includes() method of the IDBKeyRange\ninterface returns a boolean indicating whether a specified key is inside the key\nrange."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/online_event",
    "pageType": "web-api-event",
    "summary": "The online event of the Window interface is fired when the browser has gained access to the network and the value of Navigator.onLine switches to true."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange/lower",
    "pageType": "web-api-instance-property",
    "summary": "The lower read-only property of the\nIDBKeyRange interface returns the lower bound of the key range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/rejectionhandled_event",
    "pageType": "web-api-event",
    "summary": "The rejectionhandled event is sent to the script's global scope (usually window but also Worker) whenever a rejected JavaScript Promise is handled late, i.e., when a handler is attached to the promise after its rejection had caused an unhandledrejection event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange/upperBound_static",
    "pageType": "web-api-static-method",
    "summary": "The upperBound() static method of the\nIDBKeyRange interface creates a new upper-bound key range. By default,\nit includes the upper endpoint value and is closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/resizeTo",
    "pageType": "web-api-instance-method",
    "summary": "The Window.resizeTo() method dynamically resizes the\nwindow."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollMaxY",
    "pageType": "web-api-instance-property",
    "summary": "The Window.scrollMaxY read-only property returns the\nmaximum number of pixels that the document can be scrolled vertically."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBKeyRange/upperOpen",
    "pageType": "web-api-instance-property",
    "summary": "The upperOpen read-only property of the\nIDBKeyRange interface returns a boolean indicating whether the\nupper-bound value is included in the key range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/focus_event",
    "pageType": "web-api-event",
    "summary": "The focus event fires when an element has received focus."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFontFaceRule",
    "pageType": "web-api-interface",
    "summary": "The CSSFontFaceRule interface represents an @font-face at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollsnapchange_event",
    "pageType": "web-api-event",
    "summary": "The scrollsnapchange event of the Window interface is fired on the window at the end of a scrolling operation when a new scroll snap target is selected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFontFaceRule/style",
    "pageType": "web-api-instance-property",
    "summary": "The read-only style property of the CSSFontFaceRule interface returns the style information from the @font-face at-rule. This will be in the form of a CSSStyleDeclaration object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/screen",
    "pageType": "web-api-instance-property",
    "summary": "The Window property screen returns a\nreference to the screen object associated with the window. The screen\nobject, implementing the Screen interface, is a special object for\ninspecting properties of the screen on which the current window is being rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/locationbar",
    "pageType": "web-api-instance-property",
    "summary": "Returns the locationbar object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShiftAttribution",
    "pageType": "web-api-interface",
    "summary": "The LayoutShiftAttribution interface provides debugging information about elements which have shifted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/cancelIdleCallback",
    "pageType": "web-api-instance-method",
    "summary": "The window.cancelIdleCallback() method cancels a callback\npreviously scheduled with window.requestIdleCallback()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShiftAttribution/node",
    "pageType": "web-api-instance-property",
    "summary": "The node read-only property of the LayoutShiftAttribution interface returns a Node representing the object that has shifted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/opener",
    "pageType": "web-api-instance-property",
    "summary": "The Window interface's\nopener property returns a reference to the window that\nopened the window, either with open(), or by navigating\na link with a target attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShiftAttribution/currentRect",
    "pageType": "web-api-instance-property",
    "summary": "The currentRect read-only property of the LayoutShiftAttribution interface returns a DOMRectReadOnly object representing the position of the element after the shift."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/btoa",
    "pageType": "web-api-instance-method",
    "summary": "The btoa() method of the Window interface creates a\nBase64-encoded ASCII string from a binary string (i.e., a\nstring in which each character in the string is treated as a byte\nof binary data)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShiftAttribution/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the LayoutShiftAttribution interface is a serializer that returns a JSON representation of the LayoutShiftAttribution object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/screenLeft",
    "pageType": "web-api-instance-property",
    "summary": "The Window.screenLeft read-only property returns the\nhorizontal distance, in CSS pixels, from the left border of the user's browser viewport\nto the left side of the screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/matchMedia",
    "pageType": "web-api-instance-method",
    "summary": "The Window interface's matchMedia() method\nreturns a new MediaQueryList object that can then be used to determine if\nthe document matches the media query string,\nas well as to monitor the document to detect when it matches (or stops matching) that\nmedia query."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShiftAttribution/previousRect",
    "pageType": "web-api-instance-property",
    "summary": "The previousRect read-only property of the LayoutShiftAttribution interface returns a DOMRectReadOnly object representing the position of the element before the shift."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/clearTimeout",
    "pageType": "web-api-instance-method",
    "summary": "The clearTimeout() method of the Window interface cancels a timeout previously established by calling Window.setTimeout()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/isSecureContext",
    "pageType": "web-api-instance-property",
    "summary": "The isSecureContext read-only property of the Window interface returns a boolean indicating whether the current context is secure (true) or not (false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/drawIndirect",
    "pageType": "web-api-instance-method",
    "summary": "The drawIndirect() method of the\nGPURenderPassEncoder interface draws primitives using parameters read from a GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/navigator",
    "pageType": "web-api-instance-property",
    "summary": "The Window.navigator read-only property returns a\nreference to the Navigator object, which has methods and properties about\nthe application running the script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder",
    "pageType": "web-api-interface",
    "summary": "The GPURenderPassEncoder interface of the WebGPU API encodes commands related to controlling the vertex and fragment shader stages, as issued by a GPURenderPipeline. It forms part of the overall encoding activity of a GPUCommandEncoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/setTimeout",
    "pageType": "web-api-instance-method",
    "summary": "The setTimeout() method of the Window interface sets a timer which executes a function or specified piece of code once the timer expires."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/beginOcclusionQuery",
    "pageType": "web-api-instance-method",
    "summary": "The beginOcclusionQuery() method of the\nGPURenderPassEncoder interface begins an occlusion query at the specified index of the relevant GPUQuerySet (provided as the value of the occlusionQuerySet descriptor property when invoking GPUCommandEncoder.beginRenderPass() to run the render pass)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/messageerror_event",
    "pageType": "web-api-event",
    "summary": "The messageerror event is fired on a Window object when it receives a message that can't be deserialized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/showOpenFilePicker",
    "pageType": "web-api-instance-method",
    "summary": "The showOpenFilePicker() method of the\nWindow interface shows a file picker that allows a user to select a file\nor multiple files and returns a handle for the file(s)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/drawIndexed",
    "pageType": "web-api-instance-method",
    "summary": "The drawIndexed() method of the\nGPURenderPassEncoder interface draws indexed primitives based on the vertex and index buffers provided by setVertexBuffer() and setIndexBuffer()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/getDefaultComputedStyle",
    "pageType": "web-api-instance-method",
    "summary": "The getDefaultComputedStyle() method gives the default computed values of all the CSS\nproperties of an element, ignoring author styling. That is, only user-agent and user\nstyles are taken into account."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/setBlendConstant",
    "pageType": "web-api-instance-method",
    "summary": "The setBlendConstant() method of the\nGPURenderPassEncoder interface sets the constant blend color and alpha values used with \"constant\" and \"one-minus-constant\" blend factors (as set in the descriptor of the GPUDevice.createRenderPipeline() method, in the blend property)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/self",
    "pageType": "web-api-instance-property",
    "summary": "The Window.self read-only property returns the window itself, as a WindowProxy. It can be used with dot notation on a window object (that is, window.self) or standalone (self). The advantage of the standalone notation is that a similar notation exists for non-window contexts, such as in Web Workers. By using self, you can refer to the global scope in a way that will work not only in a window context (self will resolve to window.self) but also in a worker context (self will then resolve to WorkerGlobalScope.self)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/draw",
    "pageType": "web-api-instance-method",
    "summary": "The draw() method of the\nGPURenderPassEncoder interface draws primitives based on the vertex buffers provided by setVertexBuffer()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/screenX",
    "pageType": "web-api-instance-property",
    "summary": "The Window.screenX read-only property returns the\nhorizontal distance, in CSS pixels, of the left border of the user's browser viewport to\nthe left side of the screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the\nGPURenderPassEncoder interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/vrdisplayactivate_event",
    "pageType": "web-api-event",
    "summary": "The vrdisplayactivate event of the WebVR API is fired when a VR display is able to be presented to, for example if an HMD has been moved to bring it out of standby, or woken up by being put on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/setViewport",
    "pageType": "web-api-instance-method",
    "summary": "The setViewport() method of the\nGPURenderPassEncoder interface sets the viewport used during the rasterization stage to linearly map from normalized device coordinates to viewport coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/vrdisplaydeactivate_event",
    "pageType": "web-api-event",
    "summary": "The vrdisplaydeactivate event of the WebVR API is fired when a VR display can no longer be presented to, for example if an HMD has gone into standby or sleep mode due to a period of inactivity."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/length",
    "pageType": "web-api-instance-property",
    "summary": "Returns the number of frames (either <frame> or\n<iframe> elements) in the window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/end",
    "pageType": "web-api-instance-method",
    "summary": "The end() method of the\nGPURenderPassEncoder interface completes recording of the current render pass command sequence."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/innerHeight",
    "pageType": "web-api-instance-property",
    "summary": "The read-only innerHeight property of the\nWindow interface returns the interior height of the window in pixels,\nincluding the height of the horizontal scroll bar, if present."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/drawIndexedIndirect",
    "pageType": "web-api-instance-method",
    "summary": "The drawIndexedIndirect() method of the\nGPURenderPassEncoder interface draws indexed primitives using parameters read from a GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/appinstalled_event",
    "pageType": "web-api-event",
    "summary": "The appinstalled event of the Web Manifest API is fired when the browser has successfully installed a page as an application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/cancelAnimationFrame",
    "pageType": "web-api-instance-method",
    "summary": "The window.cancelAnimationFrame() method cancels an\nanimation frame request previously scheduled through a call to\nwindow.requestAnimationFrame()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/executeBundles",
    "pageType": "web-api-instance-method",
    "summary": "The executeBundles() method of the\nGPURenderPassEncoder interface executes commands previously recorded into the referenced GPURenderBundles, as part of this render pass."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/setInterval",
    "pageType": "web-api-instance-method",
    "summary": "The setInterval() method of the Window interface repeatedly calls a function or executes a code snippet, with a fixed time delay between each call."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/endOcclusionQuery",
    "pageType": "web-api-instance-method",
    "summary": "The endOcclusionQuery() method of the\nGPURenderPassEncoder interface ends an active occlusion query previously started with beginOcclusionQuery()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/location",
    "pageType": "web-api-instance-property",
    "summary": "The Window.location read-only property returns a Location object with information about the current location of the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/setVertexBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The setVertexBuffer() method of the\nGPURenderPassEncoder interface sets or unsets the current GPUBuffer for the given slot that will provide vertex data for subsequent drawing commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/vrdisplaydisconnect_event",
    "pageType": "web-api-event",
    "summary": "The vrdisplaydisconnect event of the WebVR API is fired when a compatible VR display is disconnected from the computer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/top",
    "pageType": "web-api-instance-property",
    "summary": "Returns a reference to the topmost window in the window hierarchy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/setIndexBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The setIndexBuffer() method of the\nGPURenderPassEncoder interface sets the current GPUBuffer that will provide index data for subsequent drawing commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/fetch",
    "pageType": "web-api-instance-method",
    "summary": "The fetch() method of the Window interface starts the process of fetching a resource from the network, returning a promise that is fulfilled once the response is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/popDebugGroup",
    "pageType": "web-api-instance-method",
    "summary": "The popDebugGroup() method of the\nGPURenderPassEncoder interface ends a render pass debug group, which is begun with a pushDebugGroup() call."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/close",
    "pageType": "web-api-instance-method",
    "summary": "The Window.close() method closes the current window, or\nthe window on which it was called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/setScissorRect",
    "pageType": "web-api-instance-method",
    "summary": "The setScissorRect() method of the\nGPURenderPassEncoder interface sets the scissor rectangle used during the rasterization stage. After transformation into viewport coordinates any fragments that fall outside the scissor rectangle will be discarded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/document",
    "pageType": "web-api-instance-property",
    "summary": "window.document returns a reference to the document contained in the window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/insertDebugMarker",
    "pageType": "web-api-instance-method",
    "summary": "The insertDebugMarker() method of the\nGPURenderPassEncoder interface marks a specific point in a series of encoded render pass commands with a label."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/prompt",
    "pageType": "web-api-instance-method",
    "summary": "window.prompt() instructs the browser to display a dialog with an optional message prompting the user to input some text, and to wait until the user either submits the text or cancels the dialog."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/fence",
    "pageType": "web-api-instance-property",
    "summary": "The fence read-only property of the Window interface returns a Fence object instance for the current document context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/setStencilReference",
    "pageType": "web-api-instance-method",
    "summary": "The setStencilReference() method of the\nGPURenderPassEncoder interface sets the stencil reference value using during stencil tests with the \"replace\" stencil operation (as set in the descriptor of the GPUDevice.createRenderPipeline() method, in the properties defining the various stencil operations)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/createImageBitmap",
    "pageType": "web-api-instance-method",
    "summary": "The createImageBitmap() method of the Window interface creates a bitmap from a given source, optionally cropped to contain only a portion of that source.\nIt accepts a variety of different image sources, and returns a Promise which resolves to an ImageBitmap."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/setPipeline",
    "pageType": "web-api-instance-method",
    "summary": "The setPipeline() method of the\nGPURenderPassEncoder interface sets the GPURenderPipeline to use for subsequent render pass commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/viewport",
    "pageType": "web-api-instance-property",
    "summary": "The viewport read-only property of the Window interface returns a Viewport object instance, which provides information about the current state of the device's viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/setBindGroup",
    "pageType": "web-api-instance-method",
    "summary": "The setBindGroup() method of the\nGPURenderPassEncoder interface sets the GPUBindGroup to use for subsequent render commands, for a given index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/deviceorientation_event",
    "pageType": "web-api-event",
    "summary": "The deviceorientation event is fired when fresh data is available from an orientation sensor about the current orientation of the device as compared to the Earth coordinate frame. This data is gathered from a magnetometer inside the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPURenderPassEncoder/pushDebugGroup",
    "pageType": "web-api-instance-method",
    "summary": "The pushDebugGroup() method of the\nGPURenderPassEncoder interface begins a render pass debug group, which is marked with a specified label, and will contain all subsequent encoded commands up until a popDebugGroup() method is invoked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scroll",
    "pageType": "web-api-instance-method",
    "summary": "The Window.scroll() method scrolls the window to a\nparticular place in the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/setImmediate",
    "pageType": "web-api-instance-method",
    "summary": "This method is used to break up long running operations and run a callback function immediately after the browser has completed other operations such as events and display updates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformancePaintTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformancePaintTiming interface provides timing information about \"paint\" (also called \"render\") operations during web page construction. \"Paint\" refers to conversion of the render tree to on-screen pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/orientation",
    "pageType": "web-api-instance-property",
    "summary": "Returns the orientation in degrees (in 90-degree increments) of the viewport relative to the device's natural orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpTransceiver",
    "pageType": "web-api-interface",
    "summary": "The WebRTC interface RTCRtpTransceiver describes a permanent pairing of an RTCRtpSender and an RTCRtpReceiver, along with some shared state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/trustedTypes",
    "pageType": "web-api-instance-property",
    "summary": "The trustedTypes read-only property of the Window interface returns the TrustedTypePolicyFactory object associated with the global object, providing the entry point for using the Trusted Types API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/structuredClone",
    "pageType": "web-api-instance-method",
    "summary": "The structuredClone() method of the Window interface creates a deep clone of a given value using the structured clone algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpTransceiver/setCodecPreferences",
    "pageType": "web-api-instance-method",
    "summary": "The setCodecPreferences() method of the RTCRtpTransceiver interface is used to set the codecs that the transceiver allows for decoding received data, in order of decreasing preference."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/queryLocalFonts",
    "pageType": "web-api-instance-method",
    "summary": "The window.queryLocalFonts() method returns a Promise that fulfills with an array of FontData objects representing the font faces available locally."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpTransceiver/stop",
    "pageType": "web-api-instance-method",
    "summary": "The stop() method in the RTCRtpTransceiver interface permanently stops the transceiver by stopping both the associated RTCRtpSender and\nRTCRtpReceiver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/getSelection",
    "pageType": "web-api-instance-method",
    "summary": "The getSelection() method of the Window interface returns the Selection object associated with the window's document, representing the range of text selected by the user or the current position of the caret."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpTransceiver/stopped",
    "pageType": "web-api-instance-property",
    "summary": "The read-only stopped property on the RTCRtpTransceiver interface indicates whether or not the transceiver's associated sender and receiver have both been stopped."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/blur_event",
    "pageType": "web-api-event",
    "summary": "The blur event fires when an element has lost focus."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpTransceiver/currentDirection",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCRtpTransceiver property currentDirection is a string which indicates the current negotiated directionality of the transceiver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/devicePixelRatio",
    "pageType": "web-api-instance-property",
    "summary": "The devicePixelRatio of Window interface returns the ratio of the resolution in physical pixels to the resolution in CSS pixels for the current display device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpTransceiver/receiver",
    "pageType": "web-api-instance-property",
    "summary": "The read-only receiver property\nof WebRTC's RTCRtpTransceiver interface indicates the\nRTCRtpReceiver responsible for receiving and decoding incoming media\ndata for the transceiver's stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/showSaveFilePicker",
    "pageType": "web-api-instance-method",
    "summary": "The showSaveFilePicker() method of the\nWindow interface shows a file picker that allows a user to save a file.\nEither by selecting an existing file, or entering a name for a new file."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpTransceiver/sender",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sender property\nof WebRTC's RTCRtpTransceiver interface indicates the\nRTCRtpSender responsible for encoding and sending outgoing media data\nfor the transceiver's stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/requestIdleCallback",
    "pageType": "web-api-instance-method",
    "summary": "The window.requestIdleCallback() method queues a function\nto be called during a browser's idle periods. This enables developers to perform\nbackground and low priority work on the main thread, without impacting\nlatency-critical events such as animation and input response. Functions are generally\ncalled in first-in-first-out order; however, callbacks which have a timeout\nspecified may be called out-of-order if necessary in order to run them before the\ntimeout elapses."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/mozInnerScreenY",
    "pageType": "web-api-instance-property",
    "summary": "The mozInnerScreenY property of the Window interface returns the Y coordinate of the top-left corner of the window's viewport, in screen\ncoordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpTransceiver/direction",
    "pageType": "web-api-instance-property",
    "summary": "The RTCRtpTransceiver property direction is a string that indicates the transceiver's preferred directionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/personalbar",
    "pageType": "web-api-instance-property",
    "summary": "Returns the personalbar object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpTransceiver/mid",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCRtpTransceiver interface's\nmid property specifies the negotiated media ID\n(mid) which the local and remote peers have agreed upon to uniquely\nidentify the stream's pairing of sender and receiver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollBy",
    "pageType": "web-api-instance-method",
    "summary": "The Window.scrollBy() method scrolls the document in the\nwindow by the given amount."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframeRule",
    "pageType": "web-api-interface",
    "summary": "The CSSKeyframeRule interface describes an object representing a set of styles for a given keyframe. It corresponds to the contents of a single keyframe of a @keyframes at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollY",
    "pageType": "web-api-instance-property",
    "summary": "The read-only scrollY property of the Window interface returns the number of pixels by which the document is currently scrolled vertically. This value is subpixel precise in modern browsers, meaning that it isn't necessarily a whole number. You can get the number of pixels the document is scrolled horizontally from the scrollX property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/fetchLater",
    "pageType": "web-api-instance-method",
    "summary": "The fetchLater() method of the Window interface creates a deferred fetch."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframeRule/style",
    "pageType": "web-api-instance-property",
    "summary": "The read-only CSSKeyframeRule.style property is the CSSStyleDeclaration interface for the declaration block of the CSSKeyframeRule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/webkitConvertPointFromNodeToPage",
    "pageType": "web-api-instance-method",
    "summary": "Given a WebKitPoint specified in a particular DOM Node's coordinate system, the Window method webkitConvertPointFromNodeToPage() returns a Point which specifies the same position in the page's coordinate system. This method is non-standard and should not be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframeRule/keyText",
    "pageType": "web-api-instance-property",
    "summary": "The keyText property of the CSSKeyframeRule interface represents the keyframe selector as a comma-separated list of percentage values. The from and to keywords map to 0% and 100%, respectively."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scheduler",
    "pageType": "web-api-instance-property",
    "summary": "The scheduler read-only property of the Window interface is the entry point for using the Prioritized Task Scheduling API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorageWorklet",
    "pageType": "web-api-interface",
    "summary": "The SharedStorageWorklet interface of the Shared Storage API represents the shared storage worklet for the current origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollMaxX",
    "pageType": "web-api-instance-property",
    "summary": "The Window.scrollMaxX read-only property returns the\nmaximum number of pixels that the document can be scrolled horizontally."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/crypto",
    "pageType": "web-api-instance-property",
    "summary": "The crypto read-only property of the Window interface returns the Crypto object for this window's scope. This object gives web pages access to certain cryptographic related services."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame",
    "pageType": "web-api-interface",
    "summary": "The VideoFrame interface of the Web Codecs API represents a frame of a video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/performance",
    "pageType": "web-api-instance-property",
    "summary": "The performance property of the Window interface returns a Performance object, which can be used to gather performance information about code running in the window's scope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/codedRect",
    "pageType": "web-api-instance-property",
    "summary": "The codedRect property of the VideoFrame interface returns a DOMRectReadOnly with the width and height matching VideoFrame.codedWidth and VideoFrame.codedHeight."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/speechSynthesis",
    "pageType": "web-api-instance-property",
    "summary": "The speechSynthesis read-only property of the Window object returns a SpeechSynthesis object, which is the entry point into using Web Speech API speech synthesis functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the VideoFrame interface returns an integer indicating the timestamp of the video in microseconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/sessionStorage",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sessionStorage property accesses a session Storage object for the current origin. sessionStorage is similar to localStorage; the difference is that while localStorage is partitioned by origin only, sessionStorage is partitioned by both origin and browser tabs (top-level browsing contexts). The data in sessionStorage is only kept for the duration of the page session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/getScreenDetails",
    "pageType": "web-api-instance-method",
    "summary": "The getScreenDetails() method of the\nWindow interface returns a Promise that fulfills with a ScreenDetails object instance representing the details of all the screens available to the user's device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/format",
    "pageType": "web-api-instance-property",
    "summary": "The format property of the VideoFrame interface returns the pixel format of the VideoFrame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/outerHeight",
    "pageType": "web-api-instance-property",
    "summary": "The Window.outerHeight read-only property returns the height in pixels of the whole browser window, including any sidebar, window chrome, and window-resizing borders/handles."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/rotation",
    "pageType": "web-api-instance-property",
    "summary": "The rotation property of the VideoFrame interface returns the rotation of the video frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/requestAnimationFrame",
    "pageType": "web-api-instance-method",
    "summary": "The window.requestAnimationFrame() method tells the\nbrowser you wish to perform an animation. It requests the browser to call a\nuser-supplied callback function before the next repaint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/clone",
    "pageType": "web-api-instance-method",
    "summary": "The clone() method of the VideoFrame interface creates a new VideoFrame object referencing the same media resource as the original."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/resizeBy",
    "pageType": "web-api-instance-method",
    "summary": "The Window.resizeBy() method resizes the current window\nby a specified amount."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/colorSpace",
    "pageType": "web-api-instance-property",
    "summary": "The colorSpace property of the VideoFrame interface returns a VideoColorSpace object representing the color space of the video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/devicemotion_event",
    "pageType": "web-api-event",
    "summary": "The devicemotion event is fired at a regular interval and indicates the acceleration rate of the device with/without the contribution of the gravity force at that time. It also provides information about the rate of rotation, if available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the VideoFrame interface clears all states and releases the reference to the media resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/originAgentCluster",
    "pageType": "web-api-instance-property",
    "summary": "The originAgentCluster read-only property of the Window interface returns true if this window belongs to an origin-keyed agent cluster: this means that the operating system has provided dedicated resources (for example an operating system process) to this window's origin that are not shared with windows from other origins."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/duration",
    "pageType": "web-api-instance-property",
    "summary": "The duration property of the VideoFrame interface returns an integer indicating the duration of the video in microseconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/offline_event",
    "pageType": "web-api-event",
    "summary": "The offline event of the Window interface is fired when the browser has lost access to the network and the value of Navigator.onLine switches to false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/event",
    "pageType": "web-api-instance-property",
    "summary": "The read-only Window property event returns the Event which is currently being handled by the site's code. Outside the context of an event handler, the value is always undefined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/displayWidth",
    "pageType": "web-api-instance-property",
    "summary": "The displayWidth property of the VideoFrame interface returns the width of the VideoFrame after applying aspect ratio adjustments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/pagehide_event",
    "pageType": "web-api-event",
    "summary": "The pagehide event is sent to a Window when the browser hides the current page in the process of presenting a different page from the session's history."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/flip",
    "pageType": "web-api-instance-property",
    "summary": "The flip property of the VideoFrame interface returns a boolean that indicates whether the VideoFrame is horizontally mirrored."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/innerWidth",
    "pageType": "web-api-instance-property",
    "summary": "The read-only Window property innerWidth returns the interior width of the window in pixels (that is, the width of the window's layout viewport). That includes the width of the vertical scroll bar, if one is present."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/allocationSize",
    "pageType": "web-api-instance-method",
    "summary": "The allocationSize() method of the VideoFrame interface returns the number of bytes required to hold the video as filtered by options passed into the method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/localStorage",
    "pageType": "web-api-instance-property",
    "summary": "The localStorage read-only property of the window interface allows you to access a Storage object for the Document's origin; the stored data is saved across browser sessions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollByLines",
    "pageType": "web-api-instance-method",
    "summary": "The Window.scrollByLines() method scrolls the document by\nthe specified number of lines."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/codedWidth",
    "pageType": "web-api-instance-property",
    "summary": "The codedWidth property of the VideoFrame interface returns the width of the VideoFrame in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/popstate_event",
    "pageType": "web-api-event",
    "summary": "The popstate event of the Window interface is fired when the active history entry changes while the user navigates the session history. It changes the current history entry to that of the last page the user visited or, if history.pushState() has been used to add a history entry to the history stack, that history entry is used instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/displayHeight",
    "pageType": "web-api-instance-property",
    "summary": "The displayHeight property of the VideoFrame interface returns the height of the VideoFrame after applying aspect ratio adjustments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/customElements",
    "pageType": "web-api-instance-property",
    "summary": "The customElements read-only property of the Window interface returns a reference to the CustomElementRegistry object, which can be used to register new custom elements and get information about previously registered custom elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/codedHeight",
    "pageType": "web-api-instance-property",
    "summary": "The codedHeight property of the VideoFrame interface returns the height of the VideoFrame in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/error_event",
    "pageType": "web-api-event",
    "summary": "The error event is fired on a Window object when a resource failed to load or couldn't be used — for example if a script has an execution error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/resize_event",
    "pageType": "web-api-event",
    "summary": "The resize event fires when the document view (window) has been resized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/VideoFrame",
    "pageType": "web-api-constructor",
    "summary": "The VideoFrame() constructor creates a new VideoFrame object representing a frame of a video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/crossOriginIsolated",
    "pageType": "web-api-instance-property",
    "summary": "The crossOriginIsolated read-only property of the Window interface returns a boolean value that indicates whether the document is cross-origin isolated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/copyTo",
    "pageType": "web-api-instance-method",
    "summary": "The copyTo() method of the VideoFrame interface copies the contents of the VideoFrame to an ArrayBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollTo",
    "pageType": "web-api-instance-method",
    "summary": "Window.scrollTo() scrolls to a particular set of\ncoordinates in the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/menubar",
    "pageType": "web-api-instance-property",
    "summary": "Returns the menubar object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoFrame/visibleRect",
    "pageType": "web-api-instance-property",
    "summary": "The visibleRect property of the VideoFrame interface returns a DOMRectReadOnly describing the visible rectangle of pixels for this VideoFrame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/webkitConvertPointFromPageToNode",
    "pageType": "web-api-instance-method",
    "summary": "Given a WebKitPoint specified in the page's coordinate system, the\nWindow method webkitConvertPointFromPageToNode()\nreturns a Point object specifying the same location in the coordinate\nsystem of the specified DOM Node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnectionAvailableEvent",
    "pageType": "web-api-interface",
    "summary": "The PresentationConnectionAvailableEvent interface of the Presentation API is fired on a PresentationRequest when a connection associated with the object is created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/frames",
    "pageType": "web-api-instance-property",
    "summary": "Returns the window itself, which is an array-like object, listing the direct sub-frames\nof the current window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnectionAvailableEvent/connection",
    "pageType": "web-api-instance-property",
    "summary": "When an incoming connection is created, a receiving user agent fires a trusted event, named connectionavailable, on a PresentationReceiver. The trusted event is fired at the presentation controller's monitor, using the PresentationConnectionAvailableEvent interface, with the connection attribute set to the PresentationConnection object that was created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/showDirectoryPicker",
    "pageType": "web-api-instance-method",
    "summary": "The showDirectoryPicker() method of the\nWindow interface displays a directory picker which allows the user to\nselect a directory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/storage_event",
    "pageType": "web-api-event",
    "summary": "The storage event of the Window interface fires when another document that shares the same storage area (either localStorage or sessionStorage) as the current window updates that storage area. The event is not fired on the window that made the change."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnectionAvailableEvent/PresentationConnectionAvailableEvent",
    "pageType": "web-api-constructor",
    "summary": "The PresentationConnectionAvailableEvent() constructor creates a new PresentationConnectionAvailableEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollByPages",
    "pageType": "web-api-instance-method",
    "summary": "The Window.scrollByPages() method scrolls the current\ndocument by the specified number of pages."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationActivation",
    "pageType": "web-api-interface",
    "summary": "The NavigationActivation interface of the Navigation API represents a recent cross-document navigation. It contains the navigation type and outgoing and inbound document history entries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/indexedDB",
    "pageType": "web-api-instance-property",
    "summary": "The indexedDB read-only property of the Window interface provides a mechanism for applications to\nasynchronously access the capabilities of indexed databases."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationActivation/entry",
    "pageType": "web-api-instance-property",
    "summary": "The entry read-only property of the NavigationActivation interface contains a NavigationHistoryEntry object representing the history entry for the inbound (\"to\") document in the navigation. This is equivalent to the Navigation.currentEntry property at the moment the inbound document was activated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/beforeprint_event",
    "pageType": "web-api-event",
    "summary": "The beforeprint event is fired when the associated document is about to be printed or previewed for printing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationActivation/from",
    "pageType": "web-api-instance-property",
    "summary": "The from read-only property of the NavigationActivation interface contains a NavigationHistoryEntry object representing the history entry for the outgoing (\"from\") document in the navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/releaseEvents",
    "pageType": "web-api-instance-method",
    "summary": "Releases the window from trapping events of a specific type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/dump",
    "pageType": "web-api-instance-method",
    "summary": "The Window.dump() method logs messages to the browser's standard output (stdout). If the browser was started from a terminal, output sent to dump() will appear in the terminal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationActivation/navigationType",
    "pageType": "web-api-instance-property",
    "summary": "The navigationType read-only property of the NavigationActivation interface contains a string indicating the type of navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/scrollbars",
    "pageType": "web-api-instance-property",
    "summary": "Returns the scrollbars object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBAlternateInterface",
    "pageType": "web-api-interface",
    "summary": "The USBAlternateInterface interface of the WebUSB API provides information about a particular configuration of an interface provided by the USB device. An interface includes one or more alternate settings which can configure a set of endpoints based on the operating mode of the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/clearInterval",
    "pageType": "web-api-instance-method",
    "summary": "The clearInterval() method of the Window interface cancels a timed, repeating action which was previously established by a call to setInterval(). If the parameter provided does not identify a previously established action, this method does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/credentialless",
    "pageType": "web-api-instance-property",
    "summary": "The window.credentialless read-only property returns a boolean that indicates whether the current document was loaded inside a credentialless <iframe>, meaning that it is loaded in a new, ephemeral context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMediaRule",
    "pageType": "web-api-interface",
    "summary": "The CSSMediaRule interface represents a single CSS @media rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/deviceorientationabsolute_event",
    "pageType": "web-api-event",
    "summary": "The deviceorientationabsolute event is fired when absolute device orientation changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMediaRule/media",
    "pageType": "web-api-instance-property",
    "summary": "The read-only media property of the\nCSSMediaRule interface returns a MediaList representing the intended\ndestination medium for style information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/clearImmediate",
    "pageType": "web-api-instance-method",
    "summary": "This method clears the action specified by window.setImmediate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/external",
    "pageType": "web-api-instance-property",
    "summary": "The external property of the Window API returns an instance of the External interface, which was intended to contain functions related to adding external search providers to the browser. However, this is now deprecated, and the contained methods are now dummy functions that do nothing as per spec."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLFormElement.name property represents the name of\nthe current <form> element as a string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/atob",
    "pageType": "web-api-instance-method",
    "summary": "The atob() method of the Window interface decodes a\nstring of data which has been encoded using Base64 encoding. You can use\nthe Window.btoa() method to encode and transmit\ndata which may otherwise cause communication problems, then transmit it and use the\natob() method to decode the data again. For example, you can encode,\ntransmit, and decode control characters such as ASCII values 0 through 31."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLFormElement interface represents a <form> element in the DOM. It allows access to—and, in some cases, modification of—aspects of the form, as well as access to its component elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/mozInnerScreenX",
    "pageType": "web-api-instance-property",
    "summary": "Gets the X coordinate of the top-left corner of the window's viewport, in screen\ncoordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/acceptCharset",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLFormElement.acceptCharset property represents the character encoding for the given <form> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/vrdisplayconnect_event",
    "pageType": "web-api-event",
    "summary": "The vrdisplayconnect event of the WebVR API is fired when a compatible VR display is connected to the computer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Window/closed",
    "pageType": "web-api-instance-property",
    "summary": "The Window.closed read-only property indicates whether\nthe referenced window is closed or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/autocomplete",
    "pageType": "web-api-instance-property",
    "summary": "The autocomplete property of the HTMLFormElement interface indicates whether the value of the form's controls can be automatically completed by the browser. It reflects the <form> element's autocomplete attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/action",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLFormElement.action property represents the action\nof the <form> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextFormat/underlineThickness",
    "pageType": "web-api-instance-property",
    "summary": "The underlineThickness property of the TextFormat interface indicates the thickness of the underline that needs to be applied to the text range that is being formatted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextFormat",
    "pageType": "web-api-interface",
    "summary": "The TextFormat interface represents specific formatting that should be applied to a range of text in an editable text region that's attached to an EditContext instance. The text formatting is requested by the Input Method Editor (IME) window that the user is composing text with."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/encoding",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLFormElement.encoding property is an alternative name for the enctype element on the DOM HTMLFormElement object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextFormat/TextFormat",
    "pageType": "web-api-constructor",
    "summary": "The TextFormat() constructor returns a new TextFormat object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/reset_event",
    "pageType": "web-api-event",
    "summary": "The reset event fires when a <form> is reset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextFormat/underlineStyle",
    "pageType": "web-api-instance-property",
    "summary": "The underlineStyle property of the TextFormat interface indicates the style of the underline that needs to be applied to the text range that is being formatted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/submit_event",
    "pageType": "web-api-event",
    "summary": "The submit event fires when a <form> is submitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextFormat/rangeEnd",
    "pageType": "web-api-instance-property",
    "summary": "The rangeEnd property of the TextFormat interface indicates the end position of the text range that needs to be formatted with the given text format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextFormat/rangeStart",
    "pageType": "web-api-instance-property",
    "summary": "The rangeStart property of the TextFormat interface indicates the start position of the text range that needs to be formatted with the given text format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/reset",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLFormElement.reset() method restores a form\nelement's default values. This method does the same thing as clicking the form's\n<input type=\"reset\"> control."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStartingStyleRule",
    "pageType": "web-api-interface",
    "summary": "The CSSStartingStyleRule interface of the CSS Object Model represents a CSS @starting-style at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/elements",
    "pageType": "web-api-instance-property",
    "summary": "The elements property of the HTMLFormElement interface returns an HTMLFormControlsCollection listing all the listed form controls associated with the <form> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_compressed_texture_etc1",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_compressed_texture_etc1 extension is part of the WebGL API and exposes the ETC1 compressed texture format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/requestSubmit",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLFormElement method requestSubmit() requests\nthat the form be submitted using a specific submit button."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationPreloadManager",
    "pageType": "web-api-interface",
    "summary": "The NavigationPreloadManager interface of the Service Worker API provides methods for managing the preloading of resources in parallel with service worker bootup."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/length",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLFormElement.length\nread-only property returns the number of controls in the <form>\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationPreloadManager/getState",
    "pageType": "web-api-instance-method",
    "summary": "The getState() method of the NavigationPreloadManager interface returns a Promise that resolves to an object with properties that indicate whether preload is enabled and what value will be sent in the Service-Worker-Navigation-Preload HTTP header."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/enctype",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLFormElement.enctype property is the MIME type of content that is used\nto submit the form to the server. Possible values are:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationPreloadManager/enable",
    "pageType": "web-api-instance-method",
    "summary": "The enable() method of the NavigationPreloadManager interface is used to enable preloading of resources managed by the service worker.\nIt returns a promise that resolves with undefined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationPreloadManager/setHeaderValue",
    "pageType": "web-api-instance-method",
    "summary": "The setHeaderValue() method of the NavigationPreloadManager interface sets the value of the Service-Worker-Navigation-Preload header that will be sent with requests resulting from a fetch() operation made during service worker navigation preloading.\nIt returns an empty Promise that resolves with undefined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/submit",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLFormElement.submit() method submits a given\n<form>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationPreloadManager/disable",
    "pageType": "web-api-instance-method",
    "summary": "The disable() method of the NavigationPreloadManager interface halts the automatic preloading of service-worker-managed resources previously started using enable()\nIt returns a promise that resolves with undefined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/target",
    "pageType": "web-api-instance-property",
    "summary": "The target property of the HTMLFormElement\ninterface represents the target of the form's action (i.e., the frame in which to render\nits output)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedScriptURL",
    "pageType": "web-api-interface",
    "summary": "The TrustedScriptURL interface of the Trusted Types API represents a string that a developer can insert into an injection sink that will parse it as a URL of an external script. These objects are created via TrustedTypePolicy.createScriptURL() and therefore have no constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/reportValidity",
    "pageType": "web-api-instance-method",
    "summary": "The reportValidity() method of the HTMLFormElement interface performs the same validity checking steps as the checkValidity() method. In addition, for each invalid event that was fired and not canceled, the browser displays the problem to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedScriptURL/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the TrustedScriptURL interface returns a JSON representation of the stored data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/method",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLFormElement.method property represents the\nHTTP method used to submit the <form>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedScriptURL/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() method of the TrustedScriptURL interface returns a string which may safely inserted into an injection sink."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/noValidate",
    "pageType": "web-api-instance-property",
    "summary": "The noValidate property of the HTMLFormElement interface is a boolean value indicating if the <form> will bypass constraint validation when submitted. It reflects the <form> element's novalidate attribute; if the attribute present, the value is true."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEventTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformanceEventTiming interface of the Event Timing API provides insights into the latency of certain event types triggered by user interaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/relList",
    "pageType": "web-api-instance-property",
    "summary": "The relList read-only property of the HTMLFormElement interface reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the <form> element and the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEventTiming/processingStart",
    "pageType": "web-api-instance-property",
    "summary": "The read-only processingStart property returns the time at which event dispatch started. This is when event handlers are about to be executed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/formdata_event",
    "pageType": "web-api-event",
    "summary": "The formdata event fires after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a FormData() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEventTiming/interactionId",
    "pageType": "web-api-instance-property",
    "summary": "The read-only interactionId property of the PerformanceEventTiming interface returns an ID that uniquely identifies a user interaction which triggered a series of associated events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/rel",
    "pageType": "web-api-instance-property",
    "summary": "The rel property of the HTMLFormElement interface reflects the rel attribute. It is a string containing what kinds of links the HTML <form> element creates, as a space-separated list of enumerated values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEventTiming/processingEnd",
    "pageType": "web-api-instance-property",
    "summary": "The read-only processingEnd property returns the time the last event handler finished executing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEventTiming/target",
    "pageType": "web-api-instance-property",
    "summary": "The read-only target property returns the associated event's last target which is the node onto which the event was last dispatched."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFormElement/checkValidity",
    "pageType": "web-api-instance-method",
    "summary": "The checkValidity() method of the HTMLFormElement interface returns a boolean value which indicates if all associated controls meet any constraint validation rules applied to them. The method also fires an invalid event on each invalid element, but not on the form element itself. Because there's no default browser behavior for checkValidity(), canceling this invalid event has no effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEventTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PerformanceEventTiming interface is a serializer; it returns a JSON representation of the PerformanceEventTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceEventTiming/cancelable",
    "pageType": "web-api-instance-property",
    "summary": "The read-only cancelable property returns the associated event's cancelable property, indicating whether the event can be canceled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VREyeParameters/minimumFieldOfView",
    "pageType": "web-api-instance-property",
    "summary": "The minimumFieldOfView read-only property of the VREyeParameters interface describes the minimum supported field of view for the current eye."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PictureInPictureEvent",
    "pageType": "web-api-interface",
    "summary": "The PictureInPictureEvent interface represents picture-in-picture-related events, including enterpictureinpicture, leavepictureinpicture and resize."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VREyeParameters",
    "pageType": "web-api-interface",
    "summary": "The VREyeParameters interface of the WebVR API represents all the information required to correctly render a scene for a given eye, including field of view information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PictureInPictureEvent/pictureInPictureWindow",
    "pageType": "web-api-instance-property",
    "summary": "The read-only pictureInPictureWindow property of the PictureInPictureEvent interface returns the PictureInPictureWindow the event relates to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VREyeParameters/renderWidth",
    "pageType": "web-api-instance-property",
    "summary": "The renderWidth read-only property of the VREyeParameters interface describes the recommended render target width of each eye viewport, in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PictureInPictureEvent/PictureInPictureEvent",
    "pageType": "web-api-constructor",
    "summary": "The PictureInPictureEvent() constructor returns a new PictureInPictureEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ConvolverNode",
    "pageType": "web-api-interface",
    "summary": "The ConvolverNode interface is an AudioNode that performs a Linear Convolution on a given AudioBuffer, often used to achieve a reverb effect. A ConvolverNode always has exactly one input and one output."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VREyeParameters/offset",
    "pageType": "web-api-instance-property",
    "summary": "The offset read-only property of the VREyeParameters interface represents the offset from the center point between the user's eyes to the center of the eye, measured in meters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ConvolverNode/buffer",
    "pageType": "web-api-instance-property",
    "summary": "The buffer property of the ConvolverNode interface represents a mono, stereo, or 4-channel AudioBuffer containing the (possibly multichannel) impulse response used by the ConvolverNode to create the reverb effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VREyeParameters/maximumFieldOfView",
    "pageType": "web-api-instance-property",
    "summary": "The maximumFieldOfView read-only property of the VREyeParameters interface describes the maximum supported field of view for the current eye."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ConvolverNode/ConvolverNode",
    "pageType": "web-api-constructor",
    "summary": "The ConvolverNode() constructor of the Web Audio API creates a new\nConvolverNode object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VREyeParameters/renderHeight",
    "pageType": "web-api-instance-property",
    "summary": "The renderHeight read-only property of the VREyeParameters interface describes the recommended render target height of each eye viewport, in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ConvolverNode/normalize",
    "pageType": "web-api-instance-property",
    "summary": "The normalize property of the ConvolverNode interface\nis a boolean that controls whether the impulse response from the buffer will be\nscaled by an equal-power normalization when the buffer attribute is set,\nor not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VREyeParameters/fieldOfView",
    "pageType": "web-api-instance-property",
    "summary": "The fieldOfView read-only property of the VREyeParameters interface returns a VRFieldOfView object describing the current field of view for the eye, which can vary as the user adjusts their interpupillary distance (IPD)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenOrientation/angle",
    "pageType": "web-api-instance-property",
    "summary": "The angle read-only property of the\nScreenOrientation interface returns the document's current orientation\nangle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenOrientation/change_event",
    "pageType": "web-api-event",
    "summary": "The change event of the ScreenOrientation interface fires when the orientation of the screen has changed, for example when a user rotates their mobile phone."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor",
    "pageType": "web-api-interface",
    "summary": "The IDBCursor interface of the IndexedDB API represents a cursor for traversing or iterating over multiple records in a database."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenOrientation",
    "pageType": "web-api-interface",
    "summary": "The ScreenOrientation interface of the Screen Orientation API provides information about the current orientation of the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenOrientation/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the\nScreenOrientation interface returns the document's current orientation\ntype, one of portrait-primary, portrait-secondary, landscape-primary, or\nlandscape-secondary."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/source",
    "pageType": "web-api-instance-property",
    "summary": "The source read-only property of the\nIDBCursor interface returns the IDBObjectStore or\nIDBIndex that the cursor is iterating over. This function never returns\nnull or throws an exception, even if the cursor is currently being iterated, has\niterated past its end, or its transaction is not active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenOrientation/unlock",
    "pageType": "web-api-instance-method",
    "summary": "The unlock() method of the ScreenOrientation interface unlocks the orientation of the containing document, effectively locking it to the default screen orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/primaryKey",
    "pageType": "web-api-instance-property",
    "summary": "The primaryKey read-only property of the\nIDBCursor interface returns the cursor's current effective key. If the\ncursor is currently being iterated or has iterated outside its range, this is set to\nundefined. The cursor's primary key can be any data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenOrientation/lock",
    "pageType": "web-api-instance-method",
    "summary": "The lock() method of the ScreenOrientation interface locks the orientation of the containing document to the specified orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/request",
    "pageType": "web-api-instance-property",
    "summary": "The request read-only property of the IDBCursor interface returns the IDBRequest used to obtain the cursor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Serial",
    "pageType": "web-api-interface",
    "summary": "The Serial interface of the Web Serial API provides attributes and methods for finding and connecting to serial ports from a web page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/key",
    "pageType": "web-api-instance-property",
    "summary": "The key read-only property of the\nIDBCursor interface returns the key for the record at the cursor's\nposition. If the cursor is outside its range, this is set to undefined. The cursor's\nkey can be any data type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Serial/getPorts",
    "pageType": "web-api-instance-method",
    "summary": "The getPorts() method of the Serial interface returns a Promise that resolves with an array of SerialPort objects representing serial ports connected to the host which the origin has permission to access."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/advance",
    "pageType": "web-api-instance-method",
    "summary": "The advance() method of the IDBCursor\ninterface sets the number of times a cursor should move\nits position forward."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Serial/requestPort",
    "pageType": "web-api-instance-method",
    "summary": "The Serial.requestPort() method of the Serial interface presents the user with a dialog asking them to select a serial device to connect to. It returns a Promise that resolves with an instance of SerialPort representing the device chosen by the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLBodyElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLBodyElement interface provides special properties (beyond those inherited from the regular HTMLElement interface) for manipulating <body> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the IDBCursor\ninterface returns an IDBRequest object, and, in a separate thread,\ndeletes the record at the cursor's position, without changing the cursor's position.\nOnce the record is deleted, the cursor's value is set to null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserverSize",
    "pageType": "web-api-interface",
    "summary": "The ResizeObserverSize interface of the Resize Observer API is used by the ResizeObserverEntry interface to access the box sizing properties of the element being observed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/continuePrimaryKey",
    "pageType": "web-api-instance-method",
    "summary": "The continuePrimaryKey() method of the\nIDBCursor interface advances the cursor to the item whose key\nmatches the key parameter as well as whose primary key matches the primary key\nparameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserverSize/blockSize",
    "pageType": "web-api-instance-property",
    "summary": "The blockSize read-only property of the ResizeObserverSize interface returns the length of the observed element's border box in the block dimension. For boxes with a horizontal writing-mode, this is the vertical dimension, or height; if the writing-mode is vertical, this is the horizontal dimension, or width."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserverSize/inlineSize",
    "pageType": "web-api-instance-property",
    "summary": "The inlineSize read-only property of the ResizeObserverSize interface returns the length of the observed element's border box in the inline dimension. For boxes with a horizontal writing-mode, this is the horizontal dimension, or width; if the writing-mode is vertical, this is the vertical dimension, or height."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/direction",
    "pageType": "web-api-instance-property",
    "summary": "The direction read-only property of the\nIDBCursor interface is a string that returns the\ndirection of traversal of the cursor (set using\nIDBObjectStore.openCursor for example). See the Value\nsection below for possible values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserver",
    "pageType": "web-api-interface",
    "summary": "The ResizeObserver interface reports changes to the dimensions of an Element's content or border box, or the bounding box of an SVGElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/continue",
    "pageType": "web-api-instance-method",
    "summary": "The continue() method of the IDBCursor\ninterface advances the cursor to the next position along its direction, to the item\nwhose key matches the optional key parameter. If no key is specified, the cursor\nadvances to the immediate next position, based on its direction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserver/ResizeObserver",
    "pageType": "web-api-constructor",
    "summary": "The ResizeObserver constructor creates a\nnew ResizeObserver object, which can be used to report changes to the\ncontent or border box of an Element or the bounding box of an\nSVGElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursor/update",
    "pageType": "web-api-instance-method",
    "summary": "The update() method of the IDBCursor\ninterface returns an IDBRequest object, and, in a separate thread,\nupdates the value at the current position of the cursor in the object store. If the\ncursor points to a record that has just been deleted, a new record is created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserver/observe",
    "pageType": "web-api-instance-method",
    "summary": "The observe() method of the\nResizeObserver interface starts observing the specified\nElement or SVGElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Geometry_interfaces",
    "pageType": "web-api-overview",
    "summary": "Geometry interfaces is a CSS module that provides interfaces for working with 3D and 2D graphics — in particular, for working with points, rectangles, quadrilaterals and transformation matrices (for operations that translate/move, scale, rotate, skew/shear/slant, and flip graphics, as well as for multiplying/chaining and inverting/undoing those operations)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserver/unobserve",
    "pageType": "web-api-instance-method",
    "summary": "The unobserve() method of the\nResizeObserver interface ends the observing of a specified\nElement or SVGElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserver/disconnect",
    "pageType": "web-api-instance-method",
    "summary": "The disconnect() method of the\nResizeObserver interface unobserves all observed Element\nor SVGElement targets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBInTransferResult",
    "pageType": "web-api-interface",
    "summary": "The USBInTransferResult interface of the WebUSB API provides the result from a call to the transferIn() and controlTransferIn() methods of the USBDevice interface. It represents the result from requesting a transfer of data from the USB device to the USB host."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGDiscardElement",
    "pageType": "web-api-interface",
    "summary": "The SVGDiscardElement interface is an interface for the deprecated <discard> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEMorphologyElement interface corresponds to the <feMorphology> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DirectoryReaderSync",
    "pageType": "web-api-interface",
    "summary": "The DirectoryReaderSync interface lets you read the entries in a directory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEMorphologyElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSConditionRule/conditionText",
    "pageType": "web-api-instance-property",
    "summary": "The read-only conditionText property of\nthe CSSConditionRule interface returns or sets the text of the CSS\nrule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSConditionRule",
    "pageType": "web-api-interface",
    "summary": "An object implementing the CSSConditionRule interface represents a single condition CSS at-rule, which consists of a condition and a statement block."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEMorphologyElement interface reflects the in attribute of the given <feMorphology> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFunctionDescriptors",
    "pageType": "web-api-interface",
    "summary": "The CSSFunctionDescriptors interface of the CSS Object Model represents the descriptors contained within a set of CSS declarations represented by a CSSFunctionDeclarations object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement/radiusX",
    "pageType": "web-api-instance-property",
    "summary": "The radiusX read-only property of the SVGFEMorphologyElement interface reflects the X component of the radius attribute of the given <feMorphology> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFunctionDescriptors/result",
    "pageType": "web-api-instance-property",
    "summary": "The result property of the CSSFunctionDescriptors interface returns a string representing a result descriptor, if one exists in the associated set of declarations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputDeviceInfo",
    "pageType": "web-api-interface",
    "summary": "The InputDeviceInfo interface of the Media Capture and Streams API gives access to the capabilities of the input device that it represents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEMorphologyElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputDeviceInfo/getCapabilities",
    "pageType": "web-api-instance-method",
    "summary": "The getCapabilities() method of the InputDeviceInfo interface returns a MediaTrackCapabilities object describing the primary audio or video track of the device's MediaStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEMorphologyElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Battery_Status_API",
    "pageType": "web-api-overview",
    "summary": "The Battery Status API, more often referred to as the Battery API, provides information about the system's battery charge level and lets you be notified by events that are sent when the battery level or charging status change. This can be used to adjust your app's resource usage to reduce battery drain when the battery is low, or to save changes before the battery runs out in order to prevent data loss."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement/radiusY",
    "pageType": "web-api-instance-property",
    "summary": "The radiusY read-only property of the SVGFEMorphologyElement interface reflects the Y component of the radius attribute of the given <feMorphology> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KHR_parallel_shader_compile",
    "pageType": "webgl-extension",
    "summary": "The KHR_parallel_shader_compile extension is part of the WebGL API and enables a non-blocking poll operation, so that compile/link status availability (COMPLETION_STATUS_KHR) can be queried without potentially incurring stalls. In other words you can check the status of your shaders compiling without blocking the runtime."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEMorphologyElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLHtmlElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLHtmlElement interface serves as the root node for a given HTML document. This object inherits the properties and methods described in the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement/operator",
    "pageType": "web-api-instance-property",
    "summary": "The operator read-only property of the SVGFEMorphologyElement interface reflects the operator attribute of the given <feMorphology> element. It takes one of the SVG_MORPHOLOGY_OPERATOR_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLHtmlElement/version",
    "pageType": "web-api-instance-property",
    "summary": "Returns version information about the document type definition (DTD) of a document. While this property is recognized by Mozilla, the return value for this property is always an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMorphologyElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEMorphologyElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin readonly property of the SVGAElement interface returns a string containing the origin of the URL — that is, its scheme, its domain and its port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement",
    "pageType": "web-api-interface",
    "summary": "The SVGAElement interface provides access to the properties of an <a> element, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix",
    "pageType": "web-api-interface",
    "summary": "The DOMMatrix interface represents 4×4 matrices, suitable for 2D and 3D operations including rotation and translation. It is a mutable version of the DOMMatrixReadOnly interface.\nThe interface is available inside web workers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/ping",
    "pageType": "web-api-instance-property",
    "summary": "The ping property of the SVGAElement interface returns a string that reflects the ping attribute, containing a space-separated list of URLs to which, when the hyperlink is followed, POST requests with the body PING will be sent by the browser (in the background). Typically used for tracking."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/rotateSelf",
    "pageType": "web-api-instance-method",
    "summary": "The rotateSelf() method of the DOMMatrix interface is a mutable transformation method that modifies a matrix. It rotates the source matrix around each of its axes by the specified number of degrees and returns the rotated matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/download",
    "pageType": "web-api-instance-property",
    "summary": "The download property of the SVGAElement interface returns a string indicating that the browser should treat the linked URL as a download."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/pathname",
    "pageType": "web-api-instance-property",
    "summary": "The pathname property of the SVGAElement interface returns a string containing an initial / followed by the path of the URL, not including the query string or fragment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/scaleSelf",
    "pageType": "web-api-instance-method",
    "summary": "The scaleSelf() method of the DOMMatrix interface is a mutable transformation method that modifies a matrix by applying a specified scaling factor, centered on the given origin, with a default origin of (0, 0), returning the scaled matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the SVGAElement interface returns a string indicating the MIME type of the linked resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/rotateFromVectorSelf",
    "pageType": "web-api-instance-method",
    "summary": "The rotateFromVectorSelf() method of the DOMMatrix interface is a mutable transformation method that modifies a matrix by rotating the matrix by the angle between the specified vector and (1, 0). The rotation angle is determined by the angle between the vector (1,0)T and (x,y)T in the clockwise direction, or (+/-)arctan(y/x). If x and y are both 0, the angle is specified as 0, and the matrix is not altered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/host",
    "pageType": "web-api-instance-property",
    "summary": "The host property of the SVGAElement interface returns a string representing the hostname and port (if it's not the default port) in the referenced URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/hreflang",
    "pageType": "web-api-instance-property",
    "summary": "The hreflang property of the SVGAElement interface returns a string indicating the language of the linked resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/multiplySelf",
    "pageType": "web-api-instance-method",
    "summary": "The multiplySelf() method of the DOMMatrix interface multiplies a matrix by the otherMatrix parameter, computing the dot product of the original matrix and the specified matrix: A⋅B. If no matrix is specified as the multiplier, the matrix is multiplied by a matrix in which every element is 0 except the bottom-right corner and the element immediately above and to its left: m33 and m34. These have the default value of 1."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol property of the SVGAElement interface returns a string representing the protocol component, including trailing colon (:), of the referenced URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/fromFloat32Array_static",
    "pageType": "web-api-static-method",
    "summary": "The fromFloat32Array() static method of the DOMMatrix interface creates a new DOMMatrix object given an array of single-precision (32-bit) floating-point values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/search",
    "pageType": "web-api-instance-property",
    "summary": "The search property of the SVGAElement interface returns a string representing the URL's query string, if any, including the leading question mark (?)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/skewXSelf",
    "pageType": "web-api-instance-method",
    "summary": "The skewXSelf() method of the DOMMatrix interface is a mutable transformation method that modifies a matrix. It skews the source matrix by applying the specified skew transformation along the X-axis and returns the skewed matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/username",
    "pageType": "web-api-instance-property",
    "summary": "The username property of the SVGAElement interface returns a string containing the username specified before the domain name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/translateSelf",
    "pageType": "web-api-instance-method",
    "summary": "The translateSelf() method of the DOMMatrix interface is a mutable transformation method that modifies a matrix. It applies the specified vectors and returns the updated matrix. The default vector is [0, 0, 0]."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/hostname",
    "pageType": "web-api-instance-property",
    "summary": "The hostname property of the SVGAElement interface returns a string representing the hostname in the referenced URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/text",
    "pageType": "web-api-instance-property",
    "summary": "The text property of the SVGAElement interface returns a string that is a synonym for the Node.textContent property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/setMatrixValue",
    "pageType": "web-api-instance-method",
    "summary": "The setMatrixValue() method of the DOMMatrix interface replaces the contents of the matrix with the matrix described by the specified transform or transforms, returning itself."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/port",
    "pageType": "web-api-instance-property",
    "summary": "The port property of the SVGAElement interface returns a string representing the port component, if any, of the referenced URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/skewYSelf",
    "pageType": "web-api-instance-method",
    "summary": "The skewYSelf() method of the DOMMatrix interface is a mutable transformation method that modifies a matrix. It skews the source matrix by applying the specified skew transformation along the Y-axis and returns the skewed matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/referrerpolicy",
    "pageType": "web-api-instance-property",
    "summary": "The referrerpolicy property of the SVGAElement interface returns a string specifying which referrer to send when fetching the URL.."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/fromFloat64Array_static",
    "pageType": "web-api-static-method",
    "summary": "The fromFloat64Array() static method of the DOMMatrix interface creates a new DOMMatrix object given an array of double-precision (64-bit) floating-point values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/target",
    "pageType": "web-api-instance-property",
    "summary": "The SVGAElement.target read-only property of SVGAElement returns an SVGAnimatedString object that specifies the portion of a target window, frame, pane into which a document is to be opened when a link is activated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/hash",
    "pageType": "web-api-instance-property",
    "summary": "The hash property of the SVGAElement interface returns a string representing the fragment identifier, including the leading hash mark (#), if any, in the referenced URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/scale3dSelf",
    "pageType": "web-api-instance-method",
    "summary": "The scale3dSelf() method of the DOMMatrix interface is a mutable transformation method that modifies a matrix by applying a specified scaling factor to all three axes, centered on the given origin, with a default origin of (0, 0, 0), returning the 3D-scaled matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/password",
    "pageType": "web-api-instance-property",
    "summary": "The password property of the SVGAElement interface returns a string containing the password specified before the domain name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/invertSelf",
    "pageType": "web-api-instance-method",
    "summary": "The invertSelf() method of the DOMMatrix interface inverts the original matrix. If the matrix cannot be inverted, the new matrix's components are all set to NaN and its is2D property is set to false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/relList",
    "pageType": "web-api-instance-property",
    "summary": "The relList read-only property of the SVGAElement returns a live DOMTokenList reflecting the space-separated string <list-of-Link-Types> values of the rel attribute of the SVG <a> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGAElement returns an SVGAnimatedString object reflecting the value of the href attribute, and, in certain cases, the xlink:href \nDeprecated\n attribute. It specifies the target URI associated with the link."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/preMultiplySelf",
    "pageType": "web-api-instance-method",
    "summary": "The preMultiplySelf() method of the DOMMatrix interface modifies the matrix by pre-multiplying it with the specified DOMMatrix. This is equivalent to the dot product B⋅A, where matrix A is the source matrix and B is the matrix given as an input to the method. If no matrix is specified as the multiplier, the matrix is multiplied by a matrix in which every element is 0 except the bottom-right corner and the element immediately above and to its left: m33 and m34. These have the default value of 1."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAElement/rel",
    "pageType": "web-api-instance-property",
    "summary": "The rel property of the SVGAElement returns a string reflecting the value of the rel attribute of the SVG <a> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/rotateAxisAngleSelf",
    "pageType": "web-api-instance-method",
    "summary": "The rotateAxisAngleSelf() method of the DOMMatrix interface is a transformation method that rotates the source matrix by the given vector and angle, returning the altered matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLOutputElement interface indicates the name of the <output> element. It reflects the element's name attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/DOMMatrix",
    "pageType": "web-api-constructor",
    "summary": "The DOMMatrix() constructor creates a new DOMMatrix object which represents a 4x4 matrix, suitable for 2D and 3D operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLOutputElement interface provides properties and methods (beyond those inherited from HTMLElement) for manipulating the layout and presentation of <output> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrix/fromMatrix_static",
    "pageType": "web-api-static-method",
    "summary": "The fromMatrix() static method of the DOMMatrix interface creates a new DOMMatrix object given an existing matrix or an object which provides the values for its properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/willValidate",
    "pageType": "web-api-instance-property",
    "summary": "The willValidate read-only property of the HTMLOutputElement interface returns false, because <output> elements are not candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the HTMLOutputElement interface returns the string \"output\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBOpenDBRequest",
    "pageType": "web-api-interface",
    "summary": "The IDBOpenDBRequest interface of the IndexedDB API provides access to the results of requests to open or delete databases (performed using IDBFactory.open and IDBFactory.deleteDatabase), using specific event handler attributes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/validity",
    "pageType": "web-api-instance-property",
    "summary": "The validity read-only property of the HTMLOutputElement interface returns a ValidityState object that represents the validity states this element is in. Although <output> elements are never candidates for constraint validation, the validity state may still be invalid if a custom validity message has been set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBOpenDBRequest/upgradeneeded_event",
    "pageType": "web-api-event",
    "summary": "The upgradeneeded event is fired when an attempt was made to open a database with a version number higher than its current version."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLOutputElement interface returns an HTMLFormElement object that owns this <output>, or null if this output is not owned by any form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the HTMLOutputElement interface represents the value of the <output> element as a string, or the empty string if no value is set. It returns or sets the contents of the element, similar to the textContent property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBOpenDBRequest/blocked_event",
    "pageType": "web-api-event",
    "summary": "The blocked handler is executed when an open connection to a database is blocking a versionchange transaction on the same database."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/setCustomValidity",
    "pageType": "web-api-instance-method",
    "summary": "The setCustomValidity() method of the HTMLOutputElement interface sets the custom validity message for the <output> element. Use the empty string to indicate that the element does not have a custom validity error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FencedFrameConfig",
    "pageType": "web-api-interface",
    "summary": "The FencedFrameConfig interface represents the navigation of a <fencedframe>, i.e., what content will be displayed in it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/reportValidity",
    "pageType": "web-api-instance-method",
    "summary": "The reportValidity() method of the HTMLOutputElement interface performs the same validity checking steps as the checkValidity() method. It always returns true because <output> elements are never candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FencedFrameConfig/setSharedStorageContext",
    "pageType": "web-api-instance-method",
    "summary": "The setSharedStorageContext() method of the\nFencedFrameConfig interface passes in contextual data from the embedding document to the <fencedframe>'s shared storage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/validationMessage",
    "pageType": "web-api-instance-property",
    "summary": "The validationMessage read-only property of the HTMLOutputElement interface returns a string representing a localized message that describes the validation constraints that the <output> control does not satisfy (if any). This is the empty string as <output> elements are not candidates for constraint validation (HTMLOutputElement.willValidate is false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/defaultValue",
    "pageType": "web-api-instance-property",
    "summary": "The defaultValue property of the HTMLOutputElement interface represents the default text content of this <output> element. Getting and setting this value is equivalent to getting and setting textContent on the <output>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSVariableReferenceValue",
    "pageType": "web-api-interface",
    "summary": "The CSSVariableReferenceValue interface of the CSS Typed Object Model API allows you to create a custom name for a built-in CSS value. This object functionality is sometimes called a \"CSS variable\" and serves the same purpose as the var() function. The custom name must begin with two dashes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/labels",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLOutputElement.labels read-only property returns a\nNodeList of the <label> elements associated with the\n<output> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSVariableReferenceValue/fallback",
    "pageType": "web-api-instance-property",
    "summary": "The fallback read-only property of the\nCSSVariableReferenceValue interface returns the custom property fallback value of the CSSVariableReferenceValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/htmlFor",
    "pageType": "web-api-instance-property",
    "summary": "The htmlFor property of the HTMLOutputElement interface is a string containing a space-separated list of other elements' ids, indicating that those elements contributed input values to (or otherwise affected) the calculation. It reflects the for attribute of the <output> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOutputElement/checkValidity",
    "pageType": "web-api-instance-method",
    "summary": "The checkValidity() method of the HTMLOutputElement interface checks if the element is valid, but always returns true because <output> elements are never candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSVariableReferenceValue/variable",
    "pageType": "web-api-instance-property",
    "summary": "The variable property of the\nCSSVariableReferenceValue interface returns the custom property name of the\nCSSVariableReferenceValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSVariableReferenceValue/CSSVariableReferenceValue",
    "pageType": "web-api-constructor",
    "summary": "Creates a new CSSVariableReferenceValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File_System_API",
    "pageType": "web-api-overview",
    "summary": "The File System API — with extensions provided via the File System Access API to access files on the device file system — allows read, write and file management capabilities."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/File_System_API/Origin_private_file_system",
    "pageType": "guide",
    "summary": "The origin private file system (OPFS) is a storage endpoint provided as part of the File System API, which is private to the origin of the page and not visible to the user like the regular file system. It provides access to a special kind of file that is highly optimized for performance and offers in-place write access to its content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLBRElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLBRElement interface represents an HTML line break element (<br>). It inherits from HTMLElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnectionList",
    "pageType": "web-api-interface",
    "summary": "PresentationConnectionList is the collection of incoming presentation connections."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLShader",
    "pageType": "web-api-interface",
    "summary": "The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A WebGLProgram requires both types of shaders."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageManager",
    "pageType": "web-api-interface",
    "summary": "The StorageManager interface of the Storage API provides an interface for managing persistence permissions and estimating available storage. You can get a reference to this interface using either navigator.storage or WorkerNavigator.storage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_debug_shaders",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_debug_shaders extension is part of the WebGL API and exposes a method to debug shaders from privileged contexts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageManager/estimate",
    "pageType": "web-api-instance-method",
    "summary": "The estimate() method of the StorageManager interface asks the Storage Manager for how much storage the current origin takes up (usage), and how much space is available (quota)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_debug_shaders/getTranslatedShaderSource",
    "pageType": "webgl-extension-method",
    "summary": "The WEBGL_debug_shaders.getTranslatedShaderSource()\nmethod is part of the WebGL API and allows\nyou to debug a translated shader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageManager/persist",
    "pageType": "web-api-instance-method",
    "summary": "The persist() method of the StorageManager interface requests permission to use persistent storage, and returns a Promise that resolves to true if permission is granted and bucket mode is persistent, and false otherwise. The browser may or may not honor the request, depending on browser-specific rules. (For more details, see the guide to Storage quotas and eviction criteria.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageManager/persisted",
    "pageType": "web-api-instance-method",
    "summary": "The persisted() method of the StorageManager interface returns a Promise that resolves to true if your site's storage bucket is persistent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSession",
    "pageType": "web-api-interface",
    "summary": "The MediaSession interface of the Media Session API allows a web page to provide custom behaviors for standard media playback interactions, and to report metadata that can be sent by the user agent to the device or operating system for presentation in standardized user interface elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageManager/getDirectory",
    "pageType": "web-api-instance-method",
    "summary": "The getDirectory() method of the StorageManager interface is used to obtain a reference to a FileSystemDirectoryHandle object allowing access to a directory and its contents, stored in the origin private file system (OPFS)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSession/setPositionState",
    "pageType": "web-api-instance-method",
    "summary": "The setPositionState() method of the\nMediaSession interface is used to update the current\ndocument's media playback position and speed for presentation by user's device in any\nkind of interface that provides details about ongoing media. This can be\nparticularly useful if your code implements a player for type of media not directly\nsupported by the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator",
    "pageType": "web-api-interface",
    "summary": "The WorkerNavigator interface represents a subset of the Navigator interface allowed to be accessed from a Worker. Such an object is initialized for each worker and is available via the self.navigator property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSession/setMicrophoneActive",
    "pageType": "web-api-instance-method",
    "summary": "The setMicrophoneActive() method of the MediaSession interface is used to indicate to the user agent whether the user's microphone is considered to be currently muted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/deviceMemory",
    "pageType": "web-api-instance-property",
    "summary": "The deviceMemory read-only\nproperty of the WorkerNavigator interface returns the approximate amount of\ndevice memory in gigabytes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSession/setCameraActive",
    "pageType": "web-api-instance-method",
    "summary": "The setCameraActive() method of the MediaSession interface is used to indicate to the user agent whether the user's camera is considered to be active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/locks",
    "pageType": "web-api-instance-property",
    "summary": "The locks read-only property of\nthe WorkerNavigator interface returns a LockManager\nobject which provides methods for requesting a new Lock object and\nquerying for an existing Lock object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSession/metadata",
    "pageType": "web-api-instance-property",
    "summary": "The metadata property of the MediaSession\ninterface contains a MediaMetadata object providing descriptive\ninformation about the currently playing media, or null if the metadata has\nnot been set. This metadata is provided by the browser to the device for presentation in\nany standard media control user interface the device might offer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/permissions",
    "pageType": "web-api-instance-property",
    "summary": "The permissions read-only property of the WorkerNavigator interface\nreturns a Permissions object that can be used to query and update\npermission status of APIs covered by the Permissions API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/serial",
    "pageType": "web-api-instance-property",
    "summary": "The serial read-only property of the WorkerNavigator interface returns a Serial object which represents the entry point into the Web Serial API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSession/setActionHandler",
    "pageType": "web-api-instance-method",
    "summary": "The setActionHandler() method of the MediaSession interface sets a handler for a media session action.\nThese actions let a web app receive notifications when the user engages a device's built-in physical or onscreen media controls, such as play, stop, or seek buttons."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/serviceWorker",
    "pageType": "web-api-instance-property",
    "summary": "The serviceWorker read-only property of the WorkerNavigator interface returns the ServiceWorkerContainer object for the associated document, which provides access to registration, removal, upgrade, and communication with the ServiceWorker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSession/setScreenshareActive",
    "pageType": "web-api-instance-method",
    "summary": "The setScreenshareActive() method of the MediaSession interface is used to indicate to the user agent whether the user's screenshare is considered to be active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/globalPrivacyControl",
    "pageType": "web-api-instance-property",
    "summary": "The WorkerNavigator.globalPrivacyControl read-only property returns the user's Global Privacy Control setting for the current website.\nThis setting indicates whether the user consents to the website or service selling or sharing their personal information with third parties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaSession/playbackState",
    "pageType": "web-api-instance-property",
    "summary": "The playbackState property of the\nMediaSession interface indicates whether the current media session is\nplaying or paused."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/hid",
    "pageType": "web-api-instance-property",
    "summary": "The WorkerNavigator.hid\nread-only property returns an HID object providing methods for accessing HID device connections and events that fire when the user agent connects to or disconnects from a device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/mediaCapabilities",
    "pageType": "web-api-instance-property",
    "summary": "The read-only mediaCapabilities property of the WorkerNavigator interface references a MediaCapabilities object that can expose information about the decoding and encoding capabilities for a given format and output capabilities (as defined by the Media Capabilities API)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDistantLightElement/azimuth",
    "pageType": "web-api-instance-property",
    "summary": "The azimuth read-only property of the SVGFEDistantLightElement interface reflects the azimuth attribute of the given <feDistantLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDistantLightElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEDistantLightElement interface corresponds to the <feDistantLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/platform",
    "pageType": "web-api-instance-property",
    "summary": "Returns a string representing the platform of the browser. The specification allows\nbrowsers to always return the empty string, so don't rely on this property to get a\nreliable answer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/clearAppBadge",
    "pageType": "web-api-instance-method",
    "summary": "The clearAppBadge() method of the WorkerNavigator interface clears a badge on the current app's icon by setting it to nothing. The value nothing indicates that no badge is currently set, and the status of the badge is cleared."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDistantLightElement/elevation",
    "pageType": "web-api-instance-property",
    "summary": "The elevation read-only property of the SVGFEDistantLightElement interface reflects the elevation attribute of the given <feDistantLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/hardwareConcurrency",
    "pageType": "web-api-instance-property",
    "summary": "The navigator.hardwareConcurrency read-only property\nreturns the number of logical processors available to run threads on the user's\ncomputer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileList",
    "pageType": "web-api-interface",
    "summary": "The FileList interface represents an object of this type returned by the files property of the HTML <input> element; this lets you access the list of files selected with the <input type=\"file\"> element. It's also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/userAgentData",
    "pageType": "web-api-instance-property",
    "summary": "The userAgentData read-only property of the WorkerNavigator interface returns a NavigatorUAData object which can be used to access the User-Agent Client Hints API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method of the FileList interface returns a File object representing the file at the specified index in the file list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/usb",
    "pageType": "web-api-instance-property",
    "summary": "The usb read-only property of the WorkerNavigator interface returns a USB object for the current document, providing access to WebUSB API functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the FileList interface returns the number of files in the FileList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/connection",
    "pageType": "web-api-instance-property",
    "summary": "The connection read-only property of the WorkerNavigator interface returns a NetworkInformation object containing information about the system's connection, such as the current bandwidth of the user's device or whether the connection is metered.\nThis could be used to select high definition content or low definition content based on the user's connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransformStream",
    "pageType": "web-api-interface",
    "summary": "The TransformStream interface of the Streams API represents a concrete implementation of the pipe chain transform stream concept."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/storage",
    "pageType": "web-api-instance-property",
    "summary": "The storage read-only property of the WorkerNavigator interface\nreturns the singleton StorageManager object used to\naccess the overall storage capabilities of the browser for the current site or app.\nThe returned object lets you examine and configure persistence of data stores and\nlearn approximately how much more space your browser has available for local storage\nuse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransformStream/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable read-only property of the TransformStream interface returns the ReadableStream instance controlled by this TransformStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/userAgent",
    "pageType": "web-api-instance-property",
    "summary": "The WorkerNavigator.userAgent read-only property returns the\nuser agent string for the current browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransformStream/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable read-only property of the TransformStream interface returns the WritableStream instance controlled by this TransformStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/product",
    "pageType": "web-api-instance-property",
    "summary": "The value of the WorkerNavigator.product property is always\n\"Gecko\", in any browser. This property is kept only for compatibility\npurposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransformStream/TransformStream",
    "pageType": "web-api-constructor",
    "summary": "The TransformStream() constructor creates a new TransformStream object which represents a pair of streams: a WritableStream representing the writable side, and a ReadableStream representing the readable side."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/onLine",
    "pageType": "web-api-instance-property",
    "summary": "Returns the online status of the browser. The property returns a boolean value, with true meaning online and false meaning offline. The property sends updates whenever the browser's ability to connect to the network changes. The update occurs when the user follows links or when a script requests a remote page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ChannelSplitterNode",
    "pageType": "web-api-interface",
    "summary": "The ChannelSplitterNode interface, often used in conjunction with its opposite, ChannelMergerNode, separates the different channels of an audio source into a set of mono outputs. This is useful for accessing each channel separately, e.g., for performing channel mixing where gain must be separately controlled on each channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/appCodeName",
    "pageType": "web-api-instance-property",
    "summary": "The value of the WorkerNavigator.appCodeName property is\nalways \"Mozilla\", in any browser. This property is kept only for\ncompatibility purposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ChannelSplitterNode/ChannelSplitterNode",
    "pageType": "web-api-constructor",
    "summary": "The ChannelSplitterNode() constructor of the Web Audio API creates a new ChannelSplitterNode object instance, representing a node that splits the input into a separate output for each of the source node's audio channels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/appName",
    "pageType": "web-api-instance-property",
    "summary": "The value of the WorkerNavigator.appName property is always\n\"Netscape\", in any browser. This property is kept only for compatibility\npurposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpScriptTransform",
    "pageType": "web-api-interface",
    "summary": "The RTCRtpScriptTransform interface of the WebRTC API is used to insert a WebRTC Encoded Transform (a TransformStream running in a worker thread) into the WebRTC sender and receiver pipelines."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/language",
    "pageType": "web-api-instance-property",
    "summary": "The WorkerNavigator.language read-only property returns\na string representing the preferred language of the user, usually the language of the\nbrowser UI."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpScriptTransform/RTCRtpScriptTransform",
    "pageType": "web-api-constructor",
    "summary": "The RTCRtpScriptTransform() constructor creates a new RTCRtpScriptTransform object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/appVersion",
    "pageType": "web-api-instance-property",
    "summary": "Returns either \"4.0\" or a string representing version information about\nthe browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/referrer",
    "pageType": "web-api-instance-property",
    "summary": "The referrer read-only property of the SecurityPolicyViolationEvent interface is a string representing the referrer for the resources whose Content Security Policy (CSP) was violated.\nThis will be a URL or null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/gpu",
    "pageType": "web-api-instance-property",
    "summary": "The gpu read-only property of the WorkerNavigator interface returns the GPU object for the current worker context, which is the entry point for the WebGPU API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent",
    "pageType": "web-api-interface",
    "summary": "The SecurityPolicyViolationEvent interface inherits from Event, and represents the event object of a securitypolicyviolation event sent on an Element, Document, or worker when its Content Security Policy (CSP) is violated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/effectiveDirective",
    "pageType": "web-api-instance-property",
    "summary": "The effectiveDirective read-only property of the SecurityPolicyViolationEvent interface is a string representing the Content Security Policy (CSP) directive that was violated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/languages",
    "pageType": "web-api-instance-property",
    "summary": "The WorkerNavigator.languages read-only property\nreturns an array of strings representing the user's preferred\nlanguages. The language is described using BCP 47 language tags. In the returned\narray they are ordered by preference with the most preferred language first."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/sample",
    "pageType": "web-api-instance-property",
    "summary": "The sample read-only property of the SecurityPolicyViolationEvent interface is a string representing a sample of the resource that caused the Content Security Policy (CSP) violation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerNavigator/setAppBadge",
    "pageType": "web-api-instance-method",
    "summary": "The setAppBadge() method of the WorkerNavigator interface sets a badge on the icon associated with this app. If a value is passed to the method, this will be set as the value of the badge. Otherwise the badge will display as a dot, or other indicator as defined by the platform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/disposition",
    "pageType": "web-api-instance-property",
    "summary": "The disposition read-only property of the SecurityPolicyViolationEvent interface indicates how the violated Content Security Policy (CSP) is configured to be treated by the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/lineNumber",
    "pageType": "web-api-instance-property",
    "summary": "The lineNumber read-only property of the SecurityPolicyViolationEvent interface is the line number in the document or worker script at which the Content Security Policy (CSP) violation occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedWorker",
    "pageType": "web-api-interface",
    "summary": "The SharedWorker interface represents a specific kind of worker that can be accessed from several browsing contexts, such as several windows, iframes or even workers. They implement an interface different than dedicated workers and have a different global scope, SharedWorkerGlobalScope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/columnNumber",
    "pageType": "web-api-instance-property",
    "summary": "The columnNumber read-only property of the SecurityPolicyViolationEvent interface is the column number in the document or worker script at which the Content Security Policy (CSP) violation occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/sourceFile",
    "pageType": "web-api-instance-property",
    "summary": "The sourceFile read-only property of the SecurityPolicyViolationEvent interface is a string representing the URL of the script in which the Content Security Policy (CSP) violation occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedWorker/SharedWorker",
    "pageType": "web-api-constructor",
    "summary": "The SharedWorker() constructor creates a\nSharedWorker object that executes the script at the specified URL. This\nscript must obey the same-origin policy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/blockedURI",
    "pageType": "web-api-instance-property",
    "summary": "The blockedURI read-only property of the SecurityPolicyViolationEvent interface is a string representing the URI of the resource that was blocked because it violates a Content Security Policy (CSP)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedWorker/port",
    "pageType": "web-api-instance-property",
    "summary": "The port property of the SharedWorker\ninterface returns a MessagePort object used to communicate and control\nthe shared worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/statusCode",
    "pageType": "web-api-instance-property",
    "summary": "The statusCode read-only property of the SecurityPolicyViolationEvent interface is a number representing the HTTP status code of the window or worker in which the Content Security Policy (CSP) violation occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedWorker/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the SharedWorker interface fires when an error occurs in the worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/documentURI",
    "pageType": "web-api-instance-property",
    "summary": "The documentURI read-only property of the SecurityPolicyViolationEvent interface is a string representing the URI of the document or worker in which the Content Security Policy (CSP) violation occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCErrorEvent",
    "pageType": "web-api-interface",
    "summary": "The WebRTC API's RTCErrorEvent interface represents an error sent to a WebRTC object. It's based on the standard Event interface, but adds RTC-specific information describing the error, as shown below."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/violatedDirective",
    "pageType": "web-api-instance-property",
    "summary": "The violatedDirective read-only property of the SecurityPolicyViolationEvent interface is a string representing the Content Security Policy (CSP) directive that was violated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCErrorEvent/error",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCErrorEvent property error\ncontains an RTCError object describing the details of the error which the\nevent is announcing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/SecurityPolicyViolationEvent",
    "pageType": "web-api-constructor",
    "summary": "The SecurityPolicyViolationEvent() constructor creates a new SecurityPolicyViolationEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PluginArray",
    "pageType": "web-api-interface",
    "summary": "The PluginArray interface is used to store a list of Plugin objects; it's returned by the navigator.plugins property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem(\"name\") methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurityPolicyViolationEvent/originalPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The originalPolicy read-only property of the SecurityPolicyViolationEvent interface is a string containing the Content Security Policy (CSP) whose enforcement uncovered the violation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor",
    "pageType": "web-api-interface",
    "summary": "The Sensor interface of the Sensor APIs is the base class for all the other sensor interfaces. This interface cannot be used directly. Instead it provides properties, event handlers, and methods accessed by interfaces that inherit from it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor/stop",
    "pageType": "web-api-instance-method",
    "summary": "The stop() method of the Sensor interface deactivates the current sensor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySystemAccess",
    "pageType": "web-api-interface",
    "summary": "The MediaKeySystemAccess interface of the Encrypted Media Extensions API provides access to a Key System for decryption and/or a content protection provider. You can request an instance of this object using the Navigator.requestMediaKeySystemAccess() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp read-only property\nof the Sensor interface returns the timestamp of the latest sensor\nreading."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySystemAccess/keySystem",
    "pageType": "web-api-instance-property",
    "summary": "The keySystem read-only property of the MediaKeySystemAccess interface returns a string identifying the key system being used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor/start",
    "pageType": "web-api-instance-method",
    "summary": "The start() method of the Sensor interface activates one of the sensors based on Sensor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor/activated",
    "pageType": "web-api-instance-property",
    "summary": "The activated read-only property\nof the Sensor interface returns a boolean value indicating\nwhether the sensor is active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySystemAccess/getConfiguration",
    "pageType": "web-api-instance-method",
    "summary": "The getConfiguration() method of the MediaKeySystemAccess interface returns an object with the supported combination of the following configuration options:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor/activate_event",
    "pageType": "web-api-event",
    "summary": "The activate event is fired when a sensor becomes activated. It means that it will start obtaining readings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySystemAccess/createMediaKeys",
    "pageType": "web-api-instance-method",
    "summary": "The MediaKeySystemAccess.createMediaKeys() method returns a\nPromise that resolves to a new MediaKeys object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor/hasReading",
    "pageType": "web-api-instance-property",
    "summary": "The hasReading read-only\nproperty of the Sensor interface returns a boolean value\nindicating whether the sensor has a reading."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBIsochronousInTransferResult",
    "pageType": "web-api-interface",
    "summary": "The USBIsochronousInTransferResult interface of the WebUSB API provides the result from a call to the isochronousTransferIn() method of the USBDevice interface. It represents the result from requesting a transfer of data from the USB device to the USB host."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor/reading_event",
    "pageType": "web-api-event",
    "summary": "The reading event is fired when a new reading is available on a sensor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Sensor/error_event",
    "pageType": "web-api-event",
    "summary": "The error event is fired when an exception occurs on a sensor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemFileHandle",
    "pageType": "web-api-interface",
    "summary": "The FileSystemFileHandle interface of the File System API represents a handle to a file system entry. The interface is accessed through the window.showOpenFilePicker() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureObserver",
    "pageType": "web-api-interface",
    "summary": "The PressureObserver interface is part of the Compute Pressure API and is used to observe the pressure changes of system resources such as the CPU."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemFileHandle/createWritable",
    "pageType": "web-api-instance-method",
    "summary": "The createWritable() method of the FileSystemFileHandle interface creates a FileSystemWritableFileStream that can be used to write to a file.\nThe method returns a Promise which resolves to this created stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureObserver/takeRecords",
    "pageType": "web-api-instance-method",
    "summary": "The takeRecords() method of the PressureObserver interface returns the current list of pressure records stored in the pressure observer, emptying it out."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureObserver/PressureObserver",
    "pageType": "web-api-constructor",
    "summary": "The PressureObserver() constructor creates a new PressureObserver object to watch for changes to pressure changes of system resources such as the CPU."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemFileHandle/createSyncAccessHandle",
    "pageType": "web-api-instance-method",
    "summary": "The createSyncAccessHandle() method of the\nFileSystemFileHandle interface returns a Promise which resolves to a FileSystemSyncAccessHandle object\nthat can be used to synchronously read from and write to a file. The synchronous nature of this method brings performance advantages,\nbut it is only usable inside dedicated Web Workers for files within the origin private file system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureObserver/knownSources_static",
    "pageType": "web-api-static-property",
    "summary": "The static knownSources read-only property of the PressureObserver interface returns an array of the source values supported by the user agent in alphabetical order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemFileHandle/getFile",
    "pageType": "web-api-instance-method",
    "summary": "The getFile() method of the\nFileSystemFileHandle interface returns a Promise which resolves to a\nFile object representing the state on disk of the entry represented by the handle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureObserver/observe",
    "pageType": "web-api-instance-method",
    "summary": "The observe() method of the PressureObserver interface tells the pressure observer to start observing pressure changes. After this method is called, the observer will call its callback function when a pressure record for the specified source is observed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureObserver/unobserve",
    "pageType": "web-api-instance-method",
    "summary": "The unobserve() method of the PressureObserver interface stops the pressure observer callback from receiving pressure records from the specified source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnitValue",
    "pageType": "web-api-interface",
    "summary": "The CSSUnitValue interface of the CSS Typed Object Model API represents values that contain a single unit type. For example, \"42px\" would be represented by a CSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureObserver/disconnect",
    "pageType": "web-api-instance-method",
    "summary": "The disconnect() method of the PressureObserver interface stops the pressure observer callback from receiving pressure records from all sources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnitValue/unit",
    "pageType": "web-api-instance-property",
    "summary": "The CSSUnitValue.unit read-only property\nof the CSSUnitValue interface returns a string\nindicating the type of unit."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGViewElement",
    "pageType": "web-api-interface",
    "summary": "The SVGViewElement interface provides access to the properties of <view> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGViewElement/preserveAspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The preserveAspectRatio read-only property of the SVGViewElement interface reflects the preserveAspectRatio attribute of the given <view> element. It defines how the content within the view should be scaled to fit its viewport while preserving its aspect ratio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnitValue/value",
    "pageType": "web-api-instance-property",
    "summary": "The CSSUnitValue.value property of the\nCSSUnitValue interface returns a double indicating the number of units."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGViewElement/viewBox",
    "pageType": "web-api-instance-property",
    "summary": "The viewBox read-only property of the SVGViewElement interface reflects the viewBox attribute of the given <view> element. It represents the x, y, width, and height values defining the area to be used for the view's viewBox."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnitValue/CSSUnitValue",
    "pageType": "web-api-constructor",
    "summary": "The CSSUnitValue() constructor creates a\nnew CSSUnitValue object which returns a new CSSUnitValue\nobject which represents values that contain a single unit type. For example, \"42px\"\nwould be represented by a CSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIOutput",
    "pageType": "web-api-interface",
    "summary": "The MIDIOutput interface of the Web MIDI API provides methods to add messages to the queue of an output device, and to clear the queue of messages."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIOutput/send",
    "pageType": "web-api-instance-method",
    "summary": "The send() method of the MIDIOutput interface queues messages for the corresponding MIDI port. The message can be sent immediately, or with an optional timestamp to delay sending."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformanceElementTiming interface contains render timing information for image and text node elements the developer annotated with an elementtiming attribute for observation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIOutput/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the MIDIOutput interface clears the queue of messages being sent to the output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/renderTime",
    "pageType": "web-api-instance-property",
    "summary": "The renderTime read-only property of the PerformanceElementTiming interface returns the render time of the associated element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLButtonElement interface indicates the name of the <button> element or the empty string if the element has no name. It reflects the element's name attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/identifier",
    "pageType": "web-api-instance-property",
    "summary": "The identifier read-only property of the PerformanceElementTiming interface returns the value of the elementtiming attribute on the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLButtonElement interface provides properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <button> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/element",
    "pageType": "web-api-instance-property",
    "summary": "The element read-only property of the PerformanceElementTiming interface returns an Element which is a pointer to the observed element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/formTarget",
    "pageType": "web-api-instance-property",
    "summary": "The formTarget property of the HTMLButtonElement interface is the tab, window, or iframe where the response of the submitted <form> is to be displayed. It reflects the value of the <button> element's formtarget attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLButtonElement.disabled property indicates whether the control is disabled, meaning that it does not accept any clicks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the PerformanceElementTiming interface returns the initial URL of the resource request when the element is an image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/willValidate",
    "pageType": "web-api-instance-property",
    "summary": "The willValidate read-only property of the HTMLButtonElement interface indicates whether the <button> element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation, including:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/loadTime",
    "pageType": "web-api-instance-property",
    "summary": "The loadTime read-only property of the PerformanceElementTiming interface always returns 0 for text. For images it returns the time which is the latest between the time the image resource is loaded and the time it is attached to the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the HTMLButtonElement interface is a string that indicates the behavior type of the <button> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PerformanceElementTiming interface is a serializer; it returns a JSON representation of the PerformanceElementTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/validity",
    "pageType": "web-api-instance-property",
    "summary": "The validity read-only property of the HTMLButtonElement interface returns a ValidityState object that represents the validity states this element is in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/formNoValidate",
    "pageType": "web-api-instance-property",
    "summary": "The formNoValidate property of the HTMLButtonElement interface is a boolean value indicating if the <form> will bypass constraint validation when submitted via the <button>. It reflects the <button> element's formnovalidate attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/naturalHeight",
    "pageType": "web-api-instance-property",
    "summary": "The naturalHeight read-only property of the PerformanceElementTiming interface returns the intrinsic height of the image element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/formAction",
    "pageType": "web-api-instance-property",
    "summary": "The formAction property of the HTMLButtonElement interface is the URL of the program that is executed on the server when the form that owns this control is submitted. It reflects the value of the <button>'s formaction attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/intersectionRect",
    "pageType": "web-api-instance-property",
    "summary": "The intersectionRect read-only property of the PerformanceElementTiming interface returns the rectangle of the element within the viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/command",
    "pageType": "web-api-instance-property",
    "summary": "The command property of the HTMLButtonElement interface gets and sets the action to be performed on an element being controlled by this button. For this to have an effect, commandfor must be set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the PerformanceElementTiming interface returns the id of the associated element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLButtonElement interface returns an HTMLFormElement object that owns this <button>, or null if this button is not owned by any form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the HTMLButtonElement interface represents the value of the <button> element as a string, or the empty string if no value is set. It reflects the element's value attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceElementTiming/naturalWidth",
    "pageType": "web-api-instance-property",
    "summary": "The naturalWidth read-only property of the PerformanceElementTiming interface returns the intrinsic width of the image element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/setCustomValidity",
    "pageType": "web-api-instance-method",
    "summary": "The setCustomValidity() method of the HTMLButtonElement interface sets the custom validity message for the <button> element. Use the empty string to indicate that the element does not have a custom validity error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGraphicsElement",
    "pageType": "web-api-interface",
    "summary": "The SVGGraphicsElement interface represents SVG elements whose primary purpose is to directly render graphics into a group."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/reportValidity",
    "pageType": "web-api-instance-method",
    "summary": "The reportValidity() method of the HTMLButtonElement interface performs the same validity checking steps as the checkValidity() method. In addition, if the invalid event is not canceled, the browser displays the problem to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGraphicsElement/getCTM",
    "pageType": "web-api-instance-method",
    "summary": "The getCTM() method of the SVGGraphicsElement interface represents the matrix that transforms the current element's coordinate system to its SVG viewport's coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/validationMessage",
    "pageType": "web-api-instance-property",
    "summary": "The validationMessage read-only property of the HTMLButtonElement interface returns a string representing a localized message that describes the validation constraints that the <button> control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (the <button>'s type is button or reset), or it satisfies its constraints."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGraphicsElement/requiredExtensions",
    "pageType": "web-api-instance-property",
    "summary": "The requiredExtensions read-only property of the SVGGraphicsElement interface reflects the requiredExtensions attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/formMethod",
    "pageType": "web-api-instance-property",
    "summary": "The formMethod property of the HTMLButtonElement interface is the HTTP method used to submit the <form> if the <button> element is the control that submits the form. It reflects the value of the <button>'s formmethod attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGraphicsElement/systemLanguage",
    "pageType": "web-api-instance-property",
    "summary": "The systemLanguage read-only property of the SVGGraphicsElement interface reflects the systemLanguage attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/popoverTargetAction",
    "pageType": "web-api-instance-property",
    "summary": "The popoverTargetAction property of the HTMLButtonElement interface gets and sets the action to be performed (\"hide\", \"show\", or \"toggle\") on a popover element being controlled by a button."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/commandForElement",
    "pageType": "web-api-instance-property",
    "summary": "The commandForElement property of the HTMLButtonElement interface gets and sets the element to control via a button."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGraphicsElement/getBBox",
    "pageType": "web-api-instance-method",
    "summary": "The SVGGraphicsElement.getBBox() method allows us to determine\nthe coordinates of the smallest rectangle in which the object fits. The coordinates\nreturned are with respect to the current SVG space (after the application of all\ngeometry attributes on all the elements contained in the target element)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/formEnctype",
    "pageType": "web-api-instance-property",
    "summary": "The formEnctype property of the HTMLButtonElement interface is the MIME type of the content sent to the server when the form is submitted. It reflects the value of the <button>'s formenctype attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGraphicsElement/transform",
    "pageType": "web-api-instance-property",
    "summary": "The transform read-only property of the SVGGraphicsElement interface reflects the computed value of the transform property and its corresponding transform attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/popoverTargetElement",
    "pageType": "web-api-instance-property",
    "summary": "The popoverTargetElement property of the HTMLButtonElement interface gets and sets the popover element to control via a button."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/labels",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLButtonElement.labels read-only property returns a\nNodeList of the <label> elements associated with the\n<button> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGraphicsElement/getScreenCTM",
    "pageType": "web-api-instance-method",
    "summary": "The getScreenCTM() method of the SVGGraphicsElement interface represents the matrix that transforms the current element's coordinate system to the coordinate system of the SVG viewport for the SVG document fragment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLButtonElement/checkValidity",
    "pageType": "web-api-instance-method",
    "summary": "The checkValidity() method of the HTMLButtonElement interface returns a boolean value which indicates if the element meets any constraint validation rules applied to it. If false, the method also fires an invalid event on the element. Because there's no default browser behavior for checkValidity(), canceling this invalid event has no effect. It always returns true if the <button> element's type is \"button\" or \"reset\", because such buttons are never candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportSendStream",
    "pageType": "web-api-interface",
    "summary": "The WebTransportSendStream interface of the WebTransport API is a specialized WritableStream that is used to send outbound data in both unidirectional or bidirectional WebTransport streams."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformValue",
    "pageType": "web-api-interface",
    "summary": "The CSSTransformValue interface of the CSS Typed Object Model API represents transform-list values as used by the CSS transform property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportSendStream/sendOrder",
    "pageType": "web-api-instance-property",
    "summary": "The sendOrder property of the WebTransportSendStream interface indicates the send priority of this stream relative to other streams for which the value has been set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformValue/entries",
    "pageType": "web-api-instance-method",
    "summary": "The CSSTransformValue.entries() method\nreturns an array of a given object's own enumerable\nproperty [key, value] pairs in the same order as that provided by a\nfor...in loop (the difference being that a for-in loop enumerates\nproperties in the prototype chain as well)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformValue/CSSTransformValue",
    "pageType": "web-api-constructor",
    "summary": "The CSSTransformValue() constructor\ncreates a new CSSTransformValue object which represents a list of\nindividual transform objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportSendStream/getStats",
    "pageType": "web-api-instance-method",
    "summary": "The getStats() method of the WebTransportSendStream interface asynchronously returns an object containing statistics for the current stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformValue/is2D",
    "pageType": "web-api-instance-property",
    "summary": "The read-only is2D property of the\nCSSTransformValue interface returns whether the transform is 2D or 3D."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSupportsRule",
    "pageType": "web-api-interface",
    "summary": "The CSSSupportsRule interface represents a single CSS @supports at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformValue/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property of the\nCSSTransformValue interface returns the number of transform components in\nthe list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRectElement",
    "pageType": "web-api-interface",
    "summary": "The SVGRectElement interface provides access to the properties of <rect> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformValue/keys",
    "pageType": "web-api-instance-method",
    "summary": "The CSSTransformValue.keys() method\nreturns a new array iterator object that contains the keys\nfor each index in the array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformValue/toMatrix",
    "pageType": "web-api-instance-method",
    "summary": "The toMatrix() method of the\nCSSTransformValue interface returns a DOMMatrix object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRectElement/ry",
    "pageType": "web-api-instance-property",
    "summary": "The ry read-only property of the SVGRectElement interface describes the vertical curve of the corners of an SVG rectangle as a SVGAnimatedLength. The length is in user coordinate system units along the y-axis. Its syntax is the same as that for <length>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformValue/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The CSSTransformValue.forEach() method executes a provided function once for each element of the CSSTransformValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRectElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGRectElement interface describes the horizontal coordinate of the position of an SVG rectangle as a SVGAnimatedLength. The <coordinate> is a length in the user coordinate system that is the given distance from the origin of the user coordinate system along the x-axis. Its syntax is the same as that for <length>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformValue/values",
    "pageType": "web-api-instance-method",
    "summary": "The CSSTransformValue.values() returns a\nnew array iterator object that contains the values for\neach index in the CSSTransformValue object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRectElement/rx",
    "pageType": "web-api-instance-property",
    "summary": "The rx read-only property of the SVGRectElement interface describes the horizontal curve of the corners of an SVG rectangle as a SVGAnimatedLength. The length is in user coordinate system units along the x-axis. Its syntax is the same as that for <length>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEDiffuseLightingElement interface corresponds to the <feDiffuseLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRectElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGRectElement interface describes the vertical size of an SVG rectangle as a SVGAnimatedLength. The length is in user coordinate system units along the y-axis. Its syntax is the same as that for <length>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/diffuseConstant",
    "pageType": "web-api-instance-property",
    "summary": "The diffuseConstant read-only property of the SVGFEDiffuseLightingElement interface reflects the diffuseConstant attribute of the given <feDiffuseLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRectElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGRectElement interface describes the vertical coordinate of the position of an SVG rectangle as a SVGAnimatedLength. The <coordinate> is a length in the user coordinate system that is the given distance from the origin of the user coordinate system along the y-axis. Its syntax is the same as that for <length>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEDiffuseLightingElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRectElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGRectElement interface describes the horizontal size of an SVG rectangle as a SVGAnimatedLength. The length is in user coordinate system units along the x-axis. Its syntax is the same as that for <length>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/kernelUnitLengthX",
    "pageType": "web-api-instance-property",
    "summary": "The kernelUnitLengthX read-only property of the SVGFEDiffuseLightingElement interface reflects the X component of the kernelUnitLength attribute of the given <feDiffuseLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/surfaceScale",
    "pageType": "web-api-instance-property",
    "summary": "The surfaceScale read-only property of the SVGFEDiffuseLightingElement interface reflects the surfaceScale attribute of the given <feDiffuseLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorageWorkletGlobalScope",
    "pageType": "web-api-interface",
    "summary": "The SharedStorageWorkletGlobalScope interface of the Shared Storage API represents the global scope of a SharedStorageWorklet module."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/kernelUnitLengthY",
    "pageType": "web-api-instance-property",
    "summary": "The kernelUnitLengthY read-only property of the SVGFEDiffuseLightingElement interface reflects the Y component of the kernelUnitLength attribute of the given <feDiffuseLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorageWorkletGlobalScope/sharedStorage",
    "pageType": "web-api-instance-property",
    "summary": "The context read-only property of the\nSharedStorageWorkletGlobalScope interface contains a WorkletSharedStorage object instance, which represents the shared storage for a particular origin as exposed to a worklet context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEDiffuseLightingElement interface reflects the in attribute of the given <feDiffuseLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEDiffuseLightingElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorageWorkletGlobalScope/register",
    "pageType": "web-api-instance-method",
    "summary": "The register() method of the\nSharedStorageWorkletGlobalScope interface registers an operation defined inside the current worklet module."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEDiffuseLightingElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSymbolElement",
    "pageType": "web-api-interface",
    "summary": "The SVGSymbolElement interface corresponds to the <symbol> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEDiffuseLightingElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDiffuseLightingElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEDiffuseLightingElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSymbolElement/preserveAspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The preserveAspectRatio read-only property of the SVGSymbolElement interface reflects the preserveAspectRatio attribute of the given <symbol> element. It defines how the symbol's content should be scaled to fit the given space, preserving its aspect ratio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSContainerRule",
    "pageType": "web-api-interface",
    "summary": "The CSSContainerRule interface represents a single CSS @container rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSymbolElement/viewBox",
    "pageType": "web-api-instance-property",
    "summary": "The viewBox read-only property of the SVGSymbolElement interface reflects the viewBox attribute of the given <symbol> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSContainerRule/containerName",
    "pageType": "web-api-instance-property",
    "summary": "The read-only containerName property of the CSSContainerRule interface represents the container name of the associated CSS @container at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSContainerRule/containerQuery",
    "pageType": "web-api-instance-property",
    "summary": "The read-only containerQuery property of the CSSContainerRule interface returns a string representing the container conditions that are evaluated when the container changes size in order to determine if the styles in the associated @container are applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequestEventTarget/timeout_event",
    "pageType": "web-api-event",
    "summary": "The timeout event is fired when progression is terminated due to preset time expiring."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorklet",
    "pageType": "web-api-interface",
    "summary": "The AudioWorklet interface of the Web Audio API is used to supply custom audio processing scripts that execute in a separate thread to provide very low latency audio processing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequestEventTarget",
    "pageType": "web-api-interface",
    "summary": "XMLHttpRequestEventTarget is the interface that describes the event handlers shared on XMLHttpRequest and XMLHttpRequestUpload."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioWorklet/port",
    "pageType": "web-api-instance-property",
    "summary": "The port read-only property of the AudioWorklet interface returns a MessagePort object that can be used to send and receive messages between the main thread and the associated AudioWorkletGlobalScope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequestEventTarget/load_event",
    "pageType": "web-api-event",
    "summary": "The load event is fired when an XMLHttpRequest transaction completes successfully."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFESpecularLightingElement interface corresponds to the <feSpecularLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFESpecularLightingElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequestEventTarget/progress_event",
    "pageType": "web-api-event",
    "summary": "The progress event is fired periodically when a request receives more data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/specularConstant",
    "pageType": "web-api-instance-property",
    "summary": "The specularConstant read-only property of the SVGFESpecularLightingElement interface reflects the specularConstant attribute of the given <feSpecularLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequestEventTarget/loadend_event",
    "pageType": "web-api-event",
    "summary": "The loadend event is fired when a request has completed, whether successfully (after load) or unsuccessfully (after abort or error)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/kernelUnitLengthX",
    "pageType": "web-api-instance-property",
    "summary": "The kernelUnitLengthX read-only property of the SVGFESpecularLightingElement interface reflects the x value of the kernelUnitLength attribute of the given <feSpecularLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequestEventTarget/error_event",
    "pageType": "web-api-event",
    "summary": "The error event is fired when the request encountered an error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/specularExponent",
    "pageType": "web-api-instance-property",
    "summary": "The specularExponent read-only property of the SVGFESpecularLightingElement interface reflects the specularExponent attribute of the given <feSpecularLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/surfaceScale",
    "pageType": "web-api-instance-property",
    "summary": "The surfaceScale read-only property of the SVGFESpecularLightingElement interface reflects the surfaceScale attribute of the given <feSpecularLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequestEventTarget/loadstart_event",
    "pageType": "web-api-event",
    "summary": "The loadstart event is fired when a request has started to load data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/kernelUnitLengthY",
    "pageType": "web-api-instance-property",
    "summary": "The kernelUnitLengthY read-only property of the SVGFESpecularLightingElement interface reflects the y value of the kernelUnitLength attribute of the given <feSpecularLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequestEventTarget/abort_event",
    "pageType": "web-api-event",
    "summary": "The abort event is fired when a request has been aborted, for example because the program called XMLHttpRequest.abort()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFESpecularLightingElement interface reflects the in attribute of the given <feSpecularLighting> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFESpecularLightingElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics",
    "pageType": "web-api-interface",
    "summary": "The TextMetrics interface represents the dimensions of a piece of text in the canvas; a TextMetrics instance can be retrieved using the CanvasRenderingContext2D.measureText() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFESpecularLightingElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFESpecularLightingElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/alphabeticBaseline",
    "pageType": "web-api-instance-property",
    "summary": "The read-only alphabeticBaseline property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.textBaseline property to the alphabetic baseline of the line box, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/emHeightAscent",
    "pageType": "web-api-instance-property",
    "summary": "The read-only emHeightAscent property of the TextMetrics interface returns the distance from the horizontal line indicated by the CanvasRenderingContext2D.textBaseline property to the top of the em square in the line box, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpecularLightingElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFESpecularLightingElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PeriodicWave",
    "pageType": "web-api-interface",
    "summary": "The PeriodicWave interface defines a periodic waveform that can be used to shape the output of an OscillatorNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/fontBoundingBoxAscent",
    "pageType": "web-api-instance-property",
    "summary": "The read-only fontBoundingBoxAscent property of the TextMetrics interface returns the distance from the horizontal line indicated by the CanvasRenderingContext2D.textBaseline attribute, to the top of the highest bounding rectangle of all the fonts used to render the text, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PeriodicWave/PeriodicWave",
    "pageType": "web-api-constructor",
    "summary": "The PeriodicWave() constructor of the Web Audio API creates a new\nPeriodicWave object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/actualBoundingBoxAscent",
    "pageType": "web-api-instance-property",
    "summary": "The read-only actualBoundingBoxAscent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.textBaseline attribute to the top of the bounding rectangle used to render the text, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Media_Session_API",
    "pageType": "web-api-overview",
    "summary": "The Media Session API provides a way to customize media notifications. It does this by providing metadata for display by the user agent for the media your web app is playing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/ideographicBaseline",
    "pageType": "web-api-instance-property",
    "summary": "The read-only ideographicBaseline property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.textBaseline property to the ideographic baseline of the line box, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMapElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLMapElement represents the unique name <map> element.\nIts value can be used with the useMap attribute of the <img> element to reference a <map> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMapElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLMapElement interface provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/actualBoundingBoxLeft",
    "pageType": "web-api-instance-property",
    "summary": "The read-only actualBoundingBoxLeft property of the TextMetrics interface is a double giving the distance parallel to the baseline from the alignment point given by the CanvasRenderingContext2D.textAlign property to the left side of the bounding rectangle of the given text, in CSS pixels; positive numbers indicating a distance going left from the given alignment point."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMapElement/areas",
    "pageType": "web-api-instance-property",
    "summary": "The areas read-only property of the HTMLMapElement interface returns a collection of <area> elements associated with the <map> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebKitPoint",
    "pageType": "web-api-interface",
    "summary": "Point is an interface which represents a point in 2-dimensional space. It is non-standard, not broadly compatible, and should not be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/emHeightDescent",
    "pageType": "web-api-instance-property",
    "summary": "The read-only emHeightDescent property of the TextMetrics interface returns the distance from the horizontal line indicated by the CanvasRenderingContext2D.textBaseline property to the bottom of the em square in the line box, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/actualBoundingBoxRight",
    "pageType": "web-api-instance-property",
    "summary": "The read-only actualBoundingBoxRight property of the TextMetrics interface is a double giving the distance parallel to the baseline from the alignment point given by the CanvasRenderingContext2D.textAlign property to the right side of the bounding rectangle of the given text, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnection/state",
    "pageType": "web-api-instance-property",
    "summary": "The state attribute reflects the presentation connection's current state. Depending on the current PresentationConnectionState, the state attribute can hold one of the following values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnection",
    "pageType": "web-api-interface",
    "summary": "The PresentationConnection interface of the Presentation API provides methods and properties for managing a single presentation. Each presentation connection is represented by a PresentationConnection object. Both the controlling user agent and receiving user agent MUST implement PresentationConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/width",
    "pageType": "web-api-instance-property",
    "summary": "The read-only width property of the TextMetrics interface contains the text's advance width (the width of that inline box) in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnection/binaryType",
    "pageType": "web-api-instance-property",
    "summary": "When a PresentationConnection object is created, its binaryType IDL attribute MUST be set to the string \"arraybuffer\". Upon getting, the attribute MUST return its most recent value (the value it was last set as). Upon setting, the user agent MUST set the IDL attribute to the new value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/actualBoundingBoxDescent",
    "pageType": "web-api-instance-property",
    "summary": "The read-only actualBoundingBoxDescent property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.textBaseline attribute to the bottom of the bounding rectangle used to render the text, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnection/send",
    "pageType": "web-api-instance-method",
    "summary": "The send() method of the\nPresentationConnection interface tells a controlling browsing context to\nsend binary or text data to a presenting browsing context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/hangingBaseline",
    "pageType": "web-api-instance-property",
    "summary": "The read-only hangingBaseline property of the TextMetrics interface is a double giving the distance from the horizontal line indicated by the CanvasRenderingContext2D.textBaseline property to the hanging baseline of the line box, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnection/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the\nPresentationConnection interface returns the URL used to create or\nreconnect to the presentation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnection/close",
    "pageType": "web-api-instance-method",
    "summary": "When the close() method is called on a PresentationConnection, the user agent begins the process of closing the connection by sending an empty closeMessage with the closeReason set to closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextMetrics/fontBoundingBoxDescent",
    "pageType": "web-api-instance-property",
    "summary": "The read-only fontBoundingBoxDescent property of the TextMetrics interface returns the distance from the horizontal line indicated by the CanvasRenderingContext2D.textBaseline attribute to the bottom of the bounding rectangle of all the fonts used to render the text, in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnection/terminate",
    "pageType": "web-api-instance-method",
    "summary": "When the terminate() method is called on a PresentationConnection, the user agent begins the process of terminating the presentation. The exact process differs depending on whether terminate() is called in the controlling or the presenting context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEDisplacementMapElement interface corresponds to the <feDisplacementMap> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnection/id",
    "pageType": "web-api-instance-property",
    "summary": "The id attribute specifies the presentation identifier of a presentation connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/scale",
    "pageType": "web-api-instance-property",
    "summary": "The scale read-only property of the SVGFEDisplacementMapElement interface reflects the scale attribute of the given <feDisplacementMap> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleProperties",
    "pageType": "web-api-interface",
    "summary": "The CSSStyleProperties interface of the CSS Object Model (CSSOM) represents inline or computed styles available on an element, or the styles associated with a CSS style rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleProperties/cssFloat",
    "pageType": "web-api-instance-property",
    "summary": "The cssFloat property of the CSSStyleProperties interface returns the CSS float property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEDisplacementMapElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeys",
    "pageType": "web-api-interface",
    "summary": "The MediaKeys interface of Encrypted Media Extensions API represents a set of keys that an associated HTMLMediaElement can use for decryption of media data during playback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEDisplacementMapElement interface reflects the in attribute of the given <feDisplacementMap> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeys/setServerCertificate",
    "pageType": "web-api-instance-method",
    "summary": "The setServerCertificate() method of the MediaKeys interface provides a server certificate to be used to encrypt messages to the license server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/in2",
    "pageType": "web-api-instance-property",
    "summary": "The in2 read-only property of the SVGFEDisplacementMapElement interface reflects the in2 attribute of the given <feDisplacementMap> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeys/getStatusForPolicy",
    "pageType": "web-api-instance-method",
    "summary": "The getStatusForPolicy() method of the MediaKeys interface is used to check whether the Content Decryption Module (CDM) would allow the presentation of encrypted media data using the keys, based on the specified policy requirements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEDisplacementMapElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeys/createSession",
    "pageType": "web-api-instance-method",
    "summary": "The createSession() method of the MediaKeys interface returns a new MediaKeySession object, which represents a context for message exchange with a content decryption module (CDM)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEDisplacementMapElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStore/change_event",
    "pageType": "web-api-event",
    "summary": "A change event is fired at a CookieStore object when a change is made to any cookie."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStore",
    "pageType": "web-api-interface",
    "summary": "The CookieStore interface of the Cookie Store API provides methods for getting and setting cookies asynchronously from either a page or a service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEDisplacementMapElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStore/set",
    "pageType": "web-api-instance-method",
    "summary": "The set() method of the CookieStore interface sets a cookie with the given name and value or options object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/xChannelSelector",
    "pageType": "web-api-instance-property",
    "summary": "The xChannelSelector read-only property of the SVGFEDisplacementMapElement interface reflects the xChannelSelector attribute of the given <feDisplacementMap> element. It takes one of the SVG_CHANNEL_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStore/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the CookieStore interface returns a Promise that resolves to a single cookie matching the given name or options object. The method will return the first cookie that matches."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/yChannelSelector",
    "pageType": "web-api-instance-property",
    "summary": "The yChannelSelector read-only property of the SVGFEDisplacementMapElement interface reflects the yChannelSelector attribute of the given <feDisplacementMap> element. It takes one of the SVG_CHANNEL_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStore/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the CookieStore interface deletes a cookie that matches the given name or options object.\nThe method expires the cookie by changing its date to one in the past."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDisplacementMapElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEDisplacementMapElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CookieStore/getAll",
    "pageType": "web-api-instance-method",
    "summary": "The getAll() method of the CookieStore interface returns a Promise that resolves as an array of cookies that match the name or options passed to it.\nPassing no parameters will return all cookies for the current context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectedContentElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLSelectedContentElement interface represents a <selectedcontent> element in the DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue",
    "pageType": "web-api-instance-method",
    "summary": "The CSSStyleDeclaration.getPropertyValue() method interface returns a string containing the value of a specified CSS property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReaderSync",
    "pageType": "web-api-interface",
    "summary": "The FileReaderSync interface allows to read File or Blob objects synchronously. This interface is only available in workers as it enables synchronous I/O that could potentially block."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration",
    "pageType": "web-api-interface",
    "summary": "The CSSStyleDeclaration interface is the base class for objects that represent CSS declaration blocks with different supported sets of CSS style information:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReaderSync/FileReaderSync",
    "pageType": "web-api-constructor",
    "summary": "The FileReaderSync() constructor creates a new FileReaderSync."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty",
    "pageType": "web-api-instance-method",
    "summary": "The CSSStyleDeclaration.removeProperty() method interface\nremoves a property from a CSS style declaration object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReaderSync/readAsArrayBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The readAsArrayBuffer() method of the FileReaderSync interface allows to read File or Blob objects in a synchronous way into an ArrayBuffer. This interface is only available in workers as it enables synchronous I/O that could potentially block."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyCSSValue",
    "pageType": "web-api-instance-method",
    "summary": "The CSSStyleDeclaration.getPropertyCSSValue()\nmethod interface returns a CSSValue containing the CSS value for a\nproperty. Note that it returns null if the property name is a\nshorthand property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReaderSync/readAsText",
    "pageType": "web-api-instance-method",
    "summary": "The readAsText() method of the FileReaderSync interface allows to read File or Blob objects in a synchronous way into a string. This interface is only available in workers as it enables synchronous I/O that could potentially block."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/item",
    "pageType": "web-api-instance-method",
    "summary": "The CSSStyleDeclaration.item()\nmethod interface returns a CSS property name from a CSSStyleDeclaration\nby index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReaderSync/readAsBinaryString",
    "pageType": "web-api-instance-method",
    "summary": "The readAsBinaryString() method of the FileReaderSync interface allows to read File or Blob objects in a synchronous way into a string. This interface is only available in workers as it enables synchronous I/O that could potentially block."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyPriority",
    "pageType": "web-api-instance-method",
    "summary": "The CSSStyleDeclaration.getPropertyPriority() method interface returns\na string that provides all explicitly set priorities on the CSS\nproperty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/cssText",
    "pageType": "web-api-instance-property",
    "summary": "The cssText property of the CSSStyleDeclaration interface returns or sets the text of the element's inline style declaration only."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileReaderSync/readAsDataURL",
    "pageType": "web-api-instance-method",
    "summary": "The readAsDataURL() method of the FileReaderSync interface allows to read File or Blob objects in a synchronous way into a string representing a data URL. This interface is only available in workers as it enables synchronous I/O that could potentially block."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/parentRule",
    "pageType": "web-api-instance-property",
    "summary": "The CSSStyleDeclaration.parentRule read-only\nproperty returns a CSSRule that is the parent of this style\nblock, e.g., a CSSStyleRule representing the style for a CSS\nselector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only property returns an integer that represents the\nnumber of style declarations in this CSS declaration block."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation",
    "pageType": "web-api-interface",
    "summary": "The Navigation interface of the Navigation API allows control over all navigation actions for the current window in one central place, including initiating navigations programmatically, examining navigation history entries, and managing navigations as they happen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/cssFloat",
    "pageType": "web-api-instance-property",
    "summary": "The cssFloat property of the CSSStyleDeclaration interface returns the result of invoking CSSStyleDeclaration.getPropertyValue() with float as an argument."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/canGoForward",
    "pageType": "web-api-instance-property",
    "summary": "The canGoForward read-only property of the\nNavigation interface returns true if it is possible to navigate forwards in the navigation history\n(i.e., the currentEntry is not the last one in the history entry list),\nand false if it is not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleDeclaration/setProperty",
    "pageType": "web-api-instance-method",
    "summary": "The\nCSSStyleDeclaration.setProperty() method interface sets\na new value for a property on a CSS style declaration object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/navigateerror_event",
    "pageType": "web-api-event",
    "summary": "The navigateerror event of the Navigation interface is fired when a navigation fails."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGEllipseElement",
    "pageType": "web-api-interface",
    "summary": "The SVGEllipseElement interface provides access to the properties of <ellipse> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGEllipseElement/ry",
    "pageType": "web-api-instance-property",
    "summary": "The ry read-only property of the SVGEllipseElement interface describes the y-axis radius of the ellipse as an SVGAnimatedLength. It reflects the computed value of the ry attribute on the <ellipse> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/back",
    "pageType": "web-api-instance-method",
    "summary": "The back() method of the\nNavigation interface navigates backwards by one entry in the navigation history."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGEllipseElement/cx",
    "pageType": "web-api-instance-property",
    "summary": "The cx read-only property of the SVGEllipseElement interface describes the x-axis coordinate of the center of the ellipse as an SVGAnimatedLength. It reflects the computed value of the cx attribute on the <ellipse> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/updateCurrentEntry",
    "pageType": "web-api-instance-method",
    "summary": "The updateCurrentEntry() method of the Navigation interface updates the state of the currentEntry; used in cases where the state change will be independent of a navigation or reload."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGEllipseElement/rx",
    "pageType": "web-api-instance-property",
    "summary": "The rx read-only property of the SVGEllipseElement interface describes the x-axis radius of the ellipse as an SVGAnimatedLength. It reflects the computed value of the rx attribute on the <ellipse> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGEllipseElement/cy",
    "pageType": "web-api-instance-property",
    "summary": "The cy read-only property of the SVGEllipseElement interface describes the y-axis coordinate of the center of the ellipse as an SVGAnimatedLength. It reflects the computed value of the cy attribute on the <ellipse> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/currentEntry",
    "pageType": "web-api-instance-property",
    "summary": "The currentEntry read-only property of the\nNavigation interface returns a NavigationHistoryEntry object representing the location the user is currently navigated to right now."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Ink_API",
    "pageType": "web-api-overview",
    "summary": "The Ink API allows browsers to directly make use of available OS-level compositors when drawing pen strokes in an inking app feature, thereby reducing latency and increasing performance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/forward",
    "pageType": "web-api-instance-method",
    "summary": "The forward() method of the\nNavigation interface navigates forwards by one entry in the navigation history."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TimeRanges",
    "pageType": "web-api-interface",
    "summary": "When loading a media resource for use by an <audio> or <video> element, the TimeRanges interface is used for representing the time ranges of the media resource that have been buffered, the time ranges that have been played, and the time ranges that are seekable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TimeRanges/start",
    "pageType": "web-api-instance-method",
    "summary": "The start() method of the TimeRanges interface returns the time offset (in seconds) at which a specified time range begins."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the\nNavigation interface returns an array of NavigationHistoryEntry objects representing all existing history entries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TimeRanges/end",
    "pageType": "web-api-instance-method",
    "summary": "The end() method of the TimeRanges interface returns the time offset (in seconds) at which a specified time range ends."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/traverseTo",
    "pageType": "web-api-instance-method",
    "summary": "The traverseTo() method of the Navigation interface navigates to the NavigationHistoryEntry identified by the given key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TimeRanges/length",
    "pageType": "web-api-instance-property",
    "summary": "The TimeRanges.length read-only property returns the\nnumber of ranges in the object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/activation",
    "pageType": "web-api-instance-property",
    "summary": "The activation read-only property of the Navigation interface returns a NavigationActivation object containing information about the most recent cross-document navigation, which \"activated\" this Document. The property will stay constant during same-document navigations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnparsedValue",
    "pageType": "web-api-interface",
    "summary": "The CSSUnparsedValue interface of the CSS Typed Object Model API represents property values that reference custom properties. It consists of a list of string fragments and variable references."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnparsedValue/entries",
    "pageType": "web-api-instance-method",
    "summary": "The CSSUnparsedValue.entries() method\nreturns an array of a given object's own enumerable property [key, value]\npairs in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/canGoBack",
    "pageType": "web-api-instance-property",
    "summary": "The canGoBack read-only property of the\nNavigation interface returns true\nif it is possible to navigate backwards in the navigation history\n(i.e., the currentEntry is\nnot the first one in the history entry list),\nand false if it is not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnparsedValue/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the\nCSSUnparsedValue interface returns the number of items in the object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnparsedValue/keys",
    "pageType": "web-api-instance-method",
    "summary": "The CSSUnparsedValue.keys() method\nreturns a new array iterator object that contains the keys\nfor each index in the array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/navigate_event",
    "pageType": "web-api-event",
    "summary": "The navigate event of the Navigation interface is fired when any type of navigation is initiated, allowing you to intercept as required."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnparsedValue/CSSUnparsedValue",
    "pageType": "web-api-constructor",
    "summary": "The CSSUnparsedValue() constructor\ncreates a new CSSUnparsedValue object which represents property values\nthat reference custom properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/navigate",
    "pageType": "web-api-instance-method",
    "summary": "The navigate() method of the\nNavigation interface navigates to a specific URL, updating any provided state in the history entries list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnparsedValue/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The CSSUnparsedValue.forEach() method\nexecutes a provided function once for each element of the\nCSSUnparsedValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSUnparsedValue/values",
    "pageType": "web-api-instance-method",
    "summary": "The CSSUnparsedValue.values() method\nreturns a new array iterator object that contains the\nvalues for each index in the CSSUnparsedValue object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/navigatesuccess_event",
    "pageType": "web-api-event",
    "summary": "The navigatesuccess event of the Navigation interface is fired when a successful navigation has finished."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventTarget",
    "pageType": "web-api-interface",
    "summary": "The EventTarget interface is implemented by objects that can receive events and may have listeners for them.\nIn other words, any target of events implements the three methods associated with this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/reload",
    "pageType": "web-api-instance-method",
    "summary": "The reload() method of the\nNavigation interface reloads the current URL, updating any provided state in the history entries list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventTarget/dispatchEvent",
    "pageType": "web-api-instance-method",
    "summary": "The dispatchEvent() method of the EventTarget sends an Event to the object, (synchronously) invoking the affected\nevent listeners in the appropriate order. The normal event processing\nrules (including the capturing and optional bubbling phase) also apply to events\ndispatched manually with dispatchEvent()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/currententrychange_event",
    "pageType": "web-api-event",
    "summary": "The currententrychange event of the Navigation interface is fired when the Navigation.currentEntry has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventTarget/removeEventListener",
    "pageType": "web-api-instance-method",
    "summary": "The removeEventListener() method of the EventTarget interface\nremoves an event listener previously registered with EventTarget.addEventListener() from the target.\nThe event listener to be removed is identified using a combination of the event type,\nthe event listener function itself, and various optional options that may affect the matching process;\nsee Matching event listeners for removal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventTarget/EventTarget",
    "pageType": "web-api-constructor",
    "summary": "The EventTarget() constructor creates a new EventTarget object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation/transition",
    "pageType": "web-api-instance-property",
    "summary": "The transition read-only property of the Navigation interface returns a NavigationTransition object representing the status of an in-progress navigation, which can be used to track it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventTarget/addEventListener",
    "pageType": "web-api-instance-method",
    "summary": "The addEventListener() method of the EventTarget interface\nsets up a function that will be called whenever the specified event is delivered to the target."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourcesChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API interface XRInputSourcesChangeEvent is used to represent the inputsourceschange event sent to an XRSession when the set of available WebXR input controllers changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin read-only property of the WorkerGlobalScope interface returns the origin of the global scope, serialized as a string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourcesChangeEvent/session",
    "pageType": "web-api-instance-property",
    "summary": "The XRInputSourcesChangeEvent property\nsession specifies the\nXRSession to which the input source list change event applies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope",
    "pageType": "web-api-interface",
    "summary": "The WorkerGlobalScope interface of the Web Workers API is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by Window objects — in this case event handlers, the console or the associated WorkerNavigator object. Each WorkerGlobalScope has its own event loop."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourcesChangeEvent/XRInputSourcesChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The XRInputSourcesChangeEvent()\nconstructor creates and returns a new XRInputSourcesChangeEvent object,\nrepresenting an update to the list of available WebXR input devices. You\nwon't typically call this constructor yourself, as these events are created and sent to\nyou by the WebXR system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourcesChangeEvent/removed",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRInputSourcesChangeEvent property removed is an array of\nzero or more XRInputSource objects representing the input sources that have been removed from the XRSession."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/unhandledrejection_event",
    "pageType": "web-api-event",
    "summary": "The unhandledrejection event is sent to the global scope (typically WorkerGlobalScope) of a script when a Promise that has no rejection handler is rejected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourcesChangeEvent/added",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRInputSourcesChangeEvent\nproperty added is a list of zero or\nmore input sources, each identified using an XRInputSource object,\nwhich have been newly made available for use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/queueMicrotask",
    "pageType": "web-api-instance-method",
    "summary": "The queueMicrotask() method of the WorkerGlobalScope interface\nqueues a microtask to be executed at a safe time prior to control returning to the\nbrowser's event loop."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL_Pattern_API",
    "pageType": "web-api-overview",
    "summary": "The URL Pattern API defines a syntax that is used to create URL pattern matchers.\nThese patterns can be matched against URLs or individual URL components."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/reportError",
    "pageType": "web-api-instance-method",
    "summary": "The reportError() method of the WorkerGlobalScope interface may be used to report errors to the console or event handlers of global scopes, emulating an uncaught JavaScript exception."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTrackElement/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The readyState read-only property of the HTMLTrackElement interface returns a number representing the <track> element's text track readiness state:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTrackElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTrackElement interface represents an HTML <track> element within the DOM. This element can be used as a child of either <audio> or <video> to specify a text track containing information such as closed captions or subtitles."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/languagechange_event",
    "pageType": "web-api-event",
    "summary": "The languagechange event is fired at the global scope object when the user's preferred language changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTrackElement/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind property of the HTMLTrackElement interface represents the type of track, or how the text track is meant to be used. It reflects the <track> element's enumerated kind attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/caches",
    "pageType": "web-api-instance-property",
    "summary": "The caches read-only property of the WorkerGlobalScope interface returns the CacheStorage object associated with the current context.\nThis object enables functionality such as storing assets for offline use, and generating custom responses to requests."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTrackElement/src",
    "pageType": "web-api-instance-property",
    "summary": "The src property of the HTMLTrackElement interface reflects the value of\nthe <track> element's src attribute, which\nindicates the URL of the text track's data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/online_event",
    "pageType": "web-api-event",
    "summary": "The online event of the WorkerGlobalScope fires when the device reconnects to the internet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTrackElement/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the HTMLTrackElement represents the user-readable title displayed when listing subtitle, caption, and audio descriptions for a track. It reflects the <track> element's label attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/rejectionhandled_event",
    "pageType": "web-api-event",
    "summary": "The rejectionhandled event is sent to the script's global scope (typically WorkerGlobalScope) whenever a rejected Promise is handled late, i.e., when a handler is attached to the promise after its rejection had caused an unhandledrejection event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTrackElement/srclang",
    "pageType": "web-api-instance-property",
    "summary": "The srclang property of the HTMLTrackElement interface reflects the value of\nthe <track> element's srclang attribute or the empty string if not defined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/btoa",
    "pageType": "web-api-instance-method",
    "summary": "The btoa() method of the WorkerGlobalScope interface creates a Base64-encoded ASCII string from a binary string (i.e., a string in which each character in the string is treated as a byte of binary data)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTrackElement/cuechange_event",
    "pageType": "web-api-event",
    "summary": "The cuechange event fires when a TextTrack has changed the currently displaying cues. The event is fired on both the TextTrack and the HTMLTrackElement in which it's being presented, if any."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTrackElement/track",
    "pageType": "web-api-instance-property",
    "summary": "The track read-only property of the HTMLTrackElement interface returns a TextTrack object corresponding to the text track of the <track> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/fonts",
    "pageType": "web-api-instance-property",
    "summary": "The fonts property of the WorkerGlobalScope interface returns the FontFaceSet interface of the worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTrackElement/default",
    "pageType": "web-api-instance-property",
    "summary": "The default property of the HTMLTrackElement interface represents whether the track will be enabled if the user's preferences do not indicate that another track would be more appropriate. It reflects the <track> element's boolean default attribute, returning true if present and false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/clearTimeout",
    "pageType": "web-api-instance-method",
    "summary": "The clearTimeout() method of the WorkerGlobalScope interface cancels a timeout previously established by calling WorkerGlobalScope.setTimeout()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRTransientInputHitTestResult",
    "pageType": "web-api-interface",
    "summary": "The XRTransientInputHitTestResult interface of the WebXR Device API contains an array of results of a hit test for transient input, grouped by input source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRTransientInputHitTestResult/inputSource",
    "pageType": "web-api-instance-property",
    "summary": "The read-only inputSource property of the XRTransientInputHitTestResult interface represents an XRInputSource object that was used to compute the results array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/securitypolicyviolation_event",
    "pageType": "web-api-event",
    "summary": "The securitypolicyviolation event is fired when a Content Security Policy is violated in a worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRTransientInputHitTestResult/results",
    "pageType": "web-api-instance-property",
    "summary": "The read-only results property of the XRTransientInputHitTestResult interface represents an array of XRHitTestResult objects containing the hit test results for the input source, ordered by the distance along the ray used to perform the hit test, with the closest result at position 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/isSecureContext",
    "pageType": "web-api-instance-property",
    "summary": "The isSecureContext read-only property of the WorkerGlobalScope interface returns a boolean indicating whether the current context is secure (true) or not (false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GainNode",
    "pageType": "web-api-interface",
    "summary": "The GainNode interface represents a change in volume. It is an AudioNode audio-processing module that causes a given gain to be applied to the input data before its propagation to the output. A GainNode always has exactly one input and one output, both with the same number of channels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/navigator",
    "pageType": "web-api-instance-property",
    "summary": "The navigator read-only property of the WorkerGlobalScope interface returns the WorkerNavigator associated with the worker. It is a specific navigator object, mostly a subset of the Navigator for browsing scopes, but adapted to workers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GainNode/gain",
    "pageType": "web-api-instance-property",
    "summary": "The gain property of the GainNode interface is an a-rate AudioParam representing the amount of gain to apply."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GainNode/GainNode",
    "pageType": "web-api-constructor",
    "summary": "The GainNode() constructor of the Web Audio API creates a new\nGainNode object which is an AudioNode that represents a\nchange in volume."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/setTimeout",
    "pageType": "web-api-instance-method",
    "summary": "The setTimeout() method of the WorkerGlobalScope interface sets a timer which executes a function or specified piece of code once the timer expires."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGCircleElement",
    "pageType": "web-api-interface",
    "summary": "The SVGCircleElement interface is an interface for the <circle> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/self",
    "pageType": "web-api-instance-property",
    "summary": "The self read-only property of the WorkerGlobalScope interface returns a reference to the WorkerGlobalScope itself. Most of the time it is a specific scope like DedicatedWorkerGlobalScope, SharedWorkerGlobalScope, or ServiceWorkerGlobalScope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGCircleElement/cx",
    "pageType": "web-api-instance-property",
    "summary": "The cx read-only property of the SVGCircleElement interface reflects the cx attribute of a <circle> element and by that defines the x-coordinate of the circle's center.<"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGCircleElement/r",
    "pageType": "web-api-instance-property",
    "summary": "The r read-only property of the SVGCircleElement interface reflects the r attribute of a <circle> element and by that defines the radius of the circle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/setInterval",
    "pageType": "web-api-instance-method",
    "summary": "The setInterval() method of the WorkerGlobalScope interface repeatedly calls a function or executes a code snippet, with a fixed time delay between each call."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGCircleElement/cy",
    "pageType": "web-api-instance-property",
    "summary": "The cy read-only property of the SVGCircleElement interface reflects the cy attribute of a <circle> element and by that defines the y-coordinate of the circle's center."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/location",
    "pageType": "web-api-instance-property",
    "summary": "The location read-only property of the WorkerGlobalScope interface returns the WorkerLocation associated with the worker. It is a specific location object, mostly a subset of the Location for browsing scopes, but adapted to workers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CacheStorage",
    "pageType": "web-api-interface",
    "summary": "The CacheStorage interface represents the storage for Cache objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/fetch",
    "pageType": "web-api-instance-method",
    "summary": "The fetch() method of the WorkerGlobalScope interface starts the process of fetching a resource from the network, returning a promise that is fulfilled once the response is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CacheStorage/open",
    "pageType": "web-api-instance-method",
    "summary": "The open() method of the\nCacheStorage interface returns a Promise that resolves to\nthe Cache object matching the cacheName."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/createImageBitmap",
    "pageType": "web-api-instance-method",
    "summary": "The createImageBitmap() method of the WorkerGlobalScope interface creates a bitmap from a given source, optionally cropped to contain only a portion of that source.\nIt accepts a variety of different image sources, and returns a Promise which resolves to an ImageBitmap."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CacheStorage/match",
    "pageType": "web-api-instance-method",
    "summary": "The match() method of the CacheStorage interface checks if a given Request or URL string is a key for a stored Response.\nThis method returns a Promise for a Response, or a Promise which resolves to undefined if no match is found."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CacheStorage/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the CacheStorage\ninterface returns a Promise that resolves to true if a\nCache object matches the cacheName."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/trustedTypes",
    "pageType": "web-api-instance-property",
    "summary": "The trustedTypes read-only property of the WorkerGlobalScope interface returns the TrustedTypePolicyFactory object associated with the global object, providing the entry point for using the Trusted Types API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CacheStorage/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the CacheStorage interface returns a Promise that will resolve with an array containing strings corresponding to all of the named Cache objects tracked by the CacheStorage object in the order they were created.\nUse this method to iterate over a list of all Cache objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/structuredClone",
    "pageType": "web-api-instance-method",
    "summary": "The structuredClone() method of the WorkerGlobalScope interface creates a deep copy of a given value using the structured clone algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CacheStorage/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the CacheStorage interface finds the Cache object matching the cacheName, and if found, deletes the Cache object and returns a Promise that resolves to true.\nIf no Cache object is found, it resolves to false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/importScripts",
    "pageType": "web-api-instance-method",
    "summary": "The importScripts() method of the WorkerGlobalScope interface synchronously imports one or more scripts into the worker's scope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkletGlobalScope",
    "pageType": "web-api-interface",
    "summary": "The WorkletGlobalScope interface is an abstract class that specific worklet scope classes inherit from. Each WorkletGlobalScope defines a new global environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LockManager",
    "pageType": "web-api-interface",
    "summary": "The LockManager interface of the Web Locks API provides methods for requesting a new Lock object and querying for an existing Lock object. To get an instance of LockManager, call navigator.locks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/scheduler",
    "pageType": "web-api-instance-property",
    "summary": "The scheduler read-only property of the WorkerGlobalScope interface is the entry point for using the Prioritized Task Scheduling API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LockManager/request",
    "pageType": "web-api-instance-method",
    "summary": "The request() method of the LockManager interface requests a Lock object with parameters specifying its name and characteristics.\nThe requested Lock is passed to a callback, while the function itself returns a Promise that resolves (or rejects) with the result of the callback after the lock is released, or rejects if the request is aborted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/crypto",
    "pageType": "web-api-instance-property",
    "summary": "The crypto read-only property of the WorkerGlobalScope interface returns the Crypto object for this worker. This object gives workers access to certain cryptographic related services."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LockManager/query",
    "pageType": "web-api-instance-method",
    "summary": "The query() method of the LockManager interface returns a Promise that resolves with an object containing information about held and pending locks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/performance",
    "pageType": "web-api-instance-property",
    "summary": "The performance property of the WorkerGlobalScope interface returns a Performance object, which can be used to gather performance information about code running in the worker's scope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceMeasure",
    "pageType": "web-api-interface",
    "summary": "PerformanceMeasure is an abstract interface for PerformanceEntry objects with an entryType of \"measure\". Entries of this type are created by calling performance.measure() to add a named DOMHighResTimeStamp (the measure) between two marks to the browser's performance timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceMeasure/detail",
    "pageType": "web-api-instance-property",
    "summary": "The read-only detail property returns arbitrary metadata that was included in the mark upon construction (when using performance.measure()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/offline_event",
    "pageType": "web-api-event",
    "summary": "The offline event of the WorkerGlobalScope fires when the device loses connection to the internet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntegrityViolationReportBody",
    "pageType": "web-api-interface",
    "summary": "The IntegrityViolationReportBody dictionary is an extension of the Reporting API that represents the body of an Integrity Policy violation report."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the WorkerGlobalScope interface fires when an error occurs in the worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLHRElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLHRElement interface provides special properties (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating <hr> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/crossOriginIsolated",
    "pageType": "web-api-instance-property",
    "summary": "The crossOriginIsolated read-only property of the WorkerGlobalScope interface returns a boolean value that indicates whether the document is cross-origin isolated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PopStateEvent/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the PopStateEvent interface represents the state stored when the event was created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PopStateEvent",
    "pageType": "web-api-interface",
    "summary": "PopStateEvent is an interface for the popstate event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/indexedDB",
    "pageType": "web-api-instance-property",
    "summary": "The indexedDB read-only property of the WorkerGlobalScope interface provides a mechanism for workers to\nasynchronously access the capabilities of indexed databases."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PopStateEvent/hasUAVisualTransition",
    "pageType": "web-api-instance-property",
    "summary": "The hasUAVisualTransition read-only property of the PopStateEvent interface returns true if the user agent performed a visual transition for this navigation before dispatching this event, or false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PopStateEvent/PopStateEvent",
    "pageType": "web-api-constructor",
    "summary": "The PopStateEvent() constructor creates a new PopStateEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/dump",
    "pageType": "web-api-instance-method",
    "summary": "The WorkerGlobalScope.dump() method logs messages to the browser's standard output (stdout). If the browser was started from a terminal, output sent to dump() will appear in the terminal. This is the same as Window.dump(), but for workers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLCanvasElement interface provides properties and methods for manipulating the layout and presentation of <canvas> elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/clearInterval",
    "pageType": "web-api-instance-method",
    "summary": "The clearInterval() method of the WorkerGlobalScope interface cancels a timed, repeating action which was previously established by a call to setInterval(). If the parameter provided does not identify a previously established action, this method does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/toDataURL",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLCanvasElement.toDataURL() method returns a data URL containing a representation of the image in the format specified by the type parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerGlobalScope/atob",
    "pageType": "web-api-instance-method",
    "summary": "The atob() method of the WorkerGlobalScope interface decodes a\nstring of data which has been encoded using Base64 encoding. You can use\nthe WorkerGlobalScope.btoa() method to encode and transmit\ndata which may otherwise cause communication problems, then transmit it and use the\natob() method to decode the data again. For example, you can encode,\ntransmit, and decode control characters such as ASCII values 0 through 31."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/transferControlToOffscreen",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLCanvasElement.transferControlToOffscreen() method transfers control to an OffscreenCanvas object, either on the main thread or on a worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/webglcontextrestored_event",
    "pageType": "web-api-event",
    "summary": "The webglcontextrestored event of the WebGL API is fired if the user agent restores the drawing buffer for a WebGLRenderingContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPositioningElement",
    "pageType": "web-api-interface",
    "summary": "The SVGTextPositioningElement interface is implemented by elements that support attributes that position individual text glyphs. It is inherited by SVGTextElement and SVGTSpanElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/mozOpaque",
    "pageType": "web-api-instance-property",
    "summary": "The non-standard HTMLCanvasElement.mozOpaque property is\na boolean value reflecting the moz-opaque HTML\nattribute of the <canvas> element. It lets the canvas know whether or\nnot translucency will be a factor. If the canvas knows there's no translucency, painting\nperformance can be optimized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPositioningElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGTextPositioningElement interface describes the x-axis coordinate of the SVGTextElement or SVGTSpanElement as an SVGAnimatedLengthList. It reflects the x attribute's horizontal position of the individual text glyphs in the user coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/captureStream",
    "pageType": "web-api-instance-method",
    "summary": "The captureStream() method of the HTMLCanvasElement interface returns a MediaStream\nwhich includes a CanvasCaptureMediaStreamTrack containing a real-time video capture of the canvas's contents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPositioningElement/dx",
    "pageType": "web-api-instance-property",
    "summary": "The dx read-only property of the SVGTextPositioningElement interface describes the x-axis coordinate of the SVGTextElement or SVGTSpanElement as an SVGAnimatedLengthList. It reflects the dx attribute's horizontal displacement of the individual text glyphs in the user coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/webglcontextcreationerror_event",
    "pageType": "web-api-event",
    "summary": "The webglcontextcreationerror event of the WebGL API is fired if the user agent is unable to create a WebGLRenderingContext context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPositioningElement/rotate",
    "pageType": "web-api-instance-property",
    "summary": "The rotate read-only property of the SVGTextPositioningElement interface reflects the rotation of individual text glyphs, as specified by the rotate attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLCanvasElement.height property is a\npositive integer reflecting the height HTML\nattribute of the <canvas> element interpreted in CSS pixels. When the\nattribute is not specified, or if it is set to an invalid value, like a negative, the\ndefault value of 150 is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPositioningElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGTextPositioningElement interface describes the y-axis coordinate of the SVGTextElement or SVGTSpanElement as an SVGAnimatedLengthList. It reflects the y attribute's vertical position of the individual text glyphs in the user coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/contextrestored_event",
    "pageType": "web-api-event",
    "summary": "The contextrestored event of the Canvas API is fired if the user agent restores the backing storage for a CanvasRenderingContext2D."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLCanvasElement.width property is a\npositive integer reflecting the width HTML\nattribute of the <canvas> element interpreted in CSS pixels. When the\nattribute is not specified, or if it is set to an invalid value, like a negative, the\ndefault value of 300 is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPositioningElement/dy",
    "pageType": "web-api-instance-property",
    "summary": "The dy read-only property of the SVGTextPositioningElement interface describes the y-axis coordinate of the SVGTextElement or SVGTSpanElement as an SVGAnimatedLengthList. It reflects the dy attribute's vertical displacement of the individual text glyphs in the user coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/toBlob",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLCanvasElement.toBlob() method creates a Blob object representing the image contained in the canvas.\nThis file may be cached on the disk or stored in memory at the discretion of the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserverEntry",
    "pageType": "web-api-interface",
    "summary": "The ResizeObserverEntry interface represents the object passed to the ResizeObserver() constructor's callback function, which allows you to access the new dimensions of the Element or SVGElement being observed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/contextlost_event",
    "pageType": "web-api-event",
    "summary": "The contextlost event of the Canvas API is fired if the user agent detects that the backing storage associated with a CanvasRenderingContext2D context is lost.\nContexts can be lost for several reasons like driver crashes or the application runs out of memory, etc."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserverEntry/devicePixelContentBoxSize",
    "pageType": "web-api-instance-property",
    "summary": "The devicePixelContentBoxSize read-only property of\nthe ResizeObserverEntry interface returns an array containing the size in device pixels of the observed element when the callback is run."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/webglcontextlost_event",
    "pageType": "web-api-event",
    "summary": "The webglcontextlost event of the WebGL API is fired if the user agent detects that the drawing buffer associated with a WebGLRenderingContext object has been lost."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserverEntry/target",
    "pageType": "web-api-instance-property",
    "summary": "The target read-only property of the\nResizeObserverEntry interface returns a reference to the\nElement or SVGElement that is being observed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCanvasElement/getContext",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLCanvasElement.getContext() method returns a drawing context on the canvas, or null if the context identifier is not supported, or the canvas has already been set to a different context mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReportBody",
    "pageType": "web-api-interface",
    "summary": "The ReportBody interface of the Reporting API represents the body of a report. Individual report types inherit from this interface, adding specific attributes relevant to the particular report."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserverEntry/contentBoxSize",
    "pageType": "web-api-instance-property",
    "summary": "The contentBoxSize read-only property of\nthe ResizeObserverEntry interface returns an array containing the new\ncontent box size of the observed element when the callback is run."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReportBody/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the ReportBody interface is a serializer, and returns a JSON representation of the ReportBody object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserverEntry/contentRect",
    "pageType": "web-api-instance-property",
    "summary": "The contentRect read-only property of the\nResizeObserverEntry interface returns a DOMRectReadOnly\nobject containing the new size of the observed element when the callback is run. Note\nthat this is better supported than ResizeObserverEntry.borderBoxSize or\nResizeObserverEntry.contentBoxSize, but it is left over from an earlier\nimplementation of the Resize Observer API, is still included in the spec for web compat\nreasons, and may be deprecated in future versions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebHID_API",
    "pageType": "web-api-overview",
    "summary": "A Human Interface Device (HID) is a type of device that takes input from or provides output to humans. It also refers to the HID protocol, a standard for bi-directional communication between a host and a device that is designed to simplify the installation procedure. The HID protocol was originally developed for USB devices but has since been implemented over many other protocols, including Bluetooth."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ResizeObserverEntry/borderBoxSize",
    "pageType": "web-api-instance-property",
    "summary": "The borderBoxSize read-only property of\nthe ResizeObserverEntry interface returns an array containing the new\nborder box size of the observed element when the callback is run."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement",
    "pageType": "web-api-interface",
    "summary": "The SVGImageElement interface corresponds to the <image> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement/preserveAspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The preserveAspectRatio read-only\nproperty of the SVGImageElement interface returns an\nSVGAnimatedPreserveAspectRatio corresponding to the\npreserveAspectRatio attribute of the given <image>\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGPU_API",
    "pageType": "web-api-overview",
    "summary": "The WebGPU API enables web developers to use the underlying system's GPU (Graphics Processing Unit) to carry out high-performance computations and draw complex images that can be rendered in the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the\nSVGImageElement interface returns an SVGAnimatedLength\ncorresponding to the x attribute of the given <image>\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement/decode",
    "pageType": "web-api-instance-method",
    "summary": "The decode() method of the\nSVGImageElement interface initiates asynchronous decoding of an image,\nreturning a Promise that resolves once the image is decoded and it is safe to append\nit to the DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAllCollection",
    "pageType": "web-api-interface",
    "summary": "The HTMLAllCollection interface represents a collection of all of the document's elements, accessible by index (like an array) and by the element's id. It is returned by the document.all property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the\nSVGImageElement interface returns an SVGAnimatedLength\ncorresponding to the height attribute of the given\n<image> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAllCollection/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method of the HTMLAllCollection interface returns the element located at the specified offset into the collection, or the element with the specified value for its id or name attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the\nSVGImageElement interface returns an SVGAnimatedLength\ncorresponding to the y attribute of the given <image>\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAllCollection/length",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAllCollection.length property returns the number of items in this HTMLAllCollection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the\nSVGImageElement interface returns an SVGAnimatedLength\ncorresponding to the width attribute of the given <image>\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAllCollection/namedItem",
    "pageType": "web-api-instance-method",
    "summary": "The namedItem() method of the HTMLAllCollection interface returns the first Element in the collection whose id or name attribute matches the specified name, or null if no element matches."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement/crossOrigin",
    "pageType": "web-api-instance-property",
    "summary": "The crossOrigin property of the SVGImageElement interface is a string which specifies the Cross-Origin Resource Sharing (CORS) setting to use when retrieving the image. It reflects the crossorigin content attribute of the given <image> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGImageElement interface reflects the href or xlink:href \nDeprecated\n attribute of the given <image> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Launch_Handler_API",
    "pageType": "web-api-overview",
    "summary": "The Launch Handler API allows developers to control how a progressive web app (PWA) is launched — for example if it uses an existing window or creates a new one, and how the app's target launch URL is handled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGImageElement/decoding",
    "pageType": "web-api-instance-property",
    "summary": "The decoding property of the SVGImageElement interface provides a hint to the browser as to whether it should perform image decoding synchronously or asynchronously."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRViewerPose",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API interface XRViewerPose represents the pose (the position and orientation) of a viewer's point of view on the scene. Each XRViewerPose can have multiple views to represent, for example, the slight separation between the left and right eye."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRQuadLayer",
    "pageType": "web-api-interface",
    "summary": "The XRQuadLayer interface of the WebXR Device API is a layer that takes up a flat rectangular space in the virtual environment. An XRQuadLayer has no thickness. It is a two-dimensional object positioned and oriented in 3D space. The position of a quad refers to the center of the quad. Only the front of the layer is visible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRViewerPose/views",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRViewerPose property views\nreturns an array which contains every XRView which must be rendered in\norder to fully represent the scene from the viewpoint defined by the viewer pose. For\nmonoscopic devices, this array contains a single view."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRQuadLayer/redraw_event",
    "pageType": "web-api-event",
    "summary": "The redraw event is sent to the XRQuadLayer object when the underlying resources of the layer are lost or when the XR Compositor can no longer reproject the layer. If this event is sent, authors should redraw the content of the layer in the next XR animation frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream_Image_Capture_API",
    "pageType": "web-api-overview",
    "summary": "The MediaStream Image Capture API is an API for capturing images or videos from a photographic device. In addition to capturing data, it also allows you to retrieve information about device capabilities such as image size, red-eye reduction and whether or not there is a flash and what they are currently set to. Conversely, the API allows the capabilities to be configured within the constraints what the device allows."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRQuadLayer/space",
    "pageType": "web-api-instance-property",
    "summary": "The space property of the XRQuadLayer interface represents the layer's spatial relationship with the user's physical environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScrollTimeline",
    "pageType": "web-api-interface",
    "summary": "The ScrollTimeline interface of the Web Animations API represents a scroll progress timeline (see CSS scroll-driven animations for more details)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRQuadLayer/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the XRQuadLayer interface represents the height of the layer in meters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRQuadLayer/transform",
    "pageType": "web-api-instance-property",
    "summary": "The transform property of the XRQuadLayer interface represents the offset and orientation relative to the layer's space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScrollTimeline/source",
    "pageType": "web-api-instance-property",
    "summary": "The source read-only property of the\nScrollTimeline interface returns a reference to the scrollable element (scroller) whose scroll position is driving the progress of the timeline and therefore the animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRQuadLayer/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the XRQuadLayer interface represents the width of the layer in meters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScrollTimeline/axis",
    "pageType": "web-api-instance-property",
    "summary": "The axis read-only property of the\nScrollTimeline interface returns an enumerated value representing the scroll axis that is driving the progress of the timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserver",
    "pageType": "web-api-interface",
    "summary": "The PerformanceObserver interface is used to observe performance measurement events and be notified of new performance entries as they are recorded in the browser's performance timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScrollTimeline/ScrollTimeline",
    "pageType": "web-api-constructor",
    "summary": "The ScrollTimeline() constructor creates a new ScrollTimeline object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserver/takeRecords",
    "pageType": "web-api-instance-method",
    "summary": "The takeRecords() method of the PerformanceObserver interface returns the current list of PerformanceEntry objects stored in the performance observer, emptying it out."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserver/supportedEntryTypes_static",
    "pageType": "web-api-static-property",
    "summary": "The static supportedEntryTypes read-only property of the PerformanceObserver interface returns an array of the entryType values supported by the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserver/observe",
    "pageType": "web-api-instance-method",
    "summary": "The observe() method of the PerformanceObserver interface is used to specify the set of performance entry types to observe."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserver/PerformanceObserver",
    "pageType": "web-api-constructor",
    "summary": "The PerformanceObserver() constructor creates a new PerformanceObserver object with the given observer callback. The observer callback is invoked when performance entry events are recorded for the entry types that have been registered, via the observe() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceObserver/disconnect",
    "pageType": "web-api-instance-method",
    "summary": "The disconnect() method of the PerformanceObserver interface is used to stop the performance observer from receiving any performance entry events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event",
    "pageType": "web-api-interface",
    "summary": "The Event interface represents an event which takes place on an EventTarget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/cancelBubble",
    "pageType": "web-api-instance-property",
    "summary": "The cancelBubble property of the Event\ninterface is deprecated. Use Event.stopPropagation() instead.\nSetting its value to true before returning from an event handler prevents propagation\nof the event. In later implementations, setting this to false does nothing.\nSee Browser compatibility for details."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaFlowToElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaFlowToElements property of the Element interface is an array containing the element (or elements) that provide an alternate reading order of content, overriding the general default reading order at the user's discretion.\nIf just one element is provided this is the next element in the reading order.\nIf multiple elements are provided, then each element represents a possible path that should be offered to the user for selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/composedPath",
    "pageType": "web-api-instance-method",
    "summary": "The composedPath() method of the Event\ninterface returns the event's path which is an array of the objects on which listeners\nwill be invoked. This does not include nodes in shadow trees if the shadow root was\ncreated with its ShadowRoot.mode closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaRoleDescription",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRoleDescription property of the Element interface reflects the value of the aria-roledescription attribute, which defines a human-readable, author-localized description for the role of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/timeStamp",
    "pageType": "web-api-instance-property",
    "summary": "The timeStamp read-only property of the Event interface returns the time (in milliseconds) at which the event was created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/children",
    "pageType": "web-api-instance-property",
    "summary": "The read-only children property returns a live HTMLCollection\nwhich contains all of the child elements of the element upon which it was called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the Event\ninterface returns a string containing the event's type. It is set when the event is\nconstructed and is the name commonly used to refer to the specific event, such as\nclick, load, or error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/removeAttribute",
    "pageType": "web-api-instance-method",
    "summary": "The Element method\nremoveAttribute() removes the attribute with the\nspecified name from the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/stopPropagation",
    "pageType": "web-api-instance-method",
    "summary": "The stopPropagation() method of the Event\ninterface prevents further propagation of the current event in the capturing and\nbubbling phases. It does not, however, prevent any default behaviors from occurring; for\ninstance, clicks on links are still processed. If you want to stop those behaviors, see\nthe preventDefault() method. It also does not\nprevent propagation to other event-handlers of the current element. If you want to stop those,\nsee stopImmediatePropagation()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/returnValue",
    "pageType": "web-api-instance-property",
    "summary": "The Event property\nreturnValue indicates whether the default action for\nthis event has been prevented or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getAnimations",
    "pageType": "web-api-instance-method",
    "summary": "The getAnimations() method of the Element interface\n(specified on the Animatable mixin) returns an array of all\nAnimation objects affecting this element or which are scheduled to do so\nin future. It can optionally return Animation objects for descendant\nelements too."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/defaultPrevented",
    "pageType": "web-api-instance-property",
    "summary": "The defaultPrevented read-only property of the Event interface returns a boolean value indicating whether or not the call to Event.preventDefault() canceled the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollHeight",
    "pageType": "web-api-instance-property",
    "summary": "The scrollHeight read-only property of the Element interface is a measurement of the height of an element's content, including content not visible on the screen due to overflow."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/originalTarget",
    "pageType": "web-api-instance-property",
    "summary": "The read-only originalTarget property of the Event interface returns the original target of the event before any retargetings. Unlike Event.explicitOriginalTarget it can also be native anonymous content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element",
    "pageType": "web-api-interface",
    "summary": "Element is the most general base class from which all element objects (i.e., objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/isTrusted",
    "pageType": "web-api-instance-property",
    "summary": "The isTrusted read-only property of the\nEvent interface is a boolean value that is true\nwhen the event was generated by the user agent (including via user actions and programmatic methods such as HTMLElement.focus()),\nand false when the event was dispatched via\nEventTarget.dispatchEvent().\nThe only exception is the click event, which initializes the isTrusted\nproperty to false in user agents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/initEvent",
    "pageType": "web-api-instance-method",
    "summary": "The Event.initEvent() method is used to initialize the\nvalue of an event created using Document.createEvent()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/prefix",
    "pageType": "web-api-instance-property",
    "summary": "The Element.prefix read-only property returns the\nnamespace prefix of the specified element, or null if no prefix is\nspecified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/srcElement",
    "pageType": "web-api-instance-property",
    "summary": "The deprecated Event.srcElement is an alias for the Event.target property. Use Event.target instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/animationstart_event",
    "pageType": "web-api-event",
    "summary": "The animationstart event is fired when a CSS Animation has started. If there is an animation-delay, this event will fire once the delay period has expired. A negative delay will cause the event to fire with an elapsedTime equal to the absolute value of the delay (and, correspondingly, the animation will begin playing at that time index into the sequence)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/target",
    "pageType": "web-api-instance-property",
    "summary": "The read-only target property of the\nEvent interface is a reference to the object onto which the event was\ndispatched. It is different from Event.currentTarget when the event\nhandler is called during the bubbling or capturing phase of the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/bubbles",
    "pageType": "web-api-instance-property",
    "summary": "The bubbles read-only property of the Event interface indicates whether the event bubbles up through the DOM tree or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/pointercancel_event",
    "pageType": "web-api-event",
    "summary": "The pointercancel event is fired when the browser determines that there are unlikely to be any more pointer events, or if after the pointerdown event is fired, the pointer is then used to manipulate the viewport by panning, zooming, or scrolling."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/composed",
    "pageType": "web-api-instance-property",
    "summary": "The read-only composed property of the\nEvent interface returns a boolean value which indicates whether\nor not the event will propagate across the shadow DOM boundary into the standard DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/beforexrselect_event",
    "pageType": "web-api-event",
    "summary": "The beforexrselect event is fired before WebXR select events (select, selectstart, selectend) are dispatched. It can be used to suppress XR world input events while the user is interacting with a DOM overlay UI."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/stopImmediatePropagation",
    "pageType": "web-api-instance-method",
    "summary": "The stopImmediatePropagation() method of the\nEvent interface prevents other listeners of the same event from being called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollsnapchanging_event",
    "pageType": "web-api-event",
    "summary": "The scrollsnapchanging event of the Element interface is fired on the scroll container when the browser determines a new scroll snap target is pending, i.e., it will be selected when the current scroll gesture ends."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/currentTarget",
    "pageType": "web-api-instance-property",
    "summary": "The currentTarget read-only property of the Event interface identifies the element to which the event handler has been attached."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/Event",
    "pageType": "web-api-constructor",
    "summary": "The Event() constructor creates a new Event object. An event created in this way is called a synthetic event, as opposed to an event fired by the browser, and can be dispatched by a script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaLevel",
    "pageType": "web-api-instance-property",
    "summary": "The ariaLevel property of the Element interface reflects the value of the aria-level attribute, which defines the hierarchical level of an element within a structure."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/cancelable",
    "pageType": "web-api-instance-property",
    "summary": "The cancelable read-only property of the Event interface indicates whether the event\ncan be canceled, and therefore prevented as if the event never happened."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/preventDefault",
    "pageType": "web-api-instance-method",
    "summary": "The preventDefault() method of the Event interface tells the user agent that the event is being explicitly handled, so its default action, such as page scrolling, link navigation, or pasting text, should not be taken."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/afterscriptexecute_event",
    "pageType": "web-api-event",
    "summary": "The afterscriptexecute event is fired after a script has been executed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/explicitOriginalTarget",
    "pageType": "web-api-instance-property",
    "summary": "The read-only explicitOriginalTarget property of the Event interface returns the non-anonymous original target of the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/outerHTML",
    "pageType": "web-api-instance-property",
    "summary": "The outerHTML attribute of the Element interface gets or sets the HTML or XML markup of the element and its descendants, omitting any shadow roots in both cases."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Event/eventPhase",
    "pageType": "web-api-instance-property",
    "summary": "The eventPhase read-only property of the\nEvent interface indicates which phase of the event flow is currently\nbeing evaluated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSValueList",
    "pageType": "web-api-interface",
    "summary": "The CSSValueList interface derives from the CSSValue interface and provides the abstraction of an ordered collection of CSS values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/querySelector",
    "pageType": "web-api-instance-method",
    "summary": "The querySelector() method of the Element\ninterface returns the first element that is a descendant of the element on which it is\ninvoked that matches the specified group of selectors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSValueList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method of the CSSValueList\ninterface is used to retrieve a CSSValue by ordinal index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaOrientation",
    "pageType": "web-api-instance-property",
    "summary": "The ariaOrientation property of the Element interface reflects the value of the aria-orientation attribute, which indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSValueList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the\nCSSValueList interface represents the number of CSSValues\nin the list. The range of valid values of the indices is 0 to\nlength-1 inclusive."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/role",
    "pageType": "web-api-instance-property",
    "summary": "The role property of the Element interface returns the explicitly set WAI-ARIA role for the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoder",
    "pageType": "web-api-interface",
    "summary": "The TextEncoder interface enables you to encode a JavaScript string using UTF-8."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoder/encoding",
    "pageType": "web-api-instance-property",
    "summary": "The TextEncoder.encoding read-only property returns a string containing the name of the encoding algorithm used by the specific encoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/shadowRoot",
    "pageType": "web-api-instance-property",
    "summary": "The Element.shadowRoot read-only property\nrepresents the shadow root hosted by the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoder/TextEncoder",
    "pageType": "web-api-constructor",
    "summary": "The TextEncoder() constructor returns a newly created TextEncoder object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/insertAdjacentElement",
    "pageType": "web-api-instance-method",
    "summary": "The insertAdjacentElement() method of the\nElement interface inserts a given element node at a given position\nrelative to the element it is invoked upon."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoder/encodeInto",
    "pageType": "web-api-instance-method",
    "summary": "The TextEncoder.encodeInto() method takes a string to encode and a destination Uint8Array to put resulting UTF-8 encoded text into, and returns an object indicating the progress of the encoding.\nThis is potentially more performant than the encode() method — especially when the target buffer is a view into a Wasm heap."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEncoder/encode",
    "pageType": "web-api-instance-method",
    "summary": "The TextEncoder.encode() method takes a string as input, and returns a Uint8Array containing the string encoded using UTF-8."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaRowIndexText",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRowIndexText property of the Element interface reflects the value of the aria-rowindextext attribute, which defines a human readable text alternative of aria-rowindex."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Payment_Request_API",
    "pageType": "web-api-overview",
    "summary": "The Payment Request API provides a consistent user experience for merchants and users. It is not a new way of paying for things; instead, it's a way for users to select their preferred way of paying for things and make that information available to a merchant."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/hasAttributeNS",
    "pageType": "web-api-instance-method",
    "summary": "The hasAttributeNS() method of the Element interface returns a boolean value indicating whether the current element has the specified attribute with the specified namespace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Payment_Request_API/Using_the_Payment_Request_API",
    "pageType": "guide",
    "summary": "The Payment Request API provides a browser-based method of connecting users and their preferred payment systems and platforms to merchants that they want to pay for goods and services. This article is a guide to making use of the Payment Request API, with examples and suggested best practices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaDescription",
    "pageType": "web-api-instance-property",
    "summary": "The ariaDescription property of the Element interface reflects the value of the aria-description attribute, which defines a string value that describes or annotates the current element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Payment_Request_API/Concepts",
    "pageType": "guide",
    "summary": "The Payment Request API makes it easy to handle payments in a website or app. In this article, we'll take a look at how the API operates and what each of its components does."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/webkitmouseforcechanged_event",
    "pageType": "web-api-event",
    "summary": "The non-standard webkitmouseforcechanged event is fired by Safari each time the amount of pressure changes on the trackpad/touchscreen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Payment_Request_API/Using_secure_payment_confirmation",
    "pageType": "guide",
    "summary": "Secure Payment Confirmation (SPC), available through the Payment Request API, provides a mechanism for strong customer authentication during checkout, thereby protecting against online payment fraud."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attribution_Reporting_API",
    "pageType": "web-api-overview",
    "summary": "The Attribution Reporting API enables developers to measure conversions — for example when a user clicks an ad embedded on one site and then proceeds to purchase the item over on the vendor's site — and then access reports on those conversions. It does this without relying on third-party tracking cookies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaInvalid",
    "pageType": "web-api-instance-property",
    "summary": "The ariaInvalid property of the Element interface reflects the value of the aria-invalid attribute. Relevant for the application, checkbox, combobox, gridcell, listbox, radiogroup, slider, spinbutton, textbox, and tree roles, it indicates to the accessibility API whether the entered value does not conform to the format expected by the application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attribution_Reporting_API/Registering_triggers",
    "pageType": "guide",
    "summary": "This article explains how to register attribution triggers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/pointerenter_event",
    "pageType": "web-api-event",
    "summary": "The pointerenter event fires when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown). Otherwise, pointerenter works the same as mouseenter, and are dispatched at the same time. They are also dispatched at the same time as mouseover and pointerover events, if appropriate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attribution_Reporting_API/Registering_sources",
    "pageType": "guide",
    "summary": "This article explains how to register attribution sources when using the Attribution Reporting API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/mouseleave_event",
    "pageType": "web-api-event",
    "summary": "The mouseleave event is fired at an Element when the cursor of a pointing device (usually a mouse) is moved out of it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Attribution_Reporting_API/Generating_reports",
    "pageType": "guide",
    "summary": "This article explains how Attribution Reporting API reports are generated — both attribution reports and debug reports — and how you can control the generated reports. This includes handling noise, prioritizing reports, filtering reports, and generating debug reports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_texture_half_float_linear",
    "pageType": "webgl-extension",
    "summary": "The OES_texture_half_float_linear extension is part of the WebGL API and allows linear filtering with half floating-point pixel types for textures."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/part",
    "pageType": "web-api-instance-property",
    "summary": "The part property of the Element interface\nrepresents the part identifier(s) of the element (i.e., set using the part\nattribute), returned as a DOMTokenList. These can be used to style parts\nof a shadow DOM, via the ::part pseudo-element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_compressed_texture_etc",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_compressed_texture_etc extension is part of the WebGL API and exposes 10 ETC/EAC compressed texture formats."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/setAttributeNS",
    "pageType": "web-api-instance-method",
    "summary": "setAttributeNS adds a new attribute or changes the value of an attribute\nwith the given namespace and name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/closest",
    "pageType": "web-api-instance-method",
    "summary": "The closest() method of the Element interface traverses the element and its parents (heading toward the document root) until it finds a node that matches the specified CSS selector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the IDBObjectStore\ninterface indicates the name of this object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore",
    "pageType": "web-api-interface",
    "summary": "The IDBObjectStore interface of the IndexedDB API represents an object store in a database. Records within an object store are sorted according to their keys. This sorting enables fast insertion, look-up, and ordered retrieval."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaPosInSet",
    "pageType": "web-api-instance-property",
    "summary": "The ariaPosInSet property of the Element interface reflects the value of the aria-posinset attribute, which defines an element's number or position in the current set of listitems or treeitems."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/indexNames",
    "pageType": "web-api-instance-property",
    "summary": "The indexNames read-only property of the\nIDBObjectStore interface returns a list of the names of indexes on objects\nin this object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/releasePointerCapture",
    "pageType": "web-api-instance-method",
    "summary": "The releasePointerCapture() method of the\nElement interface releases (stops) pointer capture that was\npreviously set for a specific (PointerEvent) pointer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/keyPath",
    "pageType": "web-api-instance-property",
    "summary": "The keyPath read-only property of the\nIDBObjectStore interface returns the key path of this object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/className",
    "pageType": "web-api-instance-property",
    "summary": "The className property of the\nElement interface gets and sets the value of the class attribute\nof the specified element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/add",
    "pageType": "web-api-instance-method",
    "summary": "The add() method of the IDBObjectStore interface returns an IDBRequest object, and, in a separate thread, creates a structured clone of the value, and stores the cloned value in the object store. This is for adding new records to an object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/setAttributeNodeNS",
    "pageType": "web-api-instance-method",
    "summary": "The setAttributeNodeNS() method of the Element interface adds a new namespaced Attr node to an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/createIndex",
    "pageType": "web-api-instance-method",
    "summary": "The createIndex() method of the\nIDBObjectStore interface creates and returns a new\nIDBIndex object in the connected database. It creates a new\nfield/column defining a new data point for each database record to contain."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/openKeyCursor",
    "pageType": "web-api-instance-method",
    "summary": "The openKeyCursor() method of the\nIDBObjectStore interface returns an IDBRequest object\nwhose result will be set to an IDBCursor that can be used to iterate\nthrough matching results. Used for iterating through the keys of an object store with\na cursor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/DOMMouseScroll_event",
    "pageType": "web-api-event",
    "summary": "The DOM DOMMouseScroll event is fired asynchronously when mouse wheel or similar device is operated and the accumulated scroll amount is over 1 line or 1 page since last event. It's represented by the MouseScrollEvent interface. This event was only implemented by Firefox. You should instead use the standard wheel event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/deleteIndex",
    "pageType": "web-api-instance-method",
    "summary": "The deleteIndex() method of the\nIDBObjectStore interface destroys the index with the specified name in\nthe connected database, used during a version upgrade."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollLeftMax",
    "pageType": "web-api-instance-property",
    "summary": "The Element.scrollLeftMax read-only property returns a\nnumber representing the maximum left scroll offset possible for the\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/getKey",
    "pageType": "web-api-instance-method",
    "summary": "The getKey() method of the\nIDBObjectStore interface returns an IDBRequest object,\nand, in a separate thread, returns the key selected by the specified query. This is\nfor retrieving specific records from an object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the IDBObjectStore\ninterface returns an IDBRequest object, and, in a separate thread,\nreturns the object selected by the specified key. This is for retrieving\nspecific records from an object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/animationcancel_event",
    "pageType": "web-api-event",
    "summary": "The animationcancel event is fired when a CSS Animation unexpectedly aborts. In other words, any time it stops running without sending an animationend event. This might happen when the animation-name is changed such that the animation is removed, or when the animating node is hidden using CSS. Therefore, either directly or because any of its containing nodes are hidden."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/put",
    "pageType": "web-api-instance-method",
    "summary": "The put() method of the IDBObjectStore interface updates a given record in a database, or inserts a new record if the given item does not already exist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/fullscreenchange_event",
    "pageType": "web-api-event",
    "summary": "The fullscreenchange event is fired immediately after an Element switches into or out of fullscreen mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/getAllRecords",
    "pageType": "web-api-instance-method",
    "summary": "The getAllRecords() method of the IDBObjectStore\ninterface retrieves all records (including primary keys and values) from the object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/compositionstart_event",
    "pageType": "web-api-event",
    "summary": "The compositionstart event is fired when a text composition system such as an input method editor starts a new composition session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/index",
    "pageType": "web-api-instance-method",
    "summary": "The index() method of the IDBObjectStore\ninterface opens a named index in the current object store, after which it can be used\nto, for example, return a series of records sorted by that index using a cursor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/beforescriptexecute_event",
    "pageType": "web-api-event",
    "summary": "The beforescriptexecute event is fired when a script is about to be executed. Cancelling the event prevents the script from executing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/transaction",
    "pageType": "web-api-instance-property",
    "summary": "The transaction read-only property of the\nIDBObjectStore interface returns the transaction object to which this\nobject store belongs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the\nIDBObjectStore interface returns an IDBRequest object,\nand, in a separate thread, deletes the specified record or records."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaHasPopup",
    "pageType": "web-api-instance-property",
    "summary": "The ariaHasPopup property of the Element interface reflects the value of the aria-haspopup attribute, which indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the IDBObjectStore\ninterface creates and immediately returns an IDBRequest object, and\nclears this object store in a separate thread. This is for deleting all the current\ndata out of an object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaRelevant",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRelevant property of the Element interface reflects the value of the aria-relevant attribute, which indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified. This is used to describe what changes in an aria-live region are relevant and should be announced."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/autoIncrement",
    "pageType": "web-api-instance-property",
    "summary": "The autoIncrement read-only property of the\nIDBObjectStore interface returns the value of the auto increment flag\nfor this object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/count",
    "pageType": "web-api-instance-method",
    "summary": "The count() method of the IDBObjectStore\ninterface returns an IDBRequest object, and, in a separate thread,\nreturns the total number of records that match the provided key or\nIDBKeyRange. If no arguments are provided, it returns the total number\nof records in the store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/namespaceURI",
    "pageType": "web-api-instance-property",
    "summary": "The Element.namespaceURI read-only property returns the namespace URI of the element, or null if the element is not in a namespace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/openCursor",
    "pageType": "web-api-instance-method",
    "summary": "The openCursor() method of the\nIDBObjectStore interface returns an IDBRequest object,\nand, in a separate thread, returns a new IDBCursorWithValue object.\nUsed for iterating through an object store with a cursor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/touchend_event",
    "pageType": "web-api-event",
    "summary": "The touchend event fires when one or more touch points are removed from the touch surface. Remember that it is possible to get a touchcancel event instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/getAll",
    "pageType": "web-api-instance-method",
    "summary": "The getAll() method of the\nIDBObjectStore interface returns an IDBRequest object\ncontaining all objects in the object store matching the specified parameter or all\nobjects in the store if no parameters are given."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBObjectStore/getAllKeys",
    "pageType": "web-api-instance-method",
    "summary": "The getAllKeys() method of the IDBObjectStore\ninterface returns an IDBRequest object retrieves record keys for all\nobjects in the object store matching the specified parameter or all objects in the\nstore if no parameters are given."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getBoundingClientRect",
    "pageType": "web-api-instance-method",
    "summary": "The Element.getBoundingClientRect() method returns a\nDOMRect object providing information about the size of an element and its\nposition relative to the viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMergeNodeElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEMergeNodeElement interface corresponds to the <feMergeNode> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMergeNodeElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEMergeNodeElement interface reflects the in attribute of the given <feMergeNode> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/MozMousePixelScroll_event",
    "pageType": "web-api-event",
    "summary": "The Firefox-only, non-standard, and obsolete MozMousePixelScroll event is fired at an Element asynchronously when a mouse wheel or similar device is operated. It's represented by the MouseScrollEvent interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/querySelectorAll",
    "pageType": "web-api-instance-method",
    "summary": "The Element method querySelectorAll()\nreturns a static (not live) NodeList representing a list of elements\nmatching the specified group of selectors which are descendants of the element on which\nthe method was called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the RTCIceTransport interface returns the current state of the ICE transport, so you can determine the state of ICE gathering in which the ICE agent currently is operating."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport",
    "pageType": "web-api-interface",
    "summary": "The RTCIceTransport interface provides access to information about the ICE transport layer over which the data is being sent and received.\nThis is particularly useful if you need to access state information about the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaMultiSelectable",
    "pageType": "web-api-instance-property",
    "summary": "The ariaMultiSelectable property of the Element interface reflects the value of the aria-multiselectable attribute, which indicates that the user may select more than one item from the current selectable descendants."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/role",
    "pageType": "web-api-instance-property",
    "summary": "The role read-only property of the RTCIceTransport interface indicates which ICE role the transport is fulfilling: that of the controlling agent, or the agent that is being controlled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/component",
    "pageType": "web-api-instance-property",
    "summary": "The component read-only property of the RTCIceTransport interface specifies whether the object is serving to transport RTP or RTCP."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaSelected",
    "pageType": "web-api-instance-property",
    "summary": "The ariaSelected property of the Element interface reflects the value of the aria-selected attribute, which indicates the current \"selected\" state of elements that have a selected state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/getLocalCandidates",
    "pageType": "web-api-instance-method",
    "summary": "The getLocalCandidates() method of the RTCIceTransport interface returns an array of RTCIceCandidate objects, one for each of the candidates that have been gathered by the local device during the current ICE agent session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/remove",
    "pageType": "web-api-instance-method",
    "summary": "The Element.remove() method removes the element from its parent node.\nIf it has no parent node, calling remove() does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/gatheringState",
    "pageType": "web-api-instance-property",
    "summary": "The gatheringState read-only property of the RTCIceTransport interface returns a string that indicates the current gathering state of the ICE agent for this transport: \"new\", \"gathering\", or \"complete\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/gatheringstatechange_event",
    "pageType": "web-api-event",
    "summary": "A gatheringstatechange event is sent to an RTCIceTransport when its ICE candidate gathering state changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaColIndexText",
    "pageType": "web-api-instance-property",
    "summary": "The ariaColIndexText property of the Element interface reflects the value of the aria-colindextext attribute, which defines a human readable text alternative of aria-colindex."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/getRemoteParameters",
    "pageType": "web-api-instance-method",
    "summary": "The getRemoteParameters() method of the RTCIceTransport interface returns an RTCIceParameters object that provides information uniquely identifying the remote peer for the duration of the ICE session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/tagName",
    "pageType": "web-api-instance-property",
    "summary": "The tagName read-only property\nof the Element interface returns the tag name of the element on which\nit's called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/getRemoteCandidates",
    "pageType": "web-api-instance-method",
    "summary": "The getRemoteCandidates() method of the RTCIceTransport interface returns an array that contains one RTCIceCandidate for each of the candidates that have been received from the remote peer so far during the current ICE gathering session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/clientTop",
    "pageType": "web-api-instance-property",
    "summary": "The clientTop read-only property of the Element interface returns the width of the top border of an element in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event",
    "pageType": "web-api-event",
    "summary": "A selectedcandidatepairchange event is sent to an RTCIceTransport when the ICE agent selects a new pair of candidates that describe the endpoints of a viable connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/getLocalParameters",
    "pageType": "web-api-instance-method",
    "summary": "The getLocalParameters() method of the RTCIceTransport interface returns an RTCIceParameters object that provides information uniquely identifying the local peer for the duration of the ICE session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/mouseout_event",
    "pageType": "web-api-event",
    "summary": "The mouseout event is fired at an Element when a pointing device (usually a mouse) is used to move the cursor so that it is no longer contained within the element or one of its children."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/getSelectedCandidatePair",
    "pageType": "web-api-instance-method",
    "summary": "The getSelectedCandidatePair() method of the RTCIceTransport interface returns an RTCIceCandidatePair object containing the current best-choice pair of ICE candidates describing the configuration of the endpoints of the transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/DOMActivate_event",
    "pageType": "web-api-event",
    "summary": "The DOMActivate event is fired at an element when it becomes active, such as when it is clicked on using the mouse or a keypress is used to navigate to it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceTransport/statechange_event",
    "pageType": "web-api-event",
    "summary": "A statechange event occurs when the RTCIceTransport changes state. The state can be used to determine how far through the process of examining, verifying, and selecting a valid candidate pair is prior to successfully connecting the two peers for WebRTC communications."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollLeft",
    "pageType": "web-api-instance-property",
    "summary": "The scrollLeft property of the Element interface gets or sets the number of pixels by which an element's content is scrolled from its left edge. This value is subpixel precise in modern browsers, meaning that it isn't necessarily a whole number."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Background_Synchronization_API",
    "pageType": "web-api-overview",
    "summary": "The Background Synchronization API enables a web app to defer tasks so that they can be run in a service worker once the user has a stable network connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/gotpointercapture_event",
    "pageType": "web-api-event",
    "summary": "The gotpointercapture event is fired when an element captures a pointer using setPointerCapture()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableCookieChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The ExtendableCookieChangeEvent interface of the Cookie Store API is the event type passed to cookiechange event fired at the ServiceWorkerGlobalScope when any cookie changes occur which match the service worker's cookie change subscription list. A cookie change event consists of a cookie and a type (either \"changed\" or \"deleted\")."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableCookieChangeEvent/changed",
    "pageType": "web-api-instance-property",
    "summary": "The changed read-only property of the ExtendableCookieChangeEvent interface returns any cookies that have been changed by the given ExtendableCookieChangeEvent instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/animate",
    "pageType": "web-api-instance-method",
    "summary": "The Element interface's animate() method\nis a shortcut method which creates a new Animation, applies it to the\nelement, then plays the animation. It returns the created Animation\nobject instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableCookieChangeEvent/deleted",
    "pageType": "web-api-instance-property",
    "summary": "The deleted read-only property of the ExtendableCookieChangeEvent interface returns any cookies that have been deleted by the given ExtendableCookieChangeEvent instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/pointerdown_event",
    "pageType": "web-api-event",
    "summary": "The pointerdown event is fired when a pointer becomes active. For mouse, it is fired when the device transitions from no buttons pressed to at least one button pressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableCookieChangeEvent/ExtendableCookieChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The ExtendableCookieChangeEvent() constructor creates a new ExtendableCookieChangeEvent object\nwhich is the event type passed to cookiechange event fired at the ServiceWorkerGlobalScope when any cookie changes occur which match the service worker's cookie change subscription list.\nThis constructor is called by the browser when a change event occurs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaAutoComplete",
    "pageType": "web-api-instance-property",
    "summary": "The ariaAutoComplete property of the Element interface reflects the value of the aria-autocomplete attribute, which indicates whether inputting text could trigger display of one or more predictions of the user's intended value for a combobox, searchbox, or textbox and specifies how predictions would be presented if they were made."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryHandle/removeEntry",
    "pageType": "web-api-instance-method",
    "summary": "The removeEntry() method of the\nFileSystemDirectoryHandle interface attempts to remove an entry if the\ndirectory handle contains a file or directory called the name specified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryHandle",
    "pageType": "web-api-interface",
    "summary": "The FileSystemDirectoryHandle interface of the File System API provides a handle to a file system directory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/hasAttributes",
    "pageType": "web-api-instance-method",
    "summary": "The hasAttributes() method of the Element\ninterface returns a boolean value indicating whether the current element has any\nattributes or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryHandle/resolve",
    "pageType": "web-api-instance-method",
    "summary": "The resolve() method of the\nFileSystemDirectoryHandle interface returns an Array of\ndirectory names from the parent handle to the specified child entry, with the name of\nthe child entry as the last array item."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/pointerover_event",
    "pageType": "web-api-event",
    "summary": "The pointerover event is fired when a pointing device is moved into an element's hit test boundaries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryHandle/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the\nFileSystemDirectoryHandle interface returns a new asynchronous iterator\nfor the iteration of the key-value pairs of the entries within the FileSystemDirectoryHandle\non which this method is called. The key-value pairs are\nin the form of an array like [key, value]."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/mouseup_event",
    "pageType": "web-api-event",
    "summary": "The mouseup event is fired at an Element when a button on a pointing device (such as a mouse or trackpad) is released while the pointer is located inside it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryHandle/getDirectoryHandle",
    "pageType": "web-api-instance-method",
    "summary": "The getDirectoryHandle() method of the\nFileSystemDirectoryHandle interface returns a\nFileSystemDirectoryHandle for a subdirectory with the specified name\nwithin the directory handle on which the method is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaActiveDescendantElement",
    "pageType": "web-api-instance-property",
    "summary": "The ariaActiveDescendantElement property of the Element interface represents the current active element when focus is on a composite widget, combobox, textbox, group, or application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryHandle/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the\nFileSystemDirectoryHandle interface returns a new asynchronous iterator\nfor the iteration of the key of the entries within the FileSystemDirectoryHandle\non which this method is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryHandle/getFileHandle",
    "pageType": "web-api-instance-method",
    "summary": "The getFileHandle() method of the\nFileSystemDirectoryHandle interface returns a\nFileSystemFileHandle for a file with the specified name, within the\ndirectory the method is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/mousewheel_event",
    "pageType": "web-api-event",
    "summary": "The obsolete and non-standard mousewheel event is fired asynchronously at an Element to provide updates while a mouse wheel or similar device is operated. The mousewheel event was never part of any standard, and while it was implemented by several browsers, it was never implemented by Firefox."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryHandle/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the\nFileSystemDirectoryHandle interface returns a new asynchronous iterator\nfor the iteration of the value of the entries within the FileSystemDirectoryHandle\non which this method is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaReadOnly",
    "pageType": "web-api-instance-property",
    "summary": "The ariaReadOnly property of the Element interface reflects the value of the aria-readonly attribute, which indicates that the element is not editable, but is otherwise operable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_frag_depth",
    "pageType": "webgl-extension",
    "summary": "The EXT_frag_depth extension is part of the WebGL API and enables to set a depth value of a fragment from within the fragment shader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/animationend_event",
    "pageType": "web-api-event",
    "summary": "The animationend event is fired when a CSS Animation has completed. If the animation aborts before reaching completion, such as if the element is removed from the DOM or the animation is removed from the element, the animationend event is not fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMImplementation",
    "pageType": "web-api-interface",
    "summary": "The DOMImplementation interface represents an object providing methods which are not dependent on any particular document. Such an object is returned by the Document.implementation property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/removeAttributeNS",
    "pageType": "web-api-instance-method",
    "summary": "The removeAttributeNS() method of the\nElement interface removes the specified attribute with the specified namespace from an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMImplementation/createDocumentType",
    "pageType": "web-api-instance-method",
    "summary": "The DOMImplementation.createDocumentType() method returns\na DocumentType object which can either be used with\nDOMImplementation.createDocument upon document creation or can be put\ninto the document via methods like Node.insertBefore() or\nNode.replaceChild()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaLive",
    "pageType": "web-api-instance-property",
    "summary": "The ariaLive property of the Element interface reflects the value of the aria-live attribute, which indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMImplementation/createDocument",
    "pageType": "web-api-instance-method",
    "summary": "The DOMImplementation.createDocument() method creates and\nreturns an XMLDocument."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMImplementation/createHTMLDocument",
    "pageType": "web-api-instance-method",
    "summary": "The\nDOMImplementation.createHTMLDocument() method creates a\nnew HTML Document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaBusy",
    "pageType": "web-api-instance-property",
    "summary": "The ariaBusy property of the Element interface reflects the value of the aria-busy attribute, which indicates whether an element is being modified, as assistive technologies may want to wait until the modifications are complete before exposing them to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMImplementation/hasFeature",
    "pageType": "web-api-instance-method",
    "summary": "The\nDOMImplementation.hasFeature() method returns a\nboolean flag indicating if a given feature is supported. It is\ndeprecated and modern browsers return true in all cases."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getAttributeNames",
    "pageType": "web-api-instance-method",
    "summary": "The getAttributeNames() method of the\nElement interface returns the attribute names of the element as an\nArray of strings. If the element has no attributes it returns an empty\narray."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebCodecs_API",
    "pageType": "web-api-overview",
    "summary": "The WebCodecs API gives web developers low-level access to the individual frames of a video stream and chunks of audio.\nIt is useful for web applications that require full control over the way media is processed.\nFor example, video or audio editors, and video conferencing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/attachShadow",
    "pageType": "web-api-instance-method",
    "summary": "The Element.attachShadow() method attaches a shadow DOM tree to the specified element and returns a reference to its ShadowRoot."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession",
    "pageType": "web-api-interface",
    "summary": "The MediaKeySession interface of the Encrypted Media Extensions API represents a context for message exchange with a content decryption module (CDM)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/expiration",
    "pageType": "web-api-instance-property",
    "summary": "The expiration read-only property of the MediaKeySession interface returns the time after which the keys in the current session can no longer be used to decrypt media data, or NaN if no such time exists."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/keypress_event",
    "pageType": "web-api-event",
    "summary": "The keypress event is fired when a letter, number, punctuation, or symbol key is pressed, or else when the Enter key is pressed — including when the Enter key is pressed in combination with the Shift key or Ctrl key. Otherwise, when a modifier key such as the Alt, Shift, Ctrl, Meta, Esc, or Option key is pressed in isolation, the keypress event is not fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/message_event",
    "pageType": "web-api-event",
    "summary": "The message event of the\nMediaKeySession interface fires when a message is generated by the\ncontent decryption module."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/pointerrawupdate_event",
    "pageType": "web-api-event",
    "summary": "The pointerrawupdate event is fired when a pointer changes any properties that don't fire pointerdown or pointerup events.\nSee pointermove for a list of these properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/keystatuseschange_event",
    "pageType": "web-api-event",
    "summary": "The keystatuseschange event of the MediaKeySession API fires when there has been a change in the keys or their statuses within a session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaBrailleRoleDescription",
    "pageType": "web-api-instance-property",
    "summary": "The ariaBrailleRoleDescription property of the Element interface reflects the value of the aria-brailleroledescription attribute, which defines the ARIA braille role description of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/remove",
    "pageType": "web-api-instance-method",
    "summary": "The remove() method of the MediaKeySession interface returns a Promise after removing any session data associated with the current object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/focus_event",
    "pageType": "web-api-event",
    "summary": "The focus event fires when an element has received focus. The event does not bubble, but the related focusin event that follows does bubble."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/sessionId",
    "pageType": "web-api-instance-property",
    "summary": "The sessionId read-only property of the MediaKeySession interface contains a unique string generated by the content decryption module (CDM) for the current media object and its associated keys or licenses."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the MediaKeySession interface notifies that the current media session is no longer needed, and that the content decryption module should release any resources associated with this object and close it.\nThen, it returns a Promise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/setHTMLUnsafe",
    "pageType": "web-api-instance-method",
    "summary": "The setHTMLUnsafe() method of the Element interface is used to parse HTML input into a DocumentFragment, optionally filtering out unwanted elements and attributes, and those that don't belong in the context, and then using it to replace the element's subtree in the DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/load",
    "pageType": "web-api-instance-method",
    "summary": "The load() method of the MediaKeySession interface returns a Promise that resolves to a boolean value after loading data for a specified session object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollsnapchange_event",
    "pageType": "web-api-event",
    "summary": "The scrollsnapchange event of the Element interface is fired on the scroll container at the end of a scrolling operation when a new scroll snap target has been selected, just before the corresponding scrollend event fires."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/keyStatuses",
    "pageType": "web-api-instance-property",
    "summary": "The keyStatuses read-only property of the MediaKeySession interface returns a reference to a read-only MediaKeyStatusMap of the current session's keys and their statuses."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/generateRequest",
    "pageType": "web-api-instance-method",
    "summary": "The generateRequest() method of the MediaKeySession interface returns a Promise after generating a license request based on initialization data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaDisabled",
    "pageType": "web-api-instance-property",
    "summary": "The ariaDisabled property of the Element interface reflects the value of the aria-disabled attribute, which indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/update",
    "pageType": "web-api-instance-method",
    "summary": "The update() method of the MediaKeySession interface loads messages and licenses to the CDM, and then returns a Promise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaChecked",
    "pageType": "web-api-instance-property",
    "summary": "The ariaChecked property of the Element interface reflects the value of the aria-checked attribute, which indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets that have a checked state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeySession/closed",
    "pageType": "web-api-instance-property",
    "summary": "The closed read-only property of the MediaKeySession interface returns a Promise signaling when a MediaKeySession closes.\nThis promise can only be fulfilled and is never rejected.\nClosing a session means that licenses and keys associated with it are no longer valid for decrypting media data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/contextmenu_event",
    "pageType": "web-api-event",
    "summary": "The contextmenu event fires when the user attempts to open a context menu. This event is typically triggered by clicking the right mouse button, or by pressing the context menu key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Pbkdf2Params",
    "pageType": "web-api-interface",
    "summary": "The Pbkdf2Params dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.deriveKey(), when using the PBKDF2 algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaBrailleLabel",
    "pageType": "web-api-instance-property",
    "summary": "The ariaBrailleLabel property of the Element interface reflects the value of the aria-braillelabel attribute, which defines the ARIA braille label of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortSignal",
    "pageType": "web-api-interface",
    "summary": "The AbortSignal interface represents a signal object that allows you to communicate with an asynchronous operation (such as a fetch request) and abort it if required via an AbortController object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/beforematch_event",
    "pageType": "web-api-event",
    "summary": "An element receives a beforematch event when it is in the hidden until found state and the browser is about to reveal its content because the user has found the content through the \"find in page\" feature or through fragment navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortSignal/aborted",
    "pageType": "web-api-instance-property",
    "summary": "The aborted read-only property returns a value that indicates whether the asynchronous operations the signal is communicating with are aborted (true) or not (false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortSignal/timeout_static",
    "pageType": "web-api-static-method",
    "summary": "The AbortSignal.timeout() static method returns an AbortSignal that will automatically abort after a specified time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/webkitmouseforcedown_event",
    "pageType": "web-api-event",
    "summary": "After a mousedown event has been fired at the element, if and when sufficient pressure has been applied to the mouse or trackpad button to qualify as a \"force click,\" Safari begins sending webkitmouseforcedown events to the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortSignal/reason",
    "pageType": "web-api-instance-property",
    "summary": "The reason read-only property returns a JavaScript value that indicates the abort reason."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/innerHTML",
    "pageType": "web-api-instance-property",
    "summary": "The innerHTML property of the Element interface gets or sets the HTML or XML markup contained within the element, omitting any shadow roots in both cases."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortSignal/any_static",
    "pageType": "web-api-static-method",
    "summary": "The AbortSignal.any() static method takes an iterable of abort signals and returns an AbortSignal. The returned abort signal is aborted when any of the input iterable abort signals are aborted. The abort reason will be set to the reason of the first signal that is aborted. If any of the given abort signals are already aborted then so will be the returned AbortSignal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortSignal/abort_static",
    "pageType": "web-api-static-method",
    "summary": "The AbortSignal.abort() static method returns an AbortSignal that is already set as aborted (and which does not trigger an abort event)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/mousedown_event",
    "pageType": "web-api-event",
    "summary": "The mousedown event is fired at an Element when a pointing device button is pressed while the pointer is inside the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortSignal/abort_event",
    "pageType": "web-api-event",
    "summary": "The abort event of the AbortSignal is fired when the associated request is aborted, i.e., using AbortController.abort()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/requestFullscreen",
    "pageType": "web-api-instance-method",
    "summary": "The Element.requestFullscreen()\nmethod issues an asynchronous request to make the element be displayed in fullscreen\nmode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortSignal/throwIfAborted",
    "pageType": "web-api-instance-method",
    "summary": "The throwIfAborted() method throws the signal's abort reason if the signal has been aborted; otherwise it does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/mousemove_event",
    "pageType": "web-api-event",
    "summary": "The mousemove event is fired at an element when a pointing device (usually a mouse) is moved while the cursor's hotspot is inside it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SecurePaymentConfirmationRequest",
    "pageType": "web-api-interface",
    "summary": "The SecurePaymentConfirmationRequest dictionary describes input to the Payment Request API when used to authenticate a user during an e-commerce transaction using SPC with Payment Request API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/securitypolicyviolation_event",
    "pageType": "web-api-event",
    "summary": "The securitypolicyviolation event is fired when a Content Security Policy is violated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer_API",
    "pageType": "web-api-overview",
    "summary": "The Summarizer API summarizes a given body of text via a browser's internal AI model (which may differ between browsers)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaValueMin",
    "pageType": "web-api-instance-property",
    "summary": "The ariaValueMin property of the Element interface reflects the value of the aria-valuemin attribute, which defines the minimum allowed value for a range widget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Summarizer_API/Using",
    "pageType": "guide",
    "summary": "The Summarizer API provides an asynchronous (Promise-based) mechanism for a website to feed a body of text into the browser's own internal AI model and request that it returns a summary of the text based on specified options. This article explains how to use the fundamentals of the Summarizer API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/gestureend_event",
    "pageType": "web-api-event",
    "summary": "The gestureend event is fired when there are no longer multiple fingers contacting the touch surface, thus ending the gesture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredentialError",
    "pageType": "web-api-interface",
    "summary": "The IdentityCredentialError interface of the FedCM API describes an authentication error indicating that the user agent did not receive an identity assertion after the user has requested to use a federated account. This can happen if the client is unauthorized or if the server is temporarily unavailable, for example."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaNotify",
    "pageType": "web-api-instance-method",
    "summary": "The ariaNotify() method of the Element interface specifies that a given string of text should be announced by a screen reader if available and activated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredentialError/error",
    "pageType": "web-api-instance-property",
    "summary": "The error read-only property of the IdentityCredentialError interface is either one of the values listed in the OAuth 2.0 specified error list or an arbitrary string giving more information about the error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredentialError/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the IdentityCredentialError interface is the URL pointing to human-readable information about the error to display to users, such as how to fix the error or contact customer service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/mouseover_event",
    "pageType": "web-api-event",
    "summary": "The mouseover event is fired at an Element when a pointing device (such as a mouse or trackpad) is used to move the cursor onto the element or one of its child elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredentialError/IdentityCredentialError",
    "pageType": "web-api-constructor",
    "summary": "The IdentityCredentialError() constructor creates a new IdentityCredentialError object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/webkitmouseforceup_event",
    "pageType": "web-api-event",
    "summary": "The non-standard webkitmouseforceup event is fired by Safari at an Element some time after the webkitmouseforcedown event, when pressure on the button has been reduced sufficiently to end the \"force click\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CompressionStream",
    "pageType": "web-api-interface",
    "summary": "The CompressionStream interface of the Compression Streams API is an API for compressing a stream of data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CompressionStream/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable read-only property of the CompressionStream interface returns a ReadableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/currentCSSZoom",
    "pageType": "web-api-instance-property",
    "summary": "The currentCSSZoom read-only property of the Element interface provides the \"effective\" CSS zoom of an element, taking into account the zoom applied to the element and all its parent elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CompressionStream/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable read-only property of the CompressionStream interface returns a WritableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/append",
    "pageType": "web-api-instance-method",
    "summary": "The Element.append() method\ninserts a set of Node objects or strings after\nthe last child of the Element. Strings\nare inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CompressionStream/CompressionStream",
    "pageType": "web-api-constructor",
    "summary": "The CompressionStream() constructor creates a new CompressionStream object which compresses a stream of data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaRowIndex",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRowIndex property of the Element interface reflects the value of the aria-rowindex attribute, which defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBVersionChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The IDBVersionChangeEvent interface of the IndexedDB API indicates that the version of the database has changed, as the result of an onupgradeneeded event handler function."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/nextElementSibling",
    "pageType": "web-api-instance-property",
    "summary": "The Element.nextElementSibling read-only\nproperty returns the element immediately following the specified one in its parent's\nchildren list, or null if the specified element is the last one in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBVersionChangeEvent/newVersion",
    "pageType": "web-api-instance-property",
    "summary": "The newVersion read-only property of the\nIDBVersionChangeEvent interface returns the new version number of the\ndatabase."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/requestPointerLock",
    "pageType": "web-api-instance-method",
    "summary": "The requestPointerLock() method of the Element interface lets you asynchronously ask for the pointer to be locked on the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBVersionChangeEvent/oldVersion",
    "pageType": "web-api-instance-property",
    "summary": "The oldVersion read-only property of the\nIDBVersionChangeEvent interface returns the old version number of the\ndatabase."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/focusin_event",
    "pageType": "web-api-event",
    "summary": "The focusin event fires when an element has received focus, after the focus event. The two events differ in that focusin bubbles, while focus does not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBVersionChangeEvent/IDBVersionChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The IDBVersionChangeEvent() constructor\ncreates a new IDBVersionChangeEvent object, which is used to represent\nwhen a version of the database has changed, as a result of the\nonupgradeneeded event handler."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/replaceChildren",
    "pageType": "web-api-instance-method",
    "summary": "The Element.replaceChildren() method replaces the\nexisting children of a Node with a specified new set of children. These\ncan be string or Node objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet",
    "pageType": "web-api-interface",
    "summary": "The CSSStyleSheet interface represents a single CSS stylesheet, and lets you inspect and modify the list of rules contained in the stylesheet. It inherits properties and methods from its parent, StyleSheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaDescribedByElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaDescribedByElements property of the Element interface is an array containing the element (or elements) that provide an accessible description for the element it is applied to.\nThe accessible description is similar to the accessible label (see ariaLabelledByElements), but provides more verbose information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/addRule",
    "pageType": "web-api-instance-method",
    "summary": "The obsolete CSSStyleSheet interface's\naddRule() legacy method adds a new rule to the\nstylesheet. You should avoid using this method, and should instead use the more standard\ninsertRule() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaSetSize",
    "pageType": "web-api-instance-property",
    "summary": "The ariaSetSize property of the Element interface reflects the value of the aria-setsize attribute, which defines the number of items in the current set of listitems or treeitems."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/insertRule",
    "pageType": "web-api-instance-method",
    "summary": "The CSSStyleSheet.insertRule()\nmethod inserts a new CSS rule into the current style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/ownerRule",
    "pageType": "web-api-instance-property",
    "summary": "The read-only CSSStyleSheet property\nownerRule returns the CSSImportRule\ncorresponding to the @import at-rule which imported the stylesheet into\nthe document. If the stylesheet wasn't imported into the document using\n@import, the returned value is null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaPlaceholder",
    "pageType": "web-api-instance-property",
    "summary": "The ariaPlaceholder property of the Element interface reflects the value of the aria-placeholder attribute, which defines a short hint intended to aid the user with data entry when the control has no value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/replaceSync",
    "pageType": "web-api-instance-method",
    "summary": "The replaceSync() method of the CSSStyleSheet interface synchronously replaces the content of the stylesheet with the content passed into it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/transitionrun_event",
    "pageType": "web-api-event",
    "summary": "The transitionrun event is fired when a CSS transition is first created, i.e., before any transition-delay has begun."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/rules",
    "pageType": "web-api-instance-property",
    "summary": "rules is a deprecated\nlegacy property of the CSSStyleSheet interface. Functionally\nidentical to the preferred cssRules property,\nit provides access to a live-updating list of the CSS rules comprising the\nstylesheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/removeRule",
    "pageType": "web-api-instance-method",
    "summary": "The obsolete CSSStyleSheet method\nremoveRule() removes a rule from the stylesheet\nobject. It is functionally identical to the standard, preferred method\ndeleteRule()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/setPointerCapture",
    "pageType": "web-api-instance-method",
    "summary": "The setPointerCapture() method of the\nElement interface is used to designate a specific element as the\ncapture target of future pointer events. Subsequent events for the pointer will\nbe targeted at the capture element until capture is released (via\nElement.releasePointerCapture() or the\npointerup event is fired)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/CSSStyleSheet",
    "pageType": "web-api-constructor",
    "summary": "The CSSStyleSheet() constructor creates a new CSSStyleSheet object which represents a single Stylesheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaValueText",
    "pageType": "web-api-instance-property",
    "summary": "The ariaValueText property of the Element interface reflects the value of the aria-valuetext attribute, which defines the human-readable text alternative of aria-valuenow for a range widget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/deleteRule",
    "pageType": "web-api-instance-method",
    "summary": "The CSSStyleSheet method\ndeleteRule() removes a rule from the stylesheet\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/childElementCount",
    "pageType": "web-api-instance-property",
    "summary": "The Element.childElementCount read-only property\nreturns the number of child elements of this element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/cssRules",
    "pageType": "web-api-instance-property",
    "summary": "The read-only CSSStyleSheet property\ncssRules returns a live CSSRuleList which\nprovides a real-time, up-to-date list of every CSS rule which comprises the\nstylesheet. Each item in the list is a CSSRule defining a single\nrule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleSheet/replace",
    "pageType": "web-api-instance-method",
    "summary": "The replace() method of the CSSStyleSheet interface asynchronously replaces the content of the stylesheet with the content passed into it. The method returns a promise that resolves with the CSSStyleSheet object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/setCapture",
    "pageType": "web-api-instance-method",
    "summary": "Call this method during the handling of a mousedown event to retarget all mouse events\nto this element until the mouse button is released or document.releaseCapture() is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaAtomic",
    "pageType": "web-api-instance-property",
    "summary": "The ariaAtomic property of the Element interface reflects the value of the aria-atomic attribute, which indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/name",
    "pageType": "web-api-instance-property",
    "summary": "The read-only name property of\nthe FileSystemEntry interface returns a string\nspecifying the entry's name; this is the entry within its parent directory (the last\ncomponent of the path as indicated by the fullPath property)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry",
    "pageType": "web-api-interface",
    "summary": "The FileSystemEntry interface of the File and Directory Entries API represents a single entry in a file system. The entry can be a file or a directory (directories are represented by the FileSystemDirectoryEntry interface). It includes methods for working with files—including copying, moving, removing, and reading files—as well as information about a file it points to—including the file name and its path from the root to the entry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getElementsByTagName",
    "pageType": "web-api-instance-method",
    "summary": "The\nElement.getElementsByTagName() method returns a live\nHTMLCollection of elements with the given tag name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/getParent",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemEntry interface's method\ngetParent() obtains a\nFileSystemDirectoryEntry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scroll",
    "pageType": "web-api-instance-method",
    "summary": "The scroll() method of the Element\ninterface scrolls the element to a particular set of coordinates inside a given\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/moveTo",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemEntry interface's method\nmoveTo() moves the file\nspecified by the entry to a new location on the file system, or renames the file if\nthe destination directory is the same as the source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/filesystem",
    "pageType": "web-api-instance-property",
    "summary": "The read-only filesystem\nproperty of the FileSystemEntry interface contains a\nFileSystem object that represents the file system on which the entry\nresides."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaRequired",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRequired property of the Element interface reflects the value of the aria-required attribute, which indicates that user input is required on the element before a form may be submitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/remove",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemEntry interface's method\nremove() deletes the file\nor directory from the file system. Directories must be empty before they can be\nremoved."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/paste_event",
    "pageType": "web-api-event",
    "summary": "The paste event of the Clipboard API is fired when the user has initiated a \"paste\" action through the browser's user interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/isFile",
    "pageType": "web-api-instance-property",
    "summary": "The read-only isFile property of\nthe FileSystemEntry interface is true if the entry\nrepresents a file (meaning it's a FileSystemFileEntry) and\nfalse if it's not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/pointerup_event",
    "pageType": "web-api-event",
    "summary": "The pointerup event is fired when a pointer is no longer active. Remember that it is possible to get a pointercancel event instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/isDirectory",
    "pageType": "web-api-instance-property",
    "summary": "The read-only isDirectory\nproperty of the FileSystemEntry interface is true if the\nentry represents a directory (meaning it's a FileSystemDirectoryEntry)\nand false if it's not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/transitionend_event",
    "pageType": "web-api-event",
    "summary": "The transitionend event is fired when a CSS transition has completed. In the case where a transition is removed before completion, such as if the transition-property is removed or display is set to none, then the event will not be generated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/toURL",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemEntry interface's method\ntoURL() creates and\nreturns a string containing a URL which can be used to identify the file system entry.\nThis is done by exposing a new URL scheme—filesystem:—that can be used as\nthe value of src and href attributes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/replaceWith",
    "pageType": "web-api-instance-method",
    "summary": "The Element.replaceWith() method replaces this\nElement in the children list of its parent with a set of\nNode objects or strings. Strings are inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/getMetadata",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemEntry interface's method\ngetMetadata() obtains a\nMetadata object with information about the file system entry, such as\nits modification date and time and its size."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/copyTo",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemEntry interface's method\ncopyTo() copies the file\nspecified by the entry to a new location on the file system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollTop",
    "pageType": "web-api-instance-property",
    "summary": "The scrollTop property of the Element interface gets or sets the number of pixels by which an element's content is scrolled from its top edge. This value is subpixel precise in modern browsers, meaning that it isn't necessarily a whole number."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemEntry/fullPath",
    "pageType": "web-api-instance-property",
    "summary": "The read-only fullPath property\nof the FileSystemEntry interface returns a string\nspecifying the full, absolute path from the file system's root to the file represented\nby the entry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/clientLeft",
    "pageType": "web-api-instance-property",
    "summary": "The clientLeft read-only property of the Element interface returns the width of the left border of an element in pixels. It includes the width of the vertical scrollbar if the text direction of the element is right-to-left and if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left margin or the left padding."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFrameSetElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLFrameSetElement interface provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating <frameset> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaModal",
    "pageType": "web-api-instance-property",
    "summary": "The ariaModal property of the Element interface reflects the value of the aria-modal attribute, which indicates whether an element is modal when displayed. Applying the aria-modal property to an element with role=\"dialog\" replaces the technique of using aria-hidden on the background for informing assistive technologies that content outside a dialog is inert."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFieldOfView",
    "pageType": "web-api-interface",
    "summary": "The VRFieldOfView interface of the WebVR API represents a field of view defined by 4 different degree values describing the view from a center point."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/keyup_event",
    "pageType": "web-api-event",
    "summary": "The keyup event is fired when a key is released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFieldOfView/rightDegrees",
    "pageType": "web-api-instance-property",
    "summary": "The rightDegrees read-only property of the VRFieldOfView interface returns the number of degrees to the right that the field of view extends in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFieldOfView/downDegrees",
    "pageType": "web-api-instance-property",
    "summary": "The downDegrees read-only property of the VRFieldOfView interface returns the number of degrees downwards that the field of view extends in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/toggleAttribute",
    "pageType": "web-api-instance-method",
    "summary": "The toggleAttribute() method of the\nElement interface toggles a Boolean attribute (removing it if it is\npresent and adding it if it is not present) on the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFieldOfView/leftDegrees",
    "pageType": "web-api-instance-property",
    "summary": "The leftDegrees read-only property of the VRFieldOfView interface returns the number of degrees to the left that the field of view extends in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaColIndex",
    "pageType": "web-api-instance-property",
    "summary": "The ariaColIndex property of the Element interface reflects the value of the aria-colindex attribute, which defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFieldOfView/upDegrees",
    "pageType": "web-api-instance-property",
    "summary": "The upDegrees read-only property of the VRFieldOfView interface returns the number of degrees upwards that the field of view extends in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/hasAttribute",
    "pageType": "web-api-instance-method",
    "summary": "The Element.hasAttribute() method returns a\nBoolean value indicating whether the specified element has the\nspecified attribute or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort",
    "pageType": "web-api-interface",
    "summary": "The SerialPort interface of the Web Serial API provides access to a serial port on the host device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/transitioncancel_event",
    "pageType": "web-api-event",
    "summary": "The transitioncancel event is fired when a CSS transition is canceled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/open",
    "pageType": "web-api-instance-method",
    "summary": "The open() method of the SerialPort interface returns a Promise that resolves when the port is opened. By default the port is opened with 8 data bits, 1 stop bit and no parity checking. The baudRate parameter is required."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/prepend",
    "pageType": "web-api-instance-method",
    "summary": "The Element.prepend() method inserts a set of\nNode objects or strings before the first child\nof the Element. Strings are inserted as\nequivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/setSignals",
    "pageType": "web-api-instance-method",
    "summary": "The setSignals() method of the SerialPort interface sets control signals on the port and returns a Promise that resolves when they are set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/computedStyleMap",
    "pageType": "web-api-instance-method",
    "summary": "The computedStyleMap() method of\nthe Element interface returns a StylePropertyMapReadOnly\ninterface which provides a read-only representation of a CSS declaration block that is\nan alternative to CSSStyleDeclaration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/connected",
    "pageType": "web-api-instance-property",
    "summary": "The connected read-only property of the SerialPort interface returns a boolean value that indicates whether the port is logically connected to the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollend_event",
    "pageType": "web-api-event",
    "summary": "The scrollend event fires when element scrolling has completed.\nScrolling is considered completed when the scroll position has no more pending updates and the user has completed their gesture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/setAttributeNode",
    "pageType": "web-api-instance-method",
    "summary": "The setAttributeNode() method of the Element interface adds a new Attr node to the specified element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/connect_event",
    "pageType": "web-api-event",
    "summary": "The connect event of the SerialPort interface is fired when the port connects to the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaValueMax",
    "pageType": "web-api-instance-property",
    "summary": "The ariaValueMax property of the Element interface reflects the value of the aria-valuemax attribute, which defines the maximum allowed value for a range widget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/getInfo",
    "pageType": "web-api-instance-method",
    "summary": "The getInfo() method of the SerialPort interface returns an object containing identifying information for the device available via the port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaControlsElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaControlsElements property of the Element interface is an array containing the elements that are controlled by the element it is applied to.\nFor example, this might be set on a combobox to indicate the element that it pops up, or on a scrollbar to indicate the ID of the element it controls."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaValueNow",
    "pageType": "web-api-instance-property",
    "summary": "The ariaValueNow property of the Element interface reflects the value of the aria-valuenow attribute, which defines the current value for a range widget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable read-only property of the SerialPort interface returns a ReadableStream for receiving data from the device connected to the port. Chunks read from this stream are instances of Uint8Array. This property is non-null as long as the port is open and has not encountered a fatal error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/lastElementChild",
    "pageType": "web-api-instance-property",
    "summary": "The Element.lastElementChild read-only property\nreturns an element's last child Element, or null if there\nare no child elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/close",
    "pageType": "web-api-instance-method",
    "summary": "The SerialPort.close() method of the SerialPort interface returns a Promise that resolves when the port closes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/blur_event",
    "pageType": "web-api-event",
    "summary": "The blur event fires when an element has lost focus. The event does not bubble, but the related focusout event that follows does bubble."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable read-only property of the SerialPort interface returns a WritableStream for sending data to the device connected to the port. Chunks written to this stream must be instances of ArrayBuffer, TypedArray, or DataView. This property is non-null as long as the port is open and has not encountered a fatal error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/touchstart_event",
    "pageType": "web-api-event",
    "summary": "The touchstart event is fired when one or more touch points are placed on the touch surface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/disconnect_event",
    "pageType": "web-api-event",
    "summary": "The disconnect event of the SerialPort interface is fired when the port disconnects from the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getAttributeNode",
    "pageType": "web-api-instance-method",
    "summary": "Returns the specified attribute of the specified element, as an Attr node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/focusout_event",
    "pageType": "web-api-event",
    "summary": "The focusout event fires when an element has lost focus, after the blur event. The two events differ in that focusout bubbles, while blur does not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/getSignals",
    "pageType": "web-api-instance-method",
    "summary": "The SerialPort.getSignals() method of the SerialPort interface returns a Promise that resolves with an object containing the current state of the port's control signals."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/touchmove_event",
    "pageType": "web-api-event",
    "summary": "The touchmove event is fired when one or more touch points are moved along the touch surface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SerialPort/forget",
    "pageType": "web-api-instance-method",
    "summary": "The SerialPort.forget() method of the SerialPort interface returns a Promise that resolves when access to the serial port is revoked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/dblclick_event",
    "pageType": "web-api-event",
    "summary": "The dblclick event fires when a pointing device button (such as a mouse's primary button) is double-clicked; that is, when it's rapidly clicked twice on a single element within a very short span of time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLHeadingElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLHeadingElement interface represents the different heading elements, <h1> through <h6>. It inherits methods and properties from the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/gesturechange_event",
    "pageType": "web-api-event",
    "summary": "The gesturechange event is fired when digits move during a touch gesture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/copy_event",
    "pageType": "web-api-event",
    "summary": "The copy event of the Clipboard API fires when the user initiates a copy action through the browser's user interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformanceNavigationTiming interface provides methods and properties to store and retrieve metrics regarding the browser's document navigation events. For example, this interface can be used to determine how much time it takes to load or unload a document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getClientRects",
    "pageType": "web-api-instance-method",
    "summary": "The getClientRects() method of the Element\ninterface returns a collection of DOMRect objects that indicate the\nbounding rectangles for each CSS border box in a client."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/activationStart",
    "pageType": "web-api-instance-property",
    "summary": "The activationStart read-only property represents the time between when a document starts prerendering and when it is activated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/pointerleave_event",
    "pageType": "web-api-event",
    "summary": "The pointerleave event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer. Otherwise, pointerleave works the same as mouseleave, and are dispatched at the same time. They are also dispatched at the same time as mouseout and pointerout events, if appropriate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property returns the type of navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollTopMax",
    "pageType": "web-api-instance-property",
    "summary": "The Element.scrollTopMax read-only property returns a\nnumber representing the maximum top scroll offset possible for the\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/notRestoredReasons",
    "pageType": "web-api-instance-property",
    "summary": "The notRestoredReasons read-only property of the PerformanceNavigationTiming interface returns a NotRestoredReasons object providing report data on reasons why the current document was blocked from using the back/forward cache (bfcache) on navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/hasPointerCapture",
    "pageType": "web-api-instance-method",
    "summary": "The hasPointerCapture() method of the\nElement interface checks whether the element on which it is invoked has\npointer capture for the pointer identified by the given pointer ID."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/unloadEventStart",
    "pageType": "web-api-instance-property",
    "summary": "The unloadEventStart read-only property returns a DOMHighResTimeStamp representing the time immediately before the previous document's unload event handler starts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/domContentLoadedEventEnd",
    "pageType": "web-api-instance-property",
    "summary": "The domContentLoadedEventEnd read-only property returns a DOMHighResTimeStamp representing the time immediately after the current document's DOMContentLoaded event handler completes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getElementsByClassName",
    "pageType": "web-api-instance-method",
    "summary": "The Element method\ngetElementsByClassName() returns a live\nHTMLCollection which contains every descendant element which has the\nspecified class name or names."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/redirectCount",
    "pageType": "web-api-instance-property",
    "summary": "The redirectCount read-only property returns a number representing the number of redirects since the last non-redirect navigation in the current browsing context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollBy",
    "pageType": "web-api-instance-method",
    "summary": "The scrollBy() method of the Element\ninterface scrolls an element by the given amount."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/unloadEventEnd",
    "pageType": "web-api-instance-property",
    "summary": "The unloadEventEnd read-only property returns a DOMHighResTimeStamp representing the time immediately after the previous document's unload event handler completes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getAttribute",
    "pageType": "web-api-instance-method",
    "summary": "The getAttribute() method of the\nElement interface returns the value of a specified attribute on the\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PerformanceNavigationTiming interface is a serializer; it returns a JSON representation of the PerformanceNavigationTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaMultiLine",
    "pageType": "web-api-instance-property",
    "summary": "The ariaMultiLine property of the Element interface reflects the value of the aria-multiline attribute, which indicates whether a text box accepts multiple lines of input or only a single line."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/loadEventEnd",
    "pageType": "web-api-instance-property",
    "summary": "The loadEventEnd read-only property returns a DOMHighResTimeStamp representing the time immediately after the current document's load event handler completes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/domContentLoadedEventStart",
    "pageType": "web-api-instance-property",
    "summary": "The domContentLoadedEventStart read-only property returns a DOMHighResTimeStamp representing the time immediately before the current document's DOMContentLoaded event handler starts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/firstElementChild",
    "pageType": "web-api-instance-property",
    "summary": "The Element.firstElementChild read-only property\nreturns an element's first child Element, or null if there\nare no child elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/domInteractive",
    "pageType": "web-api-instance-property",
    "summary": "The domInteractive read-only property returns a DOMHighResTimeStamp representing the time immediately before the user agent sets the document's readyState to \"interactive\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaColSpan",
    "pageType": "web-api-instance-property",
    "summary": "The ariaColSpan property of the Element interface reflects the value of the aria-colspan attribute, which defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/loadEventStart",
    "pageType": "web-api-instance-property",
    "summary": "The loadEventStart read-only property returns a DOMHighResTimeStamp representing the time immediately before the current document's load event handler starts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaErrorMessageElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaErrorMessageElements property of the Element interface is an array containing the element (or elements) that provide an error message for the element it is applied to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/criticalCHRestart",
    "pageType": "web-api-instance-property",
    "summary": "A website can indicate that a particular Client Hint is critical to the page by including it in a Critical-CH HTTP response header (as well as the Accept-CH HTTP request header which is needed for all client hints whether critical or not). Doing so will trigger a connection restart if the hint listed in the Critical-CH HTTP response header could have been, but wasn't, included in the HTTP request initially sent. If the browser does not support that client hint, it is ignored and no connection restart occurs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scroll_event",
    "pageType": "web-api-event",
    "summary": "The scroll event fires when an element has been scrolled.\nTo detect when scrolling has completed, see the scrollend event of Element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigationTiming/domComplete",
    "pageType": "web-api-instance-property",
    "summary": "The domComplete read-only property returns a DOMHighResTimeStamp representing the time immediately before the user agent sets the document's readyState to \"complete\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/beforeinput_event",
    "pageType": "web-api-event",
    "summary": "The DOM beforeinput event fires when the value of an <input> or <textarea> element is about to be modified. But in contrast to the input event, it does not fire on the <select> element. The event also applies to elements with contenteditable enabled, and to any element when designMode is turned on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCueList",
    "pageType": "web-api-interface",
    "summary": "The TextTrackCueList interface of the WebVTT API is an array-like object that represents a dynamically updating list of TextTrackCue objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCueList/getCueById",
    "pageType": "web-api-instance-method",
    "summary": "The getCueById() method of the TextTrackCueList interface returns the first VTTCue in the list represented by the TextTrackCueList object whose identifier matches the value of id."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/moveBefore",
    "pageType": "web-api-instance-method",
    "summary": "The moveBefore() method of the Element interface moves a given Node inside the invoking node as a direct child, before a given reference node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCueList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the TextTrackCueList interface returns the number of cues in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/click_event",
    "pageType": "web-api-event",
    "summary": "An element receives a click event when any of the following occurs:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getAttributeNodeNS",
    "pageType": "web-api-instance-method",
    "summary": "The getAttributeNodeNS() method of the Element interface returns the namespaced Attr node of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/muted",
    "pageType": "web-api-instance-property",
    "summary": "The muted read-only property of the\nMediaStreamTrack interface returns a boolean value\nindicating whether or not the track is currently unable to provide media output."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/classList",
    "pageType": "web-api-instance-property",
    "summary": "The Element.classList is a read-only property that\nreturns a live DOMTokenList collection of the class\nattributes of the element. This can then be used to manipulate the class list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The readyState read-only property of the MediaStreamTrack interface returns an enumerated value giving the status of the track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack",
    "pageType": "web-api-interface",
    "summary": "The MediaStreamTrack interface of the Media Capture and Streams API represents a single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/previousElementSibling",
    "pageType": "web-api-instance-property",
    "summary": "The Element.previousElementSibling\nread-only property returns the Element immediately prior to the specified\none in its parent's children list, or null if the specified element is the first one in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind read-only property of the MediaStreamTrack interface returns a string set to \"audio\" if the track is an audio track and to \"video\" if it is a video track.\nIt doesn't change if the track is disassociated from its source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaSort",
    "pageType": "web-api-instance-property",
    "summary": "The ariaSort property of the Element interface reflects the value of the aria-sort attribute, which indicates if items in a table or grid are sorted in ascending or descending order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/mute_event",
    "pageType": "web-api-event",
    "summary": "The mute event is sent to a MediaStreamTrack when the track's source is temporarily unable to provide media data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/stop",
    "pageType": "web-api-instance-method",
    "summary": "The stop() method of the MediaStreamTrack interface stops the track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/setAttribute",
    "pageType": "web-api-instance-method",
    "summary": "The setAttribute() method of the Element interface sets the value of an attribute on the specified element. If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the MediaStreamTrack interface returns a string containing a user agent-assigned label that identifies the track source, as in \"internal microphone\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/clientHeight",
    "pageType": "web-api-instance-property",
    "summary": "The clientHeight read-only property of the Element interface is zero for elements with no CSS or inline layout boxes; otherwise, it's the inner height of an element in pixels. It includes padding but excludes borders, margins, and horizontal scrollbars (if present)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/getCapabilities",
    "pageType": "web-api-instance-method",
    "summary": "The getCapabilities() method of\nthe MediaStreamTrack interface returns an object detailing the accepted values or value range for each constrainable property of the associated MediaStreamTrack, based upon the platform and user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/setHTML",
    "pageType": "web-api-instance-method",
    "summary": "The setHTML() method of the Element interface provides an XSS-safe method to parse and sanitize a string of HTML and insert it into the DOM as a subtree of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/clone",
    "pageType": "web-api-instance-method",
    "summary": "The clone() method of the MediaStreamTrack\ninterface creates a duplicate of the MediaStreamTrack. This new\nMediaStreamTrack object is identical except for its unique\nid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/compositionend_event",
    "pageType": "web-api-event",
    "summary": "The compositionend event is fired when a text composition system such as an input method editor completes or cancels the current composition session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/applyConstraints",
    "pageType": "web-api-instance-method",
    "summary": "The applyConstraints() method of the MediaStreamTrack interface applies a set of constraints to the track; these constraints let the website or app establish ideal values and acceptable ranges of values for the constrainable properties of the track, such as frame rate, dimensions, echo cancellation, and so forth."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/enabled",
    "pageType": "web-api-instance-property",
    "summary": "The enabled property of the\nMediaStreamTrack interface is a Boolean value which is\ntrue if the track is allowed to render the source stream or\nfalse if it is not. This can be used to intentionally mute a\ntrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/fullscreenerror_event",
    "pageType": "web-api-event",
    "summary": "The fullscreenerror event is fired when the browser cannot switch to fullscreen mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/getSettings",
    "pageType": "web-api-instance-method",
    "summary": "The getSettings() method of the\nMediaStreamTrack interface returns a MediaTrackSettings\nobject containing the current values of each of the constrainable properties for the\ncurrent MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaHidden",
    "pageType": "web-api-instance-property",
    "summary": "The ariaHidden property of the Element interface reflects the value of the aria-hidden) attribute, which indicates whether the element is exposed to an accessibility API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/contentHint",
    "pageType": "web-api-instance-property",
    "summary": "The contentHint property of the MediaStreamTrack interface is a string that hints at the type of content the track contains. Allowable values depend on the value of the MediaStreamTrack.kind property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/getConstraints",
    "pageType": "web-api-instance-method",
    "summary": "The getConstraints() method of\nthe MediaStreamTrack interface returns a\nMediaTrackConstraints object containing the set of constraints most\nrecently established for the track using a prior call to\napplyConstraints(). These\nconstraints indicate values and ranges of values that the website or application has\nspecified are required or acceptable for the included constrainable properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/insertAdjacentHTML",
    "pageType": "web-api-instance-method",
    "summary": "The insertAdjacentHTML() method of the Element interface parses the specified input as HTML or XML and inserts the resulting nodes into the DOM tree at a specified position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/unmute_event",
    "pageType": "web-api-event",
    "summary": "The unmute event is sent to a MediaStreamTrack when the track's source is once again able to provide media data after a period of not being able to do so."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/wheel_event",
    "pageType": "web-api-event",
    "summary": "The wheel event fires when the user rotates a wheel button on a pointing device (typically a mouse). It is also fired for related devices that simulate wheel actions, such as trackpads and mouse balls."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/ended_event",
    "pageType": "web-api-event",
    "summary": "The ended event of the MediaStreamTrack interface is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/clientWidth",
    "pageType": "web-api-instance-property",
    "summary": "The clientWidth read-only property of the Element interface is zero for inline elements and elements with no CSS; otherwise, it's the inner width of an element in pixels. It includes padding but excludes borders, margins, and vertical scrollbars (if present)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrack/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the MediaStreamTrack interface returns a\nstring containing a unique identifier (GUID) for the track, which is\ngenerated by the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollIntoViewIfNeeded",
    "pageType": "web-api-instance-method",
    "summary": "The Element.scrollIntoViewIfNeeded() method scrolls the current element into the visible area of the browser window if it's not already within the visible area of the browser window. If the element is already within the visible area of the browser window, then no scrolling takes place. This method is a proprietary variation of the standard Element.scrollIntoView() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator",
    "pageType": "web-api-interface",
    "summary": "The Translator interface of the Translator and Language Detector APIs contains all the associated translation functionality, including checking AI model availability, creating a new Translator instance, using it to create a translation, and more."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getElementsByTagNameNS",
    "pageType": "web-api-instance-method",
    "summary": "The Element.getElementsByTagNameNS() method returns a\nlive HTMLCollection of elements with the given tag name belonging to the\ngiven namespace. It is similar to Document.getElementsByTagNameNS, except\nthat its search is restricted to descendants of the specified element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator/availability_static",
    "pageType": "web-api-static-method",
    "summary": "The availability() static method of the Translator interface returns an enumerated value that indicates the availability of the AI model for the given Translator configuration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaExpanded",
    "pageType": "web-api-instance-property",
    "summary": "The ariaExpanded property of the Element interface reflects the value of the aria-expanded attribute, which indicates whether a grouping element owned or controlled by this element is expanded or collapsed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator/measureInputUsage",
    "pageType": "web-api-instance-method",
    "summary": "The measureInputUsage() method of the Translator interface reports how much input quota would be used by a translation operation for a given text input."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator/translateStreaming",
    "pageType": "web-api-instance-method",
    "summary": "The translateStreaming() method of the Translator interface generates a translation as a ReadableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/checkVisibility",
    "pageType": "web-api-instance-method",
    "summary": "The checkVisibility() method of the Element interface checks whether the element is visible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator/translate",
    "pageType": "web-api-instance-method",
    "summary": "The translate() method of the Translator interface returns a translation of an input string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaRowCount",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRowCount property of the Element interface reflects the value of the aria-rowcount attribute, which defines the total number of rows in a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator/inputQuota",
    "pageType": "web-api-instance-property",
    "summary": "The inputQuota read-only property of the Translator interface returns the input quota available to the browser for generating translations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/compositionupdate_event",
    "pageType": "web-api-event",
    "summary": "The compositionupdate event is fired when a new character is received in the context of a text composition session controlled by a text composition system such as an input method editor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator/destroy",
    "pageType": "web-api-instance-method",
    "summary": "The destroy() method of the Translator interface releases the resources assigned to the Translator instance it is called on and stops any further activity on it. This means that any ongoing and subsequent method calls made on the Translator will reject with an AbortError."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator/sourceLanguage",
    "pageType": "web-api-instance-property",
    "summary": "The sourceLanguage read-only property of the Translator interface returns the expected language of the input text to be translated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/animationiteration_event",
    "pageType": "web-api-event",
    "summary": "The animationiteration event is fired when an iteration of a CSS Animation ends, and another one begins. This event does not occur at the same time as the animationend event, and therefore does not occur for animations with an animation-iteration-count of one."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator/targetLanguage",
    "pageType": "web-api-instance-property",
    "summary": "The targetLanguage read-only property of the Translator interface returns the language that the input text will be translated into."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/gesturestart_event",
    "pageType": "web-api-event",
    "summary": "The gesturestart event is fired when multiple fingers contact the touch surface, thus starting a new gesture. During the gesture, gesturechange events will be fired. When the gesture has ended, a gestureend event will be fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Translator/create_static",
    "pageType": "web-api-static-method",
    "summary": "The create() static method of the Translator interface creates a new Translator instance that can be used to translate text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollWidth",
    "pageType": "web-api-instance-property",
    "summary": "The scrollWidth read-only property of the Element interface is a measurement of the width of an element's content, including content not visible on the screen due to overflow."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificateStats",
    "pageType": "web-api-interface",
    "summary": "The RTCCertificateStats dictionary of the WebRTC API is used to report information about a certificate used by an RTCDtlsTransport and its underlying RTCIceTransport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the Element interface\nrepresents the element's identifier, reflecting the\nid\nglobal attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificateStats/fingerprint",
    "pageType": "web-api-instance-property",
    "summary": "The fingerprint property of the RTCCertificateStats dictionary is a string containing the fingerprint value of the associated RTCCertificate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificateStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCCertificateStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaKeyShortcuts",
    "pageType": "web-api-instance-property",
    "summary": "The ariaKeyShortcuts property of the Element interface reflects the value of the aria-keyshortcuts attribute, which indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificateStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCCertificateStats dictionary is a string with the value \"certificate\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/touchcancel_event",
    "pageType": "web-api-event",
    "summary": "The touchcancel event is fired when one or more touch points have been disrupted in an implementation-specific manner."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificateStats/fingerprintAlgorithm",
    "pageType": "web-api-instance-property",
    "summary": "The fingerprintAlgorithm property of the RTCCertificateStats dictionary is a string containing the name of the hash function used to generate the fingerprint value in the associated RTCCertificate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/removeAttributeNode",
    "pageType": "web-api-instance-method",
    "summary": "The removeAttributeNode() method of the Element interface removes the specified Attr node from the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificateStats/base64Certificate",
    "pageType": "web-api-instance-property",
    "summary": "The base64Certificate property of the RTCCertificateStats dictionary is a string containing the base-64 representation of the DER-encoded certificate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/localName",
    "pageType": "web-api-instance-property",
    "summary": "The Element.localName read-only property returns the\nlocal part of the qualified name of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificateStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCCertificateStats dictionary is a string that uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRenderState",
    "pageType": "web-api-interface",
    "summary": "The XRRenderState interface of the WebXR Device API contains configurable values which affect how the imagery generated by an XRSession gets composited. These properties include the range of distances from the viewer within which content should be rendered, the vertical field of view (for inline presentations), and a reference to the XRWebGLLayer being used as the target for rendering the scene prior to it being presented on the XR device's display or displays."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaColCount",
    "pageType": "web-api-instance-property",
    "summary": "The ariaColCount property of the Element interface reflects the value of the aria-colcount attribute, which defines the number of columns in a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRenderState/baseLayer",
    "pageType": "web-api-instance-property",
    "summary": "The read-only baseLayer property of the\nXRRenderState interface returns the XRWebGLLayer instance\nthat is the source of bitmap images and a description of how the image is to be rendered\nin the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/webkitmouseforcewillbegin_event",
    "pageType": "web-api-event",
    "summary": "Safari for macOS fires the non-standard webkitmouseforcewillbegin event at an Element before firing the initial mousedown event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRenderState/inlineVerticalFieldOfView",
    "pageType": "web-api-instance-property",
    "summary": "The read-only inlineVerticalFieldOfView\nproperty of the XRRenderState interface returns the default vertical\nfield of view for \"inline\" sessions and null for all immersive\nsessions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/contentvisibilityautostatechange_event",
    "pageType": "web-api-event",
    "summary": "The contentvisibilityautostatechange event fires on any element with content-visibility: auto set on it when it starts or stops being relevant to the user and skipping its contents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRenderState/depthNear",
    "pageType": "web-api-instance-property",
    "summary": "The depthNear read-only property of the\nXRRenderState interface returns the distance in meters of the near clip\nplane from the viewer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRenderState/layers",
    "pageType": "web-api-instance-property",
    "summary": "The read-only layers property of the XRRenderState interface is an ordered array containing XRLayer objects that are displayed by the XR compositor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollTo",
    "pageType": "web-api-instance-method",
    "summary": "The scrollTo() method of the Element\ninterface scrolls to a particular set of coordinates inside a given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRenderState/depthFar",
    "pageType": "web-api-instance-property",
    "summary": "The depthFar read-only property of the\nXRRenderState interface returns the distance in meters of the far clip\nplane from the viewer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/cut_event",
    "pageType": "web-api-event",
    "summary": "The cut event of the Clipboard API is fired when the user has initiated a \"cut\" action through the browser's user interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubmitEvent",
    "pageType": "web-api-interface",
    "summary": "The SubmitEvent interface defines the object used to represent an HTML form's submit event. This event is fired at the <form> when the form's submit action is invoked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubmitEvent/SubmitEvent",
    "pageType": "web-api-constructor",
    "summary": "The SubmitEvent() constructor creates and returns a new SubmitEvent object,\nwhich is used to represent a submit event\nfired at an HTML form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/keydown_event",
    "pageType": "web-api-event",
    "summary": "The keydown event is fired when a key is pressed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubmitEvent/submitter",
    "pageType": "web-api-instance-property",
    "summary": "The read-only submitter property found on\nthe SubmitEvent interface specifies the submit button or other element\nthat was invoked to cause the form to be submitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/pointermove_event",
    "pageType": "web-api-event",
    "summary": "The pointermove event is fired when a pointer changes coordinates, and the pointer has not been canceled by a browser touch-action. It's very similar to the mousemove event, but with more features."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchList",
    "pageType": "web-api-interface",
    "summary": "The TouchList interface represents a list of contact points on a touch surface. For example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding TouchList object would have one Touch object for each finger, for a total of three entries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/after",
    "pageType": "web-api-instance-method",
    "summary": "The Element.after() method inserts a set of\nNode objects or strings in the children list of the\nElement's parent, just after the Element.\nStrings are inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method returns the Touch\nobject at the specified index in the TouchList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property indicates the number of\nitems (touch points) in a given TouchList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaLabel",
    "pageType": "web-api-instance-property",
    "summary": "The ariaLabel property of the Element interface reflects the value of the aria-label attribute, which defines a string value that labels the current element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/pointerout_event",
    "pageType": "web-api-event",
    "summary": "The pointerout event is fired for several reasons including: pointing device is moved out of the hit test boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/state",
    "pageType": "web-api-instance-property",
    "summary": "The state property of the VideoDecoder interface returns the current state of the underlying codec."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder",
    "pageType": "web-api-interface",
    "summary": "The VideoDecoder interface of the WebCodecs API decodes chunks of video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getHTML",
    "pageType": "web-api-instance-method",
    "summary": "The getHTML() method of the Element interface is used to serialize an element's DOM to an HTML string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/dequeue_event",
    "pageType": "web-api-event",
    "summary": "The dequeue event of the VideoDecoder interface fires to signal a decrease in VideoDecoder.decodeQueueSize."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/scrollIntoView",
    "pageType": "web-api-instance-method",
    "summary": "The Element interface's\nscrollIntoView() method scrolls the element's ancestor\ncontainers such that the element on which scrollIntoView() is called is\nvisible to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/decode",
    "pageType": "web-api-instance-method",
    "summary": "The decode() method of the VideoDecoder interface enqueues a control message to decode a given chunk of video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/reset",
    "pageType": "web-api-instance-method",
    "summary": "The reset() method of the VideoDecoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/assignedSlot",
    "pageType": "web-api-instance-property",
    "summary": "The assignedSlot read-only\nproperty of the Element interface returns an\nHTMLSlotElement representing the <slot> element the\nnode is inserted in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/isConfigSupported_static",
    "pageType": "web-api-static-method",
    "summary": "The isConfigSupported() static method of the VideoDecoder interface checks if the given config is supported (that is, if VideoDecoder objects can be successfully configured with the given config)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/auxclick_event",
    "pageType": "web-api-event",
    "summary": "The auxclick event is fired at an Element when a non-primary pointing device button (any mouse button other than the primary—usually leftmost—button) has been pressed and released both within the same element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/flush",
    "pageType": "web-api-instance-method",
    "summary": "The flush() method of the VideoDecoder interface returns a Promise that resolves once all pending messages in the queue have been completed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/input_event",
    "pageType": "web-api-event",
    "summary": "The input event fires when the value of an <input>, <select>, or <textarea> element has been changed as a direct result of a user action (such as typing in a textbox or checking a checkbox)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the VideoDecoder interface ends all pending work and releases system resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/configure",
    "pageType": "web-api-instance-method",
    "summary": "The configure() method of the VideoDecoder interface enqueues a control message to configure the video decoder for decoding chunks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/mouseenter_event",
    "pageType": "web-api-event",
    "summary": "The mouseenter event is fired at an Element when a pointing device (usually a mouse) is initially moved so that its hotspot is within the element at which the event was fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/decodeQueueSize",
    "pageType": "web-api-instance-property",
    "summary": "The decodeQueueSize read-only property of the VideoDecoder interface returns the number of pending decode requests in the queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaRowSpan",
    "pageType": "web-api-instance-property",
    "summary": "The ariaRowSpan property of the Element interface reflects the value of the aria-rowspan attribute, which defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoDecoder/VideoDecoder",
    "pageType": "web-api-constructor",
    "summary": "The VideoDecoder() constructor creates a new VideoDecoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the VideoDecoder.state set to \"unconfigured\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/getAttributeNS",
    "pageType": "web-api-instance-method",
    "summary": "The getAttributeNS() method of the Element\ninterface returns the string value of the attribute with the specified namespace and\nname. If the named attribute does not exist, the value returned will either be\nnull or \"\" (the empty string); see Notes for\ndetails."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestUpdateEvent",
    "pageType": "web-api-interface",
    "summary": "The PaymentRequestUpdateEvent interface is used for events sent to a PaymentRequest instance when changes are made to shipping-related information for a pending PaymentRequest. Those events are:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestUpdateEvent/updateWith",
    "pageType": "web-api-instance-method",
    "summary": "The updateWith() method of the\nPaymentRequestUpdateEvent interface updates the details of an existing\nPaymentRequest."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaDetailsElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaDetailsElements property of the Element interface is an array containing the element (or elements) that provide an accessible details for the element it is applied to.\nThe accessible details are similar to the accessible description (see ariaDescribedByElements), but provides more verbose information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestUpdateEvent/PaymentRequestUpdateEvent",
    "pageType": "web-api-constructor",
    "summary": "The PaymentRequestUpdateEvent() constructor creates a new\nPaymentRequestUpdateEvent object which enables a web page to update the\ndetails of a PaymentRequest in response to a user action. Actual updates\nare made by passing options to the\nupdateWith() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/attributes",
    "pageType": "web-api-instance-property",
    "summary": "The Element.attributes property returns a live collection\nof all attribute nodes registered to the specified node. It is a\nNamedNodeMap, not an Array, so it has no Array\nmethods and the Attr nodes' indexes may differ among browsers. To be more\nspecific, attributes is a key/value pair of strings that represents any\ninformation regarding that attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent",
    "pageType": "web-api-interface",
    "summary": "The NavigateEvent interface of the Navigation API is the event object for the navigate event, which fires when any type of navigation is initiated (this includes usage of History API features like History.go()). NavigateEvent provides access to information about that navigation, and allows developers to intercept and control the navigation handling."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/insertAdjacentText",
    "pageType": "web-api-instance-method",
    "summary": "The insertAdjacentText() method of the Element interface, given a relative position and a string, inserts a new text node at the given position relative to the element it is called from."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/signal",
    "pageType": "web-api-instance-property",
    "summary": "The signal read-only property of the\nNavigateEvent interface returns an AbortSignal, which will become aborted if the navigation is cancelled (e.g., by the user pressing the browser's \"Stop\" button, or another navigation starting and thus cancelling the ongoing one)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/slot",
    "pageType": "web-api-instance-property",
    "summary": "The slot property of the Element interface\nreturns the name of the shadow DOM slot the element is inserted in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/userInitiated",
    "pageType": "web-api-instance-property",
    "summary": "The userInitiated read-only property of the\nNavigateEvent interface returns true if the navigation was initiated by the user (e.g., by clicking a link, submitting a form, or pressing the browser's \"Back\"/\"Forward\" buttons), or false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/before",
    "pageType": "web-api-instance-method",
    "summary": "The Element.before() method inserts a set of\nNode objects or strings in the children list of this\nElement's parent, just before this Element.\nStrings are inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/intercept",
    "pageType": "web-api-instance-method",
    "summary": "The intercept() method of the\nNavigateEvent interface intercepts this navigation, turning it into a same-document navigation to the destination URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/downloadRequest",
    "pageType": "web-api-instance-property",
    "summary": "The downloadRequest read-only property of the\nNavigateEvent interface returns the filename of the file requested for download, in the case of a download navigation (e.g., an <a> or <area> element with a download attribute), or null otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/lostpointercapture_event",
    "pageType": "web-api-event",
    "summary": "The lostpointercapture event is fired when a captured pointer is released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/hasUAVisualTransition",
    "pageType": "web-api-instance-property",
    "summary": "The hasUAVisualTransition read-only property of the NavigateEvent interface returns true if the user agent performed a visual transition for this navigation before dispatching this event, or false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaCurrent",
    "pageType": "web-api-instance-property",
    "summary": "The ariaCurrent property of the Element interface reflects the value of the aria-current attribute, which indicates the element that represents the current item within a container or set of related elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/info",
    "pageType": "web-api-instance-property",
    "summary": "The info read-only property of the\nNavigateEvent interface returns the info data value passed by the initiating navigation operation (e.g., Navigation.back(), or Navigation.navigate()), or undefined if no info data was passed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaPressed",
    "pageType": "web-api-instance-property",
    "summary": "The ariaPressed property of the Element interface reflects the value of the aria-pressed attribute, which indicates the current \"pressed\" state of toggle buttons."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/scroll",
    "pageType": "web-api-instance-method",
    "summary": "The scroll() method of the\nNavigateEvent interface can be called to manually trigger the browser-driven scrolling behavior that occurs in response to the navigation, if you want it to happen before the navigation handling has completed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/elementTiming",
    "pageType": "web-api-instance-property",
    "summary": "The elementTiming property of the Element interface identifies elements for observation in the PerformanceElementTiming API. The elementTiming property reflects the value of the elementtiming attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/formData",
    "pageType": "web-api-instance-property",
    "summary": "The formData read-only property of the\nNavigateEvent interface returns the FormData object representing the submitted data in the case of a POST form submission, or null otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/canIntercept",
    "pageType": "web-api-instance-property",
    "summary": "The canIntercept read-only property of the\nNavigateEvent interface returns true if the navigation can be intercepted and have its URL rewritten, or false otherwise"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaOwnsElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaOwnsElements property of the Element interface is an array containing the element (or elements) that define a visual, functional, or contextual relationship between a parent element that it is applied to, and its child elements.\nThis is used when the DOM hierarchy cannot be used to represent the relationship, and it would not otherwise be available to assistive technology,"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/destination",
    "pageType": "web-api-instance-property",
    "summary": "The destination read-only property of the\nNavigateEvent interface returns a NavigationDestination object representing the destination being navigated to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/matches",
    "pageType": "web-api-instance-method",
    "summary": "The matches() method of the Element interface tests whether the element would be selected by the specified CSS selector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/sourceElement",
    "pageType": "web-api-instance-property",
    "summary": "The sourceElement read-only property of the\nNavigateEvent interface returns an Element object representing the initiating element, in cases where the navigation was initiated by an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/ariaLabelledByElements",
    "pageType": "web-api-instance-property",
    "summary": "The ariaLabelledByElements property of the Element interface is an array containing the element (or elements) that provide an accessible name for the element it is applied to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/navigationType",
    "pageType": "web-api-instance-property",
    "summary": "The navigationType read-only property of the\nNavigateEvent interface returns the type of the navigation — push, reload, replace, or traverse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Element/transitionstart_event",
    "pageType": "web-api-event",
    "summary": "The transitionstart event is fired when a CSS transition has actually started, i.e., after any transition-delay has ended."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/NavigateEvent",
    "pageType": "web-api-constructor",
    "summary": "The NavigateEvent() constructor creates a new NavigateEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigateEvent/hashChange",
    "pageType": "web-api-instance-property",
    "summary": "The hashChange read-only property of the\nNavigateEvent interface returns true if the navigation is a fragment navigation (i.e., to a fragment identifier in the same document), or false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Streams_API",
    "pageType": "web-api-overview",
    "summary": "The Streams API allows JavaScript to programmatically access streams of data received over the network and process them as desired by the developer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLIElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLLIElement interface exposes specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating list elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Streams_API/Using_readable_streams",
    "pageType": "guide",
    "summary": "As a JavaScript developer, programmatically reading and manipulating streams of data received over the network, chunk by chunk, is very useful! But how do you use the Streams API's readable stream functionality? This article explains the basics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLIElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the HTMLLIElement interface indicates the ordinal position of the list element inside a given <ol>. It can be smaller than 0. If the <li> element is not a child of an <ol> element, the property has no meaning."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDeviceLostInfo",
    "pageType": "web-api-interface",
    "summary": "The GPUDeviceLostInfo interface of the WebGPU API represents the object returned when the GPUDevice.lost Promise resolves. This provides information as to why a device has been lost."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Streams_API/Concepts",
    "pageType": "guide",
    "summary": "The Streams API adds a very useful set of tools to the web platform, providing objects that allow JavaScript to programmatically access streams of data received over the network and process them as desired by the developer. Some of the concepts and terminology associated with streams might be new to you — this article explains all you need to know."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDeviceLostInfo/reason",
    "pageType": "web-api-instance-property",
    "summary": "The reason read-only property of the\nGPUDeviceLostInfo interface defines the reason the device was lost in a machine-readable way."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Streams_API/Using_writable_streams",
    "pageType": "guide",
    "summary": "As a JavaScript developer, programmatically writing data to a stream is very useful! This article explains the Streams API's writable stream functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDeviceLostInfo/message",
    "pageType": "web-api-instance-property",
    "summary": "The message read-only property of the\nGPUDeviceLostInfo interface provides a human-readable message that explains why the device was lost."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Streams_API/Using_readable_byte_streams",
    "pageType": "guide",
    "summary": "Readable byte streams are readable streams that have an underlying byte source of type: \"bytes\", and which support efficient zero-copy transfer of data from the underlying source to a consumer (bypassing the stream's internal queues).\nThey are intended for use cases where data might be supplied or requested in arbitrary sized and potentially very large chunks, and hence where avoiding making copies is likely to improve efficiency."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_blend_minmax",
    "pageType": "webgl-extension",
    "summary": "The EXT_blend_minmax extension is part of the WebGL API and extends blending capabilities by adding two new blend equations: the minimum or maximum color components of the source and destination colors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowControlsOverlay",
    "pageType": "web-api-interface",
    "summary": "The WindowControlsOverlay interface of the Window Controls Overlay API exposes information about the geometry\nof the title bar area in desktop Progressive Web Apps, and an event to know whenever it changes. This interface is accessible from Navigator.windowControlsOverlay."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Device_orientation_events",
    "pageType": "web-api-overview",
    "summary": "Device orientation events are events that allow you to detect a device's physical orientation, as well as allowing you to detect the device's motion."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowControlsOverlay/geometrychange_event",
    "pageType": "web-api-event",
    "summary": "The geometrychange event is fired when the position, size, or visibility of a Progressive Web App's title bar area changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Device_orientation_events/Detecting_device_orientation",
    "pageType": "guide",
    "summary": "Increasingly, web-enabled devices are capable of determining their orientation; that is, they can report data indicating changes to their orientation with relation to the pull of gravity. In particular, hand-held devices such as mobile phones can use this information to automatically rotate the display to remain upright, presenting a wide-screen view of the web content when the device is rotated so that its width is greater than its height."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowControlsOverlay/visible",
    "pageType": "web-api-instance-property",
    "summary": "The visible read-only property of the WindowControlsOverlay interface returns a Boolean that indicates whether the window controls overlay is visible or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WindowControlsOverlay/getTitlebarAreaRect",
    "pageType": "web-api-instance-method",
    "summary": "The getTitlebarAreaRect() method of the WindowControlsOverlay interface queries the current geometry of the title bar area of the Progressive Web App window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Device_orientation_events/Using_device_orientation_with_3D_transforms",
    "pageType": "guide",
    "summary": "This article provides tips on how to use device orientation information in tandem with CSS 3D transforms."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEvent/initTextEvent",
    "pageType": "web-api-instance-method",
    "summary": "The initTextEventEvent() method of the TextEvent interface initializes the value of a TextEvent after it has been created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Device_orientation_events/Orientation_and_motion_data_explained",
    "pageType": "guide",
    "summary": "When using orientation and motion events, it's important to understand what the values you're given by the browser mean. This article provides details about the coordinate systems at play and how you use them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEvent",
    "pageType": "web-api-interface",
    "summary": "The TextEvent interface is a legacy UI event interface for reporting changes to text UI elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextEvent/data",
    "pageType": "web-api-instance-property",
    "summary": "The data read-only property of the TextEvent interface returns the last character added to the input element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongAnimationFrameTiming/renderStart",
    "pageType": "web-api-instance-property",
    "summary": "The renderStart read-only property of the PerformanceLongAnimationFrameTiming interface returns a DOMHighResTimeStamp indicating the start time of the rendering cycle, which includes Window.requestAnimationFrame() callbacks, style and layout calculation, ResizeObserver callbacks, and IntersectionObserver callbacks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAudioElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLAudioElement interface provides access to the properties of <audio> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongAnimationFrameTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformanceLongAnimationFrameTiming interface is specified in the Long Animation Frames API and provides metrics on long animation frames (LoAFs) that occupy rendering and block other tasks from being executed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAudioElement/Audio",
    "pageType": "web-api-constructor",
    "summary": "The Audio() constructor creates\nand returns a new HTMLAudioElement which can be either attached to\na document for the user to interact with and/or listen to, or can be used\noffscreen to manage and play audio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent",
    "pageType": "web-api-interface",
    "summary": "The PaymentRequestEvent interface of the Payment Handler API is the object passed to a payment handler when a PaymentRequest is made."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongAnimationFrameTiming/blockingDuration",
    "pageType": "web-api-instance-property",
    "summary": "The blockingDuration read-only property of the PerformanceLongAnimationFrameTiming interface returns a DOMHighResTimeStamp indicating the total time in milliseconds for which the main thread was blocked from responding to high priority tasks, such as user input."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/modifiers",
    "pageType": "web-api-instance-property",
    "summary": "The modifiers read-only property of the\nPaymentRequestEvent interface returns an Array of PaymentDetailsModifier objects containing modifiers for payment details."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongAnimationFrameTiming/styleAndLayoutStart",
    "pageType": "web-api-instance-property",
    "summary": "The styleAndLayoutStart read-only property of the PerformanceLongAnimationFrameTiming interface returns a DOMHighResTimeStamp indicating the beginning of the time period spent in style and layout calculations for the current animation frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/changePaymentMethod",
    "pageType": "web-api-instance-method",
    "summary": "The changePaymentMethod() method of the PaymentRequestEvent interface is used by the payment handler to get an updated total, given such payment method details as the billing address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongAnimationFrameTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PerformanceLongAnimationFrameTiming interface is a serializer; it returns a JSON representation of the PerformanceLongAnimationFrameTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/paymentRequestOrigin",
    "pageType": "web-api-instance-property",
    "summary": "The paymentRequestOrigin read-only property of the\nPaymentRequestEvent interface returns the origin where the\nPaymentRequest object was initialized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/openWindow",
    "pageType": "web-api-instance-method",
    "summary": "The openWindow() method of the PaymentRequestEvent interface opens the specified URL in a new window, only if the given URL is on the same origin as the calling page. It returns a Promise that resolves with a reference to a WindowClient."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongAnimationFrameTiming/scripts",
    "pageType": "web-api-instance-property",
    "summary": "The scripts read-only property of the PerformanceLongAnimationFrameTiming interface returns an array of PerformanceScriptTiming objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/topOrigin",
    "pageType": "web-api-instance-property",
    "summary": "The topOrigin read-only property of the\nPaymentRequestEvent interface returns the top-level payee origin where\nthe PaymentRequest object was initialized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceLongAnimationFrameTiming/firstUIEventTimestamp",
    "pageType": "web-api-instance-property",
    "summary": "The firstUIEventTimestamp read-only property of the PerformanceLongAnimationFrameTiming interface returns a DOMHighResTimeStamp indicating the time of the first UI event — such as a mouse or keyboard event — to be processed during the current animation frame. Note this timestamp can be before the start of this animation frame if there was a delay between the event happening and it being processed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/respondWith",
    "pageType": "web-api-instance-method",
    "summary": "The respondWith() method of the PaymentRequestEvent interface prevents the default event handling and allows you to provide a Promise for a payment handler response object yourself."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/PaymentRequestEvent",
    "pageType": "web-api-constructor",
    "summary": "The PaymentRequestEvent constructor creates a new PaymentRequestEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadPose",
    "pageType": "web-api-interface",
    "summary": "The GamepadPose interface of the Gamepad API represents the pose of a WebVR controller at a given timestamp (which includes orientation, position, velocity, and acceleration information)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/total",
    "pageType": "web-api-instance-property",
    "summary": "The total read-only property of the PaymentRequestEvent interface returns a\nPaymentCurrencyAmount object containing the total amount being requested for payment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadPose/angularAcceleration",
    "pageType": "web-api-instance-property",
    "summary": "The angularAcceleration read-only property of the GamepadPose interface returns an array representing the angular acceleration vector of the Gamepad, in meters per second per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/paymentRequestId",
    "pageType": "web-api-instance-property",
    "summary": "The paymentRequestId read-only property of the\nPaymentRequestEvent interface returns the ID of the\nPaymentRequest object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadPose/position",
    "pageType": "web-api-instance-property",
    "summary": "The position read-only property of the GamepadPose interface returns the position of the Gamepad as a 3D vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequestEvent/methodData",
    "pageType": "web-api-instance-property",
    "summary": "The methodData read-only property of the\nPaymentRequestEvent interface returns an array of\nPaymentMethodData objects containing payment method identifiers for the\npayment methods that the website accepts and any associated payment method-specific\ndata."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadPose/hasOrientation",
    "pageType": "web-api-instance-property",
    "summary": "The hasOrientation read-only property of the GamepadPose interface returns a boolean value stating whether the Gamepad can track and return orientation information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EcdhKeyDeriveParams",
    "pageType": "web-api-interface",
    "summary": "The EcdhKeyDeriveParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.deriveKey() and SubtleCrypto.deriveBits(), when using the ECDH or X25519 algorithms."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMenuElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLMenuElement interface provides additional properties (beyond those inherited from the HTMLElement interface) for manipulating a <menu> element.\n<menu> is a semantic alternative to the <ul> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadPose/orientation",
    "pageType": "web-api-instance-property",
    "summary": "The orientation read-only property of the GamepadPose interface returns the orientation of the Gamepad, as a quaternion value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMenuElement/compact",
    "pageType": "web-api-instance-property",
    "summary": "The compact property of the HTMLMenuElement interface indicates that spacing between list items should be reduced. The exact handling of the compact attribute is browser-specific. Instead of using this property, consider using CSS line-height instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadPose/linearAcceleration",
    "pageType": "web-api-instance-property",
    "summary": "The linearAcceleration read-only property of the GamepadPose interface returns an array representing the linear acceleration vector of the Gamepad, in meters per second per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_disjoint_timer_query",
    "pageType": "webgl-extension",
    "summary": "The EXT_disjoint_timer_query extension is part of the WebGL API and provides a way to measure the duration of a set of GL commands, without stalling the rendering pipeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadPose/angularVelocity",
    "pageType": "web-api-instance-property",
    "summary": "The angularVelocity read-only property of the GamepadPose interface returns an array representing the angular velocity vector of the Gamepad, in radians per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_disjoint_timer_query/getQueryObjectEXT",
    "pageType": "webgl-extension-method",
    "summary": "The EXT_disjoint_timer_query.getQueryObjectEXT() method\nof the WebGL API returns the state of a\nquery object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadPose/linearVelocity",
    "pageType": "web-api-instance-property",
    "summary": "The linearVelocity read-only property of the GamepadPose interface returns an array representing the linear velocity vector of the Gamepad, in meters per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_disjoint_timer_query/deleteQueryEXT",
    "pageType": "webgl-extension-method",
    "summary": "The EXT_disjoint_timer_query.deleteQueryEXT() method of\nthe WebGL API deletes a given\nWebGLQuery object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadPose/hasPosition",
    "pageType": "web-api-instance-property",
    "summary": "The hasPosition read-only property of the GamepadPose interface returns a boolean value stating whether the Gamepad can track and return position information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_disjoint_timer_query/endQueryEXT",
    "pageType": "webgl-extension-method",
    "summary": "The EXT_disjoint_timer_query.endQueryEXT() method of the\nWebGL API ends a timer query."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemSync",
    "pageType": "web-api-interface",
    "summary": "In the File and Directory Entries API, a FileSystemSync object represents a file system. It has two properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_disjoint_timer_query/getQueryEXT",
    "pageType": "webgl-extension-method",
    "summary": "The EXT_disjoint_timer_query.getQueryEXT() method of the\nWebGL API returns information about a query\ntarget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_disjoint_timer_query/beginQueryEXT",
    "pageType": "webgl-extension-method",
    "summary": "The EXT_disjoint_timer_query.beginQueryEXT() method of\nthe WebGL API starts a timer query."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin read-only property of the URL interface returns a string containing the Unicode serialization of the origin of the represented URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_disjoint_timer_query/isQueryEXT",
    "pageType": "webgl-extension-method",
    "summary": "The EXT_disjoint_timer_query.isQueryEXT() method of the\nWebGL API returns true if the\npassed object is a WebGLQuery object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL",
    "pageType": "web-api-interface",
    "summary": "The URL interface is used to parse, construct, normalize, and encode URLs. It works by providing properties which allow you to easily read and modify the components of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_disjoint_timer_query/createQueryEXT",
    "pageType": "webgl-extension-method",
    "summary": "The EXT_disjoint_timer_query.createQueryEXT() method of\nthe WebGL API creates and initializes\nWebGLQuery objects, which track the time needed to fully complete\na set of GL commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/pathname",
    "pageType": "web-api-instance-property",
    "summary": "The pathname property of the URL interface represents a location in a hierarchical structure. It is a string constructed from a list of path segments, each of which is prefixed by a / character."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_disjoint_timer_query/queryCounterEXT",
    "pageType": "webgl-extension-method",
    "summary": "The EXT_disjoint_timer_query.queryCounterEXT() method of\nthe WebGL API records the current time into\nthe corresponding query object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/searchParams",
    "pageType": "web-api-instance-property",
    "summary": "The searchParams read-only property of the\nURL interface returns a URLSearchParams object allowing\naccess to the GET decoded query arguments contained in the URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedNumberList",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedNumberList interface represents a list of attributes of type <number> which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedNumberList/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal read-only property of the SVGAnimatedNumberList interface represents the current animated value of an animatable attribute that accepts a list of <number> values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/revokeObjectURL_static",
    "pageType": "web-api-static-method",
    "summary": "The revokeObjectURL() static method of the URL interface\nreleases an existing object URL which was previously created by calling\nURL.createObjectURL()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedNumberList/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal read-only property of the SVGAnimatedNumberList interface represents the base (non-animated) value of an animatable attribute that accepts a list of <number> values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/URL",
    "pageType": "web-api-constructor",
    "summary": "The URL() constructor returns a newly created URL object representing the URL defined by the parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_MIDI_API",
    "pageType": "web-api-overview",
    "summary": "The Web MIDI API connects to and interacts with Musical Instrument Digital Interface (MIDI) Devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/host",
    "pageType": "web-api-instance-property",
    "summary": "The host property of the URL interface is a string containing the host, which is the hostname, and then, if the port of the URL is nonempty, a \":\", followed by the port of the URL. If the URL does not have a hostname, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationObserver",
    "pageType": "web-api-interface",
    "summary": "The MutationObserver interface provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature, which was part of the DOM3 Events specification."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol property of the URL interface is a string containing the protocol or scheme of the URL, including the final \":\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationObserver/takeRecords",
    "pageType": "web-api-instance-method",
    "summary": "The MutationObserver method\ntakeRecords() returns a list of all matching DOM changes\nthat have been detected but not yet processed by the observer's callback function,\nleaving the mutation queue empty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/search",
    "pageType": "web-api-instance-property",
    "summary": "The search property of the URL interface is a search string, also called a query string, that is a string containing a \"?\" followed by the parameters of the URL. If the URL does not have a search query, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationObserver/observe",
    "pageType": "web-api-instance-method",
    "summary": "The MutationObserver method observe() configures the MutationObserver\ncallback to begin receiving notifications of changes to the DOM that match the given options."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/username",
    "pageType": "web-api-instance-property",
    "summary": "The username property of the URL interface is a string containing the username component of the URL. If the URL does not have a username, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationObserver/MutationObserver",
    "pageType": "web-api-constructor",
    "summary": "The DOM MutationObserver()\nconstructor — part of the MutationObserver interface — creates and\nreturns a new observer which invokes a specified callback when DOM events\noccur."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationObserver/disconnect",
    "pageType": "web-api-instance-method",
    "summary": "The MutationObserver method\ndisconnect() tells the observer to stop watching for\nmutations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/hostname",
    "pageType": "web-api-instance-property",
    "summary": "The hostname property of the URL interface is a string containing either the domain name or IP address of the URL. If the URL does not have a hostname, this property contains an empty string, \"\". IPv4 and IPv6 addresses are normalized, such as stripping leading zeros, and domain names are converted to IDN."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/port",
    "pageType": "web-api-instance-property",
    "summary": "The port property of the URL interface is a string containing the port number of the URL. If the port is the default for the protocol (80 for ws: and http:, 443 for wss: and https:, and 21 for ftp:), this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLLinkElement interface represents reference information for external resources and the relationship of those resources to a document and vice versa (corresponds to <link> element; not to be confused with <a>, which is represented by HTMLAnchorElement). This object inherits all of the properties and methods of the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/parse_static",
    "pageType": "web-api-static-method",
    "summary": "The URL.parse() static method of the URL interface returns a newly created URL object representing the URL defined by the parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The disabled property of the HTMLLinkElement interface is a boolean value that represents whether the link is disabled. It only has an effect with style sheet links (rel property set to stylesheet)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the HTMLLinkElement interface is a string that reflects the MIME type of the linked resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the URL interface\nreturns a string containing a serialized version of the URL,\nalthough in practice it seems to have the same effect as\nURL.toString()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/as",
    "pageType": "web-api-instance-property",
    "summary": "The as property of the HTMLLinkElement interface returns a string representing the type of content to be preloaded by a link element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/hash",
    "pageType": "web-api-instance-property",
    "summary": "The hash property of the URL interface is a string containing a \"#\" followed by the fragment identifier of the URL. If the URL does not have a fragment identifier, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/imageSizes",
    "pageType": "web-api-instance-property",
    "summary": "The imageSizes property of the HTMLLinkElement interface indicates the size and conditions for the preloaded images defined by the imageSrcset property. It reflects the value of the <link> element's imagesizes attribute. This property can retrieve or set the imagesizes attribute value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/password",
    "pageType": "web-api-instance-property",
    "summary": "The password property of the URL interface is a string containing the password component of the URL. If the URL does not have a password, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/hreflang",
    "pageType": "web-api-instance-property",
    "summary": "The hreflang property of the HTMLLinkElement interface is used to indicate the language and the geographical targeting of a page. This hint can be used by browsers to select the more appropriate page or to improve SEO."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/canParse_static",
    "pageType": "web-api-static-method",
    "summary": "The URL.canParse() static method of the URL interface returns a boolean indicating whether or not an absolute URL, or a relative URL combined with a base URL, are parsable and valid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/integrity",
    "pageType": "web-api-instance-property",
    "summary": "The integrity property of the HTMLLinkElement interface is a string containing inline metadata that a browser can use to verify that a fetched resource has been delivered without unexpected manipulation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/blocking",
    "pageType": "web-api-instance-property",
    "summary": "The blocking property of the HTMLLinkElement interface is a string indicating that certain operations should be blocked on the fetching of an external resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/href",
    "pageType": "web-api-instance-property",
    "summary": "The href property of the URL interface is\na string containing the whole URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/sheet",
    "pageType": "web-api-instance-property",
    "summary": "The sheet read-only property of the HTMLLinkElement interface\ncontains the stylesheet associated with that element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/createObjectURL_static",
    "pageType": "web-api-static-method",
    "summary": "The createObjectURL() static method of the URL interface\ncreates a string containing a blob URL pointing to the object given in the parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/referrerPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The referrerPolicy property of the HTMLLinkElement interface\nreflects the HTML referrerpolicy attribute of the\n<link> element defining which referrer is sent when fetching the\nresource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() method of the URL interface returns a\nstring containing the whole URL. It is effectively a read-only version\nof URL.href."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/imageSrcset",
    "pageType": "web-api-instance-property",
    "summary": "The imageSrcset property of the HTMLLinkElement interface is a string which identifies one or more comma-separated image candidate strings. This property reflects the value of the <link> element's imagesrcset attribute. This property can retrieved or set the imagesrcset attribute value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMergeElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEMergeElement interface corresponds to the <feMerge> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/sizes",
    "pageType": "web-api-instance-property",
    "summary": "The sizes read-only property of the HTMLLinkElement interfaces defines the sizes of the icons for visual media contained in the resource. It reflects the <link> element's sizes attribute, which takes a list of space-separated sizes, each in the format <width in pixels>x<height in pixels>, or the keyword any."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMergeElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEMergeElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/crossOrigin",
    "pageType": "web-api-instance-property",
    "summary": "The crossOrigin property of the HTMLLinkElement interface specifies the Cross-Origin Resource Sharing (CORS) setting to use when retrieving the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMergeElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEMergeElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/media",
    "pageType": "web-api-instance-property",
    "summary": "The media property of the HTMLLinkElement interface is a string representing a list of one or more media formats to which the resource applies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/relList",
    "pageType": "web-api-instance-property",
    "summary": "The relList read-only property of the HTMLLinkElement interface reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the <link> element and the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMergeElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEMergeElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/fetchPriority",
    "pageType": "web-api-instance-property",
    "summary": "The fetchPriority property of the HTMLLinkElement interface represents a hint to the browser indicating how it should prioritize fetching a particular resource relative to other resources of the same type.\nIt reflects the fetchpriority attribute of the corresponding <link> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMergeElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEMergeElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href property of the HTMLLinkElement interface contains a string that is the URL associated with the link."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEMergeElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEMergeElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLinkElement/rel",
    "pageType": "web-api-instance-property",
    "summary": "The rel property of the HTMLLinkElement interface reflects the rel attribute. It is a string containing a space-separated list of link types indicating the relationship between the resource represented by the <link> element and the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OscillatorNode",
    "pageType": "web-api-interface",
    "summary": "The OscillatorNode interface represents a periodic waveform, such as a sine wave. It is an AudioScheduledSourceNode audio-processing module that causes a specified frequency of a given wave to be created—in effect, a constant tone."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBIsochronousInTransferPacket",
    "pageType": "web-api-interface",
    "summary": "The USBIsochronousInTransferPacket interface of the WebUSB API is part of the response from a call to the isochronousTransferIn() method of the USBDevice interface. It represents the status of an individual packet from a request to transfer data from the USB device to the USB host over an isochronous endpoint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OscillatorNode/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the OscillatorNode interface specifies what shape of waveform the\noscillator will output. There are several common waveforms available, as well as an\noption to specify a custom waveform shape. The shape of the waveform will affect the\ntone that is produced."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/createMediaStreamDestination",
    "pageType": "web-api-instance-method",
    "summary": "The createMediaStreamDestination() method of the AudioContext Interface is used to create a new MediaStreamAudioDestinationNode object associated with a WebRTC MediaStream representing an audio stream, which may be stored in a local file or sent to another computer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OscillatorNode/OscillatorNode",
    "pageType": "web-api-constructor",
    "summary": "The OscillatorNode() constructor of the Web Audio API creates a new\nOscillatorNode object which is an AudioNode that\nrepresents a periodic waveform, like a sine wave, optionally setting the node's\nproperties' values to match values in a specified object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext",
    "pageType": "web-api-interface",
    "summary": "The AudioContext interface represents an audio-processing graph built from audio modules linked together, each represented by an AudioNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/createMediaStreamSource",
    "pageType": "web-api-instance-method",
    "summary": "The createMediaStreamSource() method of the AudioContext\nInterface is used to create a new MediaStreamAudioSourceNode\nobject, given a media stream (say, from a MediaDevices.getUserMedia\ninstance), the audio from which can then be played and manipulated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OscillatorNode/frequency",
    "pageType": "web-api-instance-property",
    "summary": "The frequency property of the OscillatorNode interface is an a-rate AudioParam representing the frequency of oscillation in hertz."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/getOutputTimestamp",
    "pageType": "web-api-instance-method",
    "summary": "The\ngetOutputTimestamp() method of the\nAudioContext interface returns a new AudioTimestamp object\ncontaining two audio timestamp values relating to the current audio context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OscillatorNode/setPeriodicWave",
    "pageType": "web-api-instance-method",
    "summary": "The setPeriodicWave() method of the OscillatorNode interface is used to point to a PeriodicWave\ndefining a periodic waveform that can be used to shape the oscillator's output, when\ntype is custom."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/outputLatency",
    "pageType": "web-api-instance-property",
    "summary": "The outputLatency read-only property of\nthe AudioContext Interface provides an estimation of the output latency\nof the current audio context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OscillatorNode/detune",
    "pageType": "web-api-instance-property",
    "summary": "The detune property of the OscillatorNode interface is an a-rate AudioParam representing detuning of oscillation in cents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/suspend",
    "pageType": "web-api-instance-method",
    "summary": "The suspend() method of the AudioContext Interface suspends the progression of time in the audio context, temporarily halting audio hardware access and reducing CPU/battery usage in the process — this is useful if you want an application to power down the audio hardware when it will not be using an audio context for a while."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the AudioContext Interface closes the audio context, releasing any system audio resources that it uses."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList",
    "pageType": "web-api-interface",
    "summary": "The SVGLengthList interface defines a list of SVGLength objects. It is used for the baseVal and animVal properties of SVGAnimatedLengthList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/createMediaStreamTrackSource",
    "pageType": "web-api-instance-method",
    "summary": "The createMediaStreamTrackSource() method of the AudioContext interface creates and returns a MediaStreamTrackAudioSourceNode which represents an audio source whose data comes from the specified MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList/getItem",
    "pageType": "web-api-instance-method",
    "summary": "The getItem() method of the SVGLengthList interface returns the specified item from the list. The returned item is the item itself and not a copy. Any changes made to the item are immediately reflected in the list. The first item is indexed 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/sinkId",
    "pageType": "web-api-instance-property",
    "summary": "The sinkId read-only property of the\nAudioContext interface returns the sink ID of the current output audio device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList/appendItem",
    "pageType": "web-api-instance-method",
    "summary": "The appendItem() method of the SVGLengthList interface inserts a new item at the end of the list. If the given item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/setSinkId",
    "pageType": "web-api-instance-method",
    "summary": "The setSinkId() method of the AudioContext interface sets the output audio device for the AudioContext. If a sink ID is not explicitly set, the default system audio output device will be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList/removeItem",
    "pageType": "web-api-instance-method",
    "summary": "The removeItem() method of the SVGLengthList interface removes an existing item at the given index from the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/AudioContext",
    "pageType": "web-api-constructor",
    "summary": "The AudioContext() constructor\ncreates a new AudioContext object which represents an audio-processing\ngraph, built from audio modules linked together, each represented by an\nAudioNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList/insertItemBefore",
    "pageType": "web-api-instance-method",
    "summary": "The insertItemBefore() method of the SVGLengthList interface inserts a new item into the list at the specified position. The first item is indexed 0. The inserted item is the item itself and not a copy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/resume",
    "pageType": "web-api-instance-method",
    "summary": "The resume() method of the AudioContext\ninterface resumes the progression of time in an audio context that has previously been\nsuspended."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/createMediaElementSource",
    "pageType": "web-api-instance-method",
    "summary": "The createMediaElementSource() method of the AudioContext Interface is used to create a new MediaElementAudioSourceNode object, given an existing HTML <audio> or <video> element, the audio from which can then be played and manipulated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList/replaceItem",
    "pageType": "web-api-instance-method",
    "summary": "The replaceItem() method of the SVGLengthList interface replaces an existing item in the list with a new item. If the new item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to replace is before the removal of the item."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/baseLatency",
    "pageType": "web-api-instance-property",
    "summary": "The baseLatency read-only property of the\nAudioContext interface returns a double that represents the number of\nseconds of processing latency incurred by the AudioContext passing an audio\nbuffer from the AudioDestinationNode — i.e., the end of the audio graph —\ninto the host system's audio subsystem ready for playing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the SVGLengthList interface returns the number of items in the list. It is an alias of numberOfItems to make SVG lists more array-like."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioContext/sinkchange_event",
    "pageType": "web-api-event",
    "summary": "The sinkchange event of the AudioContext interface is fired when the output audio device (and therefore, the AudioContext.sinkId) has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList/initialize",
    "pageType": "web-api-instance-method",
    "summary": "The initialize() method of the SVGLengthList interface clears all existing items from the list and re-initializes the list to hold the single item specified by the parameter. If the inserted item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. The return value is the item inserted into the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEOffsetElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEOffsetElement interface corresponds to the <feOffset> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the SVGLengthList interface clears all existing items from the list, with the result being an empty list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEOffsetElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEOffsetElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEOffsetElement/dx",
    "pageType": "web-api-instance-property",
    "summary": "The dx read-only property of the SVGFEOffsetElement interface reflects the dx attribute of the given <feOffset> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGLengthList/numberOfItems",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfItems property of the SVGLengthList interface returns the number of items in the list. length is an alias of it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEOffsetElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEOffsetElement interface reflects the in attribute of the given <feOffset> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammarList",
    "pageType": "web-api-interface",
    "summary": "The SpeechGrammarList interface of the Web Speech API represents a list of SpeechGrammar objects containing words or patterns of words that we want the recognition service to recognize."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEOffsetElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEOffsetElement interface describes the vertical size of an SVG filter primitive as an SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEOffsetElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEOffsetElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammarList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item getter of the SpeechGrammarList\ninterface is a standard getter — it allows individual SpeechGrammar\nobjects to be retrieved from the SpeechGrammarList using array syntax."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEOffsetElement/dy",
    "pageType": "web-api-instance-property",
    "summary": "The dy read-only property of the SVGFEOffsetElement interface reflects the dy attribute of the given <feOffset> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammarList/SpeechGrammarList",
    "pageType": "web-api-constructor",
    "summary": "The SpeechGrammarList() constructor creates a new\nSpeechGrammarList object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEOffsetElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEOffsetElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammarList/addFromString",
    "pageType": "web-api-instance-method",
    "summary": "The addFromString() method of the\nSpeechGrammarList interface takes a grammar present in a specific\nstring within the code base (e.g., stored in a variable) and adds it to\nthe SpeechGrammarList as a new SpeechGrammar object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEOffsetElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEOffsetElement interface describes the assigned name of an SVG filter primitive as an SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationPositionError",
    "pageType": "web-api-interface",
    "summary": "The GeolocationPositionError interface represents the reason of an error occurring when using the geolocating device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammarList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the\nSpeechGrammarList interface returns the number of\nSpeechGrammar objects contained in the SpeechGrammarList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationPositionError/code",
    "pageType": "web-api-instance-property",
    "summary": "The code read-only property of the GeolocationPositionError interface is an unsigned short representing the error code."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammarList/addFromURI",
    "pageType": "web-api-instance-method",
    "summary": "The addFromURI() method of the\nSpeechGrammarList interface takes a grammar present at a specific URI and\nadds it to the SpeechGrammarList as a new SpeechGrammar\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationPositionError/message",
    "pageType": "web-api-instance-property",
    "summary": "The message read-only property of the GeolocationPositionError interface returns a human-readable string describing the details of the error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Page_Visibility_API",
    "pageType": "web-api-overview",
    "summary": "The Page Visibility API provides events you can watch for to know when a document becomes visible or hidden, as well as features to look at the current visibility state of the page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BrowserCaptureMediaStreamTrack",
    "pageType": "web-api-interface",
    "summary": "The BrowserCaptureMediaStreamTrack interface of the Screen Capture API represents a single video track. It extends the MediaStreamTrack class with methods to limit the part of a self-capture stream (for example, a user's screen or window) that is captured."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BrowserCaptureMediaStreamTrack/restrictTo",
    "pageType": "web-api-instance-method",
    "summary": "The restrictTo() method of the BrowserCaptureMediaStreamTrack interface restricts a self-capture stream to a specific DOM element (and its descendants)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationCurrentEntryChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The NavigationCurrentEntryChangeEvent interface of the Navigation API is the event object for the currententrychange event, which fires when the Navigation.currentEntry has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BrowserCaptureMediaStreamTrack/clone",
    "pageType": "web-api-instance-method",
    "summary": "The clone() method of the BrowserCaptureMediaStreamTrack interface returns a clone of the original BrowserCaptureMediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationCurrentEntryChangeEvent/NavigationCurrentEntryChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The NavigationCurrentEntryChangeEvent() constructor creates a new NavigationCurrentEntryChangeEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BrowserCaptureMediaStreamTrack/cropTo",
    "pageType": "web-api-instance-method",
    "summary": "The cropTo() method of the BrowserCaptureMediaStreamTrack interface crops a self-capture stream to the area in which a specified DOM element is rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationCurrentEntryChangeEvent/from",
    "pageType": "web-api-instance-property",
    "summary": "The from read-only property of the NavigationCurrentEntryChangeEvent interface returns the NavigationHistoryEntry that was navigated from."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent/handled",
    "pageType": "web-api-instance-property",
    "summary": "The handled property of the FetchEvent interface returns a promise indicating if the event has been handled by the fetch algorithm or not. This property allows executing code after the browser has consumed a response, and is usually used together with the waitUntil() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationCurrentEntryChangeEvent/navigationType",
    "pageType": "web-api-instance-property",
    "summary": "The navigationType read-only property of the NavigationCurrentEntryChangeEvent interface returns the type of the navigation that resulted in the change. The property may be null if the change occurs due to Navigation.updateCurrentEntry()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent",
    "pageType": "web-api-interface",
    "summary": "This is the event type for fetch events dispatched on the service worker global scope. It contains information about the fetch, including the request and how the receiver will treat the response. It provides the event.respondWith() method, which allows us to provide a response to this fetch."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent/preloadResponse",
    "pageType": "web-api-instance-property",
    "summary": "The preloadResponse read-only property of the FetchEvent interface returns a Promise that resolves to the navigation preload Response if navigation preload was triggered, or undefined otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryListEvent",
    "pageType": "web-api-interface",
    "summary": "The MediaQueryListEvent object stores information on the changes that have happened to a MediaQueryList object — instances are available as the event object on a function referenced by a change event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent/clientId",
    "pageType": "web-api-instance-property",
    "summary": "The clientId read-only property of the\nFetchEvent interface returns the id of the Client that the\ncurrent service worker is controlling."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryListEvent/MediaQueryListEvent",
    "pageType": "web-api-constructor",
    "summary": "The MediaQueryListEvent() constructor creates a new MediaQueryListEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent/resultingClientId",
    "pageType": "web-api-instance-property",
    "summary": "The resultingClientId read-only property of the\nFetchEvent interface is the id of the\nclient that replaces the previous client during a page\nnavigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryListEvent/media",
    "pageType": "web-api-instance-property",
    "summary": "The media read-only property of the\nMediaQueryListEvent interface is a string representing\na serialized media query."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent/isReload",
    "pageType": "web-api-instance-property",
    "summary": "The isReload read-only property of the\nFetchEvent interface returns true if the event was\ndispatched by the user attempting to reload the page, and false otherwise.\nPressing the refresh button is a reload while clicking a link and pressing the back\nbutton is not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaQueryListEvent/matches",
    "pageType": "web-api-instance-property",
    "summary": "The matches read-only property of the\nMediaQueryListEvent interface is a boolean value that is\ntrue if the document currently matches the media query list,\nor false if not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent/request",
    "pageType": "web-api-instance-property",
    "summary": "The request read-only property of the\nFetchEvent interface returns the Request that triggered\nthe event handler."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent/replacesClientId",
    "pageType": "web-api-instance-property",
    "summary": "The replacesClientId read-only property of the\nFetchEvent interface is the id of the\nclient that is being replaced during a page navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_draw_buffers_indexed",
    "pageType": "web-api-interface",
    "summary": "The OES_draw_buffers_indexed extension is part of the WebGL API and enables the use of different blend options when writing to multiple color buffers simultaneously."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent/FetchEvent",
    "pageType": "web-api-constructor",
    "summary": "The FetchEvent() constructor creates a new FetchEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_draw_buffers_indexed/colorMaskiOES",
    "pageType": "web-api-instance-method",
    "summary": "The colorMaskiOES() method of the OES_draw_buffers_indexed WebGL extension sets which color components to enable or to disable when drawing or rendering for a particular draw buffer. It's the indexed version of WebGL 1's WebGLRenderingContext.colorMask() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchEvent/respondWith",
    "pageType": "web-api-instance-method",
    "summary": "The respondWith() method of\nFetchEvent prevents the browser's default fetch handling, and\nallows you to provide a promise for a Response yourself."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_draw_buffers_indexed/blendFunciOES",
    "pageType": "web-api-instance-method",
    "summary": "The blendFunciOES() method of the OES_draw_buffers_indexed WebGL extension defines which function is used when blending pixels for a particular draw buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBRequest/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The readyState read-only property of the\nIDBRequest interface returns the state of the request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBRequest",
    "pageType": "web-api-interface",
    "summary": "The IDBRequest interface of the IndexedDB API provides access to results of asynchronous requests to databases and database objects using event handler attributes. Each reading and writing operation on a database is done using a request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_draw_buffers_indexed/blendEquationiOES",
    "pageType": "web-api-instance-method",
    "summary": "The blendEquationiOES() method of the OES_draw_buffers_indexed WebGL extension sets both the RGB blend and alpha blend equations for a particular draw buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBRequest/source",
    "pageType": "web-api-instance-property",
    "summary": "The source read-only property of the\nIDBRequest interface returns the source of the request, such as an\nIndex or an object store. If no source exists (such as when calling\nIDBFactory.open), it returns null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_draw_buffers_indexed/disableiOES",
    "pageType": "web-api-instance-method",
    "summary": "The disableiOES() method of the OES_draw_buffers_indexed WebGL extension enables blending for a particular draw buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBRequest/error",
    "pageType": "web-api-instance-property",
    "summary": "The error read-only property of the\nIDBRequest interface returns the error in the event of an unsuccessful\nrequest."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBRequest/success_event",
    "pageType": "web-api-event",
    "summary": "The success event is fired when an IDBRequest succeeds. In the success event handler, you can access the result of the request, as well as place more requests to the same transaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_draw_buffers_indexed/enableiOES",
    "pageType": "web-api-instance-method",
    "summary": "The enableiOES() method of the OES_draw_buffers_indexed WebGL extension enables blending for a particular draw buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBRequest/transaction",
    "pageType": "web-api-instance-property",
    "summary": "The transaction read-only property of the IDBRequest\ninterface returns the transaction for the request, that is, the transaction the\nrequest is being made inside."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_draw_buffers_indexed/blendEquationSeparateiOES",
    "pageType": "web-api-instance-method",
    "summary": "The blendEquationSeparateiOES() method of the OES_draw_buffers_indexed WebGL extension sets the RGB and alpha blend equations separately for a particular draw buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBRequest/error_event",
    "pageType": "web-api-event",
    "summary": "The error handler is executed when an error caused a request to fail. In the error event handler, you can access the error of the request, as well as place more requests to the same transaction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_draw_buffers_indexed/blendFuncSeparateiOES",
    "pageType": "web-api-instance-method",
    "summary": "The blendFuncSeparateiOES() method of the OES_draw_buffers_indexed WebGL extension defines which function is used when blending pixels for RGB and alpha components separately for a particular draw buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBRequest/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the\nIDBRequest interface returns the result of the request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamEvent",
    "pageType": "web-api-interface",
    "summary": "The MediaStreamEvent interface represents events that occurs in relation to a MediaStream. Two events of this type can be thrown: addstream and removestream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList",
    "pageType": "web-api-interface",
    "summary": "The SVGNumberList interface defines a list of numbers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamEvent/stream",
    "pageType": "web-api-instance-property",
    "summary": "The read-only property MediaStreamEvent.stream returns\nthe MediaStream associated with the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList/getItem",
    "pageType": "web-api-instance-method",
    "summary": "The getItem() method of the SVGNumberList interface returns the specified item from the list. The returned item is the item itself and not a copy. Any changes made to the item are immediately reflected in the list. The first item is indexed 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamEvent/MediaStreamEvent",
    "pageType": "web-api-constructor",
    "summary": "The MediaStreamEvent() constructor creates a new MediaStreamEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList/appendItem",
    "pageType": "web-api-instance-method",
    "summary": "The appendItem() method of the SVGNumberList interface inserts a new item at the end of the list. If the given item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaEncryptedEvent/initDataType",
    "pageType": "web-api-instance-property",
    "summary": "The read-only initDataType property of the MediaKeyMessageEvent returns a case-sensitive string describing the type of the initialization data associated with this event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList/removeItem",
    "pageType": "web-api-instance-method",
    "summary": "The removeItem() method of the SVGNumberList interface removes an existing item at the given index from the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaEncryptedEvent",
    "pageType": "web-api-interface",
    "summary": "The MediaEncryptedEvent interface of the Encrypted Media Extensions API contains the information associated with an encrypted event sent to a HTMLMediaElement when some initialization data is encountered in the media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList/insertItemBefore",
    "pageType": "web-api-instance-method",
    "summary": "The insertItemBefore() method of the SVGNumberList interface inserts a new item into the list at the specified position. The first item is indexed 0. The inserted item is the item itself and not a copy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaEncryptedEvent/initData",
    "pageType": "web-api-instance-property",
    "summary": "The read-only initData property of the MediaKeyMessageEvent returns the initialization data contained in this event, if any."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList/replaceItem",
    "pageType": "web-api-instance-method",
    "summary": "The replaceItem() method of the SVGNumberList interface replaces an existing item in the list with a new item. If the new item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to replace is before the removal of the item."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaEncryptedEvent/MediaEncryptedEvent",
    "pageType": "web-api-constructor",
    "summary": "The MediaEncryptedEvent constructor creates a new MediaEncryptedEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the SVGNumberList interface returns the number of items in the list. It is an alias of numberOfItems to make SVG lists more array-like."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLDocument",
    "pageType": "web-api-interface",
    "summary": "The XMLDocument interface represents an XML document. It inherits from the generic Document and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList/initialize",
    "pageType": "web-api-instance-method",
    "summary": "The initialize() method of the SVGNumberList interface clears all existing items from the list and re-initializes the list to hold the single item specified by the parameter. If the inserted item is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. The return value is the item inserted into the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSAnimation",
    "pageType": "web-api-interface",
    "summary": "The CSSAnimation interface of the Web Animations API represents an Animation object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the SVGNumberList interface clears all existing items from the list, with the result being an empty list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSAnimation/animationName",
    "pageType": "web-api-instance-property",
    "summary": "The animationName property of the\nCSSAnimation interface returns the animation-name. This\nspecifies one or more keyframe at-rules which describe the animation applied to the\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGNumberList/numberOfItems",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfItems property of the SVGNumberList interface returns the number of items in the list. length is an alias of it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Storage_API",
    "pageType": "web-api-overview",
    "summary": "The Web Storage API provides mechanisms by which browsers can store key/value pairs, in a much more intuitive fashion than using cookies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly",
    "pageType": "web-api-interface",
    "summary": "The DOMRectReadOnly interface specifies the standard properties (also used by DOMRect) to define a rectangle whose properties are immutable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API",
    "pageType": "guide",
    "summary": "The Web Storage API provides mechanisms by which browsers can securely store key/value pairs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the DOMRectReadOnly interface represents the x coordinate of the DOMRect's origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Crypto_API",
    "pageType": "web-api-overview",
    "summary": "The Web Crypto API is an interface allowing a script to use cryptographic primitives in order to build systems using cryptography."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/left",
    "pageType": "web-api-instance-property",
    "summary": "The left read-only property of the DOMRectReadOnly interface returns the left coordinate value of the DOMRect. (Has the same value as x, or x + width if width is negative.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Crypto_API/Non-cryptographic_uses_of_subtle_crypto",
    "pageType": "guide",
    "summary": "This article will focus on uses of the digest method of the SubtleCrypto interface. A lot of other methods within the Web Crypto API have very specific cryptographic use cases, creating hashes of content (which is what the digest method does) has lots of very useful purposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/fromRect_static",
    "pageType": "web-api-static-method",
    "summary": "The fromRect() static method of the\nDOMRectReadOnly object creates a new DOMRectReadOnly\nobject with a given location and dimensions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ChapterInformation",
    "pageType": "web-api-interface",
    "summary": "The ChapterInformation interface of the Media Session API represents the metadata for an individual chapter of a media resource (i.e., a video or audio file)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/right",
    "pageType": "web-api-instance-property",
    "summary": "The right read-only property of the DOMRectReadOnly interface returns the right coordinate value of the DOMRect. (Has the same value as x + width, or x if width is negative.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ChapterInformation/startTime",
    "pageType": "web-api-instance-property",
    "summary": "The startTime read-only property of the\nChapterInformation interface returns a number representing the start time of the chapter in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/top",
    "pageType": "web-api-instance-property",
    "summary": "The top read-only property of the DOMRectReadOnly interface returns the top coordinate value of the DOMRect. (Has the same value as y, or y + height if height is negative.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ChapterInformation/artwork",
    "pageType": "web-api-instance-property",
    "summary": "The artwork read-only property of the\nChapterInformation interface returns an Array of objects representing images associated with the chapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the DOMRectReadOnly interface represents the height of the DOMRect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ChapterInformation/title",
    "pageType": "web-api-instance-property",
    "summary": "The title read-only property of the\nChapterInformation interface returns a string representing the title of the chapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the DOMRectReadOnly interface represents the y coordinate of the DOMRect's origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigation_API",
    "pageType": "web-api-overview",
    "summary": "The Navigation API provides the ability to initiate, intercept, and manage browser navigation actions. It can also examine an application's history entries. This is a successor to previous web platform features such as the History API and window.location, which solves their shortcomings and is specifically aimed at the needs of single-page applications (SPAs)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/bottom",
    "pageType": "web-api-instance-property",
    "summary": "The bottom read-only property of the DOMRectReadOnly interface returns the bottom coordinate value of the DOMRect. (Has the same value as y + height, or y if height is negative.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLUListElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLUListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating unordered list (<ul>) elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The DOMRectReadOnly method toJSON() returns a JSON representation of the DOMRectReadOnly object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLUListElement/compact",
    "pageType": "web-api-instance-property",
    "summary": "The compact property of the HTMLUListElement interface indicates that spacing between list items should be reduced. The exact handling of the compact attribute is browser-specific. Instead of using this property, consider using CSS line-height instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the DOMRectReadOnly interface represents the width of the DOMRect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRMediaBinding",
    "pageType": "web-api-interface",
    "summary": "The XRMediaBinding interface is used to create layers that display the content of an HTMLVideoElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectReadOnly/DOMRectReadOnly",
    "pageType": "web-api-constructor",
    "summary": "The DOMRectReadOnly() constructor creates a new DOMRectReadOnly object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRMediaBinding/createEquirectLayer",
    "pageType": "web-api-instance-method",
    "summary": "The createEquirectLayer() method of the XRMediaBinding interface returns an XREquirectLayer object which is a layer that maps an equirectangular coded data onto the inside of a sphere."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRMediaBinding/XRMediaBinding",
    "pageType": "web-api-constructor",
    "summary": "The XRMediaBinding() constructor creates and returns a new XRMediaBinding object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRotate/angle",
    "pageType": "web-api-instance-property",
    "summary": "The angle property of the\nCSSRotate interface gets and sets the angle of rotation. A positive angle\ndenotes a clockwise rotation, a negative angle a counter-clockwise one."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRotate",
    "pageType": "web-api-interface",
    "summary": "The CSSRotate interface of the CSS Typed Object Model API represents the rotate value of the individual transform property in CSS. It inherits properties and methods from its parent CSSTransformValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRMediaBinding/createQuadLayer",
    "pageType": "web-api-instance-method",
    "summary": "The createQuadLayer() method of the XRMediaBinding interface returns an XRQuadLayer object which is a layer that takes up a flat rectangular space in the virtual environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRotate/x",
    "pageType": "web-api-instance-property",
    "summary": "The x property of the\nCSSRotate interface gets and sets the abscissa or x-axis of the\ntranslating vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRMediaBinding/createCylinderLayer",
    "pageType": "web-api-instance-method",
    "summary": "The createCylinderLayer() method of the XRMediaBinding interface returns an XRCylinderLayer object which is a layer that takes up a curved rectangular space in the virtual environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRotate/z",
    "pageType": "web-api-instance-property",
    "summary": "The z property of the\nCSSRotate interface representing the z-component of the translating\nvector. A positive value moves the element towards the viewer, and a negative value\nfarther away."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OverconstrainedError",
    "pageType": "web-api-interface",
    "summary": "The OverconstrainedError interface of the Media Capture and Streams API indicates that the set of desired capabilities for the current MediaStreamTrack cannot currently be met. When this event is thrown on a MediaStreamTrack, it is muted until either the current constraints can be established or until satisfiable constraints are applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRotate/y",
    "pageType": "web-api-instance-property",
    "summary": "The y property of the\nCSSRotate interface gets and sets the ordinate or y-axis of the\ntranslating vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OverconstrainedError/constraint",
    "pageType": "web-api-instance-property",
    "summary": "The constraint read-only property of the\nOverconstrainedError interface returns the constraint that was supplied\nin the constructor, meaning the constraint that was not satisfied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRotate/CSSRotate",
    "pageType": "web-api-constructor",
    "summary": "The CSSRotate() constructor creates a new\nCSSRotate object representing the rotate() value of the\nindividual transform property in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OverconstrainedError/OverconstrainedError",
    "pageType": "web-api-constructor",
    "summary": "The OverconstrainedError() constructor\ncreates a new OverconstrainedError object which indicates that the set of\ndesired capabilities for the current MediaStreamTrack cannot currently be\nmet. When this event is thrown on a MediaStreamTrack, it is muted until\neither the current constraints can be established or until satisfiable constraints are\napplied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFunctionRule/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the CSSFunctionRule interface returns a string representing the custom function's name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StereoPannerNode",
    "pageType": "web-api-interface",
    "summary": "The StereoPannerNode interface of the Web Audio API represents a simple stereo panner node that can be used to pan an audio stream left or right. It is an AudioNode audio-processing module that positions an incoming audio stream in a stereo image using a low-cost equal-power panning algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFunctionRule",
    "pageType": "web-api-interface",
    "summary": "The CSSFunctionRule interface of the CSS Object Model represents CSS @function (custom function) at-rules."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StereoPannerNode/pan",
    "pageType": "web-api-instance-property",
    "summary": "The pan property of the StereoPannerNode interface is an a-rate AudioParam representing the amount of panning to apply. The value can range between -1 (full left pan) and 1 (full right pan)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFunctionRule/returnType",
    "pageType": "web-api-instance-property",
    "summary": "The returnType property of the CSSFunctionRule interface returns a string representing the custom function's return type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StereoPannerNode/StereoPannerNode",
    "pageType": "web-api-constructor",
    "summary": "The StereoPannerNode() constructor of the Web Audio API creates a new StereoPannerNode object which is an AudioNode that represents a simple stereo panner node that can be used to pan an audio stream left or right."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFunctionRule/getParameters",
    "pageType": "web-api-instance-method",
    "summary": "The getParameters() method of the CSSFunctionRule interface returns an array of objects representing the custom function's parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUUncapturedErrorEvent",
    "pageType": "web-api-interface",
    "summary": "The GPUUncapturedErrorEvent interface of the WebGPU API is the event object type for the GPUDevice uncapturederror event, used for telemetry and to report unexpected errors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUShaderModule",
    "pageType": "web-api-interface",
    "summary": "The GPUShaderModule interface of the WebGPU API represents an internal shader module object, a container for WGSL shader code that can be submitted to the GPU for execution by a pipeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUUncapturedErrorEvent/error",
    "pageType": "web-api-instance-property",
    "summary": "The error read-only property of the\nGPUUncapturedErrorEvent interface is a GPUError object instance providing access to the details of the error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUShaderModule/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUShaderModule interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUUncapturedErrorEvent/GPUUncapturedErrorEvent",
    "pageType": "web-api-constructor",
    "summary": "The GPUUncapturedErrorEvent() constructor creates a new\nGPUUncapturedErrorEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUShaderModule/getCompilationInfo",
    "pageType": "web-api-instance-method",
    "summary": "The getCompilationInfo() method of the\nGPUShaderModule interface returns a Promise that fulfills with a GPUCompilationInfo object containing messages generated during the GPUShaderModule's compilation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETileElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFETileElement interface corresponds to the <feTile> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETileElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFETileElement interface describes the horizontal coordinate of the position of an SVG filter primitive as an SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad",
    "pageType": "web-api-interface",
    "summary": "A DOMQuad is a collection of four DOMPoints defining the corners of an arbitrary quadrilateral. Returning DOMQuads lets getBoxQuads() return accurate information even when arbitrary 2D or 3D transforms are present. It has a handy bounds attribute returning a DOMRectReadOnly for those cases where you just want an axis-aligned bounding rectangle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETileElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFETileElement interface reflects the in attribute of the given <feTile> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad/getBounds",
    "pageType": "web-api-instance-method",
    "summary": "The DOMQuad method\ngetBounds() returns a DOMRect object representing the smallest rectangle that fully contains the DOMQuad object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETileElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFETileElement interface describes the vertical size of an SVG filter primitive as an SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad/fromRect_static",
    "pageType": "web-api-static-method",
    "summary": "The fromRect() static method of the DOMQuad interface returns a new DOMQuad object based on the provided set of coordinates in the shape of a DOMRect object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETileElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFETileElement interface describes the vertical coordinate of the position of an SVG filter primitive as an SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad/p4",
    "pageType": "web-api-instance-property",
    "summary": "The DOMQuad interface's p4 property holds the DOMPoint object that represents one of the four corners of the DOMQuad. When created from DOMQuad.fromRect(), it is the point (x, y + height)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETileElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFETileElement interface describes the horizontal size of an SVG filter primitive as an SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad/p2",
    "pageType": "web-api-instance-property",
    "summary": "The DOMQuad interface's p2 property holds the DOMPoint object that represents one of the four corners of the DOMQuad. When created from DOMQuad.fromRect(), it is the point (x + width, y)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFETileElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFETileElement interface describes the assigned name of an SVG filter primitive as an SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The DOMQuad method\ntoJSON() returns a\nJSON representation of the DOMQuad object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMException/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the\nDOMException interface returns a string that contains\none of the strings associated with an error name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad/DOMQuad",
    "pageType": "web-api-constructor",
    "summary": "The DOMQuad() constructor creates and returns a new DOMQuad object, given the values for some or all of its properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMException",
    "pageType": "web-api-interface",
    "summary": "The DOMException interface represents an abnormal event (called an exception) that occurs as a result of calling a method or accessing a property of a web API. This is how error conditions are described in web APIs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad/fromQuad_static",
    "pageType": "web-api-static-method",
    "summary": "The fromQuad() static method of the DOMQuad interface returns a new DOMQuad object based on the provided set of coordinates in the shape of another DOMQuad object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMException/DOMException",
    "pageType": "web-api-constructor",
    "summary": "The DOMException() constructor returns a\nDOMException object with a specified message and name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad/p1",
    "pageType": "web-api-instance-property",
    "summary": "The DOMQuad interface's p1 property holds the DOMPoint object that represents one of the four corners of the DOMQuad. When created from DOMQuad.fromRect(), it is the point (x, y)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMException/code",
    "pageType": "web-api-instance-property",
    "summary": "The code read-only property of the DOMException interface returns one of the legacy error code constants, or 0 if none match."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMQuad/p3",
    "pageType": "web-api-instance-property",
    "summary": "The DOMQuad interface's p3 property holds the DOMPoint object that represents one of the four corners of the DOMQuad. When created from DOMQuad.fromRect(), it is the point (x + width, y + height)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMException/message",
    "pageType": "web-api-instance-property",
    "summary": "The message read-only property of the\nDOMException interface returns a string representing\na message or description associated with the given error name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisibilityStateEntry",
    "pageType": "web-api-interface",
    "summary": "The VisibilityStateEntry interface provides timings of page visibility state changes, i.e., when a tab changes from the foreground to the background or vice versa."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLProgram",
    "pageType": "web-api-interface",
    "summary": "The WebGLProgram is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebUSB_API",
    "pageType": "web-api-overview",
    "summary": "The WebUSB API provides a way to expose non-standard Universal Serial Bus (USB) compatible devices services to the web, to make USB safer and easier to use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableByteStreamController/byobRequest",
    "pageType": "web-api-instance-property",
    "summary": "The byobRequest read-only property of the ReadableByteStreamController interface returns the current BYOB request, or null if there are no pending requests."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableByteStreamController",
    "pageType": "web-api-interface",
    "summary": "The ReadableByteStreamController interface of the Streams API represents a controller for a readable byte stream.\nIt allows control of the state and internal queue of a ReadableStream with an underlying byte source, and enables efficient zero-copy transfer of data from the underlying source to a consumer when the stream's internal queue is empty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSystem",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API interface XRSystem provides methods which let you get access to an XRSession object representing a WebXR session. With that XRSession in hand, you can use it to interact with the Augmented Reality (AR) or Virtual Reality (VR) device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableByteStreamController/error",
    "pageType": "web-api-instance-method",
    "summary": "The error() method of the ReadableByteStreamController interface causes any future interactions with the associated stream to error with the specified reason."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSystem/isSessionSupported",
    "pageType": "web-api-instance-method",
    "summary": "The XRSystem method\nisSessionSupported() returns a promise which resolves to\ntrue if the specified WebXR session mode is supported by the user's WebXR\ndevice. Otherwise, the promise resolves with false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableByteStreamController/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the ReadableByteStreamController interface closes the associated stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableByteStreamController/desiredSize",
    "pageType": "web-api-instance-property",
    "summary": "The desiredSize read-only property of the ReadableByteStreamController interface returns the number of bytes required to fill the stream's internal queue to its \"desired size\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSystem/requestSession",
    "pageType": "web-api-instance-method",
    "summary": "The XRSystem interface's\nrequestSession() method returns a promise\nwhich resolves to an XRSession object through which you can manage the\nrequested type of WebXR session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableByteStreamController/enqueue",
    "pageType": "web-api-instance-method",
    "summary": "The enqueue() method of the ReadableByteStreamController interface enqueues a given chunk on the associated readable byte stream (the chunk is transferred into the stream's internal queues)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSystem/devicechange_event",
    "pageType": "web-api-event",
    "summary": "A devicechange event is fired on an XRSystem object whenever the availability of immersive XR devices has changed; for example, a VR headset or AR goggles have been connected or disconnected. It's a generic Event with no added properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionStats",
    "pageType": "web-api-interface",
    "summary": "The RTCPeerConnectionStats dictionary of the WebRTC API provides information about the high level peer connection (RTCPeerConnection)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCPeerConnectionStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Lock/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of\nthe Lock interface returns the name passed to\nLockManager.request selected when the lock was requested."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCPeerConnectionStats dictionary is a string with the value \"peer-connection\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Lock",
    "pageType": "web-api-interface",
    "summary": "The Lock interface of the Web Locks API provides the name and mode of a lock.\nThis may be a newly requested lock that is received in the callback to LockManager.request(), or a record of an active or queued lock returned by LockManager.query()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionStats/dataChannelsOpened",
    "pageType": "web-api-instance-property",
    "summary": "The dataChannelsOpened property of the RTCPeerConnectionStats dictionary indicates the number of unique RTCDataChannel objects that have entered the open state during their lifetime."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Lock/mode",
    "pageType": "web-api-instance-property",
    "summary": "The mode read-only property of the Lock interface returns the access mode passed to LockManager.request() when the lock was requested.\nThe mode is either \"exclusive\" (the default) or \"shared\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionStats/dataChannelsClosed",
    "pageType": "web-api-instance-property",
    "summary": "The dataChannelsClosed property of the RTCPeerConnectionStats dictionary indicates the number of unique RTCDataChannel objects that have left the open state during their lifetime."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSImageValue",
    "pageType": "web-api-interface",
    "summary": "The CSSImageValue interface of the CSS Typed Object Model API represents values for properties that take an image, for example background-image, list-style-image, or border-image-source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCPeerConnectionStats dictionary is a string which uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer",
    "pageType": "web-api-interface",
    "summary": "The SourceBuffer interface represents a chunk of media to be passed into an HTMLMediaElement and played, via a MediaSource object. This can be made up of one or several media segments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorker/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the\nServiceWorker interface returns a string representing the current state\nof the service worker. It can be one of the following values: parsed, installing,\ninstalled, activating, activated, or\nredundant."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorker",
    "pageType": "web-api-interface",
    "summary": "The ServiceWorker interface of the Service Worker API provides a reference to a service worker. Multiple browsing contexts (e.g., pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/updatestart_event",
    "pageType": "web-api-event",
    "summary": "The updatestart event of the SourceBuffer interface signals the beginning of an appendBuffer() or remove() operation. The updating attribute transitions from false to true."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorker/postMessage",
    "pageType": "web-api-instance-method",
    "summary": "The postMessage() method of the ServiceWorker interface sends a message to the worker. The first parameter is the data to send to the worker. The data may be any JavaScript object which can be handled by the structured clone algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/updating",
    "pageType": "web-api-instance-property",
    "summary": "The updating read-only property of the\nSourceBuffer interface indicates whether the SourceBuffer is\ncurrently being updated — i.e., whether an appendBuffer() or remove()\noperation is currently in progress."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorker/scriptURL",
    "pageType": "web-api-instance-property",
    "summary": "Returns the ServiceWorker serialized script URL defined as part of ServiceWorkerRegistration.\nMust be on the same origin as the document that registers the\nServiceWorker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/timestampOffset",
    "pageType": "web-api-instance-property",
    "summary": "The timestampOffset property of the\nSourceBuffer interface controls the offset applied to timestamps inside\nmedia segments that are appended to the SourceBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorker/error_event",
    "pageType": "web-api-event",
    "summary": "The error event fires whenever an error occurs in the service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/appendBufferAsync",
    "pageType": "web-api-instance-method",
    "summary": "The appendBufferAsync() method\nof the SourceBuffer interface begins the process of asynchronously\nappending media segment data from an ArrayBuffer,\na TypedArray or a DataView object to the SourceBuffer object.\nIt returns a Promise which is fulfilled once the buffer has been appended."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorker/statechange_event",
    "pageType": "web-api-event",
    "summary": "The statechange event fires anytime the ServiceWorker.state changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/audioTracks",
    "pageType": "web-api-instance-property",
    "summary": "The audioTracks read-only property of the\nSourceBuffer interface returns a list of the audio tracks currently\ncontained inside the SourceBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageTransitionEvent",
    "pageType": "web-api-interface",
    "summary": "The PageTransitionEvent event object is available inside handler functions for the pageshow and pagehide events, fired when a document is being loaded or unloaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/remove",
    "pageType": "web-api-instance-method",
    "summary": "The remove() method of the SourceBuffer\ninterface removes media segments within a specific time range from the\nSourceBuffer. This method can only be called when\nSourceBuffer.updating equals false. If\nSourceBuffer.updating is not equal to false, call\nSourceBuffer.abort()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageTransitionEvent/PageTransitionEvent",
    "pageType": "web-api-constructor",
    "summary": "The PageTransitionEvent() constructor creates a new PageTransitionEvent object, that is used by the pageshow or pagehide events, fired at the window object when a page is loaded or unloaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/appendBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The appendBuffer() method of the\nSourceBuffer interface appends media segment data from an\nArrayBuffer, a TypedArray or a DataView object\nto the SourceBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageTransitionEvent/persisted",
    "pageType": "web-api-instance-property",
    "summary": "The persisted read-only property indicates if a webpage is loading from a cache."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AmbientLightSensor",
    "pageType": "web-api-interface",
    "summary": "The AmbientLightSensor interface of the Sensor APIs returns the current light level or illuminance of the ambient light around the hosting device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/appendWindowStart",
    "pageType": "web-api-instance-property",
    "summary": "The appendWindowStart property of the\nSourceBuffer interface controls the timestamp for the start of the append window, a\ntimestamp range that can be used to filter what media data is appended to the\nSourceBuffer. Coded media frames with timestamps within this range will be\nappended, whereas those outside the range will be filtered out."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AmbientLightSensor/illuminance",
    "pageType": "web-api-instance-property",
    "summary": "The illuminance read-only property of the AmbientLightSensor interface returns the current light level in lux of the ambient light level around the hosting device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/videoTracks",
    "pageType": "web-api-instance-property",
    "summary": "The videoTracks read-only property of the\nSourceBuffer interface returns a list of the video tracks currently\ncontained inside the SourceBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AmbientLightSensor/AmbientLightSensor",
    "pageType": "web-api-constructor",
    "summary": "The AmbientLightSensor() constructor creates a new AmbientLightSensor object, which returns the current light level or illuminance of the ambient light around the hosting device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/update_event",
    "pageType": "web-api-event",
    "summary": "The update event of the SourceBuffer interface signals the successful completion of an appendBuffer() or remove() operation. The updating attribute transitions from true to false. This event is fired before the updateend event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMeterElement",
    "pageType": "web-api-interface",
    "summary": "The HTML <meter> elements expose the HTMLMeterElement interface, which provides special properties and methods (beyond the HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of <meter> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/abort",
    "pageType": "web-api-instance-method",
    "summary": "The abort() method of the SourceBuffer\ninterface aborts the current segment and resets the segment parser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMeterElement/min",
    "pageType": "web-api-instance-property",
    "summary": "The min property of the HTMLMeterElement interface represents the minimum value of the <meter> element as a floating-point number. It reflects the element's min attribute, or 0 if no min is defined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMeterElement/max",
    "pageType": "web-api-instance-property",
    "summary": "The max property of the HTMLMeterElement interface represents the maximum value of the <meter> element as a floating-point number. It reflects the element's max attribute, or the min value if no max is set, or 1 if neither the min or the max is defined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/appendWindowEnd",
    "pageType": "web-api-instance-property",
    "summary": "The appendWindowEnd property of the\nSourceBuffer interface controls the timestamp for the end of the append window, a\ntimestamp range that can be used to filter what media data is appended to the\nSourceBuffer. Coded media frames with timestamps within this range will be\nappended, whereas those outside the range will be filtered out."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMeterElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the HTMLMeterElement interface represents the current value of the <meter> element as a floating-point number. It reflects the element's value attribute. If no value is set, it is the HTMLMeterElement.min value or 0, whichever is greater."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/mode",
    "pageType": "web-api-instance-property",
    "summary": "The mode property of the SourceBuffer\ninterface controls whether media segments can be appended to the\nSourceBuffer in any order, or in a strict sequence."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMeterElement/optimum",
    "pageType": "web-api-instance-property",
    "summary": "The optimum property of the HTMLMeterElement interface represents the optimum boundary of the <meter> element as a floating-point number. It reflects the element's optimum attribute, or the midpoint between min and max values if not defined. The value of optimum is clamped by the min and max values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMeterElement/high",
    "pageType": "web-api-instance-property",
    "summary": "The high property of the HTMLMeterElement interface represents the high boundary of the <meter> element as a floating-point number. It reflects the element's high attribute, or the value of max if not defined. The value of high is clamped by the low and max values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the SourceBuffer interface is fired when an error occurs during the processing of an appendBuffer() operation. This may happen, for example, if the data being appended is not in the expected format, the SourceBuffer is in an invalid state, or the user agent is unable to process the data. The updating property transitions from true to false. This event is fired before the updateend event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMeterElement/low",
    "pageType": "web-api-instance-property",
    "summary": "The low property of the HTMLMeterElement interface represents the low boundary of the <meter> element as a floating-point number. It reflects the element's low attribute, or the value of min if not defined. The value of low is clamped by the min and max values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/removeAsync",
    "pageType": "web-api-instance-method",
    "summary": "The removeAsync() method of the\nSourceBuffer interface starts the process of asynchronously removing\nfrom the SourceBuffer media segments found within a specific time\nrange. A Promise is returned, which is fulfilled when the buffers\nin the specified time range have been removed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMeterElement/labels",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMeterElement.labels read-only property returns a\nNodeList of the <label> elements associated with the\n<meter> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/changeType",
    "pageType": "web-api-instance-method",
    "summary": "The changeType() method of the\nSourceBuffer interface sets the MIME type that future calls to\nappendBuffer() should expect the new media\ndata to conform to. This makes it possible to change codecs or container type\nmid-stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats",
    "pageType": "web-api-interface",
    "summary": "The RTCRemoteOutboundRtpStreamStats dictionary of the WebRTC API is used to report statistics from a remote endpoint about its outbound RTP stream.\nThis will correspond to an inbound stream that is currently being received by the local RTCPeerConnection object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/textTracks",
    "pageType": "web-api-instance-property",
    "summary": "The textTracks read-only property of the\nSourceBuffer interface returns a list of the text tracks currently\ncontained inside the SourceBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind property of the RTCRemoteOutboundRtpStreamStats dictionary is a string indicating whether the described RTP stream contains audio or video media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/abort_event",
    "pageType": "web-api-event",
    "summary": "The abort event of the SourceBuffer interface is fired when the buffer appending is aborted, because the SourceBuffer.abort() or SourceBuffer.remove() method is called while the SourceBuffer.appendBuffer() algorithm is still running. The updating property transitions from true to false. This event is fired before the updateend event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCRemoteOutboundRtpStreamStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/codecId",
    "pageType": "web-api-instance-property",
    "summary": "The codecId property of the RTCRemoteOutboundRtpStreamStats dictionary is a string that uniquely identifies the object that was inspected to produce the data in the RTCCodecStats for the RTP stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/buffered",
    "pageType": "web-api-instance-property",
    "summary": "The buffered read-only property of the\nSourceBuffer interface returns the time ranges that are currently\nbuffered in the SourceBuffer as a normalized TimeRanges\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCRemoteOutboundRtpStreamStats dictionary is a string with the value \"remote-outbound-rtp\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBuffer/updateend_event",
    "pageType": "web-api-event",
    "summary": "The updateend event of the SourceBuffer interface signals the (not necessarily successful) completion of an appendBuffer() or remove() operation. The updating attribute transitions from true to false. This event is fired after the update, error, or abort events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/roundTripTimeMeasurements",
    "pageType": "web-api-instance-property",
    "summary": "The roundTripTimeMeasurements property of the RTCRemoteOutboundRtpStreamStats dictionary is a positive integer value that represents the total number valid round of trip time measurements received for this synchronizing source (SSRC)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/remoteTimestamp",
    "pageType": "web-api-instance-property",
    "summary": "The RTCRemoteOutboundRtpStreamStats property remoteTimestamp indicates the timestamp on the remote peer at which these statistics were sent.\nThis differs from timestamp, which indicates the time at which the statistics were generated or received locally."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpotLightElement/pointsAtY",
    "pageType": "web-api-instance-property",
    "summary": "The pointsAtY read-only property of the SVGFESpotLightElement interface reflects the pointsAtY attribute of the given <feSpotLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/ssrc",
    "pageType": "web-api-instance-property",
    "summary": "The ssrc property of the RTCRemoteOutboundRtpStreamStats dictionary contains a positive integer value that identifies the synchronization source (SSRC) of this stream of RTP packets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpotLightElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFESpotLightElement interface corresponds to the <feSpotLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/transportId",
    "pageType": "web-api-instance-property",
    "summary": "The transportId property of the RTCRemoteOutboundRtpStreamStats dictionary is a string that uniquely identifies the associated RTCTransportStats statistics object for this RTP stream's underlying transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpotLightElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFESpotLightElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedNumber."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/localId",
    "pageType": "web-api-instance-property",
    "summary": "The RTCRemoteOutboundRtpStreamStats dictionary's localId property is a string which can be used to identify the RTCInboundRtpStreamStats object whose remoteId matches this value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpotLightElement/pointsAtX",
    "pageType": "web-api-instance-property",
    "summary": "The pointsAtX read-only property of the SVGFESpotLightElement interface reflects the pointsAtX attribute of the given <feSpotLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/totalRoundTripTime",
    "pageType": "web-api-instance-property",
    "summary": "The totalRoundTripTime property of the RTCRemoteOutboundRtpStreamStats dictionary indicates the sum of all round trip time (RTT) measurements since the beginning of the session, in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpotLightElement/specularExponent",
    "pageType": "web-api-instance-property",
    "summary": "The specularExponent read-only property of the SVGFESpotLightElement interface reflects the specularExponent attribute of the given <feSpotLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteOutboundRtpStreamStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCRemoteOutboundRtpStreamStats dictionary is a string that uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseEvent",
    "pageType": "web-api-interface",
    "summary": "A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object's onclose attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpotLightElement/pointsAtZ",
    "pageType": "web-api-instance-property",
    "summary": "The pointsAtZ read-only property of the SVGFESpotLightElement interface reflects the pointsAtZ attribute of the given <feSpotLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseEvent/wasClean",
    "pageType": "web-api-instance-property",
    "summary": "The wasClean read-only property of the CloseEvent interface returns true if the connection closed cleanly."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpotLightElement/limitingConeAngle",
    "pageType": "web-api-instance-property",
    "summary": "The limitingConeAngle read-only property of the SVGFESpotLightElement interface reflects the limitingConeAngle attribute of the given <feSpotLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseEvent/CloseEvent",
    "pageType": "web-api-constructor",
    "summary": "The CloseEvent() constructor creates a new CloseEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpotLightElement/z",
    "pageType": "web-api-instance-property",
    "summary": "The z read-only property of the SVGFESpotLightElement interface describes the z-axis value of the position of an SVG filter primitive as a SVGAnimatedNumber. A positive Z-axis comes out towards the person viewing the content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseEvent/code",
    "pageType": "web-api-instance-property",
    "summary": "The code read-only property of the CloseEvent interface returns a WebSocket connection close code indicating the reason the connection was closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFESpotLightElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFESpotLightElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedNumber."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseEvent/reason",
    "pageType": "web-api-instance-property",
    "summary": "The reason read-only property of the CloseEvent interface returns the WebSocket connection close reason the server gave for closing the connection; that is, a concise human-readable prose explanation for the closure."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RequestInit",
    "pageType": "web-api-interface",
    "summary": "The RequestInit dictionary of the Fetch API represents the set of options that can be used to configure a fetch request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin read-only property of the HTMLAnchorElement interface returns a string containing the Unicode serialization of the origin of the <a> element's href."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkew",
    "pageType": "web-api-interface",
    "summary": "The CSSSkew interface of the CSS Typed Object Model API is part of the CSSTransformValue interface. It represents the skew() value of the individual transform property in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLAnchorElement interface represents hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface that they inherit from) for manipulating the layout and presentation of such elements. This interface corresponds to <a> element; not to be confused with <link>, which is represented by HTMLLinkElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkew/CSSSkew",
    "pageType": "web-api-constructor",
    "summary": "The CSSSkew() constructor creates a new\nCSSSkew object which represents the\nskew() value\nof the individual transform property in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/ping",
    "pageType": "web-api-instance-property",
    "summary": "The ping property of the HTMLAnchorElement interface is a space-separated list of URLs. When the link is followed, the browser will send POST requests with the body PING to the URLs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkew/ax",
    "pageType": "web-api-instance-property",
    "summary": "The ax property of the\nCSSSkew interface gets and sets the angle used to distort the element\nalong the x-axis (or abscissa)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkew/ay",
    "pageType": "web-api-instance-property",
    "summary": "The ay property of the\nCSSSkew interface gets and sets the angle used to distort the element\nalong the y-axis (or ordinate)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/download",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAnchorElement.download property is a\nstring indicating that the linked resource is intended to be\ndownloaded rather than displayed in the browser. The value, if any, specifies the\ndefault file name for use in labeling the resource in a local file system. If the name\nis not a valid file name in the underlying OS, the browser will adjust it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCompilationMessage",
    "pageType": "web-api-interface",
    "summary": "The GPUCompilationMessage interface of the WebGPU API represents a single informational, warning, or error message generated by the GPU shader module compiler."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/pathname",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAnchorElement.pathname property is a\nstring containing an initial '/' followed by the path of\nthe URL not including the query string or fragment (or the empty string if there is no\npath)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCompilationMessage/lineNum",
    "pageType": "web-api-instance-property",
    "summary": "The lineNum read-only property of the\nGPUCompilationMessage interface is a number representing the line number in the shader code that the message corresponds to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the HTMLAnchorElement interface is a string that indicates the MIME type of the linked resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCompilationMessage/linePos",
    "pageType": "web-api-instance-property",
    "summary": "The linePos read-only property of the\nGPUCompilationMessage interface is a number representing the position in the code line that the message corresponds to. This could be an exact point, or the start of the relevant substring."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/host",
    "pageType": "web-api-instance-property",
    "summary": "The host property of the HTMLAnchorElement interface is a string containing the host, which is the hostname, and then, if the port of the URL is nonempty, a \":\", followed by the port of the URL. If the URL does not have a hostname, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCompilationMessage/offset",
    "pageType": "web-api-instance-property",
    "summary": "The offset read-only property of the\nGPUCompilationMessage interface is a number representing the offset from the start of the shader code to the exact point, or the start of the relevant substring, that the message corresponds to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/hreflang",
    "pageType": "web-api-instance-property",
    "summary": "The hreflang property of the HTMLAnchorElement interface is a string that is the language of the linked resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCompilationMessage/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the\nGPUCompilationMessage interface is an enumerated value representing the type of the message. Each type represents a different severity level."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol property of the HTMLAnchorElement interface is a string containing the protocol or scheme of the <area> element's href, including the final \":\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCompilationMessage/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the\nGPUCompilationMessage interface is a number representing the length of the substring that the message corresponds to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/search",
    "pageType": "web-api-instance-property",
    "summary": "The search property of the HTMLAnchorElement interface is a search string, also called a query string, that is a string containing a \"?\" followed by the parameters of the <a> element's href. If the URL does not have a search query, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUCompilationMessage/message",
    "pageType": "web-api-instance-property",
    "summary": "The message read-only property of the\nGPUCompilationMessage interface is a string representing human-readable message text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/username",
    "pageType": "web-api-instance-property",
    "summary": "The username property of the HTMLAnchorElement interface is a string containing the username component of the <a> element's href. If the URL does not have a username, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPathElement",
    "pageType": "web-api-interface",
    "summary": "The SVGPathElement interface corresponds to the <path> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/hostname",
    "pageType": "web-api-instance-property",
    "summary": "The hostname property of the HTMLAnchorElement interface is a string containing either the domain name or IP address of the <a> element's href. If the URL does not have a hostname, this property contains an empty string, \"\". IPv4 and IPv6 addresses are normalized, such as stripping leading zeros, and domain names are converted to IDN."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPathElement/getTotalLength",
    "pageType": "web-api-instance-method",
    "summary": "The getTotalLength() method of the SVGPathElement interface returns the user agent's computed value for the total length of the path in user units."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPathElement/pathLength",
    "pageType": "web-api-instance-property",
    "summary": "The pathLength read-only property of the SVGPathElement interface reflects the pathLength attribute of the given <path> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/text",
    "pageType": "web-api-instance-property",
    "summary": "The text property of the HTMLAnchorElement represents the text inside the element.\nThis property represents the same information as Node.textContent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPathElement/getPathSegmentAtLength",
    "pageType": "web-api-instance-method",
    "summary": "The getPathSegmentAtLength() method of the SVGPathElement interface returns the path segment at a given distance along the path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/port",
    "pageType": "web-api-instance-property",
    "summary": "The port property of the HTMLAnchorElement interface is a string containing the port number of the <a> element's href. If the port is the default for the protocol (80 for ws: and http:, 443 for wss: and https:, and 21 for ftp:), this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPathElement/getPathData",
    "pageType": "web-api-instance-method",
    "summary": "The SVGPathElement.getPathData() method returns the sequence of path segments that corresponds to the path data, optionally normalizing the values and segment types."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/referrerPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The\nHTMLAnchorElement.referrerPolicy\nproperty reflect the HTML referrerpolicy attribute of the\n<a> element defining which referrer is sent when fetching the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPathElement/setPathData",
    "pageType": "web-api-instance-method",
    "summary": "The SVGPathElement.setPathData() method sets the sequence of path segments as the new path data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/target",
    "pageType": "web-api-instance-property",
    "summary": "The target property of the HTMLAnchorElement interface is a string that indicates where to display the linked resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPathElement/getPointAtLength",
    "pageType": "web-api-instance-method",
    "summary": "The getPointAtLength() method of the SVGPathElement interface returns the point at a given distance along the path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/hash",
    "pageType": "web-api-instance-property",
    "summary": "The hash property of the HTMLAnchorElement interface is a string containing a \"#\" followed by the fragment identifier of the <a> element's href. If the URL does not have a fragment identifier, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BarcodeDetector",
    "pageType": "web-api-interface",
    "summary": "The BarcodeDetector interface of the Barcode Detection API allows detection of linear and two dimensional barcodes in images."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/password",
    "pageType": "web-api-instance-property",
    "summary": "The password property of the HTMLAnchorElement interface is a string containing the password component of the <a> element's href. If the URL does not have a password, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BarcodeDetector/detect",
    "pageType": "web-api-instance-method",
    "summary": "The detect() method of the\nBarcodeDetector interface returns a Promise which fulfills\nwith an Array of detected barcodes within an image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/relList",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAnchorElement.relList read-only property reflects the rel attribute. It is a live DOMTokenList containing the set of link types indicating the relationship between the resource represented by the <a> element and the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BarcodeDetector/BarcodeDetector",
    "pageType": "web-api-constructor",
    "summary": "The BarcodeDetector() constructor creates\na new BarcodeDetector object which detects linear and two-dimensional\nbarcodes in images."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAnchorElement.href property is a\nstringifier that returns a string containing the whole URL, and allows\nthe href to be updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BarcodeDetector/getSupportedFormats_static",
    "pageType": "web-api-static-method",
    "summary": "The getSupportedFormats() static method\nof the BarcodeDetector interface returns a Promise which\nfulfills with an Array of supported barcode format types."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/attributionSrc",
    "pageType": "web-api-instance-property",
    "summary": "The attributionSrc property of the HTMLAnchorElement interface gets and sets the attributionsrc attribute on an <a> element programmatically, reflecting the value of that attribute. attributionsrc specifies that you want the browser to send an Attribution-Reporting-Eligible header. On the server-side this is used to trigger sending an Attribution-Reporting-Register-Source header in the response, to register of a navigation-based attribution source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RelativeOrientationSensor",
    "pageType": "web-api-interface",
    "summary": "The RelativeOrientationSensor interface of the Sensor APIs describes the device's physical orientation without regard to the Earth's reference coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RelativeOrientationSensor/RelativeOrientationSensor",
    "pageType": "web-api-constructor",
    "summary": "The RelativeOrientationSensor()\nconstructor creates a new RelativeOrientationSensor object which\ndescribes the device's physical orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/rel",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLAnchorElement.rel property reflects the rel attribute. It is a string containing a space-separated list of link types indicating the relationship between the resource represented by the <a> element and the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_float_blend",
    "pageType": "webgl-extension",
    "summary": "The WebGL API's EXT_float_blend extension allows blending and draw buffers with 32-bit floating-point components."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLAnchorElement/toString",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLAnchorElement.toString() stringifier\nmethod returns a string containing the whole URL. It is a read-only\nversion of HTMLAnchorElement.href."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFECompositeElement interface corresponds to the <feComposite> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFECompositeElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationTimeline",
    "pageType": "web-api-interface",
    "summary": "The AnimationTimeline interface of the Web Animations API represents the timeline of an animation. This interface exists to define timeline features, inherited by other timeline types:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/k4",
    "pageType": "web-api-instance-property",
    "summary": "The k4 read-only property of the SVGFECompositeElement interface reflects the k4 attribute of the given <feComposite> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationTimeline/duration",
    "pageType": "web-api-instance-property",
    "summary": "The duration read-only property of the Web Animations API's AnimationTimeline interface returns the maximum value for this timeline or null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/k2",
    "pageType": "web-api-instance-property",
    "summary": "The k2 read-only property of the SVGFECompositeElement interface reflects the k2 attribute of the given <feComposite> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationTimeline/currentTime",
    "pageType": "web-api-instance-property",
    "summary": "The currentTime read-only property of the Web Animations API's AnimationTimeline interface returns the timeline's current time in milliseconds, or null if the timeline is inactive."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFECompositeElement interface reflects the in attribute of the given <feComposite> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ToggleEvent",
    "pageType": "web-api-interface",
    "summary": "The ToggleEvent interface represents an event that fires when a popover element is toggled between being shown and hidden."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/in2",
    "pageType": "web-api-instance-property",
    "summary": "The in2 read-only property of the SVGFECompositeElement interface reflects the in2 attribute of the given <feComposite> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFECompositeElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ToggleEvent/source",
    "pageType": "web-api-instance-property",
    "summary": "The source read-only property of the ToggleEvent interface is an Element object instance representing the HTML popover control element that initiated the toggle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFECompositeElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ToggleEvent/newState",
    "pageType": "web-api-instance-property",
    "summary": "The newState read-only property of the ToggleEvent interface is a string representing the state the element is transitioning to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFECompositeElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/k3",
    "pageType": "web-api-instance-property",
    "summary": "The k3 read-only property of the SVGFECompositeElement interface reflects the k3 attribute of the given <feComposite> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ToggleEvent/oldState",
    "pageType": "web-api-instance-property",
    "summary": "The oldState read-only property of the ToggleEvent interface is a string representing the state the element is transitioning from."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/operator",
    "pageType": "web-api-instance-property",
    "summary": "The operator read-only property of the SVGFECompositeElement interface reflects the operator attribute of the given <feComposite> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ToggleEvent/ToggleEvent",
    "pageType": "web-api-constructor",
    "summary": "The ToggleEvent() constructor creates a new ToggleEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/k1",
    "pageType": "web-api-instance-property",
    "summary": "The k1 read-only property of the SVGFECompositeElement interface reflects the k1 attribute of the given <feComposite> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBConfiguration",
    "pageType": "web-api-interface",
    "summary": "The USBConfiguration interface of the WebUSB API provides information about a particular configuration of a USB device and the interfaces that it supports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFECompositeElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFECompositeElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBConfiguration/configurationValue",
    "pageType": "web-api-instance-property",
    "summary": "The configurationValue read-only property\nof the USBConfiguration interface returns the configuration value of this configuration. This is equal to the\nbConfigurationValue field of the configuration descriptor provided by the device defining this configuration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBConfiguration/configurationName",
    "pageType": "web-api-instance-property",
    "summary": "The configurationName read-only property\nof the USBConfiguration interface returns the name provided by the device\nto describe this configuration. This is equal to the value of the string descriptor with\nthe index provided in the iConfiguration\nfield of the configuration descriptor defining this configuration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.lineCap\nproperty of the Canvas 2D API determines the shape used to draw the end points of lines."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBConfiguration/interfaces",
    "pageType": "web-api-instance-property",
    "summary": "The interfaces read-only property of the\nUSBConfiguration interface returns an array containing instances of the\nUSBInterface describing each interface supported by this configuration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/drawFocusIfNeeded",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.drawFocusIfNeeded()\nmethod of the Canvas 2D API draws a focus ring around the current or given path, if the\nspecified element is focused."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D",
    "pageType": "web-api-interface",
    "summary": "The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a <canvas> element.\nIt is used for drawing shapes, text, images, and other objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBConfiguration/USBConfiguration",
    "pageType": "web-api-constructor",
    "summary": "The USBConfiguration() constructor\ncreates a new USBConfiguration object which contains information about\nthe configuration on the provided USBDevice with the given configuration value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/createImageData",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.createImageData() method of\nthe Canvas 2D API creates a new, blank ImageData object with the\nspecified dimensions. All of the pixels in the new object are transparent black."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/createConicGradient",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.createConicGradient() method of the Canvas 2D API creates a gradient around a point with given coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Workers_API",
    "pageType": "web-api-overview",
    "summary": "Web Workers makes it possible to run a script operation in a background thread separate from the main execution thread of a web application. The advantage of this is that laborious processing can be performed in a separate thread, allowing the main (usually the UI) thread to run without being blocked/slowed down."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.fillRect()\nmethod of the Canvas 2D API draws a rectangle that is filled according to the current\nfillStyle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm",
    "pageType": "guide",
    "summary": "The structured clone algorithm copies complex JavaScript objects.\nIt is used internally when invoking structuredClone(), to transfer data between Workers via postMessage(), storing objects with IndexedDB, or copying objects for other APIs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/measureText",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.measureText()\nmethod returns a TextMetrics object that contains information about the\nmeasured text (such as its width, for example)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers",
    "pageType": "guide",
    "summary": "In addition to the standard JavaScript set of functions (such as String, Array, Object, JSON, etc.), there are a variety of functions (and APIs) available in the workers. This article provides a list of those."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/resetTransform",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.resetTransform()\nmethod of the Canvas 2D API resets the current transform to the identity matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Workers_API/Transferable_objects",
    "pageType": "guide",
    "summary": "Transferable objects are objects that own resources that can be transferred from one context to another, ensuring that the resources are only available in one context at a time.\nFollowing a transfer, the original object is no longer usable; it no longer points to the transferred resource, and any attempt to read or write the object will throw an exception."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/scale",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.scale()\nmethod of the Canvas 2D API adds a scaling transformation to the canvas units\nhorizontally and/or vertically."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/createRadialGradient",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.createRadialGradient()\nmethod of the Canvas 2D API creates a radial gradient using the size and coordinates of\ntwo circles."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Workers_API/Using_web_workers",
    "pageType": "guide",
    "summary": "Web Workers are a simple means for web content to run scripts in background threads. The worker thread can perform tasks without interfering with the user interface. In addition, they can make network requests using the fetch() or XMLHttpRequest APIs. Once created, a worker can send messages to the JavaScript code that created it by posting messages to an event handler specified by that code (and vice versa)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/filter",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.filter\nproperty of the Canvas 2D API provides filter effects such as blurring and grayscaling.\nIt is similar to the CSS filter property and accepts the same values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/moveTo",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.moveTo()\nmethod of the Canvas 2D API begins a new sub-path at the point specified by the given\n(x, y) coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLBaseElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLBaseElement interface contains the base URI for a document. This object inherits all of the properties and methods as described in the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D method\ngetImageData() of the Canvas 2D API returns an\nImageData object representing the underlying pixel data for a specified\nportion of the canvas."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLBaseElement/target",
    "pageType": "web-api-instance-property",
    "summary": "The target property of the HTMLBaseElement interface is a string that represents the default target tab to show the resulting output for hyperlinks and form elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/ellipse",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.ellipse()\nmethod of the Canvas 2D API adds an elliptical arc to the current sub-path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLBaseElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href property of the HTMLBaseElement interface contains a string that is the URL to use as the base for relative URLs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/translate",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.translate()\nmethod of the Canvas 2D API adds a translation transformation to the current matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/stroke",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.stroke()\nmethod of the Canvas 2D API strokes (outlines) the current or given path with the\ncurrent stroke style."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto",
    "pageType": "web-api-interface",
    "summary": "The SubtleCrypto interface of the Web Crypto API provides a number of low-level cryptographic functions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/shadowColor",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.shadowColor\nproperty of the Canvas 2D API specifies the color of shadows."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/deriveBits",
    "pageType": "web-api-instance-method",
    "summary": "The deriveBits() method of the\nSubtleCrypto interface can be used to derive an array of bits from a base\nkey."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/shadowBlur",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.shadowBlur\nproperty of the Canvas 2D API specifies the amount of blur applied to shadows. The\ndefault is 0 (no blur)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/verify",
    "pageType": "web-api-instance-method",
    "summary": "The verify() method of the SubtleCrypto\ninterface verifies a digital signature."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/fill",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.fill()\nmethod of the Canvas 2D API fills the current or given path with the current\nfillStyle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/isPointInStroke",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.isPointInStroke()\nmethod of the Canvas 2D API reports whether or not the specified point is inside the\narea contained by the stroking of a path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/generateKey",
    "pageType": "web-api-instance-method",
    "summary": "The generateKey() method of the SubtleCrypto interface is used to generate a new key (for symmetric algorithms) or key pair (for public-key algorithms)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/letterSpacing",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.letterSpacing property of the Canvas API specifies the spacing between letters when drawing text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/roundRect",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.roundRect() method of the Canvas 2D API adds a rounded rectangle to the current path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/wrapKey",
    "pageType": "web-api-instance-method",
    "summary": "The wrapKey() method of the SubtleCrypto interface \"wraps\" a key.\nThis means that it exports the key in an external, portable format, then encrypts the exported key.\nWrapping a key helps protect it in untrusted environments, such as inside an otherwise unprotected data store or in transmission over an unprotected network."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/rect",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.rect()\nmethod of the Canvas 2D API adds a rectangle to the current path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/miterLimit",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.miterLimit property of the\nCanvas 2D API sets the miter limit ratio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/sign",
    "pageType": "web-api-instance-method",
    "summary": "The sign() method of the SubtleCrypto interface generates a digital signature."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/beginPath",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.beginPath()\nmethod of the Canvas 2D API starts a new path by emptying the list of sub-paths. Call\nthis method when you want to create a new path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/deriveKey",
    "pageType": "web-api-instance-method",
    "summary": "The deriveKey() method of the SubtleCrypto interface can be used to derive a secret key from a master key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash",
    "pageType": "web-api-instance-method",
    "summary": "The setLineDash() method of the Canvas 2D API's\nCanvasRenderingContext2D interface sets the line dash pattern used when\nstroking lines. It uses an array of values that specify alternating lengths of lines\nand gaps which describe the pattern."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/decrypt",
    "pageType": "web-api-instance-method",
    "summary": "The decrypt() method of the SubtleCrypto interface decrypts some encrypted data.\nIt takes as arguments a key to decrypt with, some optional extra parameters, and the data to decrypt (also known as \"ciphertext\").\nIt returns a Promise which will be fulfilled with the decrypted data (also known as \"plaintext\")."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/canvas",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.canvas property, part of the\nCanvas API, is a read-only reference to the\nHTMLCanvasElement object that is associated with a given context. It\nmight be null if there is no associated <canvas> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.putImageData()\nmethod of the Canvas 2D API paints data from the given ImageData object\nonto the canvas. If a dirty rectangle is provided, only the pixels from that rectangle\nare painted. This method is not affected by the canvas transformation matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/importKey",
    "pageType": "web-api-instance-method",
    "summary": "The importKey() method of the SubtleCrypto\ninterface imports a key: that is, it takes as input a key in an external, portable\nformat and gives you a CryptoKey object that you can use in the Web Crypto API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetY",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.shadowOffsetY\nproperty of the Canvas 2D API specifies the distance that shadows will be offset\nvertically."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/exportKey",
    "pageType": "web-api-instance-method",
    "summary": "The exportKey() method of the SubtleCrypto\ninterface exports a key: that is, it takes as input a CryptoKey object\nand gives you the key in an external, portable format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/reset",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.reset() method of the Canvas 2D API resets the rendering context to its default state, allowing it to be reused for drawing something else without having to explicitly reset all the properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/lineWidth",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.lineWidth\nproperty of the Canvas 2D API sets the thickness of lines."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/unwrapKey",
    "pageType": "web-api-instance-method",
    "summary": "The unwrapKey() method of the SubtleCrypto interface \"unwraps\" a key.\nThis means that it takes as its input a key that has been exported and then encrypted (also called \"wrapped\").\nIt decrypts the key and then imports it, returning a CryptoKey object that can be used in the Web Crypto API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/bezierCurveTo",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.bezierCurveTo()\nmethod of the Canvas 2D API adds a cubic Bézier curve to the current\nsub-path. It requires three points: the first two are control points and the third one\nis the end point. The starting point is the latest point in the current path, which can\nbe changed using moveTo() before\ncreating the Bézier curve."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/digest",
    "pageType": "web-api-instance-method",
    "summary": "The digest() method of the SubtleCrypto interface generates a digest of the given data, using the specified hash function.\nA digest is a short fixed-length value derived from some variable-length input.\nCryptographic digests should exhibit collision-resistance, meaning that it's hard to come up with two different inputs that have the same digest value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/isPointInPath",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.isPointInPath()\nmethod of the Canvas 2D API reports whether or not the specified point is contained in\nthe current path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/strokeText",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D method\nstrokeText(), part of the Canvas 2D API, strokes — that\nis, draws the outlines of — the characters of a text string at the specified\ncoordinates. An optional parameter allows specifying a maximum width for the rendered\ntext, which the user agent will achieve by condensing the text or by\nusing a lower font size."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SubtleCrypto/encrypt",
    "pageType": "web-api-instance-method",
    "summary": "The encrypt() method of the SubtleCrypto interface encrypts data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/arc",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.arc()\nmethod of the Canvas 2D API adds a circular arc to the current sub-path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/fillText",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D method\nfillText(), part of the Canvas 2D API, draws a text string\nat the specified coordinates, filling the string's characters with the current\nfillStyle. An optional parameter\nallows specifying a maximum width for the rendered text, which the user agent will achieve by condensing the text or by using a lower font size."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemHandle/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the\nFileSystemHandle interface returns the name of the entry represented by\nhandle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/lang",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.lang property of the Canvas 2D API gets or sets the language of the canvas drawing context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemHandle",
    "pageType": "web-api-interface",
    "summary": "The FileSystemHandle interface of the File System API is an object which represents a file or directory entry. Multiple handles can represent the same entry. For the most part you do not work with FileSystemHandle directly but rather its child interfaces FileSystemFileHandle and FileSystemDirectoryHandle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/setTransform",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.setTransform() method of the Canvas 2D API resets (overrides) the current transformation to the identity matrix, and then invokes a transformation described by the arguments of this method. This lets you scale, rotate, translate (move), and skew the context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemHandle/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind read-only property of the\nFileSystemHandle interface returns the type of entry. This is\n'file' if the associated entry is a file or 'directory'. It is\nused to distinguish files from directories when iterating over the contents of a\ndirectory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/createLinearGradient",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.createLinearGradient()\nmethod of the Canvas 2D API creates a gradient along the line connecting two given\ncoordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemHandle/remove",
    "pageType": "web-api-instance-method",
    "summary": "The remove() method of the FileSystemHandle interface requests removal of the entry represented by the handle from the underlying file system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/rotate",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.rotate()\nmethod of the Canvas 2D API adds a rotation to the transformation matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemHandle/requestPermission",
    "pageType": "web-api-instance-method",
    "summary": "The requestPermission() method of the\nFileSystemHandle interface requests read or readwrite permissions for the\nfile handle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/getContextAttributes",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.getContextAttributes() method returns an object that contains attributes used by the context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemHandle/isSameEntry",
    "pageType": "web-api-instance-method",
    "summary": "The isSameEntry() method of the\nFileSystemHandle interface compares two handles to see if the associated entries (either a file or directory) match."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/createPattern",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.createPattern() method of the Canvas 2D API creates a pattern using the specified image and repetition.\nThis method returns a CanvasPattern."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/textRendering",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.textRendering property of the Canvas API provides information to the rendering engine about what to optimize for when rendering text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemHandle/queryPermission",
    "pageType": "web-api-instance-method",
    "summary": "The queryPermission() method of the\nFileSystemHandle interface queries the current permission state of the\ncurrent handle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/shadowOffsetX",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.shadowOffsetX\nproperty of the Canvas 2D API specifies the distance that shadows will be offset\nhorizontally."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/transform",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.transform()\nmethod of the Canvas 2D API multiplies the current transformation with the matrix\ndescribed by the arguments of this method. This lets you scale, rotate, translate\n(move), and skew the context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/state",
    "pageType": "web-api-instance-property",
    "summary": "The state property of the RTCDataChannelStats dictionary returns a string that indicates the readyState of the data channel's underlying data connection: connecting, open, closing or closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled",
    "pageType": "web-api-instance-property",
    "summary": "The imageSmoothingEnabled property of the\nCanvasRenderingContext2D interface, part of the Canvas API, determines whether scaled images\nare smoothed (true, default) or not (false). On getting the\nimageSmoothingEnabled property, the last value it was set to is returned."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats",
    "pageType": "web-api-interface",
    "summary": "The RTCDataChannelStats dictionary of the WebRTC API provides statistics related to one RTCDataChannel object on the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/clearRect",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.clearRect()\nmethod of the Canvas 2D API erases the pixels in a rectangular area by setting them to\ntransparent black."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/dataChannelIdentifier",
    "pageType": "web-api-instance-property",
    "summary": "The dataChannelIdentifier property of the RTCDataChannelStats dictionary containing the id of the associated RTCDataChannel providing these statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/lineDashOffset",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.lineDashOffset\nproperty of the Canvas 2D API sets the line dash offset, or \"phase.\""
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCDataChannelStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/getLineDash",
    "pageType": "web-api-instance-method",
    "summary": "The getLineDash() method of the Canvas 2D API's\nCanvasRenderingContext2D interface gets the current line dash pattern."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the RTCDataChannelStats dictionary returns the label of the associated data channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/save",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.save()\nmethod of the Canvas 2D API saves the entire state of the canvas by pushing the current\nstate onto a stack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCDataChannelStats dictionary is a string with the value \"data-channel\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.fillStyle\nproperty of the Canvas 2D API specifies the\ncolor, gradient, or pattern to use inside shapes. The default style is black."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol property of the RTCDataChannelStats dictionary returns a string containing the protocol of the associated data channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/quadraticCurveTo",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.quadraticCurveTo()\nmethod of the Canvas 2D API adds a quadratic Bézier curve to the current\nsub-path. It requires two points: the first one is a control point and the second one is\nthe end point. The starting point is the latest point in the current path, which can be\nchanged using moveTo() before creating\nthe quadratic Bézier curve."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/messagesReceived",
    "pageType": "web-api-instance-property",
    "summary": "The messagesReceived property of the RTCDataChannelStats dictionary returns the total number of message events fired for received messages on the associated RTCDataChannel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/restore",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.restore()\nmethod of the Canvas 2D API restores the most recently saved canvas state by popping the\ntop entry in the drawing state stack. If there is no saved state, this method does\nnothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/bytesReceived",
    "pageType": "web-api-instance-property",
    "summary": "The bytesReceived property of the RTCDataChannelStats dictionary returns the total number of payload bytes received on the associated RTCDataChannel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/textBaseline",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.textBaseline\nproperty of the Canvas 2D API specifies the current text baseline used when drawing\ntext."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/messagesSent",
    "pageType": "web-api-instance-property",
    "summary": "The messagesSent property of the RTCDataChannelStats dictionary returns the total number of message events fired for sent messages on the associated RTCDataChannel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/textAlign",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.textAlign\nproperty of the Canvas 2D API specifies the current text alignment used when drawing\ntext."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/bytesSent",
    "pageType": "web-api-instance-property",
    "summary": "The bytesSent property of the RTCDataChannelStats dictionary returns the total number of payload bytes sent on the associated RTCDataChannel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/fontVariantCaps",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.fontVariantCaps property of the Canvas API specifies an alternative capitalization of the rendered text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCDataChannelStats dictionary is a string that uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/strokeRect",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.strokeRect()\nmethod of the Canvas 2D API draws a rectangle that is stroked (outlined) according to\nthe current strokeStyle and other\ncontext settings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/getTransform",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.getTransform() method of the Canvas 2D API retrieves the current transformation matrix being applied to the context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_fbo_render_mipmap",
    "pageType": "webgl-extension",
    "summary": "The OES_fbo_render_mipmap extension is part of the WebGL API and makes it possible to attach any level of a texture to a framebuffer object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/direction",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.direction\nproperty of the Canvas 2D API specifies the current text direction used to draw text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/closePath",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.closePath()\nmethod of the Canvas 2D API attempts to add a straight line from the current point to\nthe start of the current sub-path. If the shape has already been closed or has only one\npoint, this function does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormDataEvent",
    "pageType": "web-api-interface",
    "summary": "The FormDataEvent interface represents a formdata event — such an event is fired on an HTMLFormElement object after the entry list representing the form's data is constructed. This happens when the form is submitted, but can also be triggered by the invocation of a FormData() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/arcTo",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.arcTo() method of the Canvas 2D API adds a circular arc to the current sub-path, using the given control points and radius.\nThe arc is automatically connected to the path's latest point with a straight line if necessary, for example if the starting point and control points are in a line."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormDataEvent/formData",
    "pageType": "web-api-instance-property",
    "summary": "The formData read-only property of the FormDataEvent\ninterface contains the FormData object representing the data contained in\nthe form when the event was fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.globalCompositeOperation\nproperty of the Canvas 2D API sets the type of compositing operation to apply when\ndrawing new shapes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormDataEvent/FormDataEvent",
    "pageType": "web-api-constructor",
    "summary": "The FormDataEvent() constructor creates a new FormDataEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.strokeStyle property of the\nCanvas 2D API specifies the color, gradient, or pattern to use for the strokes\n(outlines) around shapes. The default is black."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleRule",
    "pageType": "web-api-interface",
    "summary": "The CSSStyleRule interface represents a single CSS style rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/isContextLost",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.isContextLost() method of the Canvas 2D API returns true if the rendering context is lost (and has not yet been reset).\nThis might occur due to driver crashes, running out of memory, and so on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleRule/selectorText",
    "pageType": "web-api-instance-property",
    "summary": "The selectorText property of the CSSStyleRule interface gets and sets the selectors associated with the CSSStyleRule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/globalAlpha",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.globalAlpha\nproperty of the Canvas 2D API specifies the alpha (transparency) value that is applied\nto shapes and images before they are drawn onto the canvas."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleRule/style",
    "pageType": "web-api-instance-property",
    "summary": "The read-only style property is a CSSStyleProperties object that represents the inline styles of a style rule (CSSStyleRule)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/fontKerning",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.fontKerning property of the Canvas API specifies how font kerning information is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleRule/styleMap",
    "pageType": "web-api-instance-property",
    "summary": "The styleMap read-only property of the\nCSSStyleRule interface returns a StylePropertyMap object\nwhich provides access to the rule's property-value pairs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin",
    "pageType": "web-api-instance-property",
    "summary": "The\nCanvasRenderingContext2D.lineJoin\nproperty of the Canvas 2D API determines the shape used to join two line segments where\nthey meet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/font",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.font property of the Canvas 2D API specifies the current text style to use when drawing text.\nThis string uses the same syntax as the CSS font specifier."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableEvent",
    "pageType": "web-api-interface",
    "summary": "The ExtendableEvent interface extends the lifetime of the install and activate events dispatched on the global scope as part of the service worker lifecycle. This ensures that any functional events (like FetchEvent) are not dispatched until it upgrades database schemas and deletes the outdated cache entries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/clip",
    "pageType": "web-api-instance-method",
    "summary": "The\nCanvasRenderingContext2D.clip()\nmethod of the Canvas 2D API turns the current or given path into the current clipping\nregion. The previous clipping region, if any, is intersected with the current or given\npath to create the new clipping region."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableEvent/waitUntil",
    "pageType": "web-api-instance-method",
    "summary": "The ExtendableEvent.waitUntil()\nmethod tells the event dispatcher that work is ongoing. It can also be used to detect\nwhether that work was successful. In service workers, waitUntil() tells\nthe browser that work is ongoing until the promise settles, and it shouldn't terminate\nthe service worker if it wants that work to complete."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingQuality",
    "pageType": "web-api-instance-property",
    "summary": "The imageSmoothingQuality property of the\nCanvasRenderingContext2D interface, part of the Canvas API, lets you set the quality of\nimage smoothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/fontStretch",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.fontStretch property of the Canvas API specifies how the font may be expanded or condensed when drawing text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ExtendableEvent/ExtendableEvent",
    "pageType": "web-api-constructor",
    "summary": "The ExtendableEvent() constructor creates a new ExtendableEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/lineTo",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D method\nlineTo(), part of the Canvas 2D API, adds a straight line\nto the current sub-path by connecting the sub-path's last point to the specified\n(x, y) coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportBidirectionalStream",
    "pageType": "web-api-interface",
    "summary": "The WebTransportBidirectionalStream interface of the WebTransport API represents a bidirectional stream created by a server or a client that can be used for reliable transport. Provides access to a WebTransportReceiveStream for reading incoming data, and a WebTransportSendStream for writing outgoing data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasRenderingContext2D.drawImage() method of the\nCanvas 2D API provides different ways to draw an image onto the canvas."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportBidirectionalStream/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable read-only property of the WebTransportBidirectionalStream interface returns a WebTransportReceiveStream instance that can be used to reliably read incoming data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasRenderingContext2D/wordSpacing",
    "pageType": "web-api-instance-property",
    "summary": "The CanvasRenderingContext2D.wordSpacing property of the Canvas API specifies the spacing between words when drawing text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocketStream",
    "pageType": "web-api-interface",
    "summary": "The WebSocketStream interface of the WebSockets API is a promise-based API for connecting to a WebSocket server. It uses streams to send and receive data on the connection, and can therefore take advantage of stream backpressure automatically, regulating the speed of reading or writing to avoid bottlenecks in the application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportBidirectionalStream/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable read-only property of the WebTransportBidirectionalStream interface returns a WebTransportSendStream instance that can be used to write outgoing data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocketStream/opened",
    "pageType": "web-api-instance-property",
    "summary": "The opened read-only property of the\nWebSocketStream interface returns a Promise that fulfills with an object once the socket connection is successfully opened. Among other features, this object contains a ReadableStream and a WritableStream instance for receiving and sending data on the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBufferList",
    "pageType": "web-api-interface",
    "summary": "The SourceBufferList interface represents a simple container list for multiple SourceBuffer objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SourceBufferList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the\nSourceBufferList interface returns the number of\nSourceBuffer objects in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocketStream/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the\nWebSocketStream interface returns the URL of the WebSocket server that the WebSocketStream instance was created with."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CredentialsContainer",
    "pageType": "web-api-interface",
    "summary": "The CredentialsContainer interface of the Credential Management API exposes methods to request credentials and notify the user agent when events such as successful sign in or sign out happen. This interface is accessible from Navigator.credentials."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocketStream/WebSocketStream",
    "pageType": "web-api-constructor",
    "summary": "The WebSocketStream() constructor creates a new\nWebSocketStream object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocketStream/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the\nWebSocketStream interface closes the WebSocket connection. The method optionally accepts an object containing a custom code and/or reason indicating why the connection was closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CredentialsContainer/create",
    "pageType": "web-api-instance-method",
    "summary": "The create() method of the CredentialsContainer interface creates a new credential, which can then be stored and later retrieved using the navigator.credentials.get() method. The retrieved credential can then be used by a website to authenticate a user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebSocketStream/closed",
    "pageType": "web-api-instance-property",
    "summary": "The closed read-only property of the\nWebSocketStream interface returns a Promise that fulfills with an object once the socket connection is closed. The object contains the closing code and reason."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CredentialsContainer/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the CredentialsContainer interface returns a Promise that fulfills with a single credential, which can then be used to authenticate a user to a website."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFMessage",
    "pageType": "web-api-interface",
    "summary": "The NDEFMessage interface of the Web NFC API represents the content of an NDEF message that has been read from or could be written to an NFC tag. An instance is acquired by calling the NDEFMessage() constructor or from the NDEFReadingEvent.message property, which is passed to the reading event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFMessage/NDEFMessage",
    "pageType": "web-api-constructor",
    "summary": "The NDEFMessage() constructor creates a new NDEFMessage object, initialized with the given NDEF records."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CredentialsContainer/store",
    "pageType": "web-api-instance-method",
    "summary": "The store() method of the\nCredentialsContainer stores a set of credentials for the user inside a\nCredential instance, returning this in a Promise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFMessage/records",
    "pageType": "web-api-instance-property",
    "summary": "The records property of\nNDEFMessage interface represents a list of NDEFRecords\npresent in the NDEF message."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CredentialsContainer/preventSilentAccess",
    "pageType": "web-api-instance-method",
    "summary": "The preventSilentAccess() method of the CredentialsContainer interface sets a flag that specifies whether automatic log in is allowed for future visits to the current origin, then returns a Promise that resolves to undefined.\nFor example, you might call this, after a user signs out of a website to ensure that they aren't automatically signed in on the next site visit.\nMediation varies by origin, and is an added check point of browser stored credentials, informing a user of an account login status. This method is typically called after a user signs out of a website, ensuring this user's login information is not automatically passed on the next site visit."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionPhrase",
    "pageType": "web-api-interface",
    "summary": "The SpeechRecognitionPhrase interface of the Web Speech API represents a phrase that can be passed to the speech recognition engine for contextual biasing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransitionEvent",
    "pageType": "web-api-interface",
    "summary": "The TransitionEvent interface represents events providing information related to transitions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionPhrase/boost",
    "pageType": "web-api-instance-property",
    "summary": "The boost read-only property of the\nSpeechRecognitionPhrase interface returns a floating point number representing the weight you want to give the corresponding phrase."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionPhrase/SpeechRecognitionPhrase",
    "pageType": "web-api-constructor",
    "summary": "The SpeechRecognitionPhrase() constructor creates a new SpeechRecognitionPhrase object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransitionEvent/pseudoElement",
    "pageType": "web-api-instance-property",
    "summary": "The TransitionEvent.pseudoElement read-only property is a\nstring, starting with '::', containing the name of the pseudo-element the animation runs on.\nIf the transition doesn't run on a pseudo-element but on the element, an empty string:\n\"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionPhrase/phrase",
    "pageType": "web-api-instance-property",
    "summary": "The phrase read-only property of the SpeechRecognitionPhrase interface returns a string containing the word or phrase you want boosted in the recognition engine's contextual bias."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransitionEvent/elapsedTime",
    "pageType": "web-api-instance-property",
    "summary": "The TransitionEvent.elapsedTime read-only property is a\nfloat giving the amount of time the animation has been running, in seconds,\nwhen this event fired. This value is not affected by the transition-delay\nproperty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData",
    "pageType": "web-api-interface",
    "summary": "The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren't any objects of type CharacterData: it is implemented by other interfaces like Text, Comment, CDATASection, or ProcessingInstruction, which aren't abstract."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransitionEvent/TransitionEvent",
    "pageType": "web-api-constructor",
    "summary": "The TransitionEvent() constructor returns a new TransitionEvent object, representing an event in relation with a transition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/remove",
    "pageType": "web-api-instance-method",
    "summary": "The remove() method of the CharacterData removes it from its parent node.\nIf it has no parent node, calling remove() does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TransitionEvent/propertyName",
    "pageType": "web-api-instance-property",
    "summary": "The propertyName read-only property of TransitionEvent objects is a string containing the name of the CSS property associated with the transition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/data",
    "pageType": "web-api-instance-property",
    "summary": "The data property of the CharacterData interface represent the value of the current object's data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLTexture",
    "pageType": "web-api-interface",
    "summary": "The WebGLTexture interface is part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/deleteData",
    "pageType": "web-api-instance-method",
    "summary": "The deleteData() method of the CharacterData interface\nremoves all or part of the data from this CharacterData node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/insertData",
    "pageType": "web-api-instance-method",
    "summary": "The insertData() method of the CharacterData interface\ninserts the provided data into this CharacterData node's current data,\nat the provided offset from the start of the existing data.\nThe provided data is spliced into the existing data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushManager/supportedContentEncodings_static",
    "pageType": "web-api-static-property",
    "summary": "The supportedContentEncodings read-only static property of the PushManager interface returns an array of supported content codings that can be used to encrypt the payload of a push message."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/substringData",
    "pageType": "web-api-instance-method",
    "summary": "The substringData() method of the CharacterData interface\nreturns a portion of the existing data,\nstarting at the specified index\nand extending for a given number of characters afterwards."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushManager",
    "pageType": "web-api-interface",
    "summary": "The PushManager interface of the Push API provides a way to receive notifications from third-party servers as well as request URLs for push notifications."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/replaceData",
    "pageType": "web-api-instance-method",
    "summary": "The replaceData() method of the CharacterData interface removes a certain number of characters of the existing text in a given CharacterData node and replaces those characters with the text provided."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushManager/registrations",
    "pageType": "web-api-instance-method",
    "summary": "The registrations method is used to ask the system about\nexisting push endpoint registrations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only CharacterData.length property\nreturns the number of characters in the contained data, as a positive integer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushManager/unregister",
    "pageType": "web-api-instance-method",
    "summary": "The unregister() method was used to ask the system to\nunregister and delete the specified endpoint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/nextElementSibling",
    "pageType": "web-api-instance-property",
    "summary": "The read-only nextElementSibling property of the CharacterData interface\nreturns the first Element node following the specified one in its parent's\nchildren list, or null if the specified element is the last one in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushManager/register",
    "pageType": "web-api-instance-method",
    "summary": "The register method is used to ask the system to request\na new endpoint for notifications."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/replaceWith",
    "pageType": "web-api-instance-method",
    "summary": "The replaceWith() method of the CharacterData interface\nreplaces this node in the children list of its parent\nwith a set of Node objects or string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushManager/subscribe",
    "pageType": "web-api-instance-method",
    "summary": "The subscribe() method of the PushManager\ninterface subscribes to a push service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/previousElementSibling",
    "pageType": "web-api-instance-property",
    "summary": "The read-only previousElementSibling property of the CharacterData interface\nreturns the first Element before the current node in its parent's children list,\nor null if there is none."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushManager/hasPermission",
    "pageType": "web-api-instance-method",
    "summary": "The PushManager.hasPermission() method of the PushManager interface returns a Promise that resolves to the PushPermissionStatus of the requesting webapp, which will be one of granted, denied, or default."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/appendData",
    "pageType": "web-api-instance-method",
    "summary": "The appendData() method of the CharacterData interface\nadds the provided data to the end of the node's current data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushManager/permissionState",
    "pageType": "web-api-instance-method",
    "summary": "The permissionState() method of the\nPushManager interface returns a Promise that resolves to a\nstring indicating the permission state of the push manager. Possible\nvalues are 'prompt', 'denied', or 'granted'."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/after",
    "pageType": "web-api-instance-method",
    "summary": "The after() method of the CharacterData interface\ninserts a set of Node objects or strings in the children list of the\nobject's parent, just after the object itself."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushManager/getSubscription",
    "pageType": "web-api-instance-method",
    "summary": "The PushManager.getSubscription() method of the PushManager interface retrieves an existing push subscription."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterData/before",
    "pageType": "web-api-instance-method",
    "summary": "The before() method of the CharacterData interface\ninserts a set of Node objects and strings\nin the children list of the CharacterData's parent, just before the CharacterData node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Vibration_API",
    "pageType": "web-api-overview",
    "summary": "Most modern mobile devices include vibration hardware, which lets software code provide physical feedback to the user by causing the device to shake. The Vibration API offers Web apps the ability to access this hardware, if it exists, and does nothing if the device doesn't support it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Media_Capture_and_Streams_API/Constraints",
    "pageType": "guide",
    "summary": "This article discusses the twin concepts of constraints and capabilities, as well as media settings, and includes an example we call the Constraint Exerciser. The Constraint Exerciser lets you experiment with the results of different constraint sets being applied to the audio and video tracks coming from the computer's A/V input devices (such as its webcam and microphone)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Speech_API",
    "pageType": "web-api-overview",
    "summary": "The Web Speech API enables you to incorporate voice data into web apps.\nThe Web Speech API has two parts: SpeechSynthesis (Text-to-Speech), and SpeechRecognition (Asynchronous Speech Recognition.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Media_Capture_and_Streams_API",
    "pageType": "web-api-overview",
    "summary": "The Media Capture and Streams API, often called the Media Streams API or MediaStream API, is an API related to WebRTC which provides support for streaming audio and video data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API",
    "pageType": "guide",
    "summary": "The Web Speech API provides two distinct areas of functionality — speech recognition and speech synthesis (also known as text to speech, or TTS) — which open up interesting possibilities for accessibility and control. This article provides an introduction to both the areas, along with demos."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Media_Capture_and_Streams_API/Taking_still_photos",
    "pageType": "guide",
    "summary": "This article shows how to use navigator.mediaDevices.getUserMedia() to access the camera on a computer or mobile phone with getUserMedia() support and take a photo with it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult",
    "pageType": "web-api-interface",
    "summary": "The XPathResult interface represents the results generated by evaluating an XPath expression within the context of a given node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPolylineElement",
    "pageType": "web-api-interface",
    "summary": "The SVGPolylineElement interface provides access to the properties of <polyline> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult/snapshotItem",
    "pageType": "web-api-instance-method",
    "summary": "The snapshotItem() method of the\nXPathResult interface returns an item of the snapshot collection or\nnull in case the index is not within the range of nodes. Unlike the\niterator result, the snapshot does not become invalid, but may not correspond to the\ncurrent document if it is mutated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult/invalidIteratorState",
    "pageType": "web-api-instance-property",
    "summary": "The read-only invalidIteratorState property of the\nXPathResult interface signifies that the iterator has become invalid. It\nis true if XPathResult.resultType is\nUNORDERED_NODE_ITERATOR_TYPE or ORDERED_NODE_ITERATOR_TYPE and\nthe document has been modified since this result was returned."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPolylineElement/points",
    "pageType": "web-api-instance-property",
    "summary": "The points read-only property of the SVGPolylineElement interface reflects the base (i.e., static) value of the element's points attribute. Modifications via the SVGPointList object are reflected in the points attribute, and vice versa."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult/iterateNext",
    "pageType": "web-api-instance-method",
    "summary": "The iterateNext() method of the\nXPathResult interface iterates over a node set result and returns the\nnext node from it or null if there are no more nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPolylineElement/animatedPoints",
    "pageType": "web-api-instance-property",
    "summary": "The animatedPoints read-only property of the SVGPolylineElement interface reflects the animated value of the element's points attribute. If the points attribute is not being animated, it contains the same value as the points property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult/stringValue",
    "pageType": "web-api-instance-property",
    "summary": "The read-only stringValue property of the\nXPathResult interface returns the string value of a result with\nXPathResult.resultType being STRING_TYPE."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult/resultType",
    "pageType": "web-api-instance-property",
    "summary": "The read-only resultType property of the\nXPathResult interface represents the type of the result, as defined by\nthe type constants."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry",
    "pageType": "web-api-interface",
    "summary": "The HighlightRegistry interface of the CSS Custom Highlight API is used to register Highlight objects to be styled using the API.\nIt is accessed via CSS.highlights."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult/numberValue",
    "pageType": "web-api-instance-property",
    "summary": "The read-only numberValue property of the\nXPathResult interface returns the numeric value of a result with\nXPathResult.resultType being NUMBER_TYPE."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the HighlightRegistry interface returns a new Iterator object that contains the [name, highlight] pairs for each element in the HighlightRegistry object, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult/singleNodeValue",
    "pageType": "web-api-instance-property",
    "summary": "The read-only singleNodeValue property of the\nXPathResult interface returns a Node value or\nnull in case no node was matched of a result with\nXPathResult.resultType being ANY_UNORDERED_NODE_TYPE or\nFIRST_ORDERED_NODE_TYPE."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/set",
    "pageType": "web-api-instance-method",
    "summary": "The set() method of the HighlightRegistry interface adds or updates a Highlight object in the registry with the specified name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult/snapshotLength",
    "pageType": "web-api-instance-property",
    "summary": "The read-only snapshotLength property of the\nXPathResult interface represents the number of nodes in the result\nsnapshot."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathResult/booleanValue",
    "pageType": "web-api-instance-property",
    "summary": "The read-only booleanValue property of the\nXPathResult interface returns the boolean value of a result with\nXPathResult.resultType being BOOLEAN_TYPE."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/size",
    "pageType": "web-api-instance-property",
    "summary": "The size property returns the number of Highlight objects in the HighlightRegistry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BeforeInstallPromptEvent",
    "pageType": "web-api-interface",
    "summary": "The BeforeInstallPromptEvent is the interface of the beforeinstallprompt event fired at the Window object before a user is prompted to \"install\" a website to a home screen on mobile."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the HighlightRegistry interface returns the named Highlight object from the registry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BeforeInstallPromptEvent/BeforeInstallPromptEvent",
    "pageType": "web-api-constructor",
    "summary": "The BeforeInstallPromptEvent() constructor creates a new BeforeInstallPromptEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the HighlightRegistry interface returns a boolean indicating whether or not a Highlight object with the specified name exists in the registry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BeforeInstallPromptEvent/userChoice",
    "pageType": "web-api-instance-property",
    "summary": "The userChoice property of the BeforeInstallPromptEvent interface represents the installation choice that the user made, when they were prompted to install the app."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the HighlightRegistry interface returns a new Iterator object that contains the keys for each Highlight object in the HighlightRegistry object in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BeforeInstallPromptEvent/prompt",
    "pageType": "web-api-instance-method",
    "summary": "The prompt() method of the BeforeInstallPromptEvent interface allows a developer to show the\ninstall prompt at a time of their own choosing. Typically this will be called in the event handler for the app's custom install UI."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the HighlightRegistry interface removes a the named Highlight object from the HighlightRegistry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BeforeInstallPromptEvent/platforms",
    "pageType": "web-api-instance-property",
    "summary": "The platforms property of the BeforeInstallPromptEvent interface lists the platforms on which the event was dispatched. This is provided for user agents that want to present a choice of versions to the user such as, for example, \"web\" or \"play\" which would allow the user to choose between a web version or an Android version."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the HighlightRegistry interface removes all the Highlight objects registered in the HighlightRegistry."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Keyboard_API",
    "pageType": "web-api-overview",
    "summary": "The Keyboard API provides methods for working with a physical keyboard that is attached to a device running a browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/highlightsFromPoint",
    "pageType": "web-api-instance-method",
    "summary": "The highlightsFromPoint() method of the HighlightRegistry interface returns an array of objects representing the custom highlights applied at a specific point within the viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTextureView",
    "pageType": "web-api-interface",
    "summary": "The GPUTextureView interface of the WebGPU API represents a view into a subset of the texture resources defined by a particular GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTextureView/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUTextureView interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the HighlightRegistry interface executes a provided function once for each Highlight object in the registry, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HighlightRegistry/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the HighlightRegistry interface returns a new Iterator object that contains the values for each Highlight object in the HighlightRegistry object in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement",
    "pageType": "web-api-interface",
    "summary": "The SVGMarkerElement interface provides access to the properties of <marker> elements, as well as methods to manipulate them. The <marker> element defines the graphics used for drawing marks on a shape."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/setOrientToAuto",
    "pageType": "web-api-instance-method",
    "summary": "The setOrientToAuto() method of the SVGMarkerElement interface sets the value of the orient attribute to auto."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis",
    "pageType": "web-api-interface",
    "summary": "The SpeechSynthesis interface of the Web Speech API is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/markerUnits",
    "pageType": "web-api-instance-property",
    "summary": "The markerUnits read-only property of the SVGMarkerElement interface returns an SVGAnimatedEnumeration object. This object returns an integer which represents the keyword values that the markerUnits attribute accepts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis/pending",
    "pageType": "web-api-instance-property",
    "summary": "The pending read-only property of the\nSpeechSynthesis interface is a boolean value that returns\ntrue if the utterance queue contains as-yet-unspoken utterances."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/preserveAspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The preserveAspectRatio read-only property of the SVGMarkerElement interface returns an SVGAnimatedPreserveAspectRatio object containing the value of the preserveAspectRatio attribute of the <marker>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/markerHeight",
    "pageType": "web-api-instance-property",
    "summary": "The markerHeight read-only property of the SVGMarkerElement interface returns an SVGAnimatedLength object containing the height of the <marker> viewport as defined by the markerHeight attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis/cancel",
    "pageType": "web-api-instance-method",
    "summary": "The cancel() method of the SpeechSynthesis\ninterface removes all utterances from the utterance queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/refX",
    "pageType": "web-api-instance-property",
    "summary": "The refX read-only property of the SVGMarkerElement interface returns an SVGAnimatedLength object containing the value of the refX attribute of the <marker>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis/paused",
    "pageType": "web-api-instance-property",
    "summary": "The paused read-only property of the\nSpeechSynthesis interface is a boolean value that returns\ntrue if the SpeechSynthesis object is in a paused state, or false if not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/refY",
    "pageType": "web-api-instance-property",
    "summary": "The refY read-only property of the SVGMarkerElement interface returns an SVGAnimatedLength object containing the value of the refY attribute of the <marker>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis/voiceschanged_event",
    "pageType": "web-api-event",
    "summary": "The voiceschanged event of the Web Speech API is fired when the list of SpeechSynthesisVoice objects that would be returned by the SpeechSynthesis.getVoices() method has changed (when the voiceschanged event fires.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/orientType",
    "pageType": "web-api-instance-property",
    "summary": "The orientType read-only property of the SVGMarkerElement interface returns an SVGAnimatedEnumeration object indicating whether the orient attribute is auto, an angle value, or something else."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis/speaking",
    "pageType": "web-api-instance-property",
    "summary": "The speaking read-only property of the\nSpeechSynthesis interface is a boolean value that returns\ntrue if an utterance is currently in the process of being spoken — even\nif SpeechSynthesis is in a\npaused state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/setOrientToAngle",
    "pageType": "web-api-instance-method",
    "summary": "The setOrientToAngle() method of the SVGMarkerElement interface sets the value of the orient attribute to the value in the SVGAngle passed in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/viewBox",
    "pageType": "web-api-instance-property",
    "summary": "The viewBox read-only property of the SVGMarkerElement interface returns an SVGAnimatedRect object which contains the values set by the viewBox attribute on the <marker>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis/pause",
    "pageType": "web-api-instance-method",
    "summary": "The pause() method of the SpeechSynthesis\ninterface puts the SpeechSynthesis object into a paused state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/orientAngle",
    "pageType": "web-api-instance-property",
    "summary": "The orientAngle read-only property of the SVGMarkerElement interface returns an SVGAnimatedAngle object containing the angle of the orient attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis/getVoices",
    "pageType": "web-api-instance-method",
    "summary": "The getVoices() method of the\nSpeechSynthesis interface returns a list of\nSpeechSynthesisVoice objects representing all the available voices on the\ncurrent device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMarkerElement/markerWidth",
    "pageType": "web-api-instance-property",
    "summary": "The markerWidth read-only property of the SVGMarkerElement interface returns an SVGAnimatedLength object containing the width of the <marker> viewport as defined by the markerWidth attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis/speak",
    "pageType": "web-api-instance-method",
    "summary": "The speak() method of the SpeechSynthesis\ninterface adds an utterance to the utterance\nqueue; it will be spoken when any other utterances queued before it have been spoken."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport",
    "pageType": "web-api-interface",
    "summary": "The VisualViewport interface of the Visual Viewport API represents the visual viewport for a given window. For a page containing iframes, each iframe, as well as the containing page, will have a unique window object. Each window on a page will have a unique VisualViewport representing the properties associated with that window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/scale",
    "pageType": "web-api-instance-property",
    "summary": "The scale read-only property of the VisualViewport interface returns the pinch-zoom scaling factor applied to the visual viewport, or 0 if current document is not fully active, or 1 if there is no output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesis/resume",
    "pageType": "web-api-instance-method",
    "summary": "The resume() method of the SpeechSynthesis\ninterface puts the SpeechSynthesis object into a non-paused state:\nresumes it if it was already paused."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/offsetLeft",
    "pageType": "web-api-instance-property",
    "summary": "The offsetLeft read-only property of the VisualViewport interface returns the offset of the left edge of the visual viewport from the left edge of the layout viewport in CSS pixels, or 0 if current document is not fully active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EcdsaParams",
    "pageType": "web-api-interface",
    "summary": "The EcdsaParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.sign() or SubtleCrypto.verify() when using the ECDSA algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/offsetTop",
    "pageType": "web-api-instance-property",
    "summary": "The offsetTop read-only property of the VisualViewport interface returns the offset of the top edge of the visual viewport from the top edge of the layout viewport in CSS pixels, or 0 if current document is not fully active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/pageTop",
    "pageType": "web-api-instance-property",
    "summary": "The pageTop read-only property of the VisualViewport interface returns the y coordinate of the top edge of the visual viewport relative to the initial containing block origin, in CSS pixels, or 0 if current document is not fully active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData",
    "pageType": "web-api-interface",
    "summary": "The AudioData interface of the WebCodecs API represents an audio sample."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the VisualViewport interface returns the height of the visual viewport, in CSS pixels, or 0 if current document is not fully active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/numberOfFrames",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfFrames read-only property of the AudioData interface returns the number of frames in the AudioData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/scrollend_event",
    "pageType": "web-api-event",
    "summary": "The scrollend event of the VisualViewport interface is fired when a scrolling operation on the visual viewport ends. This allows you to update an element when a scrolling action is completed. For example, you could use the resize and scroll events to keep an element fixed to the visual viewport as it is pinch-zoomed and scrolled, and update it with new content when scrolling ends using scrollend."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp read-only property of the AudioData interface returns the timestamp of this AudioData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the VisualViewport interface returns the width of the visual viewport, in CSS pixels, or 0 if current document is not fully active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/sampleRate",
    "pageType": "web-api-instance-property",
    "summary": "The sampleRate read-only property of the AudioData interface returns the sample rate in Hz."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/scroll_event",
    "pageType": "web-api-event",
    "summary": "The scroll event of the VisualViewport interface is fired when the visual viewport is scrolled. This allows you to position elements relative to the visual viewport as it is scrolled, which would normally be anchored to the layout viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/resize_event",
    "pageType": "web-api-event",
    "summary": "The resize event of the VisualViewport interface is fired when the visual viewport is resized. This allows you to position elements relative to the visual viewport as it is zoomed, which would normally be anchored to the layout viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/format",
    "pageType": "web-api-instance-property",
    "summary": "The format read-only property of the AudioData interface returns the sample format of the AudioData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VisualViewport/pageLeft",
    "pageType": "web-api-instance-property",
    "summary": "The pageLeft read-only property of the VisualViewport interface returns the x coordinate of the left edge of the visual viewport relative to the initial containing block origin, in CSS pixels, or 0 if current document is not fully active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/clone",
    "pageType": "web-api-instance-method",
    "summary": "The clone() method of the AudioData interface creates a new AudioData object with reference to the same media resource as the original."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStopElement",
    "pageType": "web-api-interface",
    "summary": "The SVGStopElement interface corresponds to the <stop> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the AudioData interface clears all states and releases the reference to the media resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGStopElement/offset",
    "pageType": "web-api-instance-property",
    "summary": "The offset read-only property of the SVGStopElement interface reflects the offset attribute of the given <stop> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/duration",
    "pageType": "web-api-instance-property",
    "summary": "The duration read-only property of the AudioData interface returns the duration in microseconds of this AudioData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigation",
    "pageType": "web-api-interface",
    "summary": "The legacy PerformanceNavigation interface represents information about how the navigation to the current document was done."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/allocationSize",
    "pageType": "web-api-instance-method",
    "summary": "The allocationSize() method of the AudioData interface returns the size in bytes required to hold the current sample as filtered by options passed into the method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigation/type",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceNavigation.type\nread-only property returns an unsigned short containing a constant\ndescribing how the navigation to this page was done."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/AudioData",
    "pageType": "web-api-constructor",
    "summary": "The AudioData() constructor creates a new AudioData object which represents an individual audio sample."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigation/redirectCount",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceNavigation.redirectCount\nread-only property returns an unsigned short representing the number of\nREDIRECTs done before reaching the page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceNavigation/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PerformanceNavigation interface is a serializer; it returns a JSON representation of the PerformanceNavigation object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/copyTo",
    "pageType": "web-api-instance-method",
    "summary": "The copyTo() method of the AudioData interface copies a plane of an AudioData object to a destination buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioData/numberOfChannels",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfChannels read-only property of the AudioData interface returns the number of channels in the AudioData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats",
    "pageType": "web-api-interface",
    "summary": "The RTCRemoteInboundRtpStreamStats dictionary of the WebRTC API is used to report statistics from the remote endpoint about a particular incoming RTP stream.\nThese will correspond to an outgoing RTP stream at the local end of the RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind property of the RTCRemoteInboundRtpStreamStats dictionary is a string indicating whether the described RTP stream contains audio or video media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PeriodicSyncEvent",
    "pageType": "web-api-interface",
    "summary": "The PeriodicSyncEvent interface of the Web Periodic Background Synchronization API provides a way to run tasks in the service worker with network connectivity."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCRemoteInboundRtpStreamStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PeriodicSyncEvent/PeriodicSyncEvent",
    "pageType": "web-api-constructor",
    "summary": "The PeriodicSyncEvent() constructor\ncreates a new PeriodicSyncEvent object. This constructor is not typically\nused. The browser creates these objects itself and provides them to\nonperiodicsync callback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/codecId",
    "pageType": "web-api-instance-property",
    "summary": "The codecId property of the RTCRemoteInboundRtpStreamStats dictionary is a string that uniquely identifies the object that was inspected to produce the data in the RTCCodecStats for the RTP stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCRemoteInboundRtpStreamStats dictionary is a string with the value \"remote-inbound-rtp\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PeriodicSyncEvent/tag",
    "pageType": "web-api-instance-property",
    "summary": "The tag read-only property of the\nPeriodicSyncEvent interface returns the developer-defined identifier for\nthe PeriodicSyncEvent. This is specified when calling the\nPeriodicSyncManager.register() method of the\nPeriodicSyncManager interface. Multiple tags can be used by the web app\nto run different periodic tasks at different frequencies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/roundTripTimeMeasurements",
    "pageType": "web-api-instance-property",
    "summary": "The roundTripTimeMeasurements property of the RTCRemoteInboundRtpStreamStats dictionary contains a positive integer value that represents the total number valid round trip time measurements received for this synchronizing source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad_API",
    "pageType": "web-api-overview",
    "summary": "The Gamepad API is a way for developers to access and respond to signals from gamepads and other game controllers in a simple, consistent way. It contains three interfaces, two events and one specialist function, to respond to gamepads being connected and disconnected, and to access other information about the gamepads themselves, and what buttons and other controls are currently being pressed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/fractionLost",
    "pageType": "web-api-instance-property",
    "summary": "The fractionLost property of the RTCRemoteInboundRtpStreamStats dictionary provides a value that can be used to determine the fraction of packets lost for this synchronization source (SSRC) in the last reporting interval."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/packetsLost",
    "pageType": "web-api-instance-property",
    "summary": "The packetsLost property of the RTCRemoteInboundRtpStreamStats dictionary returns the total number of RTP packets lost from the synchronization source (SSRC), as reported by the remote endpoint, since the beginning of reception."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API",
    "pageType": "guide",
    "summary": "HTML provides the necessary components for rich, interactive game development. Technologies like <canvas>, WebGL, <audio>, and <video>, along with JavaScript implementations, support tasks that provide similar, if not the same, features as native code. The Gamepad API allows developers and designers to access and use gamepads and other game controllers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/jitter",
    "pageType": "web-api-instance-property",
    "summary": "The jitter property of the RTCRemoteInboundRtpStreamStats dictionary returns the packet jitter for the synchronization source (SSRC) as measured by the remote endpoint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/ssrc",
    "pageType": "web-api-instance-property",
    "summary": "The ssrc property of the RTCRemoteInboundRtpStreamStats dictionary contains a positive integer value that identifies the synchronization source (SSRC) of this stream of RTP packets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothDevice/name",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothDevice.name read-only property returns a\nstring that provides a human-readable name for the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothDevice",
    "pageType": "web-api-interface",
    "summary": "The BluetoothDevice interface of the Web Bluetooth API represents a Bluetooth device inside a particular script execution\nenvironment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/transportId",
    "pageType": "web-api-instance-property",
    "summary": "The transportId property of the RTCRemoteInboundRtpStreamStats dictionary is a string that uniquely identifies the associated RTCTransportStats statistics object for this RTP stream's underlying transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/packetsReceived",
    "pageType": "web-api-instance-property",
    "summary": "The packetsReceived property of the RTCRemoteInboundRtpStreamStats dictionary returns the total number of RTP packets received from the synchronization source (SSRC) of this stream by the remote endpoint, including retransmissions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothDevice/id",
    "pageType": "web-api-instance-property",
    "summary": "The BluetoothDevice.id read-only property returns a\nstring that uniquely identifies a device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/localId",
    "pageType": "web-api-instance-property",
    "summary": "The RTCRemoteInboundRtpStreamStats dictionary's localId property is a string that can be used to identify the RTCOutboundRtpStreamStats object whose remoteId matches this value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothDevice/gatt",
    "pageType": "web-api-instance-property",
    "summary": "The\nBluetoothDevice.gatt read-only property returns\na reference to the device's BluetoothRemoteGATTServer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/totalRoundTripTime",
    "pageType": "web-api-instance-property",
    "summary": "The totalRoundTripTime property of the RTCRemoteInboundRtpStreamStats dictionary indicates the cumulative number sum of all round trip time (RTT) measurements since the beginning of the session, in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCRemoteInboundRtpStreamStats dictionary is a string that uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbstractRange",
    "pageType": "web-api-interface",
    "summary": "The AbstractRange abstract interface is the base class upon which all DOM range types are defined. A range is an object that indicates the start and end points of a section of content within the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRemoteInboundRtpStreamStats/roundTripTime",
    "pageType": "web-api-instance-property",
    "summary": "The roundTripTime property of the RTCRemoteInboundRtpStreamStats dictionary indicates the estimated round trip time (RTT) for this synchronization source (SSRC), in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbstractRange/startOffset",
    "pageType": "web-api-instance-property",
    "summary": "The read-only startOffset property of the AbstractRange interface returns the offset into the start node of the range's start position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LargestContentfulPaint",
    "pageType": "web-api-interface",
    "summary": "The LargestContentfulPaint interface provides timing information about the largest image or text paint before user input on a web page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbstractRange/collapsed",
    "pageType": "web-api-instance-property",
    "summary": "The read-only collapsed property of the AbstractRange interface returns true if the range's start position and end position are the same."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LargestContentfulPaint/renderTime",
    "pageType": "web-api-instance-property",
    "summary": "The renderTime read-only property of the LargestContentfulPaint interface represents the time that the element was rendered to the screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbstractRange/endContainer",
    "pageType": "web-api-instance-property",
    "summary": "The read-only endContainer property of the AbstractRange interface returns the Node in which the end of the range is located."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LargestContentfulPaint/element",
    "pageType": "web-api-instance-property",
    "summary": "The element read-only property of the LargestContentfulPaint interface returns an object representing the Element that is the largest contentful paint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbstractRange/startContainer",
    "pageType": "web-api-instance-property",
    "summary": "The read-only startContainer property of the AbstractRange interface returns the start Node for the range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LargestContentfulPaint/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the LargestContentfulPaint interface returns the request URL of the element, if the element is an image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LargestContentfulPaint/size",
    "pageType": "web-api-instance-property",
    "summary": "The size read-only property of the LargestContentfulPaint interface returns the intrinsic size of the element that is the largest contentful paint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbstractRange/endOffset",
    "pageType": "web-api-instance-property",
    "summary": "The endOffset property of the AbstractRange interface returns the offset into the end node of the range's end position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LargestContentfulPaint/loadTime",
    "pageType": "web-api-instance-property",
    "summary": "The loadTime read-only property of the LargestContentfulPaint interface returns the time that the element was loaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LargestContentfulPaint/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the LargestContentfulPaint interface is a serializer; it returns a JSON representation of the LargestContentfulPaint object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin property of a WorkerLocation object returns the worker's origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation",
    "pageType": "web-api-interface",
    "summary": "The WorkerLocation interface defines the absolute location of the script executed by the Worker. Such an object is initialized for each worker and is available via the WorkerGlobalScope.location property obtained by calling self.location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LargestContentfulPaint/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the LargestContentfulPaint interface returns the ID of the element that is the largest contentful paint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/pathname",
    "pageType": "web-api-instance-property",
    "summary": "The pathname property of a WorkerLocation object returns the pathname part of the worker's location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fullscreen_API",
    "pageType": "web-api-overview",
    "summary": "The Fullscreen API adds methods to present a specific Element (and its descendants) in fullscreen mode, and to exit fullscreen mode once it is no longer needed. This makes it possible to present desired content—such as an online game—using the user's entire screen, removing all browser user interface elements and other applications from the screen until fullscreen mode is shut off."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fullscreen_API/Guide",
    "pageType": "guide",
    "summary": "This article demonstrates how to use the Fullscreen API to place a given element into fullscreen mode, as well as how to detect when the browser enters or exits fullscreen mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/host",
    "pageType": "web-api-instance-property",
    "summary": "The host property of a WorkerLocation object returns the host part of the worker's location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CryptoKeyPair",
    "pageType": "web-api-interface",
    "summary": "The CryptoKeyPair dictionary of the Web Crypto API represents a key pair for an asymmetric cryptography algorithm, also known as a public-key algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol property of a WorkerLocation object returns the protocol part of the worker's location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/referrer",
    "pageType": "web-api-instance-property",
    "summary": "The referrer read-only property of the CSPViolationReportBody interface is a string that represents the URL of the referring page of the resource who's Content Security Policy (CSP) was violated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/search",
    "pageType": "web-api-instance-property",
    "summary": "The search property of a WorkerLocation object returns the search part of the worker's location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody",
    "pageType": "web-api-interface",
    "summary": "The CSPViolationReportBody interface is an extension of the Reporting API that represents the body of a Content Security Policy (CSP) violation report."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/hostname",
    "pageType": "web-api-instance-property",
    "summary": "The hostname property of a WorkerLocation object returns the hostname part of the worker's location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/effectiveDirective",
    "pageType": "web-api-instance-property",
    "summary": "The effectiveDirective read-only property of the CSPViolationReportBody interface is a string that represents the effective Content Security Policy (CSP) directive that was violated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/port",
    "pageType": "web-api-instance-property",
    "summary": "The port property of a WorkerLocation object returns the port part of the worker's location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/sample",
    "pageType": "web-api-instance-property",
    "summary": "The sample read-only property of the CSPViolationReportBody interface is a string that contains a part of the resource that violated the Content Security Policy (CSP)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/documentURL",
    "pageType": "web-api-instance-property",
    "summary": "The documentURL read-only property of the CSPViolationReportBody interface is a string that represents the URL of the document or worker that violated the Content Security Policy (CSP)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/hash",
    "pageType": "web-api-instance-property",
    "summary": "The hash property of a WorkerLocation object returns the hash part of the worker's location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/disposition",
    "pageType": "web-api-instance-property",
    "summary": "The disposition read-only property of the CSPViolationReportBody interface indicates whether the user agent is configured to enforce Content Security Policy (CSP) violations or only report them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/href",
    "pageType": "web-api-instance-property",
    "summary": "The href property of a WorkerLocation object returns a string containing the serialized URL for the worker's location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/lineNumber",
    "pageType": "web-api-instance-property",
    "summary": "The lineNumber read-only property of the CSPViolationReportBody interface indicates the line number in the source file that triggered the Content Security Policy (CSP) violation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkerLocation/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() stringifier method of a WorkerLocation object returns a string containing the serialized URL for the worker's location. It is a synonym for WorkerLocation.href."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/columnNumber",
    "pageType": "web-api-instance-property",
    "summary": "The columnNumber read-only property of the CSPViolationReportBody interface indicates the column number in the source file that triggered the Content Security Policy (CSP) violation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PositionSensorVRDevice",
    "pageType": "web-api-interface",
    "summary": "The PositionSensorVRDevice interface of the WebVR API represents VR hardware's position sensor. You can access information such as the current position and orientation of the sensor in relation to the head mounted display through the PositionSensorVRDevice.getState() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/blockedURL",
    "pageType": "web-api-instance-property",
    "summary": "The blockedURL read-only property of the CSPViolationReportBody interface is a string value that represents the resource that was blocked because it violates a Content Security Policy (CSP)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/sourceFile",
    "pageType": "web-api-instance-property",
    "summary": "The sourceFile read-only property of the CSPViolationReportBody interface indicates the URL of the source file that violated the Content Security Policy (CSP)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PositionSensorVRDevice/getState",
    "pageType": "web-api-instance-method",
    "summary": "The getState() method of the PositionSensorVRDevice interface returns the current state of the position sensor for the current frame (e.g., within the current window.requestAnimationFrame callback) or for the previous frame, contained with a VRPose object. This is the method you'd normally want to use, vs. PositionSensorVRDevice.getImmediateState."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the CSPViolationReportBody interface is a serializer, which returns a JSON representation of the CSPViolationReportBody object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PositionSensorVRDevice/getImmediateState",
    "pageType": "web-api-instance-method",
    "summary": "The getImmediateState() method of the VRDisplay interface returns the current instantaneous position sensor state. This is intended to only be used rarely, for certain special uses, for example sampling the immediate position of a hand orientation sensor — or at least it will be, in the future."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/statusCode",
    "pageType": "web-api-instance-property",
    "summary": "The statusCode read-only property of the CSPViolationReportBody interface is a number representing the HTTP status code of the response to the request that triggered a Content Security Policy (CSP) violation (when loading a window or worker)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSPViolationReportBody/originalPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The originalPolicy read-only property of the CSPViolationReportBody interface is a string that represents the Content Security Policy (CSP) whose enforcement uncovered the violation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PositionSensorVRDevice/resetSensor",
    "pageType": "web-api-instance-method",
    "summary": "The resetSensor() method of the VRDisplay interface can be used to reset the sensor if desired, returning the position and orientation values to zero."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorResponse",
    "pageType": "web-api-interface",
    "summary": "The AuthenticatorResponse interface of the Web Authentication API is the base interface for interfaces that provide a cryptographic root of trust for a key pair. The child interfaces include information from the browser such as the challenge origin and either may be returned from PublicKeyCredential.response."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Media_Source_Extensions_API",
    "pageType": "web-api-overview",
    "summary": "The Media Source API, formally known as Media Source Extensions (MSE), provides functionality enabling plugin-free web-based streaming media. Using MSE, media streams can be created via JavaScript, and played using <audio> and <video> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorResponse/clientDataJSON",
    "pageType": "web-api-instance-property",
    "summary": "The clientDataJSON property of the AuthenticatorResponse interface stores a JSON string in an\nArrayBuffer, representing the client data that was passed to navigator.credentials.create() or navigator.credentials.get(). This property is only accessed on one of the child objects of AuthenticatorResponse, specifically AuthenticatorAttestationResponse or AuthenticatorAssertionResponse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Media_Source_Extensions_API/DASH_Adaptive_Streaming",
    "pageType": "guide",
    "summary": "Dynamic Adaptive Streaming over HTTP (DASH) is an adaptive streaming protocol. This means that it allows for a video stream to switch between bit rates on the basis of network performance, in order to keep a video playing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRect",
    "pageType": "web-api-interface",
    "summary": "A DOMRect describes the size and position of a rectangle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRect/x",
    "pageType": "web-api-instance-property",
    "summary": "The x property of the DOMRect interface represents the x-coordinate of the rectangle, which is the horizontal distance between the viewport's left edge and the rectangle's origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Media_Source_Extensions_API/Transcoding_assets_for_MSE",
    "pageType": "guide",
    "summary": "When working with Media Source Extensions, it is likely that you need to condition your assets before you can stream them. This article takes you through the requirements and shows you a toolchain you can use to encode your assets appropriately."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRect/fromRect_static",
    "pageType": "web-api-static-method",
    "summary": "The fromRect() static method of the\nDOMRect object creates a new DOMRect\nobject with a given location and dimensions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserverEntry",
    "pageType": "web-api-interface",
    "summary": "The IntersectionObserverEntry interface of the Intersection Observer API describes the intersection between the target element and its root container at a specific moment of transition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRect/DOMRect",
    "pageType": "web-api-constructor",
    "summary": "The DOMRect() constructor creates a new DOMRect object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserverEntry/time",
    "pageType": "web-api-instance-property",
    "summary": "The time read-only property of the IntersectionObserverEntry interface is a DOMHighResTimeStamp that indicates the time at which the intersection change occurred relative to the time at which the document was created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRect/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the DOMRect interface represents the height of the rectangle. The value can be negative."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserverEntry/boundingClientRect",
    "pageType": "web-api-instance-property",
    "summary": "The boundingClientRect read-only property of the IntersectionObserverEntry interface returns a DOMRectReadOnly which in essence describes a rectangle describing the smallest rectangle that contains the entire target element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRect/y",
    "pageType": "web-api-instance-property",
    "summary": "The y property of the DOMRect interface represents the y-coordinate of the rectangle, which is the vertical distance between the viewport's top edge and the rectangle's origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserverEntry/isIntersecting",
    "pageType": "web-api-instance-property",
    "summary": "The isIntersecting read-only property of the IntersectionObserverEntry interface is a Boolean value which is true if the target element intersects with the intersection observer's root."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRect/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the DOMRect interface represents the width of the rectangle. The value can be negative."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserverEntry/target",
    "pageType": "web-api-instance-property",
    "summary": "The target read-only property of the IntersectionObserverEntry interface indicates which targeted Element has changed its amount of intersection with the intersection root."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkewX",
    "pageType": "web-api-interface",
    "summary": "The CSSSkewX interface of the CSS Typed Object Model API represents the skewX() value of the individual transform property in CSS. It inherits properties and methods from its parent CSSTransformValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserverEntry/intersectionRatio",
    "pageType": "web-api-instance-property",
    "summary": "The intersectionRatio read-only property of the IntersectionObserverEntry interface tells you how much of the target element is currently visible within the root's intersection ratio, as a value between 0.0 and 1.0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkewX/CSSSkewX",
    "pageType": "web-api-constructor",
    "summary": "The CSSSkewX() constructor creates a new\nCSSSkewX object which represents the\nskewX()\nvalue of the individual transform property in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSSkewX/ax",
    "pageType": "web-api-instance-property",
    "summary": "The ax property of the\nCSSSkewX interface gets and sets the angle used to distort the element\nalong the x-axis (or abscissa)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserverEntry/intersectionRect",
    "pageType": "web-api-instance-property",
    "summary": "The intersectionRect read-only property of the IntersectionObserverEntry interface is a DOMRectReadOnly object which describes the smallest rectangle that contains the entire portion of the target element which is currently visible within the intersection root."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IntersectionObserverEntry/rootBounds",
    "pageType": "web-api-instance-property",
    "summary": "The rootBounds read-only property of the IntersectionObserverEntry interface is a DOMRectReadOnly corresponding to the target's root intersection rectangle, offset by the IntersectionObserver.rootMargin if one is specified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/change_event",
    "pageType": "web-api-event",
    "summary": "The change event is fired for <input>, <select>, and <textarea> elements when the user modifies the element's value. Unlike the input event, the change event is not necessarily fired for each alteration to an element's value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XREquirectLayer",
    "pageType": "web-api-interface",
    "summary": "The XREquirectLayer interface of the WebXR Device API is a layer that maps equirectangular coded data onto the inside of a sphere."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLElement interface represents any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XREquirectLayer/radius",
    "pageType": "web-api-instance-property",
    "summary": "The radius property of the XREquirectLayer interface represents the radius of the sphere."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/draggable",
    "pageType": "web-api-instance-property",
    "summary": "The draggable property of the HTMLElement interface gets and sets a Boolean primitive indicating if the element is draggable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/accessKey",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLElement.accessKey property sets the keystroke which a user can press to jump to a given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XREquirectLayer/upperVerticalAngle",
    "pageType": "web-api-instance-property",
    "summary": "The upperVerticalAngle property of the XREquirectLayer interface represents the upper vertical angle in radians for the sphere."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/focus",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLElement.focus() method sets focus on the specified element, if it can be focused.\nThe focused element is the element that will receive keyboard and similar events by default."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XREquirectLayer/redraw_event",
    "pageType": "web-api-event",
    "summary": "The redraw event is sent to the XREquirectLayer object when the underlying resources of the layer are lost or when the XR Compositor can no longer reproject the layer. If this event is sent, authors should redraw the content of the layer in the next XR animation frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/offsetHeight",
    "pageType": "web-api-instance-property",
    "summary": "The offsetHeight read-only property of the HTMLElement interface returns the height of an element, including vertical padding and borders, as an integer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/load_event",
    "pageType": "web-api-event",
    "summary": "The load event fires for elements containing a resource when the resource has successfully loaded. Currently, the list of supported HTML elements are: <body>, <embed>, <iframe>, <img>, <link>, <object>, <script>, <style>, and <track>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XREquirectLayer/space",
    "pageType": "web-api-instance-property",
    "summary": "The space property of the XREquirectLayer interface represents the layer's spatial relationship with the user's physical environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/showPopover",
    "pageType": "web-api-instance-method",
    "summary": "The showPopover() method of the HTMLElement interface shows a popover element (i.e., one that has a valid popover attribute) by adding it to the top layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XREquirectLayer/transform",
    "pageType": "web-api-instance-property",
    "summary": "The transform property of the XREquirectLayer interface represents the offset and orientation relative to the layer's space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/dragleave_event",
    "pageType": "web-api-event",
    "summary": "The dragleave event is fired when a dragged element or text selection leaves a valid drop target."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XREquirectLayer/centralHorizontalAngle",
    "pageType": "web-api-instance-property",
    "summary": "The centralHorizontalAngle property of the XREquirectLayer interface represents the central horizontal angle in radians for the sphere."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/blur",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLElement.blur() method removes keyboard focus from the current element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XREquirectLayer/lowerVerticalAngle",
    "pageType": "web-api-instance-property",
    "summary": "The lowerVerticalAngle property of the XREquirectLayer interface represents the lower vertical angle in radians for the sphere."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/dragend_event",
    "pageType": "web-api-event",
    "summary": "The dragend event is fired when a drag operation ends (by releasing a mouse button or hitting the escape key)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/click",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLElement.click() method simulates a mouse click on an element. When called on an element, the element's click event is fired (unless its disabled attribute is set)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedVideoChunk",
    "pageType": "web-api-interface",
    "summary": "The EncodedVideoChunk interface of the WebCodecs API represents a chunk of encoded video data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/translate",
    "pageType": "web-api-instance-property",
    "summary": "The translate property of the HTMLElement interface indicates whether an element's attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedVideoChunk/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp read-only property of the EncodedVideoChunk interface returns an integer indicating the timestamp of the video in microseconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/offsetLeft",
    "pageType": "web-api-instance-property",
    "summary": "The offsetLeft read-only property of the HTMLElement interface returns the number of pixels that the upper left corner of the current element is offset to the left within the HTMLElement.offsetParent node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedVideoChunk/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the EncodedVideoChunk interface returns a value indicating whether the video chunk is a key chunk, which does not rely on other frames for decoding."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/offsetTop",
    "pageType": "web-api-instance-property",
    "summary": "The offsetTop read-only property of the HTMLElement interface returns the distance from the outer border of the current element (including its margin) to the top padding edge of the offsetParent, the closest positioned ancestor element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedVideoChunk/byteLength",
    "pageType": "web-api-instance-property",
    "summary": "The byteLength read-only property of the EncodedVideoChunk interface returns the length in bytes of the encoded video data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/style",
    "pageType": "web-api-instance-property",
    "summary": "The read-only style property of the HTMLElement returns the inline style of an element in the form of a live CSSStyleProperties object.\nThis object can be used to get and set the inline styles of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedVideoChunk/duration",
    "pageType": "web-api-instance-property",
    "summary": "The duration read-only property of the EncodedVideoChunk interface returns an integer indicating the duration of the video in microseconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/writingSuggestions",
    "pageType": "web-api-instance-property",
    "summary": "The writingSuggestions property of the HTMLElement interface is a string indicating if browser-provided writing suggestions should be enabled under the scope of the element or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedVideoChunk/EncodedVideoChunk",
    "pageType": "web-api-constructor",
    "summary": "The EncodedVideoChunk() constructor creates a new EncodedVideoChunk object representing a chunk of encoded video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/anchorElement",
    "pageType": "web-api-instance-property",
    "summary": "The anchorElement property of the HTMLElement interface returns a reference to the element's anchor element. This works only in the case of elements associated with their anchors via the anchor HTML attribute, not elements associated with their anchors via the CSS anchor-name and position-anchor properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/drop_event",
    "pageType": "web-api-event",
    "summary": "The drop event is fired when an element or text selection is dropped on a valid drop target. To ensure that the drop event always fires as expected, you should always include a preventDefault() call in the part of your code which handles the dragover event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EncodedVideoChunk/copyTo",
    "pageType": "web-api-instance-method",
    "summary": "The copyTo() method of the EncodedVideoChunk interface copies the encoded chunk of video data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/isContentEditable",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLElement.isContentEditable read-only property\nreturns a boolean value that is true if the contents of the element\nare editable; otherwise it returns false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/togglePopover",
    "pageType": "web-api-instance-method",
    "summary": "The togglePopover() method of the HTMLElement interface toggles a popover element (i.e., one that has a valid popover attribute) between the hidden and showing states."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/noiseSuppression",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nnoiseSuppression property is a Boolean value whose value\nindicates whether or not noise suppression technology is enabled on an audio track. This\nlets you determine what value was selected to comply with your specified constraints for\nthis property's value as described in the\nMediaTrackConstraints.noiseSuppression property you provided when calling\neither getUserMedia() or\nMediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/hidePopover",
    "pageType": "web-api-instance-method",
    "summary": "The hidePopover() method of the HTMLElement interface hides a popover element (i.e., one that has a valid popover attribute) by removing it from the top layer and styling it with display: none."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/logicalSurface",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nlogicalSurface property indicates whether or not the\ndisplay area being captured is a logical surface. Logical surfaces are those which are\nnot necessarily entirely onscreen, or may even be off-screen, such as windows' backing\nbuffers (where only part of the buffer is visible without scrolling the containing\nwindow) and offscreen rendering contexts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/editContext",
    "pageType": "web-api-instance-property",
    "summary": "The editContext property of the HTMLElement interface gets and sets an element's associated EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings",
    "pageType": "web-api-interface",
    "summary": "The MediaTrackSettings dictionary is used to return the current values configured for each of a MediaStreamTrack's settings. These values will adhere as closely as possible to any constraints previously described using a MediaTrackConstraints object and set using applyConstraints(), and will adhere to the default constraints for any properties whose constraints haven't been changed, or whose customized constraints couldn't be matched."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/attributeStyleMap",
    "pageType": "web-api-instance-property",
    "summary": "The attributeStyleMap read-only property of the HTMLElement interface returns a live StylePropertyMap object that contains a list of style properties of the element that are defined in the element's inline style attribute, or assigned using the style property of the HTMLElement interface via script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/restrictOwnAudio",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's restrictOwnAudio property controls whether system audio originating from the capturing tab is filtered out of screen capture, allowing for cleaner screen recordings in some cases."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/hidden",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLElement property hidden reflects the value of the element's hidden attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/dataset",
    "pageType": "web-api-instance-property",
    "summary": "The dataset read-only property\nof the HTMLElement interface provides read/write access to custom data attributes\n(data-*) on elements. It exposes a map of strings\n(DOMStringMap) with an entry for each data-* attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/sampleRate",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nsampleRate property is an integer indicating how many\naudio samples per second the MediaStreamTrack is currently configured\nfor. This lets you determine what value was selected to comply with your specified\nconstraints for this property's value as described in the\nMediaTrackConstraints.sampleRate property you provided when calling\neither getUserMedia() or\nMediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/autocorrect",
    "pageType": "web-api-instance-property",
    "summary": "The autocorrect property of the HTMLElement interface controls whether or not autocorrection of editable text is enabled for spelling and/or punctuation errors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/deviceId",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\ndeviceId property is a string which\nuniquely identifies the source for the corresponding MediaStreamTrack for\nthe origin corresponding to the browsing session. This lets you determine what value was\nselected to comply with your specified constraints for this property's value as\ndescribed in the MediaTrackConstraints.deviceId property you provided\nwhen calling either getUserMedia()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/innerText",
    "pageType": "web-api-instance-property",
    "summary": "The innerText property of the HTMLElement interface represents the rendered text content of a node and its descendants."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/suppressLocalAudioPlayback",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's suppressLocalAudioPlayback property controls whether the audio playing in a tab will continue to be played out of a user's local speakers when the tab is captured."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/accessKeyLabel",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLElement.accessKeyLabel\nread-only property returns a string containing the element's\nbrowser-assigned access key (if any); otherwise it returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/nonce",
    "pageType": "web-api-instance-property",
    "summary": "The nonce property of the HTMLElement interface returns the cryptographic number used once that is used by Content Security Policy to determine whether a given fetch will be allowed to proceed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/frameRate",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nframeRate property is a double-precision floating-point\nnumber indicating the frame rate, in frames per second, of the\nMediaStreamTrack as currently configured. This lets you determine what\nvalue was selected to comply with your specified constraints for this property's value\nas described in the MediaTrackConstraints.frameRate property you provided\nwhen calling either getUserMedia() or\nMediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/lang",
    "pageType": "web-api-instance-property",
    "summary": "The lang property of the HTMLElement interface indicates the base language of an element's attribute values and text content, in the form of a BCP 47 language tag. It reflects the element's lang attribute; the xml:lang attribute does not affect this property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/volume",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's volume\nproperty is a double-precision floating-point number indicating the volume of the\nMediaStreamTrack as currently configured, as a value from 0.0 (silence)\nto 1.0 (maximum supported volume for the device). This lets you determine what value was\nselected to comply with your specified constraints for this property's value as\ndescribed in the MediaTrackConstraints.volume property you provided when\ncalling either getUserMedia() or\nMediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/tabIndex",
    "pageType": "web-api-instance-property",
    "summary": "The tabIndex property of the\nHTMLElement interface represents the tab order of the current element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/latency",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nlatency property is a double-precision floating-point\nnumber indicating the estimated latency (specified in seconds) of the\nMediaStreamTrack as currently configured. This lets you determine what\nvalue was selected to comply with your specified constraints for this property's value\nas described in the MediaTrackConstraints.latency property you provided\nwhen calling either getUserMedia() or\nMediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/offsetParent",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLElement.offsetParent read-only property returns a\nreference to the element which is the closest (nearest in the containment hierarchy)\npositioned ancestor element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/channelCount",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nchannelCount property is an integer indicating how many\naudio channels the MediaStreamTrack is currently configured to have. This\nlets you determine what value was selected to comply with your specified constraints for\nthis property's value as described in the\nMediaTrackConstraints.channelCount property you provided when calling\neither getUserMedia() or\nMediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/autofocus",
    "pageType": "web-api-instance-property",
    "summary": "The autofocus property of the HTMLElement interface represents a boolean value reflecting the autofocus HTML global attribute, which indicates whether the control should be focused when the page loads, or when dialog or popover become shown if specified in an element inside <dialog> elements or elements whose popover attribute is set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/echoCancellation",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nechoCancellation property is a Boolean value whose value\nindicates whether or not echo cancellation is enabled on an audio track. This lets you\ndetermine what value was selected to comply with your specified constraints for this\nproperty's value as described in the\nMediaTrackConstraints.echoCancellation property you provided when calling\neither getUserMedia() or\nMediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/outerText",
    "pageType": "web-api-instance-property",
    "summary": "The outerText property of the HTMLElement interface returns the same value as HTMLElement.innerText.\nWhen used as a setter it replaces the whole current node with the given text (this differs from innerText, which replaces the content inside the current node)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/sampleSize",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nsampleSize property is an integer indicating the linear\nsample size (in bits per sample) the MediaStreamTrack is currently\nconfigured for. This lets you determine what value was selected to comply with your\nspecified constraints for this property's value as described in the\nMediaTrackConstraints.sampleSize property you provided when calling\neither getUserMedia() or\nMediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/aspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's aspectRatio property is a double-precision floating-point number indicating the aspect ratio of the MediaStreamTrack as currently configured.\nThis lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.aspectRatio property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/attachInternals",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLElement.attachInternals() method returns an ElementInternals object.\nThis method allows a custom element to participate in HTML forms. The ElementInternals interface provides utilities for working with these elements in the same way you would work with any standard HTML form element, and also exposes the Accessibility Object Model to the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/groupId",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\ngroupId property is a browsing-session unique\nstring which identifies the group of devices which includes the source\nfor the MediaStreamTrack. This lets you determine what value was selected\nto comply with your specified constraints for this property's value as described in the\nMediaTrackConstraints.groupId property you provided when calling either\ngetUserMedia()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/offsetWidth",
    "pageType": "web-api-instance-property",
    "summary": "The offsetWidth read-only property of the HTMLElement interface returns the layout width of an element as an integer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/cursor",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's cursor property indicates whether or not the cursor should be captured as part of the video track included in the MediaStream returned by getDisplayMedia()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/popover",
    "pageType": "web-api-instance-property",
    "summary": "The popover property of the HTMLElement interface gets and sets an element's popover state via JavaScript (\"auto\", \"hint\", or \"manual\"), and can be used for feature detection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/command_event",
    "pageType": "web-api-event",
    "summary": "The command event of the HTMLElement interface fires on an element that is controlled via a button with valid commandForElement and command values, whenever the button is interacted with (e.g., it is clicked)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/height",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's height\nproperty is an integer indicating the number of pixels tall\nMediaStreamTrack is currently configured to be. This lets you determine\nwhat value was selected to comply with your specified constraints for this property's\nvalue as described in the MediaTrackConstraints.height property you\nprovided when calling either getUserMedia()\nor MediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/contentEditable",
    "pageType": "web-api-instance-property",
    "summary": "The contentEditable property of\nthe HTMLElement interface specifies whether or not the element is\neditable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/facingMode",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nfacingMode property is a string\nindicating the direction in which the camera producing the video track represented by\nthe MediaStreamTrack is currently facing. This lets you determine what\nvalue was selected to comply with your specified constraints for this property's value\nas described in the MediaTrackConstraints.facingMode property you\nprovided when calling either getUserMedia()\nor MediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/dragstart_event",
    "pageType": "web-api-event",
    "summary": "The dragstart event is fired when the user starts dragging an element or text selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/width",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's width\nproperty is an integer indicating the number of pixels wide\nMediaStreamTrack is currently configured to be. This lets you determine\nwhat value was selected to comply with your specified constraints for this property's\nvalue as described in the MediaTrackConstraints.width property you\nprovided when calling either getUserMedia()\nor MediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/toggle_event",
    "pageType": "web-api-event",
    "summary": "The toggle event of the HTMLElement interface fires on a popover element, <dialog> element, or <details> element just after it is shown or hidden."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/autoGainControl",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\nautoGainControl property is a Boolean value whose value\nindicates whether or not automatic gain control (AGC) is enabled on an audio track. This\nlets you determine what value was selected to comply with your specified constraints for\nthis property's value as described in the\nMediaTrackConstraints.autoGainControl property you provided when calling\neither getUserMedia() or\nMediaStreamTrack.applyConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/enterKeyHint",
    "pageType": "web-api-instance-property",
    "summary": "The enterKeyHint property is an enumerated property defining\nwhat action label (or icon) to present for the enter key on virtual keyboards.\nIt reflects the enterkeyhint\nHTML global attribute and is an enumerated property, only accepting the following values\nas a string:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/displaySurface",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's\ndisplaySurface property indicates the type of display\nsurface being captured."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/dragenter_event",
    "pageType": "web-api-event",
    "summary": "The dragenter event is fired when a dragged element or text selection enters a valid drop target. The target object is the immediate user selection (the element directly indicated by the user as the drop target), or the <body> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSettings/screenPixelRatio",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSettings dictionary's screenPixelRatio property is a number representing the ratio of the physical size of a pixel on the captured display surface (displayed at its physical resolution) to the logical size of a CSS pixel on the capturing screen (displayed at its logical resolution). It cannot be used as a constraint or capability."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/drag_event",
    "pageType": "web-api-event",
    "summary": "The drag event is fired every few hundred milliseconds as an element or text selection is being dragged by the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLFieldSetElement interface indicates the name of the <fieldset> element. It reflects the element's name attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/autocapitalize",
    "pageType": "web-api-instance-property",
    "summary": "The autocapitalize property of the HTMLElement interface represents the element's capitalization behavior for user input. It is available on all HTML elements, though it doesn't affect all of them, including:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLFieldSetElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <fieldset> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/error_event",
    "pageType": "web-api-event",
    "summary": "The error event is fired on an element when a resource failed to load, or can't be used. For example, if a script has an execution error or an image can't be found or is invalid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The disabled property of the HTMLFieldSetElement interface is a boolean value that reflects the <fieldset> element's disabled attribute, which indicates whether the control is disabled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/dir",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLElement.dir property indicates the text writing directionality of the content of the current element. It reflects the element's dir attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/willValidate",
    "pageType": "web-api-instance-property",
    "summary": "The willValidate read-only property of the HTMLFieldSetElement interface returns false, because <fieldset> elements are not candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/inert",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLElement property inert reflects the value of the element's inert attribute. It is a boolean value that, when present, makes the browser \"ignore\" user input events for the element, including focus events and events from assistive technologies. The browser may also ignore page search and text selection in the element. This can be useful when building UIs such as modals where you would want to \"trap\" the focus inside the modal when it's visible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the HTMLFieldSetElement interface returns the string \"fieldset\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/dragover_event",
    "pageType": "web-api-event",
    "summary": "The dragover event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/validity",
    "pageType": "web-api-instance-property",
    "summary": "The validity read-only property of the HTMLFieldSetElement interface returns a ValidityState object that represents the validity states this element is in. Although <fieldset> elements are never candidates for constraint validation, the validity state may still be invalid if a custom validity message has been set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/inputMode",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLElement property inputMode reflects the value of the element's inputmode attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/elements",
    "pageType": "web-api-instance-property",
    "summary": "The elements read-only property of the HTMLFieldSetElement interface returns an HTMLCollection object containing all form control elements (<button>, <fieldset>, <input>, <object>, <output>, <select>, and <textarea>) that are descendants of this field set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/spellcheck",
    "pageType": "web-api-instance-property",
    "summary": "The spellcheck property of the HTMLElement interface represents a boolean value that controls the spell-checking hint. It is available on all HTML elements, though it doesn't affect all of them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLFieldSetElement interface returns an HTMLFormElement object that owns this <fieldset>, or null if this fieldset is not owned by any form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/title",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLElement.title property\nrepresents the title of the element: the text usually displayed in a 'tooltip' popup\nwhen the mouse is over the node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/setCustomValidity",
    "pageType": "web-api-instance-method",
    "summary": "The setCustomValidity() method of the HTMLFieldSetElement interface sets the custom validity message for the <fieldset> element. Use the empty string to indicate that the element does not have a custom validity error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/beforetoggle_event",
    "pageType": "web-api-event",
    "summary": "The beforetoggle event of the HTMLElement interface fires on a popover or <dialog> element just before it is shown or hidden."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/reportValidity",
    "pageType": "web-api-instance-method",
    "summary": "The reportValidity() method of the HTMLFieldSetElement interface performs the same validity checking steps as the checkValidity() method. It always returns true because <fieldset> elements are never candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLElement/virtualKeyboardPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The virtualKeyboardPolicy property of the HTMLElement interface gets and sets a string indicating the on-screen virtual keyboard behavior on devices such as tablets, mobile phones, or other devices where a hardware keyboard may not be available, if the element's content is editable (for example, it is an <input> or <textarea> element, or an element with the contenteditable attribute set)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/validationMessage",
    "pageType": "web-api-instance-property",
    "summary": "The validationMessage read-only property of the HTMLFieldSetElement interface returns a string representing a localized message that describes the validation constraints that the <fieldset> control does not satisfy (if any). This is the empty string as <fieldset> elements are not candidates for constraint validation (HTMLFieldSetElement.willValidate is false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportReceiveStream",
    "pageType": "web-api-interface",
    "summary": "The WebTransportReceiveStream interface of the WebTransport API is a ReadableStream that can be used to read from an incoming unidirectional or bidirectional WebTransport stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFieldSetElement/checkValidity",
    "pageType": "web-api-instance-method",
    "summary": "The checkValidity() method of the HTMLFieldSetElement interface checks if the element is valid, but always returns true because <fieldset> elements are never candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportReceiveStream/getStats",
    "pageType": "web-api-instance-method",
    "summary": "The getStats() method of the WebTransportReceiveStream interface asynchronously returns an object containing statistics for the current stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ChannelMergerNode",
    "pageType": "web-api-interface",
    "summary": "The ChannelMergerNode interface, often used in conjunction with its opposite, ChannelSplitterNode, reunites different mono inputs into a single output. Each input is used to fill a channel of the output. This is useful for accessing each channels separately, e.g., for performing channel mixing where gain must be separately controlled on each channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ChannelMergerNode/ChannelMergerNode",
    "pageType": "web-api-constructor",
    "summary": "The ChannelMergerNode() constructor creates a new ChannelMergerNode object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern",
    "pageType": "web-api-interface",
    "summary": "The URLPattern interface of the URL Pattern API matches URLs or parts of URLs against a pattern. The pattern can contain capturing groups that extract parts of the matched URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLSync",
    "pageType": "web-api-interface",
    "summary": "The WebGLSync interface is part of the WebGL 2 API and is used to synchronize activities between the GPU and the application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/pathname",
    "pageType": "web-api-instance-property",
    "summary": "The pathname read-only property of the URLPattern interface is a string containing the pattern used to match the pathname part of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PasswordCredentialInit",
    "pageType": "web-api-interface",
    "summary": "The PasswordCredentialInit dictionary represents the object passed to CredentialsContainer.create() as the value of the password option, when creating a password credential."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/test",
    "pageType": "web-api-instance-method",
    "summary": "The test() method of the URLPattern interface takes a URL string or object of URL parts, and returns a boolean indicating if the given input matches the current pattern."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/URLPattern",
    "pageType": "web-api-constructor",
    "summary": "The URLPattern() constructor returns a new URLPattern object representing the URLs that will be matched by this pattern."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/minDecibels",
    "pageType": "web-api-instance-property",
    "summary": "The minDecibels property of the AnalyserNode interface is a double value representing the minimum power value in the scaling range for the FFT analysis data, for conversion to unsigned byte values — basically, this specifies the minimum value for the range of results when using getByteFrequencyData()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/hasRegExpGroups",
    "pageType": "web-api-instance-property",
    "summary": "The hasRegExpGroups read-only property of the URLPattern interface is a boolean indicating whether or not any of the URLPattern components contain regular expression capturing groups."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode",
    "pageType": "web-api-interface",
    "summary": "The AnalyserNode interface represents a node able to provide real-time frequency and time-domain analysis information. It is an AudioNode that passes the audio stream unchanged from the input to the output, but allows you to take the generated data, process it, and create audio visualizations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol read-only property of the URLPattern interface is a string containing the pattern used to match the protocol part of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/getFloatTimeDomainData",
    "pageType": "web-api-instance-method",
    "summary": "The getFloatTimeDomainData() method of the AnalyserNode Interface copies the current waveform, or time-domain, data into a Float32Array array passed into it. Each array value is a sample, the magnitude of the signal at a particular time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/search",
    "pageType": "web-api-instance-property",
    "summary": "The search read-only property of the URLPattern interface is a string containing the pattern used to match the search part of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/maxDecibels",
    "pageType": "web-api-instance-property",
    "summary": "The maxDecibels property of the AnalyserNode interface is a double value representing the maximum power value in the scaling range for the FFT analysis data, for conversion to unsigned byte values — basically, this specifies the maximum value for the range of results when using getByteFrequencyData()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/username",
    "pageType": "web-api-instance-property",
    "summary": "The username read-only property of the URLPattern interface is a string containing the pattern used to match the username part of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/getFloatFrequencyData",
    "pageType": "web-api-instance-method",
    "summary": "The getFloatFrequencyData() method of the AnalyserNode Interface copies the current frequency data into a Float32Array array passed into it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/hostname",
    "pageType": "web-api-instance-property",
    "summary": "The hostname read-only property of the URLPattern interface is a string containing the pattern used to match the hostname part of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/frequencyBinCount",
    "pageType": "web-api-instance-property",
    "summary": "The frequencyBinCount read-only property of the AnalyserNode interface contains the total number of data points available to AudioContext sampleRate. This is half of the value of the AnalyserNode.fftSize. The two methods' indices have a linear relationship with the frequencies they represent, between 0 and the Nyquist frequency."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/port",
    "pageType": "web-api-instance-property",
    "summary": "The port read-only property of the URLPattern interface is a string containing the pattern used to match the port part of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/getByteFrequencyData",
    "pageType": "web-api-instance-method",
    "summary": "The getByteFrequencyData() method of the AnalyserNode interface copies the current frequency data into a Uint8Array (unsigned byte array) passed into it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/hash",
    "pageType": "web-api-instance-property",
    "summary": "The hash read-only property of the URLPattern interface is a string containing the pattern used to match the fragment part of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/AnalyserNode",
    "pageType": "web-api-constructor",
    "summary": "The AnalyserNode() constructor of the Web Audio API creates a new AnalyserNode object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/password",
    "pageType": "web-api-instance-property",
    "summary": "The password read-only property of the URLPattern interface is a string containing the pattern used to match the password part of a URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/fftSize",
    "pageType": "web-api-instance-property",
    "summary": "The fftSize property of the AnalyserNode interface is an unsigned long value and represents the window size in samples that is used when performing a Fast Fourier Transform (FFT) to get frequency domain data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URLPattern/exec",
    "pageType": "web-api-instance-method",
    "summary": "The exec() method of the URLPattern interface takes a URL or object of URL parts, and returns either an object containing the results of matching the URL to the pattern, or null if the URL does not match the pattern."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/smoothingTimeConstant",
    "pageType": "web-api-instance-property",
    "summary": "The smoothingTimeConstant property of the AnalyserNode interface is a double value representing the averaging constant with the last analysis frame. It's basically an average between the current buffer and the last buffer the AnalyserNode processed, and results in a much smoother set of value changes over time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WaveShaperNode",
    "pageType": "web-api-interface",
    "summary": "The WaveShaperNode interface represents a non-linear distorter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnalyserNode/getByteTimeDomainData",
    "pageType": "web-api-instance-method",
    "summary": "The getByteTimeDomainData() method of the AnalyserNode Interface copies the current waveform, or time-domain, data into a Uint8Array (unsigned byte array) passed into it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WaveShaperNode/WaveShaperNode",
    "pageType": "web-api-constructor",
    "summary": "The WaveShaperNode() constructor\nof the Web Audio API creates a new\nWaveShaperNode object which is an AudioNode that\nrepresents a non-linear distorter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VirtualKeyboard_API",
    "pageType": "web-api-overview",
    "summary": "The VirtualKeyboard API provides developers control over the layout of their applications when the on-screen virtual keyboard appears and disappears on devices such as tablets, mobile phones, or other devices where a hardware keyboard may not be available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WaveShaperNode/oversample",
    "pageType": "web-api-instance-property",
    "summary": "The oversample property of the WaveShaperNode interface is an enumerated value indicating if oversampling must be used. Oversampling is a technique for creating more samples (up-sampling) before applying a distortion effect to the audio signal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WaveShaperNode/curve",
    "pageType": "web-api-instance-property",
    "summary": "The curve property of the WaveShaperNode interface is a Float32Array of numbers describing the distortion to apply."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShift",
    "pageType": "web-api-interface",
    "summary": "The LayoutShift interface of the Performance API provides insights into the layout stability of web pages based on movements of the elements on the page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGForeignObjectElement",
    "pageType": "web-api-interface",
    "summary": "The SVGForeignObjectElement interface provides access to the properties of <foreignObject> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShift/hadRecentInput",
    "pageType": "web-api-instance-property",
    "summary": "The hadRecentInput read-only property of the LayoutShift interface returns true if lastInputTime is less than 500 milliseconds in the past."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGForeignObjectElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGForeignObjectElement interface describes the x-axis coordinate of the <foreignObject> element. It reflects the computed value of the x attribute on the <foreignObject> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShift/value",
    "pageType": "web-api-instance-property",
    "summary": "The value read-only property of the LayoutShift interface returns the layout shift score calculated as the impact fraction (fraction of the viewport that was shifted) multiplied by the distance fraction (distance moved as a fraction of viewport)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGForeignObjectElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGForeignObjectElement interface describes the height of the <foreignObject> element. It reflects the computed value of the height attribute on the <foreignObject> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShift/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the LayoutShift interface is a serializer; it returns a JSON representation of the LayoutShift object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGForeignObjectElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGForeignObjectElement interface describes the y-axis coordinate of the <foreignObject> element. It reflects the computed value of the y attribute on the <foreignObject> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShift/lastInputTime",
    "pageType": "web-api-instance-property",
    "summary": "The lastInputTime read-only property of the LayoutShift interface returns the time of the most recent excluding input or 0 if no excluding input has occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGForeignObjectElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGForeignObjectElement interface describes the width of the <foreignObject> element. It reflects the computed value of the width attribute on the <foreignObject> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LayoutShift/sources",
    "pageType": "web-api-instance-property",
    "summary": "The sources read-only property of the LayoutShift interface returns an array of LayoutShiftAttribution objects that indicate the DOM elements that moved during the layout shift."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEComponentTransferElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEComponentTransferElement interface corresponds to the <feComponentTransfer> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseWatcher",
    "pageType": "web-api-interface",
    "summary": "The CloseWatcher interface allows a custom UI component with open and close semantics to respond to device-specific close actions in the same way as a built-in component."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEComponentTransferElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEComponentTransferElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseWatcher/close_event",
    "pageType": "web-api-event",
    "summary": "A close event is fired at a CloseWatcher object when a close request was received and only fired if the cancel event that preceded the close one was not canceled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEComponentTransferElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEComponentTransferElement interface reflects the in attribute of the given <feComponentTransfer> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseWatcher/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the CloseWatcher interface lets you skip any logic in the cancel event handler and immediately fire the close event. It then deactivates the close watcher as if destroy() was called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEComponentTransferElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEComponentTransferElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseWatcher/requestClose",
    "pageType": "web-api-instance-method",
    "summary": "The requestClose() method of the CloseWatcher interface fires a cancel event and if that event is not canceled with Event.preventDefault(), proceeds to fire a close event, and then finally deactivates the close watcher as if destroy() was called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEComponentTransferElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEComponentTransferElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseWatcher/cancel_event",
    "pageType": "web-api-event",
    "summary": "A cancel event is fired at a CloseWatcher object before the close event, so that close can be prevented from firing, if necessary. It is triggered by all close signals (e.g., the Esc key) as well as CloseWatcher.requestClose()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEComponentTransferElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEComponentTransferElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseWatcher/destroy",
    "pageType": "web-api-instance-method",
    "summary": "The destroy() method of the CloseWatcher interface deactivates the close watcher. This is intended to be called if the relevant UI element is torn down in some other way than being closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEComponentTransferElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEComponentTransferElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CloseWatcher/CloseWatcher",
    "pageType": "web-api-constructor",
    "summary": "The CloseWatcher() constructor creates a new CloseWatcher object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FocusEvent",
    "pageType": "web-api-interface",
    "summary": "The FocusEvent interface represents focus-related events, including focus, blur, focusin, and focusout."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIConnectionEvent",
    "pageType": "web-api-interface",
    "summary": "The MIDIConnectionEvent interface of the Web MIDI API is the event passed to the statechange event of the MIDIAccess interface and the statechange event of the MIDIPort interface. This occurs any time a new port becomes available, or when a previously available port becomes unavailable. For example, this event is fired whenever a MIDI device is either plugged in to or unplugged from a computer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FocusEvent/FocusEvent",
    "pageType": "web-api-constructor",
    "summary": "The FocusEvent() constructor returns a newly created\nFocusEvent object with an optional EventTarget. When the\nevent has both a source and a destination, the relatedTarget value must be\nset to the other target."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIConnectionEvent/port",
    "pageType": "web-api-instance-property",
    "summary": "The port read-only property of the MIDIConnectionEvent interface returns the port that has been disconnected or connected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FocusEvent/relatedTarget",
    "pageType": "web-api-instance-property",
    "summary": "The relatedTarget read-only property of the FocusEvent interface is the secondary target, depending on the type of event:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIConnectionEvent/MIDIConnectionEvent",
    "pageType": "web-api-constructor",
    "summary": "The MIDIConnectionEvent() constructor creates a new MIDIConnectionEvent object. Typically this constructor is not used as events are created when a new port becomes available, and the object is passed to the statechange event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRHitTestSource",
    "pageType": "web-api-interface",
    "summary": "The XRHitTestSource interface of the WebXR Device API handles hit test subscriptions. You can get an XRHitTestSource object by using the XRSession.requestHitTestSource() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentIndexEvent",
    "pageType": "web-api-interface",
    "summary": "The ContentIndexEvent interface of the content index defines the object used to represent the contentdelete event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRHitTestSource/cancel",
    "pageType": "web-api-instance-method",
    "summary": "The cancel() method of the XRHitTestSource interface unsubscribes a hit test."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GestureEvent",
    "pageType": "web-api-interface",
    "summary": "The GestureEvent is a proprietary interface specific to WebKit which gives information regarding multi-touch gestures. Events using this interface include gesturestart, gesturechange, and gestureend."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentIndexEvent/ContentIndexEvent",
    "pageType": "web-api-constructor",
    "summary": "The ContentIndexEvent() constructor creates a new ContentIndexEvent object\nwhose type and other options are configured as specified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentIndexEvent/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the\nContentIndexEvent interface is a String which identifies\nthe deleted content index via its id."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceOrientationEvent",
    "pageType": "web-api-interface",
    "summary": "The DeviceOrientationEvent interface of the Device Orientation Events provides web developers with information from the physical orientation of the device running the web page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRJointSpace",
    "pageType": "web-api-interface",
    "summary": "The XRJointSpace interface is an XRSpace and represents the position and orientation of an XRHand joint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceOrientationEvent/DeviceOrientationEvent",
    "pageType": "web-api-constructor",
    "summary": "The DeviceOrientationEvent() constructor creates a new DeviceOrientationEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRJointSpace/jointName",
    "pageType": "web-api-instance-property",
    "summary": "The read-only jointName property of the XRJointSpace interface contains the name of the joint it tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceOrientationEvent/gamma",
    "pageType": "web-api-instance-property",
    "summary": "The gamma read-only property of the DeviceOrientationEvent interface returns the rotation of the device around the Y axis; that is, the number of degrees,\nranged between -90 and 90, by which the device is tilted left\nor right.\nSee Orientation and motion data explained for details."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceOrientationEvent/absolute",
    "pageType": "web-api-instance-property",
    "summary": "The absolute read-only property of the DeviceOrientationEvent interface indicates whether or not the device is providing orientation data absolutely (that is,\nin reference to the Earth's coordinate frame) or using some arbitrary frame determined\nby the device.\nSee Orientation and motion data explained for details."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HkdfParams",
    "pageType": "web-api-interface",
    "summary": "The HkdfParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.deriveKey(), when using the HKDF algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_Sanitizer_API",
    "pageType": "web-api-overview",
    "summary": "The HTML Sanitizer API allows developers to take strings of HTML and filter out unwanted elements, attributes, and other HTML entities when they are inserted into the DOM or a shadow DOM."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceOrientationEvent/beta",
    "pageType": "web-api-instance-property",
    "summary": "The beta read-only property of the DeviceOrientationEvent interface returns the rotation of the device around the X axis; that is, the number of degrees,\nranged between -180 and 180, by which the device is tipped forward or backward.\nSee Orientation and motion data explained for details."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DeviceOrientationEvent/alpha",
    "pageType": "web-api-instance-property",
    "summary": "The alpha read-only property of the DeviceOrientationEvent interface returns the rotation of the device around the Z axis; that is, the number of degrees by\nwhich the device is being twisted around the center of the screen.\nSee Orientation and motion data explained for details."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_Sanitizer_API/Using_the_HTML_Sanitizer_API",
    "pageType": "guide",
    "summary": "The HTML Sanitizer API provides methods that allow developers to safely inject untrusted HTML into an Element, a ShadowRoot, or a Document.\nThe API also gives developers the flexibility to further restrict or expand what HTML entities are allowed if needed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCollection",
    "pageType": "web-api-interface",
    "summary": "The HTMLCollection interface represents a generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLSubImage",
    "pageType": "web-api-interface",
    "summary": "The XRWebGLSubImage interface is used during rendering of WebGL layers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCollection/item",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLCollection method item()\nreturns the element located at the specified offset into the collection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLSubImage/imageIndex",
    "pageType": "web-api-instance-property",
    "summary": "The read-only imageIndex property of the XRWebGLSubImage interface is a number representing the offset into the texture array if the layer was requested with texture-array; null otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCollection/length",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLCollection.length property returns the number of\nitems in a HTMLCollection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLSubImage/depthStencilTexture",
    "pageType": "web-api-instance-property",
    "summary": "The read-only depthStencilTexture property of the XRWebGLSubImage interface represents the depth/stencil WebGLTexture object for the XRCompositionLayer to render."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLCollection/namedItem",
    "pageType": "web-api-instance-method",
    "summary": "The namedItem() method of the HTMLCollection interface returns\nthe first Element in the collection whose id or name attribute match the specified name, or null if no element matches."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLSubImage/colorTextureHeight",
    "pageType": "web-api-instance-property",
    "summary": "The read-only colorTextureHeight property of the XRWebGLSubImage interface is a number representing the height in pixels of the GL attachment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BatteryManager",
    "pageType": "web-api-interface",
    "summary": "The BatteryManager interface of the Battery Status API provides information about the system's battery charge level. The navigator.getBattery() method returns a promise that resolves with a BatteryManager interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLSubImage/colorTexture",
    "pageType": "web-api-instance-property",
    "summary": "The read-only colorTexture property of the XRWebGLSubImage interface represents the color WebGLTexture object for the XRCompositionLayer to render."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BatteryManager/chargingTime",
    "pageType": "web-api-instance-property",
    "summary": "The chargingTime read-only property of the BatteryManager interface indicates the amount of time, in seconds, that remain until the battery is fully charged, or 0 if the battery is already fully charged or the user agent is unable to report the battery status information.\nIf the battery is currently discharging, its value is Infinity.\nWhen its value changes, the chargingtimechange event is fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLSubImage/colorTextureWidth",
    "pageType": "web-api-instance-property",
    "summary": "The read-only colorTextureWidth property of the XRWebGLSubImage interface is a number representing the width in pixels of the GL attachment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BatteryManager/dischargingtimechange_event",
    "pageType": "web-api-event",
    "summary": "The dischargingtimechange event of the BatteryManager interface is fired when the battery dischargingTime property is updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCaptionElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTableCaptionElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table <caption> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BatteryManager/levelchange_event",
    "pageType": "web-api-event",
    "summary": "The levelchange event of the BatteryManager interface is fired when the battery level property is updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableCaptionElement/align",
    "pageType": "web-api-instance-property",
    "summary": "The align property of the HTMLTableCaptionElement interface is a string indicating how to horizontally align text in the <caption> table element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BatteryManager/level",
    "pageType": "web-api-instance-property",
    "summary": "The level read-only property of the BatteryManager interface indicates the current battery charge level as a value between 0.0 and 1.0.\nA value of 0.0 means the battery is empty and the system is about to be suspended.\nA value of 1.0 means the battery is full or the user agent is unable to report the battery status information.\nWhen its value changes, the levelchange event is fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Scheduler",
    "pageType": "web-api-interface",
    "summary": "The Scheduler interface of the Prioritized Task Scheduling API provides methods for scheduling prioritized tasks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BatteryManager/chargingtimechange_event",
    "pageType": "web-api-event",
    "summary": "The chargingtimechange event of the BatteryManager interface is fired when the battery chargingTime property is updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Scheduler/postTask",
    "pageType": "web-api-instance-method",
    "summary": "The postTask() method of the Scheduler interface is used for adding tasks to be scheduled according to their priority."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BatteryManager/dischargingTime",
    "pageType": "web-api-instance-property",
    "summary": "The dischargingTime read-only property of the BatteryManager interface indicates the amount of time, in seconds, that remains until the battery is fully discharged,\nor Infinity if the battery is currently charging rather than discharging or the user agent is unable to report the battery status information.\nWhen its value changes, the dischargingtimechange event is fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Scheduler/yield",
    "pageType": "web-api-instance-method",
    "summary": "The yield() method of the Scheduler interface is used for yielding to the main thread during a task and continuing execution later, with the continuation scheduled as a prioritized task (see the Prioritized Task Scheduling API for more information). This allows long-running work to be broken up so the browser stays responsive."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BatteryManager/chargingchange_event",
    "pageType": "web-api-event",
    "summary": "The chargingchange event of the BatteryManager interface is fired when the battery charging property is updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MathMLElement",
    "pageType": "web-api-interface",
    "summary": "The MathMLElement interface represents any MathML element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BatteryManager/charging",
    "pageType": "web-api-instance-property",
    "summary": "The charging read-only property of the BatteryManager interface is a Boolean value indicating whether or not the device's battery is currently being charged. When its value changes, the chargingchange event is fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MathMLElement/focus",
    "pageType": "web-api-instance-method",
    "summary": "The focus() method of the MathMLElement interface sets focus on the specified MathML element, if it can be focused. The focused element is the element that will receive keyboard and similar events by default."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MathMLElement/blur",
    "pageType": "web-api-instance-method",
    "summary": "The blur() method of the MathMLElement interface removes keyboard focus from the current MathML element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement",
    "pageType": "web-api-interface",
    "summary": "HTML <script> elements expose the HTMLScriptElement interface, which provides special properties and methods for manipulating the behavior and execution of <script> elements (beyond the inherited HTMLElement interface)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/src",
    "pageType": "web-api-instance-property",
    "summary": "The src property of the HTMLScriptElement interface is a string representing the URL of an external script; this can be used as an alternative to embedding a script directly within a document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MathMLElement/style",
    "pageType": "web-api-instance-property",
    "summary": "The read-only style property of the MathMLElement returns the inline style of an element in the form of a live CSSStyleProperties object.\nThis object can be used to get and set the inline styles of an element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/async",
    "pageType": "web-api-instance-property",
    "summary": "The async property of the HTMLScriptElement interface is a boolean value that controls how the script should be executed. For classic scripts, if the async property is set to true, the external script will be fetched in parallel to parsing and evaluated as soon as it is available. For module scripts, if the async property is set to true, the script and all their dependencies will be fetched in parallel to parsing and evaluated as soon as they are available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MathMLElement/attributeStyleMap",
    "pageType": "web-api-instance-property",
    "summary": "The attributeStyleMap read-only property of the MathMLElement interface returns a live StylePropertyMap object that contains a list of style properties of the element that are defined in the element's inline style attribute, or assigned using the style property of the MathMLElement interface via script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/noModule",
    "pageType": "web-api-instance-property",
    "summary": "The noModule property of the HTMLScriptElement interface is a boolean value that indicates whether the script should be executed in browsers that support ES modules. Practically, this can be used to serve fallback scripts to older browsers that do not support JavaScript modules."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MathMLElement/dataset",
    "pageType": "web-api-instance-property",
    "summary": "The dataset read-only property of the MathMLElement interface provides read/write access to custom data attributes (data-*) on elements. It exposes a map of strings (DOMStringMap) with an entry for each data-* attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the HTMLScriptElement interface is a string that reflects the type of the script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MathMLElement/tabIndex",
    "pageType": "web-api-instance-property",
    "summary": "The tabIndex property of the MathMLElement interface represents the tab order of the current MathML element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/supports_static",
    "pageType": "web-api-static-method",
    "summary": "The supports() static method of the HTMLScriptElement interface provides a simple and consistent method to feature-detect what types of scripts are supported by the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MathMLElement/autofocus",
    "pageType": "web-api-instance-property",
    "summary": "The autofocus property of the MathMLElement interface contains a boolean value reflecting the autofocus HTML global attribute. It indicates whether the MathML element should be focused when the page loads or when the element becomes shown if the MathML element is inside a <dialog> or a popover."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/integrity",
    "pageType": "web-api-instance-property",
    "summary": "The integrity property of the HTMLScriptElement interface is a string that contains inline metadata that a browser can use to verify that a fetched resource has been delivered without unexpected manipulation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLabelElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLLabelElement interface gives access to properties specific to <label> elements. It inherits methods and properties from the base HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/textContent",
    "pageType": "web-api-instance-property",
    "summary": "The textContent property of the HTMLScriptElement interface represents the inline text content of the <script> element.\nIt behaves in the same way as the text and innerText properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLabelElement/control",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLLabelElement.control property returns a\nreference to the control (in the form of an object of type HTMLElement or\none of its derivatives) with which the <label> element is associated,\nor null if the label isn't associated with a control."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/blocking",
    "pageType": "web-api-instance-property",
    "summary": "The blocking property of the HTMLScriptElement interface is a string indicating that certain operations should be blocked on the fetching of the script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLabelElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLLabelElement interface returns an HTMLFormElement object that owns the control associated with this <label>, or null if this label is not associated with a labelable form-associated element (<button>, <input>, <output>, <select>, <textarea>, or form-associated custom elements) that is owned by a form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/text",
    "pageType": "web-api-instance-property",
    "summary": "The text property of the HTMLScriptElement interface represents the inline text content of the <script> element.\nIt behaves in the same way as the textContent and innerText property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLLabelElement/htmlFor",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLLabelElement.htmlFor property reflects the value\nof the for content property. That means that this\nscript-accessible property is used to set and read the value of the content property\nfor, which is the ID of the label's associated control element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/innerText",
    "pageType": "web-api-instance-property",
    "summary": "The innerText property of the HTMLScriptElement interface represents the text content of the <script> element.\nIt behaves in the same way as the textContent and text properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFontFeatureValuesRule",
    "pageType": "web-api-interface",
    "summary": "The CSSFontFeatureValuesRule interface represents an @font-feature-values at-rule, letting developers assign for each font face a common name to specify features indices to be used in font-variant-alternates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/referrerPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The referrerPolicy property of the\nHTMLScriptElement interface reflects the HTML\nreferrerpolicy of the <script> element, which defines how the referrer is set when fetching the script and any scripts it imports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSFontFeatureValuesRule/fontFamily",
    "pageType": "web-api-instance-property",
    "summary": "The fontFamily property of the CSSConditionRule interface represents the name of the font family it applies to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/defer",
    "pageType": "web-api-instance-property",
    "summary": "The defer property of the HTMLScriptElement interface is a boolean value that controls how the script should be executed. For classic scripts, if the defer property is set to true, the external script will be executed after the document has been parsed, but before firing DOMContentLoaded event. For module scripts, the defer property has no effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAttestationResponse",
    "pageType": "web-api-interface",
    "summary": "The AuthenticatorAttestationResponse interface of the Web Authentication API is the result of a WebAuthn credential registration. It contains information about the credential that the server needs to perform WebAuthn assertions, such as its credential ID and public key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/crossOrigin",
    "pageType": "web-api-instance-property",
    "summary": "The crossOrigin property of the HTMLScriptElement interface reflects the Cross-Origin Resource Sharing settings for the script element. For classic scripts from other origins, this controls if full error information will be exposed. For module scripts, it controls the script itself and any script it imports. See CORS settings attributes for details."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAttestationResponse/getPublicKey",
    "pageType": "web-api-instance-method",
    "summary": "The getPublicKey() method of the AuthenticatorAttestationResponse interface returns an ArrayBuffer containing the DER SubjectPublicKeyInfo of the new credential (see Subject Public Key Info), or null if this is not available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/fetchPriority",
    "pageType": "web-api-instance-property",
    "summary": "The fetchPriority property of the HTMLScriptElement interface represents a hint to the browser indicating how it should prioritize fetching an external script relative to other external scripts.\nIt reflects the fetchpriority attribute of the <script> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAttestationResponse/attestationObject",
    "pageType": "web-api-instance-property",
    "summary": "The attestationObject property of the\nAuthenticatorAttestationResponse interface returns an\nArrayBuffer containing the new public key, as well as signature over the\nentire attestationObject with a private key that is stored in the\nauthenticator when it is manufactured."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLScriptElement/attributionSrc",
    "pageType": "web-api-instance-property",
    "summary": "The attributionSrc property of the HTMLScriptElement interface gets and sets the attributionsrc attribute on a <script> element programmatically, reflecting the value of that attribute. attributionsrc specifies that you want the browser to send an Attribution-Reporting-Eligible header along with the script resource request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAttestationResponse/getAuthenticatorData",
    "pageType": "web-api-instance-method",
    "summary": "The getAuthenticatorData() method of the AuthenticatorAttestationResponse interface returns an ArrayBuffer containing the authenticator data contained within the AuthenticatorAttestationResponse.attestationObject property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportDatagramDuplexStream",
    "pageType": "web-api-interface",
    "summary": "The WebTransportDatagramDuplexStream interface of the WebTransport API represents a duplex stream that can be used for unreliable transport of datagrams between client and server. Provides access to a ReadableStream for reading incoming datagrams, a WritableStream for writing outgoing datagrams, and various settings and statistics related to the stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAttestationResponse/getPublicKeyAlgorithm",
    "pageType": "web-api-instance-method",
    "summary": "The getPublicKeyAlgorithm() method of the AuthenticatorAttestationResponse interface returns a number that is equal to a COSE Algorithm Identifier, representing the cryptographic algorithm used for the new credential."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportDatagramDuplexStream/outgoingHighWaterMark",
    "pageType": "web-api-instance-property",
    "summary": "The outgoingHighWaterMark property of the WebTransportDatagramDuplexStream interface gets or sets the high water mark for outgoing chunks of data — this is the maximum size, in chunks, that the outgoing WritableStream's internal queue can reach before it is considered full. See Internal queues and queuing strategies for more information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AuthenticatorAttestationResponse/getTransports",
    "pageType": "web-api-instance-method",
    "summary": "The getTransports() method of the AuthenticatorAttestationResponse interface returns an array of strings describing the different transports which may be used by the authenticator."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportDatagramDuplexStream/maxDatagramSize",
    "pageType": "web-api-instance-property",
    "summary": "The maxDatagramSize read-only property of the WebTransportDatagramDuplexStream interface returns the maximum allowable size of outgoing datagrams, in bytes, that can be written to writable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelEvent",
    "pageType": "web-api-interface",
    "summary": "The RTCDataChannelEvent interface\nrepresents an event related to a specific RTCDataChannel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportDatagramDuplexStream/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable read-only property of the WebTransportDatagramDuplexStream interface returns a ReadableStream instance that can be used to unreliably read incoming datagrams from the stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelEvent/channel",
    "pageType": "web-api-instance-property",
    "summary": "The read-only property RTCDataChannelEvent.channel\nreturns the RTCDataChannel associated with the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportDatagramDuplexStream/incomingHighWaterMark",
    "pageType": "web-api-instance-property",
    "summary": "The incomingHighWaterMark property of the WebTransportDatagramDuplexStream interface gets or sets the high water mark for incoming chunks of data — this is the maximum size, in chunks, that the incoming ReadableStream's internal queue can reach before it is considered full. See Internal queues and queuing strategies for more information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannelEvent/RTCDataChannelEvent",
    "pageType": "web-api-constructor",
    "summary": "The RTCDataChannelEvent() constructor\ncreates a new RTCDataChannelEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportDatagramDuplexStream/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable read-only property of the WebTransportDatagramDuplexStream interface returns a WritableStream instance that can be used to unreliably write outgoing datagrams to the stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet",
    "pageType": "web-api-interface",
    "summary": "The FontFaceSet interface of the CSS Font Loading API manages the loading of font-faces and querying of their download status."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportDatagramDuplexStream/incomingMaxAge",
    "pageType": "web-api-instance-property",
    "summary": "The incomingMaxAge property of the WebTransportDatagramDuplexStream interface gets or sets the maximum age for incoming datagrams, in milliseconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/status",
    "pageType": "web-api-instance-property",
    "summary": "The status read-only property of the FontFaceSet interface returns the loading state of the fonts in the set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransportDatagramDuplexStream/outgoingMaxAge",
    "pageType": "web-api-instance-property",
    "summary": "The outgoingMaxAge property of the WebTransportDatagramDuplexStream interface gets or sets the maximum age for outgoing datagrams, in milliseconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/add",
    "pageType": "web-api-instance-method",
    "summary": "The add() method of the FontFaceSet interface adds a new font to the set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HmacKeyGenParams",
    "pageType": "web-api-interface",
    "summary": "The HmacKeyGenParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.generateKey(), when generating a key for the HMAC algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the FontFaceSet interface returns a new Iterator object, containing an array of [value,value] for each element in the FontFaceSet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/size",
    "pageType": "web-api-instance-property",
    "summary": "The size property of the FontFaceSet interface returns the number of items in the FontFaceSet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay",
    "pageType": "web-api-interface",
    "summary": "The VRDisplay interface of the WebVR API represents any VR device supported by this API. It includes generic information such as device IDs and descriptions, as well as methods for starting to present a VR scene, retrieving eye parameters and display capabilities, and other important functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the FontFaceSet interface returns a Boolean asserting whether an element is present with the given value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/displayId",
    "pageType": "web-api-instance-property",
    "summary": "The displayId read-only property of the VRDisplay interface returns an identifier for this particular VRDisplay, which is also used as an association point in the Gamepad API (see Gamepad.displayId)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/ready",
    "pageType": "web-api-instance-property",
    "summary": "The ready read-only property of the FontFaceSet interface returns a Promise that resolves to the given FontFaceSet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/getLayers",
    "pageType": "web-api-instance-method",
    "summary": "The getLayers() method of the VRDisplay interface returns the layers currently being presented by the VRDisplay."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the FontFaceSet interface is an alias for FontFaceSet.values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/capabilities",
    "pageType": "web-api-instance-property",
    "summary": "The capabilities read-only property of the VRDisplay interface returns a VRDisplayCapabilities object that indicates the various capabilities of the VRDisplay."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/loadingdone_event",
    "pageType": "web-api-event",
    "summary": "The loadingdone event fires when the document has loaded all fonts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/getEyeParameters",
    "pageType": "web-api-instance-method",
    "summary": "The getEyeParameters() method of the VRDisplay interface returns the VREyeParameters object containing the eye parameters for the specified eye."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the FontFaceSet interface removes a font from the set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/getImmediatePose",
    "pageType": "web-api-instance-method",
    "summary": "The getImmediatePose() method of the VRDisplay interface returns a VRPose object defining the current pose of the VRDisplay, with no prediction applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/load",
    "pageType": "web-api-instance-method",
    "summary": "The load() method of the FontFaceSet forces all the fonts given in parameters to be loaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/requestPresent",
    "pageType": "web-api-instance-method",
    "summary": "The requestPresent() method of the VRDisplay interface starts the VRDisplay presenting a scene."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the FontFaceSet interface removes all fonts added via this interface. Fonts added with the @font-face rule are not removed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/getFrameData",
    "pageType": "web-api-instance-method",
    "summary": "The getFrameData() method of the VRDisplay interface accepts a VRFrameData object and populates it with the information required to render the current frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/loading_event",
    "pageType": "web-api-event",
    "summary": "The loading event fires when the document begins loading fonts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/isConnected",
    "pageType": "web-api-instance-property",
    "summary": "The isConnected read-only property of the VRDisplay interface returns a boolean value indicating whether the VRDisplay is connected to the computer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/loadingerror_event",
    "pageType": "web-api-event",
    "summary": "The loadingerror event fires when fonts have finished loading, but some or all fonts have failed to load."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/submitFrame",
    "pageType": "web-api-instance-method",
    "summary": "The submitFrame() method of the VRDisplay interface captures the current state of the VRLayerInit currently being presented and displays it on the VRDisplay."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the FontFaceSet interface executes a provided function for each value in the FontFaceSet object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/displayName",
    "pageType": "web-api-instance-property",
    "summary": "The displayName read-only property of the VRDisplay interface returns a human-readable name to identify the VRDisplay."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the FontFaceSet interface returns a new iterator object that yields the values for each element in the FontFaceSet object in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/resetPose",
    "pageType": "web-api-instance-method",
    "summary": "The resetPose() method of the VRDisplay interface resets the pose for the VRDisplay, treating its current VRPose.position and VRPose.orientation as the \"origin/zero\" values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFaceSet/check",
    "pageType": "web-api-instance-method",
    "summary": "The check() method of the FontFaceSet returns true if you can render some text using the given font specification without attempting to use any fonts in this FontFaceSet that are not yet fully loaded. This means you can use the font specification without causing a font swap."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/isPresenting",
    "pageType": "web-api-instance-property",
    "summary": "The isPresenting read-only property of the VRDisplay interface returns a boolean value indicating whether the VRDisplay is currently having content presented through it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_compressed_texture_astc",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_compressed_texture_astc extension is part of the WebGL API and exposes Adaptive Scalable Texture Compression (ASTC) compressed texture formats to WebGL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/cancelAnimationFrame",
    "pageType": "web-api-instance-method",
    "summary": "The cancelAnimationFrame() method of the VRDisplay interface is a special implementation of Window.cancelAnimationFrame that unregisters callbacks registered with VRDisplay.requestAnimationFrame()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_compressed_texture_astc/getSupportedProfiles",
    "pageType": "webgl-extension-method",
    "summary": "The WEBGL_compressed_texture_astc.getSupportedProfiles()\nmethod returns an array of strings containing the names of the ASTC profiles supported\nby the implementation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/depthNear",
    "pageType": "web-api-instance-property",
    "summary": "The depthNear property of the VRDisplay interface gets and sets the z-depth defining the near plane of the eye view frustum, i.e., the nearest viewable boundary of the scene."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaintWorkletGlobalScope",
    "pageType": "web-api-interface",
    "summary": "The PaintWorkletGlobalScope interface of the CSS Painting API represents the global object available inside a paint Worklet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaintWorkletGlobalScope/registerPaint",
    "pageType": "web-api-instance-method",
    "summary": "The registerPaint() method of the\nPaintWorkletGlobalScope interface registers a class to programmatically generate an\nimage where a CSS property expects a file."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/exitPresent",
    "pageType": "web-api-instance-method",
    "summary": "The exitPresent() method of the VRDisplay interface stops the VRDisplay presenting a scene."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaintWorkletGlobalScope/devicePixelRatio",
    "pageType": "web-api-instance-property",
    "summary": "The devicePixelRatio read-only property of the PaintWorkletGlobalScope interface returns the current device's ratio of physical pixels to logical pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/getPose",
    "pageType": "web-api-instance-method",
    "summary": "The getPose() method of the VRDisplay interface returns a VRPose object defining the future predicted pose of the VRDisplay as it will be when the current frame is actually presented."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/requestAnimationFrame",
    "pageType": "web-api-instance-method",
    "summary": "The requestAnimationFrame() method of the VRDisplay interface is a special implementation of Window.requestAnimationFrame containing a callback function that will be called every time a new frame of the VRDisplay presentation is rendered:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRAnchor",
    "pageType": "web-api-interface",
    "summary": "The XRAnchor interface creates anchors which keep track of the pose that is fixed relative to the real world. With anchors, you can specify poses in the world that need to be updated to correctly reflect the evolving understanding of the world, such that the poses remain aligned with the same place in the physical world. That helps to build an illusion that the placed objects are really present in the user's environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/depthFar",
    "pageType": "web-api-instance-property",
    "summary": "The depthFar property of the VRDisplay interface gets and sets the z-depth defining the far plane of the eye view frustum, i.e., the furthest viewable boundary of the scene."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRAnchor/anchorSpace",
    "pageType": "web-api-instance-property",
    "summary": "The read-only anchorSpace property of the XRAnchor interface returns an XRSpace object to locate the anchor relative to other XRSpace objects. It can be passed to XRFrame.getPose() subsequently."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplay/stageParameters",
    "pageType": "web-api-instance-property",
    "summary": "The stageParameters read-only property of the VRDisplay interface returns a VRStageParameters object containing room-scale parameters, if the VRDisplay is capable of supporting room-scale experiences."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRAnchor/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the XRAnchor interface removes an anchor. This can be useful when an application is no longer interested in receiving updates to an anchor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorderErrorEvent",
    "pageType": "web-api-interface",
    "summary": "The MediaRecorderErrorEvent interface represents errors returned by the MediaStream Recording API. It is an Event object that encapsulates a reference to a DOMException describing the error that occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactsManager",
    "pageType": "web-api-interface",
    "summary": "The ContactsManager interface of the Contact Picker API allows users to select entries from their contact list and share limited details of the selected entries with a website or application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorderErrorEvent/error",
    "pageType": "web-api-instance-property",
    "summary": "The error read-only property of the\nMediaRecorderErrorEvent interface is a\nDOMException object providing details about the exception that was thrown\nby a MediaRecorder instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactsManager/getProperties",
    "pageType": "web-api-instance-method",
    "summary": "The getProperties() method of the\nContactsManager interface returns a Promise which resolves\nwith an Array of strings indicating which contact\nproperties are available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaRecorderErrorEvent/MediaRecorderErrorEvent",
    "pageType": "web-api-constructor",
    "summary": "The\nMediaRecorderErrorEvent() constructor creates a new MediaRecorderErrorEvent object\nthat represents an error that occurred during the recording of media\nby the MediaStream Recording API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContactsManager/select",
    "pageType": "web-api-instance-method",
    "summary": "The select() method of the\nContactsManager interface returns a Promise which, when\nresolved, presents the user with a contact picker which allows them to select contact(s)\nthey wish to share. This method requires a user gesture for the Promise to\nresolve."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IdentityCredentialRequestOptions",
    "pageType": "web-api-interface",
    "summary": "The IdentityCredentialRequestOptions dictionary represents the object passed to CredentialsContainer.get() as the value of the identity option."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchEvent",
    "pageType": "web-api-interface",
    "summary": "The TouchEvent interface represents an UIEvent which is sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance",
    "pageType": "web-api-interface",
    "summary": "The SpeechSynthesisUtterance interface of the Web Speech API represents a speech request.\nIt contains the content the speech service should read and information about how to read it (e.g., language, pitch and volume.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchEvent/altKey",
    "pageType": "web-api-instance-property",
    "summary": "The read-only altKey property of the TouchEvent interface returns a boolean value indicating whether or not the alt (Alternate) key is enabled when the touch event is created. If the alt key is enabled, the attribute's value is true. Otherwise, it is false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/boundary_event",
    "pageType": "web-api-event",
    "summary": "The boundary event of the Web Speech API is fired when the spoken utterance reaches a word or sentence boundary."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchEvent/shiftKey",
    "pageType": "web-api-instance-property",
    "summary": "The read-only shiftKey property of the TouchEvent interface returns a boolean value indicating whether or not the shift key is enabled when the touch event is created. If this key is enabled, the attribute's value is true. Otherwise, it is false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/volume",
    "pageType": "web-api-instance-property",
    "summary": "The volume property of the SpeechSynthesisUtterance interface gets and sets the volume that the utterance will be spoken at."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchEvent/TouchEvent",
    "pageType": "web-api-constructor",
    "summary": "The TouchEvent() constructor creates a new TouchEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/rate",
    "pageType": "web-api-instance-property",
    "summary": "The rate property of the SpeechSynthesisUtterance interface gets and sets the speed at which the utterance will be spoken at."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchEvent/targetTouches",
    "pageType": "web-api-instance-property",
    "summary": "The targetTouches read-only property is a TouchList listing all the Touch objects for touch points that are still in contact with the touch surface and whose touchstart event occurred inside the same target element as the current target element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/text",
    "pageType": "web-api-instance-property",
    "summary": "The text property of the\nSpeechSynthesisUtterance interface gets and sets the text that will be synthesized when the utterance is spoken."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchEvent/metaKey",
    "pageType": "web-api-instance-property",
    "summary": "The read-only metaKey property of the TouchEvent interface returns a boolean value indicating whether or not the Meta key is enabled when the touch event is created. If this key is enabled, the attribute's value is true. Otherwise, it is false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/lang",
    "pageType": "web-api-instance-property",
    "summary": "The lang property of the SpeechSynthesisUtterance interface gets and sets the language of the utterance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchEvent/ctrlKey",
    "pageType": "web-api-instance-property",
    "summary": "The read-only ctrlKey property of the TouchEvent interface returns a boolean value indicating whether the control (Control) key is enabled when the touch event is created. If this key is enabled, the attribute's value is true. Otherwise, it is false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchEvent/changedTouches",
    "pageType": "web-api-instance-property",
    "summary": "The changedTouches read-only property is a TouchList whose touch points (Touch objects) varies depending on the event type, as follows:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/end_event",
    "pageType": "web-api-event",
    "summary": "The end event of the Web Speech API SpeechSynthesisUtterance object is fired when the utterance has finished being spoken."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TouchEvent/touches",
    "pageType": "web-api-instance-property",
    "summary": "touches is a read-only TouchList listing\nall the Touch objects for touch points that are currently in contact\nwith the touch surface, regardless of whether or not they've changed or what their\ntarget element was at touchstart time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/pitch",
    "pageType": "web-api-instance-property",
    "summary": "The pitch property of the SpeechSynthesisUtterance interface gets and sets the pitch at which the utterance will be spoken at."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryEntry",
    "pageType": "web-api-interface",
    "summary": "The FileSystemDirectoryEntry interface of the File and Directory Entries API represents a directory in a file system. It provides methods which make it possible to access and manipulate the files in a directory, as well as to access the entries within the directory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemDirectoryEntry interface's method\ncreateReader() returns a\nFileSystemDirectoryReader object which can be used to read the entries in\nthe directory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/SpeechSynthesisUtterance",
    "pageType": "web-api-constructor",
    "summary": "The SpeechSynthesisUtterance() constructor of the SpeechSynthesisUtterance interface returns a new SpeechSynthesisUtterance object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryEntry/removeRecursively",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemDirectoryEntry interface's method\nremoveRecursively() removes\nthe directory as well as all of its content, hierarchically iterating over its entire\nsubtree of descendant files and directories."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/pause_event",
    "pageType": "web-api-event",
    "summary": "The pause event of the Web Speech API SpeechSynthesisUtterance object is fired when the utterance is paused part way through."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryEntry/getFile",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemDirectoryEntry interface's method\ngetFile() returns a\nFileSystemFileEntry object corresponding to a file contained somewhere\nwithin the directory subtree rooted at the directory on which it's called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/voice",
    "pageType": "web-api-instance-property",
    "summary": "The voice property of the SpeechSynthesisUtterance interface gets and sets the voice that will be used to speak the utterance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryEntry/getDirectory",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemDirectoryEntry interface's method\ngetDirectory() returns a\nFileSystemDirectoryEntry object corresponding to a directory contained\nsomewhere within the directory subtree rooted at the directory on which it's called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the Web Speech API SpeechSynthesisUtterance object is fired when an error occurs that prevents the utterance from being successfully spoken."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Background_Tasks_API",
    "pageType": "web-api-overview",
    "summary": "The Cooperative Scheduling of Background Tasks API (also referred to as the Background Tasks API or the requestIdleCallback() API) provides the ability to queue tasks to be executed automatically by the user agent when it determines that there is free time to do so."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/start_event",
    "pageType": "web-api-event",
    "summary": "The start event of the Web Speech API SpeechSynthesisUtterance object is fired when the utterance has begun to be spoken."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentType/name",
    "pageType": "web-api-instance-property",
    "summary": "The read-only name property of the DocumentType returns the type of the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentType",
    "pageType": "web-api-interface",
    "summary": "The DocumentType interface represents a Node containing a doctype."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/resume_event",
    "pageType": "web-api-event",
    "summary": "The resume event of the Web Speech API SpeechSynthesisUtterance object is fired when a paused utterance is resumed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentType/remove",
    "pageType": "web-api-instance-method",
    "summary": "The DocumentType.remove() method removes a document's doctype.\nIf it is already detached from the document, calling remove() does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisUtterance/mark_event",
    "pageType": "web-api-event",
    "summary": "The mark event of the Web Speech API SpeechSynthesisUtterance object is fired when the spoken utterance reaches a named SSML \"mark\" tag."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentType/systemId",
    "pageType": "web-api-instance-property",
    "summary": "The read-only systemId property of the DocumentType returns the URL of the associated DTD."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AesKeyGenParams",
    "pageType": "web-api-interface",
    "summary": "The AesKeyGenParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.generateKey(), when generating an AES key: that is, when the algorithm is identified as any of AES-CBC, AES-CTR, AES-GCM, or AES-KW."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentType/publicId",
    "pageType": "web-api-instance-property",
    "summary": "The read-only publicId property of the DocumentType returns a formal identifier of the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentType/replaceWith",
    "pageType": "web-api-instance-method",
    "summary": "The DocumentType.replaceWith() method replaces the document type with a set of given nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent",
    "pageType": "web-api-interface",
    "summary": "KeyboardEvent objects describe a user interaction with the keyboard; each event describes a single interaction between the user and a key (or combination of a key with modifier keys) on the keyboard. The event type (keydown, keypress, or keyup) identifies what kind of keyboard activity occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentType/after",
    "pageType": "web-api-instance-method",
    "summary": "The DocumentType.after() method inserts a set of\nNode objects or strings in the children list of the\nDocumentType's parent, just after the DocumentType.\nStrings are inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/charCode",
    "pageType": "web-api-instance-property",
    "summary": "The charCode read-only property of the\nKeyboardEvent interface returns the Unicode value of a character key\npressed during a keypress event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentType/before",
    "pageType": "web-api-instance-method",
    "summary": "The DocumentType.before() method inserts a set of\nNode objects or strings in the children list of the\nDocumentType's parent, just before the DocumentType.\nStrings are inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/altKey",
    "pageType": "web-api-instance-property",
    "summary": "The KeyboardEvent.altKey read-only property is a\nboolean value that indicates if the alt key (Option or ⌥ on macOS) was pressed (true) or not (false) when\nthe event occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFuncGElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEFuncGElement interface corresponds to the <feFuncG> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/shiftKey",
    "pageType": "web-api-instance-property",
    "summary": "The KeyboardEvent.shiftKey read-only property is a\nboolean value that indicates if the shift key was pressed\n(true) or not (false) when the event occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemChangeRecord",
    "pageType": "web-api-interface",
    "summary": "The FileSystemChangeRecord dictionary of the File System API contains details of a single change observed by a FileSystemObserver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Scheduling",
    "pageType": "web-api-interface",
    "summary": "The Scheduling object provides methods and properties to control scheduling tasks within the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/isComposing",
    "pageType": "web-api-instance-property",
    "summary": "The KeyboardEvent.isComposing read-only property returns\na boolean value indicating if the event is fired within a composition\nsession, i.e., after compositionstart\nand before compositionend."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Scheduling/isInputPending",
    "pageType": "web-api-instance-method",
    "summary": "The isInputPending() method of the Scheduling interface allows you to check whether there are pending input events in the event queue, indicating that the user is attempting to interact with the page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/keyIdentifier",
    "pageType": "web-api-instance-property",
    "summary": "The deprecated KeyboardEvent.keyIdentifier read-only property returns a \"key identifier\" string that can be used to determine what key was pressed. Its non-deprecated replacement is KeyboardEvent.key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeywordValue",
    "pageType": "web-api-interface",
    "summary": "The CSSKeywordValue interface of the CSS Typed Object Model API creates an object to represent CSS keywords and other identifiers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeywordValue/CSSKeywordValue",
    "pageType": "web-api-constructor",
    "summary": "The CSSKeywordValue() constructor\ncreates a new CSSKeywordValue object which represents CSS keywords and\nother identifiers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/getModifierState",
    "pageType": "web-api-instance-method",
    "summary": "The KeyboardEvent.getModifierState() method returns the\ncurrent state of the specified modifier key: true if the modifier is active\n(that is the modifier key is pressed or locked), otherwise, false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeywordValue/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the\nCSSKeywordValue interface returns or sets the value of the\nCSSKeywordValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/code",
    "pageType": "web-api-instance-property",
    "summary": "The KeyboardEvent.code property represents a physical key on the keyboard (as opposed to the character generated by pressing the key). In other words, this property returns a value that isn't altered by keyboard layout or the state of the modifier keys."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEBlendElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEBlendElement interface corresponds to the <feBlend> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEBlendElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEBlendElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEBlendElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEBlendElement interface reflects the in attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/keyCode",
    "pageType": "web-api-instance-property",
    "summary": "The deprecated KeyboardEvent.keyCode read-only property represents a system and implementation dependent numerical code identifying the unmodified value of the pressed key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEBlendElement/in2",
    "pageType": "web-api-instance-property",
    "summary": "The in2 read-only property of the SVGFEBlendElement interface reflects the in2 attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/key",
    "pageType": "web-api-instance-property",
    "summary": "The KeyboardEvent interface's key read-only property returns the value of the key pressed by the user, taking into consideration the state of modifier keys such as Shift as well as the keyboard locale and layout."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEBlendElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEBlendElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEBlendElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEBlendElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/location",
    "pageType": "web-api-instance-property",
    "summary": "The KeyboardEvent.location read-only property returns an\nunsigned long representing the location of the key on the keyboard or other\ninput device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEBlendElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEBlendElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/metaKey",
    "pageType": "web-api-instance-property",
    "summary": "The KeyboardEvent.metaKey read-only property returning a\nboolean value that indicates if the Meta key was pressed\n(true) or not (false) when the event occurred. Some operating\nsystems may intercept the key so it is never detected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEBlendElement/mode",
    "pageType": "web-api-instance-property",
    "summary": "The mode read-only property of the SVGFEBlendElement interface reflects the mode attribute of the given element. It takes one of the SVG_FEBLEND_MODE_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent",
    "pageType": "web-api-constructor",
    "summary": "The KeyboardEvent() constructor creates a new\nKeyboardEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEBlendElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEBlendElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/ctrlKey",
    "pageType": "web-api-instance-property",
    "summary": "The KeyboardEvent.ctrlKey read-only property returns a\nboolean value that indicates if the control key was pressed\n(true) or not (false) when the event occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation",
    "pageType": "web-api-interface",
    "summary": "The Animation interface of the Web Animations API represents a single animation player and provides playback controls and a timeline for an animation node or source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent",
    "pageType": "web-api-instance-method",
    "summary": "The KeyboardEvent.initKeyboardEvent() method initializes\nthe attributes of a keyboard event object. This method was introduced in draft of DOM\nLevel 3 Events, but deprecated in newer draft. Gecko won't support this feature since\nimplementing this method as experimental broke existing web apps (see Firefox bug 999645).\nWeb applications should use constructor instead of this if it's available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/timeline",
    "pageType": "web-api-instance-property",
    "summary": "The Animation.timeline property of the Animation interface returns or sets the timeline associated with this animation. A timeline is a source of time values for synchronization purposes, and is an AnimationTimeline-based object. By default, the animation's timeline and the Document's timeline are the same."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/pending",
    "pageType": "web-api-instance-property",
    "summary": "The read-only Animation.pending property of the Web Animations API indicates whether the animation is currently waiting for an asynchronous operation such as initiating playback or pausing a running animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardEvent/repeat",
    "pageType": "web-api-instance-property",
    "summary": "The repeat read-only property of the\nKeyboardEvent interface returns a boolean value that is\ntrue if the given key is being held down such that it is automatically\nrepeating."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/finish_event",
    "pageType": "web-api-event",
    "summary": "The finish event of the Animation interface is fired when the animation finishes playing, either when the animation completes naturally, or\nwhen the Animation.finish() method is called to immediately cause the\nanimation to finish up."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/cancel",
    "pageType": "web-api-instance-method",
    "summary": "The Web Animations API's cancel() method of the Animation interface clears all KeyframeEffects caused by this animation and aborts its playback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchEvent/registration",
    "pageType": "web-api-instance-property",
    "summary": "The registration read-only property of the BackgroundFetchEvent interface returns a BackgroundFetchRegistration object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchEvent",
    "pageType": "web-api-interface",
    "summary": "The BackgroundFetchEvent interface of the Background Fetch API is the event type for background fetch events dispatched on the service worker global scope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/remove_event",
    "pageType": "web-api-event",
    "summary": "The remove event of the Animation interface fires when the animation is automatically removed by the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/effect",
    "pageType": "web-api-instance-property",
    "summary": "The Animation.effect property of the Web Animations API gets and sets the target effect of an animation. The target effect may be either an effect object of a type based on AnimationEffect, such as KeyframeEffect, or null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchEvent/BackgroundFetchEvent",
    "pageType": "web-api-constructor",
    "summary": "The BackgroundFetchEvent() constructor creates a new BackgroundFetchEvent object. This constructor is not typically used as the browser creates these objects itself and provides them to background fetch event callbacks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/startTime",
    "pageType": "web-api-instance-property",
    "summary": "The Animation.startTime property of the Animation interface is a double-precision floating-point value which indicates the scheduled time when an animation's playback should begin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Share_API",
    "pageType": "web-api-overview",
    "summary": "The Web Share API provides a mechanism for sharing text, links, files, and other content to an arbitrary share target selected by the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/play",
    "pageType": "web-api-instance-method",
    "summary": "The play() method of the Web Animations API's Animation Interface starts or resumes playing of an animation. If the animation is finished, calling play() restarts the animation, playing it from the beginning."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/fetchLater_API",
    "pageType": "web-api-overview",
    "summary": "The fetchLater() API provides an interface to request a deferred fetch that can be sent after a specified period of time, or when the page is closed or navigated away from."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/playState",
    "pageType": "web-api-instance-property",
    "summary": "The read-only Animation.playState property of the Web Animations API returns an enumerated value describing the playback state of an animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/reverse",
    "pageType": "web-api-instance-method",
    "summary": "The Animation.reverse() method of the Animation Interface reverses the playback direction, meaning the animation ends at its beginning. If called on an unplayed animation, the whole animation is played backwards. If called on a paused animation, the animation will continue in reverse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/fetchLater_API/fetchLater_quotas",
    "pageType": "guide",
    "summary": "Deferred fetchLater() API fetches are batched and sent once the tab is closed. At this point, there is no way for the user to abort them. To avoid situations where documents abuse this bandwidth to send unlimited amounts of data over the network the API sets quotas on how much data can be deferred to be sent later."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/Animation",
    "pageType": "web-api-constructor",
    "summary": "The Animation() constructor of the Web Animations API returns a new Animation object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent",
    "pageType": "web-api-interface",
    "summary": "The PointerEvent interface represents the state of a DOM event produced by a pointer such as the geometry of the contact point, the device type that generated the event, the amount of pressure that was applied on the contact surface, etc."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/ready",
    "pageType": "web-api-instance-property",
    "summary": "The read-only Animation.ready property of the Web Animations API returns a Promise which resolves when the animation is ready to play. A new promise is created every time the animation enters the \"pending\" play state as well as when the animation is canceled, since in both of those scenarios, the animation is ready to be started again."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/isPrimary",
    "pageType": "web-api-instance-property",
    "summary": "The isPrimary read-only property of the\nPointerEvent interface indicates whether or not the pointer device that\ncreated the event is the primary pointer. It returns true if the\npointer that caused the event to be fired is the primary one and returns\nfalse otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/pause",
    "pageType": "web-api-instance-method",
    "summary": "The pause() method of the Web Animations API's Animation interface suspends playback of the animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/altitudeAngle",
    "pageType": "web-api-instance-property",
    "summary": "The altitudeAngle read-only property of the PointerEvent interface represents the angle between a transducer (a pointer or stylus) axis and the X-Y plane of a device screen.\nThe altitude angle describes whether the transducer is perpendicular to the screen, parallel, or at some angle in between."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/finish",
    "pageType": "web-api-instance-method",
    "summary": "The finish() method of the Web Animations API's Animation Interface sets the current playback time to the end of the animation corresponding to the current playback direction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/azimuthAngle",
    "pageType": "web-api-instance-property",
    "summary": "The azimuthAngle read-only property of the PointerEvent interface represents the angle between the Y-Z plane and the plane containing both the transducer (pointer or stylus) axis and the Y axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/cancel_event",
    "pageType": "web-api-event",
    "summary": "The cancel event of the Animation interface is fired when the Animation.cancel() method is called or when the animation enters the \"idle\" play state from another state, such as when the animation is removed from an element before it finishes playing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/pointerType",
    "pageType": "web-api-instance-property",
    "summary": "The pointerType read-only property of the\nPointerEvent interface indicates the device type (mouse, pen, or touch)\nthat caused a given pointer event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/finished",
    "pageType": "web-api-instance-property",
    "summary": "The Animation.finished read-only property of the Web Animations API returns a Promise which resolves once the animation has finished playing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/pointerId",
    "pageType": "web-api-instance-property",
    "summary": "The pointerId read-only property of the PointerEvent interface\nis an identifier assigned to the pointer that triggered the event. The identifier\nis unique, being different from the identifiers of all other active pointer events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/overallProgress",
    "pageType": "web-api-instance-property",
    "summary": "The overallProgress read-only property of the Animation interface returns a number between 0 and 1 indicating the animation's overall progress towards its finished state. This is the overall progress across all of the animation's iterations, not each individual iteration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/tiltX",
    "pageType": "web-api-instance-property",
    "summary": "The tiltX read-only property of the PointerEvent interface is the angle (in degrees) between the Y-Z plane of the pointer and the screen.\nThis property is typically only useful for a pen/stylus pointer type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/persist",
    "pageType": "web-api-instance-method",
    "summary": "The persist() method of the Web Animations API's Animation interface explicitly persists an animation, preventing it from being automatically removed when it is replaced by another animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/tiltY",
    "pageType": "web-api-instance-property",
    "summary": "The tiltY read-only property of the PointerEvent interface is the angle (in degrees) between the X-Z plane of the pointer and the screen.\nThis property is typically only useful for a pen/stylus pointer type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/playbackRate",
    "pageType": "web-api-instance-property",
    "summary": "The Animation.playbackRate property of the Web Animations API returns or sets the playback rate of the animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the\nPointerEvent interface represents the height of the pointer's contact\ngeometry, along the y-axis (in CSS pixels). Depending on the source of the pointer\ndevice (for example a finger), for a given pointer, each event may produce a different\nvalue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/currentTime",
    "pageType": "web-api-instance-property",
    "summary": "The Animation.currentTime property of the Web Animations API returns and sets the current time value of the animation in milliseconds, whether running or paused."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/getCoalescedEvents",
    "pageType": "web-api-instance-method",
    "summary": "The getCoalescedEvents() method of the PointerEvent interface returns a sequence of PointerEvent instances that were coalesced (merged) into a single pointermove or pointerrawupdate event.\nInstead of a stream of many pointermove events, user agents coalesce multiple updates into a single event.\nThis helps with performance as the user agent has less event handling to perform, but there is a reduction in the granularity and accuracy when tracking, especially with fast and large movements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/replaceState",
    "pageType": "web-api-instance-property",
    "summary": "The read-only Animation.replaceState property of the Web Animations API indicates whether the animation has been removed by the browser automatically after being replaced by another animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/pressure",
    "pageType": "web-api-instance-property",
    "summary": "The pressure read-only property of the\nPointerEvent interface indicates the normalized pressure of the pointer\ninput."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/id",
    "pageType": "web-api-instance-property",
    "summary": "The Animation.id property of the Web Animations API returns or sets a string used to identify the animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/getPredictedEvents",
    "pageType": "web-api-instance-method",
    "summary": "The getPredictedEvents() method of the PointerEvent interface returns a sequence of PointerEvent instances that are estimated future pointer positions.\nHow the predicted positions are calculated depends on the user agent, but they are based on past points, current velocity, and trajectory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/updatePlaybackRate",
    "pageType": "web-api-instance-method",
    "summary": "The updatePlaybackRate() method of the Web Animations API's\nAnimation Interface sets the speed of an animation after first\nsynchronizing its playback position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Animation/commitStyles",
    "pageType": "web-api-instance-method",
    "summary": "The commitStyles() method of the Web Animations API's Animation interface writes the computed values of the animation's current styles into its target element's style attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the\nPointerEvent interface represents the width of the pointer's contact\ngeometry along the x-axis, measured in CSS pixels. Depending on the source of the\npointer device (such as a finger), for a given pointer, each event may produce a\ndifferent value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionAlternative",
    "pageType": "web-api-interface",
    "summary": "The SpeechRecognitionAlternative interface of the Web Speech API represents a single word that has been recognized by the speech recognition service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/PointerEvent",
    "pageType": "web-api-constructor",
    "summary": "The PointerEvent() constructor creates a new synthetic\nand untrusted PointerEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionAlternative/confidence",
    "pageType": "web-api-instance-property",
    "summary": "The confidence read-only property of the\nSpeechRecognitionResult interface returns a numeric estimate of how\nconfident the speech recognition system is that the recognition is correct."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/persistentDeviceId",
    "pageType": "web-api-instance-property",
    "summary": "The persistentDeviceId read-only property of the PointerEvent interface is a unique identifier for the pointing device generating the PointerEvent.\nThis provides a secure, reliable way to identify multiple pointing devices (such as pens) interacting with the screen simultaneously."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionAlternative/transcript",
    "pageType": "web-api-instance-property",
    "summary": "The transcript read-only property of the\nSpeechRecognitionResult interface returns a string containing the\ntranscript of the recognized word(s)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/twist",
    "pageType": "web-api-instance-property",
    "summary": "The twist read-only property of the\nPointerEvent interface represents the clockwise rotation of the pointer\n(e.g., pen stylus) around its major axis, in degrees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/noiseSuppression",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's noiseSuppression property is a ConstrainBoolean describing the requested or mandatory constraints placed upon the value of the noiseSuppression constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PointerEvent/tangentialPressure",
    "pageType": "web-api-instance-property",
    "summary": "The tangentialPressure read-only property of the\nPointerEvent interface represents the normalized tangential pressure of\nthe pointer input (also known as barrel pressure or cylinder stress)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/logicalSurface",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's logicalSurface property is a ConstrainDOMString describing the requested or mandatory constraints placed upon the value of the logicalSurface constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints",
    "pageType": "web-api-interface",
    "summary": "The MediaTrackConstraints dictionary is used to describe a set of media capabilities and the value or values each can take on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Popover_API",
    "pageType": "web-api-overview",
    "summary": "The Popover API provides developers with a standard, consistent, flexible mechanism for displaying popover content on top of other page content. Popover content can be controlled either using HTML attributes, or via JavaScript."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/restrictOwnAudio",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's restrictOwnAudio property is a ConstrainBoolean that specifies the requested or mandatory constraints placed on the value of the restrictOwnAudio constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Popover_API/Using",
    "pageType": "guide",
    "summary": "The Popover API provides developers with a standard, consistent, flexible mechanism for displaying popover content on top of other page content. Popover content can be controlled either declaratively using HTML attributes, or via JavaScript. This article provides a detailed guide to using all of its features."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/sampleRate",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nsampleRate property is a ConstrainULong\ndescribing the requested or mandatory constraints placed upon the value of the\nsampleRate constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Crypto",
    "pageType": "web-api-interface",
    "summary": "The Crypto interface represents basic cryptography features available in the current context.\nIt allows access to a cryptographically strong random number generator and to cryptographic primitives."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/deviceId",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\ndeviceId property is a ConstrainDOMString\ndescribing the requested or mandatory constraints placed upon the value of the\ndeviceId constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/suppressLocalAudioPlayback",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's suppressLocalAudioPlayback property is a ConstrainBoolean describing the requested or mandatory constraints placed upon the value of the suppressLocalAudioPlayback constrainable property. This property controls whether the audio playing in a tab will continue to be played out of a user's local speakers when the tab is captured."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Crypto/randomUUID",
    "pageType": "web-api-instance-method",
    "summary": "The randomUUID() method of the Crypto interface is used to generate a v4 UUID using a cryptographically secure random number generator."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/frameRate",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nframeRate property is a ConstrainDouble\ndescribing the requested or mandatory constraints placed upon the value of the\nframeRate constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Crypto/getRandomValues",
    "pageType": "web-api-instance-method",
    "summary": "The Crypto.getRandomValues() method lets you get cryptographically strong random values.\nThe array given as the parameter is filled with random numbers (random in its cryptographic meaning)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/volume",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nvolume property is a ConstrainDouble\ndescribing the requested or mandatory constraints placed upon the value of the\nvolume constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Crypto/subtle",
    "pageType": "web-api-instance-property",
    "summary": "The Crypto.subtle read-only property returns a\nSubtleCrypto which can then be used to perform low-level\ncryptographic operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/latency",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nlatency property is a ConstrainDouble\ndescribing the requested or mandatory constraints placed upon the value of the\nlatency constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ClipboardItem",
    "pageType": "web-api-interface",
    "summary": "The ClipboardItem interface of the Clipboard API represents a single item format, used when reading or writing clipboard data using Clipboard.read() and Clipboard.write() respectively."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/channelCount",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nchannelCount property is a ConstrainULong\ndescribing the requested or mandatory constraints placed upon the value of the\nchannelCount constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/echoCancellation",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nechoCancellation property is a\nConstrainBooleanOrDOMString describing the requested or mandatory constraints placed\nupon the value of the echoCancellation constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ClipboardItem/supports_static",
    "pageType": "web-api-static-method",
    "summary": "The supports() static method of the ClipboardItem interface returns true if the given MIME type is supported by the clipboard, and false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/sampleSize",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nsampleSize property is a ConstrainULong\ndescribing the requested or mandatory constraints placed upon the value of the\nsampleSize constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ClipboardItem/presentationStyle",
    "pageType": "web-api-instance-property",
    "summary": "The read-only presentationStyle property of the ClipboardItem interface returns a string indicating how an item should be presented."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/aspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's aspectRatio property is a ConstrainDouble describing the requested or mandatory constraints placed upon the value of the\naspectRatio constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ClipboardItem/ClipboardItem",
    "pageType": "web-api-constructor",
    "summary": "The ClipboardItem() constructor creates a new ClipboardItem object, which represents data to be stored or retrieved via the Clipboard API clipboard.write() and clipboard.read() methods, respectively."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/groupId",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\ngroupId property is a ConstrainDOMString\ndescribing the requested or mandatory constraints placed upon the value of the\ngroupId constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ClipboardItem/getType",
    "pageType": "web-api-instance-method",
    "summary": "The getType() method of the ClipboardItem interface returns a Promise that resolves with a Blob of the requested MIME type or an error if the MIME type is not found."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/height",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nheight property is a ConstrainULong\ndescribing the requested or mandatory constraints placed upon the value of the\nheight constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ClipboardItem/types",
    "pageType": "web-api-instance-property",
    "summary": "The read-only types property of the ClipboardItem interface returns an Array of MIME types available within the ClipboardItem."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/facingMode",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nfacingMode property is a ConstrainDOMString\ndescribing the requested or mandatory constraints placed upon the value of the\nfacingMode constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/width",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's\nwidth property is a ConstrainULong\ndescribing the requested or mandatory constraints placed upon the value of the\nwidth constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextFormatUpdateEvent",
    "pageType": "web-api-interface",
    "summary": "The TextFormatUpdateEvent interface is a DOM event that represents a list of text formats that an Input Method Editor (IME) window wants to apply to the text being composed in an editable region that's attached to an EditContext instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/autoGainControl",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's autoGainControl property is a ConstrainBoolean describing the requested or mandatory constraints placed\nupon the value of the autoGainControl constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextFormatUpdateEvent/getTextFormats",
    "pageType": "web-api-instance-method",
    "summary": "The getTextFormats() method of the TextFormatUpdateEvent interface returns an Array of TextFormat objects that represent the formats that an Input Method Editor (IME) window wants to apply to the text being composed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackConstraints/displaySurface",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackConstraints dictionary's displaySurface property is a ConstrainDOMString describing the preferred value for the displaySurface constrainable property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextFormatUpdateEvent/TextFormatUpdateEvent",
    "pageType": "web-api-constructor",
    "summary": "The TextFormatUpdateEvent() constructor returns a new TextFormatUpdateEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedString",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedString interface represents string attributes which can be animated from each SVG declaration. You need to create SVG attribute before doing anything else, everything should be declared inside this."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedString/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal read-only property of the SVGAnimatedString interface contains the same value as the SVGAnimatedString.baseVal property. If the given attribute or property is being animated, it contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, then it contains the same value as baseVal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemWritableFileStream",
    "pageType": "web-api-interface",
    "summary": "The FileSystemWritableFileStream interface of the File System API is a WritableStream object with additional convenience methods, which operates on a single file on disk. The interface is accessed through the FileSystemFileHandle.createWritable() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedString/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "BaseVal gets or sets the base value of the given attribute before any animations are applied. The base value of the given attribute before applying any animations. Setter throws DOMException."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemWritableFileStream/write",
    "pageType": "web-api-instance-method",
    "summary": "The write() method of the FileSystemWritableFileStream interface writes content into the file the method is called on, at the current file cursor offset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVG_API",
    "pageType": "web-api-overview",
    "summary": "SVG provides elements for circles, rectangles, and simple and complex curves. The elements' attribute values specify how these must be drawn. The SVG API is the subset of the DOM connecting these SVG elements and their attribute values to scripts or programming languages by representing them in memory. The SVG API thus provides methods that allow programmatic access to the SVG elements and their attribute values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemWritableFileStream/truncate",
    "pageType": "web-api-instance-method",
    "summary": "The truncate() method of the FileSystemWritableFileStream interface resizes the file associated with the stream to the specified size in bytes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture",
    "pageType": "web-api-interface",
    "summary": "The GPUTexture interface of the WebGPU API represents a container used to store 1D, 2D, or 3D arrays of data, such as images, to use in GPU rendering operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemWritableFileStream/seek",
    "pageType": "web-api-instance-method",
    "summary": "The seek() method of the FileSystemWritableFileStream interface updates the current file cursor offset to the position (in bytes) specified when calling the method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/sampleCount",
    "pageType": "web-api-instance-property",
    "summary": "The sampleCount read-only property of the\nGPUTexture interface represents the sample count of the GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUTexture interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance",
    "pageType": "web-api-interface",
    "summary": "The Performance interface provides access to performance-related information for the current page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/format",
    "pageType": "web-api-instance-property",
    "summary": "The format read-only property of the\nGPUTexture interface represents the format of the GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/memory",
    "pageType": "web-api-instance-property",
    "summary": "The non-standard and legacy memory read-only property returns the size of the JavaScript heap which can be helpful to measure and reduce the memory footprint of websites."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/dimension",
    "pageType": "web-api-instance-property",
    "summary": "The dimension read-only property of the\nGPUTexture interface represents the dimension of the set of texels for each GPUTexture subresource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/mark",
    "pageType": "web-api-instance-method",
    "summary": "The mark() method creates a named PerformanceMark object representing a high resolution timestamp marker in the browser's performance timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/createView",
    "pageType": "web-api-instance-method",
    "summary": "The createView() method of the\nGPUTexture interface creates a GPUTextureView representing a specific view of the GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/measure",
    "pageType": "web-api-instance-method",
    "summary": "The measure() method creates a named PerformanceMeasure object representing a time measurement between two marks in the browser's performance timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the\nGPUTexture interface represents the height of the GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/clearMeasures",
    "pageType": "web-api-instance-method",
    "summary": "The clearMeasures() method removes all or specific PerformanceMeasure objects from the browser's performance timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/usage",
    "pageType": "web-api-instance-property",
    "summary": "The usage read-only property of the\nGPUTexture interface is the bitwise flags representing the allowed usages of the GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/getEntries",
    "pageType": "web-api-instance-method",
    "summary": "The getEntries() method returns an array of all PerformanceEntry objects currently present in the performance timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/destroy",
    "pageType": "web-api-instance-method",
    "summary": "The destroy() method of the\nGPUTexture interface destroys the GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/clearMarks",
    "pageType": "web-api-instance-method",
    "summary": "The clearMarks() method removes all or specific PerformanceMark objects from the browser's performance timeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the\nGPUTexture interface represents the width of the GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/navigation",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformance.navigation\nread-only property returns a PerformanceNavigation object representing\nthe type of navigation that occurs in the given browsing context, such as the number of\nredirections needed to fetch the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/mipLevelCount",
    "pageType": "web-api-instance-property",
    "summary": "The mipLevelCount read-only property of the\nGPUTexture interface represents the number of mip levels of the GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/resourcetimingbufferfull_event",
    "pageType": "web-api-event",
    "summary": "The resourcetimingbufferfull event is fired when the browser's resource timing buffer is full."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUTexture/depthOrArrayLayers",
    "pageType": "web-api-instance-property",
    "summary": "The depthOrArrayLayers read-only property of the\nGPUTexture interface represents the depth or layer count of the GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/getEntriesByName",
    "pageType": "web-api-instance-method",
    "summary": "The getEntriesByName() method returns an array of PerformanceEntry objects currently present in the performance timeline with the given name and type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLDepthInformation",
    "pageType": "web-api-interface",
    "summary": "The XRWebGLDepthInformation interface contains depth information from the GPU/WebGL (returned by XRWebGLBinding.getDepthInformation())."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRWebGLDepthInformation/texture",
    "pageType": "web-api-instance-property",
    "summary": "The read-only texture property of the XRWebGLDepthInformation interface is a WebGLTexture containing depth buffer information as an opaque texture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/clearResourceTimings",
    "pageType": "web-api-instance-method",
    "summary": "The clearResourceTimings() method removes all performance entries with an entryType of \"resource\" from the browser's performance timeline and sets the size of the performance resource data buffer to zero."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Network_Information_API",
    "pageType": "web-api-overview",
    "summary": "The Network Information API provides information about the system's connection in terms of general connection type (e.g., 'wifi, 'cellular', etc.).\nThis can be used to select high definition content or low definition content based on the user's connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/measureUserAgentSpecificMemory",
    "pageType": "web-api-instance-method",
    "summary": "The measureUserAgentSpecificMemory() method is used to estimate the memory usage of a web application including all its iframes and workers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSpace",
    "pageType": "web-api-interface",
    "summary": "The XRSpace interface of the WebXR Device API is an abstract interface providing a common basis for every class which represents a virtual coordinate system within the virtual world, in which its origin corresponds to a physical location. Spatial data in WebXR is always expressed relative to an object based upon one of the descendant interfaces of XRSpace, at the time at which a given XRFrame takes place."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathEvaluator",
    "pageType": "web-api-interface",
    "summary": "The XPathEvaluator interface allows to compile and evaluate XPath expressions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/getEntriesByType",
    "pageType": "web-api-instance-method",
    "summary": "The getEntriesByType() method returns an array of PerformanceEntry objects currently present in the performance timeline for a given type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathEvaluator/XPathEvaluator",
    "pageType": "web-api-constructor",
    "summary": "The XPathEvaluator() constructor creates a new XPathEvaluator."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/timing",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformance.timing read-only\nproperty returns a PerformanceTiming object containing latency-related\nperformance information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathEvaluator/createExpression",
    "pageType": "web-api-instance-method",
    "summary": "This method compiles an XPathExpression which can then be used for\n(repeated) evaluations of the XPath expression."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the Performance interface is a serializer; it returns a JSON representation of the Performance object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathEvaluator/evaluate",
    "pageType": "web-api-instance-method",
    "summary": "The evaluate() method of the XPathEvaluator interface\nexecutes an XPath expression on the given node or document and returns an\nXPathResult."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/now",
    "pageType": "web-api-instance-method",
    "summary": "The performance.now() method returns a high resolution timestamp in milliseconds. It represents the time elapsed since Performance.timeOrigin (the time when navigation has started in window contexts, or the time when the worker is run in Worker and ServiceWorker contexts)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathEvaluator/createNSResolver",
    "pageType": "web-api-instance-method",
    "summary": "The createNSResolver() method of the XPathEvaluator interface used to create a custom XPathNSResolver object. It now returns the input as-is and is only kept for compatibility reasons."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/setResourceTimingBufferSize",
    "pageType": "web-api-instance-method",
    "summary": "The setResourceTimingBufferSize() method sets the desired size of the browser's resource timing buffer which stores the \"resource\" performance entries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasons/children",
    "pageType": "web-api-instance-property",
    "summary": "The children read-only property of the\nNotRestoredReasons interface returns an array of NotRestoredReasons objects, one for each child <iframe> embedded in the current document, which may contain reasons why the top-level frame was blocked relating to the child frames."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/timeOrigin",
    "pageType": "web-api-instance-property",
    "summary": "The timeOrigin read-only property of the Performance interface returns the high resolution timestamp that is used as the baseline for performance-related timestamps."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasons/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the\nNotRestoredReasons interface returns a string representing the name attribute value of the <iframe> the document is contained in (for example <iframe name=\"bar\" src=\"...\">)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Performance/eventCounts",
    "pageType": "web-api-instance-property",
    "summary": "The read-only performance.eventCounts property is an EventCounts map containing the number of events which have been dispatched per event type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasons",
    "pageType": "web-api-interface",
    "summary": "The NotRestoredReasons interface of the Performance API provides report data containing reasons why the current document was blocked from using the back/forward cache (bfcache) on navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasons/src",
    "pageType": "web-api-instance-property",
    "summary": "The src read-only property of the\nNotRestoredReasons interface returns a string representing the path to the source of the <iframe> the document is contained in (for example <iframe src=\"b.html\">)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_depth_texture",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_depth_texture extension is part of the WebGL API and defines 2D depth and depth-stencil textures."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasons/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the\nNotRestoredReasons interface returns a string representing the URL of the navigated page or <iframe>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFencedFrameElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLFencedFrameElement interface represents a <fencedframe> element in JavaScript and provides configuration properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasons/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the NotRestoredReasons interface is a serializer; it returns a JSON representation of the NotRestoredReasons object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFencedFrameElement/config",
    "pageType": "web-api-instance-property",
    "summary": "The config property of the HTMLFencedFrameElement contains a FencedFrameConfig object, which represents the navigation of a <fencedframe>, i.e., what content will be displayed in it. A FencedFrameConfig is returned from a source such as the Protected Audience API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasons/reasons",
    "pageType": "web-api-instance-property",
    "summary": "The reasons read-only property of the\nNotRestoredReasons interface returns an array of NotRestoredReasonDetails objects, each representing a reason why the navigated page was blocked from using the back/forward cache (bfcache)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFencedFrameElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the HTMLFencedFrameElement gets and sets the value of the corresponding <fencedframe> height attribute, which specifies the height of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasons/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the\nNotRestoredReasons interface returns a string representing the id attribute value of the <iframe> the document is contained in (for example <iframe id=\"foo\" src=\"...\">)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFencedFrameElement/allow",
    "pageType": "web-api-instance-property",
    "summary": "The allow property of the HTMLFencedFrameElement gets and sets the value of the corresponding <fencedframe> allow attribute, which represents a Permissions Policy applied to the content when it is first embedded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificate",
    "pageType": "web-api-interface",
    "summary": "The RTCCertificate interface of the WebRTC API provides an object representing a certificate that an RTCPeerConnection uses to authenticate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificate/getFingerprints",
    "pageType": "web-api-instance-method",
    "summary": "The getFingerprints() method of the RTCCertificate interface is used to get an array of certificate fingerprints."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLFencedFrameElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the HTMLFencedFrameElement gets and sets the value of the corresponding <fencedframe> width attribute, which specifies the width of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCCertificate/expires",
    "pageType": "web-api-instance-property",
    "summary": "The read-only expires property of the RTCCertificate interface returns the expiration date of the certificate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Remote_Playback_API",
    "pageType": "web-api-overview",
    "summary": "The Remote Playback API extends the HTMLMediaElement to enable the control of media played on a remote device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FederatedCredential",
    "pageType": "web-api-interface",
    "summary": "The FederatedCredential interface of the Credential Management API provides information about credentials from a federated identity provider. A federated identity provider is an entity that a website trusts to correctly authenticate a user, and that provides an API for that purpose. OpenID Connect is an example of a federated identity provider framework."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRReferenceSpace",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API's XRReferenceSpace interface describes the coordinate system for a specific tracked entity or object within the virtual world using a specified tracking behavior. The tracking behavior is defined by the selected reference space type. It expands upon the base class, XRSpace, by adding support for several different tracking behaviors as well as to request a new reference space which describes the offset transform between the tracked object and another location in the world."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FederatedCredential/FederatedCredential",
    "pageType": "web-api-constructor",
    "summary": "The FederatedCredential() constructor creates a new FederatedCredential object. In supporting browsers, an instance of this class may be passed the credential received from the init object for global fetch()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRReferenceSpace/reset_event",
    "pageType": "web-api-event",
    "summary": "The reset event is sent to an XRReferenceSpace object when a discontinuity is detected in either the native origin or the effective origin, causing a jump in the position or orientation of objects oriented using the reference space. This is common when the user calibrates or recalibrates an XR device, or if the device automatically changes its origin after losing tracking of the user, then re-gaining it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FederatedCredential/provider",
    "pageType": "web-api-instance-property",
    "summary": "The provider property of the\nFederatedCredential interface returns a string\ncontaining a credential's federated identity provider."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRReferenceSpace/getOffsetReferenceSpace",
    "pageType": "web-api-instance-method",
    "summary": "The XRReferenceSpace\ninterface's getOffsetReferenceSpace() method returns a\nnew reference space object which describes the relative difference in position between\nthe object on which the method is called and a given point in 3D space. The\nobject returned by getOffsetReferenceSpace() is an\nXRReferenceSpace if called on an XRReferenceSpace, or an\nXRBoundedReferenceSpace if called on an object of that type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FederatedCredential/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol property of the\nFederatedCredential interface returns a read-only\nstring containing a credential's federated identity protocol. If this\nproperty is null, the protocol may be inferred from the\nFederatedCredential.provider property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPoint",
    "pageType": "web-api-interface",
    "summary": "A DOMPoint object represents a 2D or 3D point in a coordinate system; it includes values for the coordinates in up to three dimensions, as well as an optional perspective value. DOMPoint is based on DOMPointReadOnly but allows its properties' values to be changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_texture_half_float",
    "pageType": "webgl-extension",
    "summary": "The OES_texture_half_float extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPoint/x",
    "pageType": "web-api-instance-property",
    "summary": "The DOMPoint interface's\nx property holds the horizontal coordinate, x, for a\npoint in space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFuncRElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEFuncRElement interface corresponds to the <feFuncR> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPoint/z",
    "pageType": "web-api-instance-property",
    "summary": "The DOMPoint interface's\nz property specifies the depth coordinate of a point in\nspace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPoint/w",
    "pageType": "web-api-instance-property",
    "summary": "The DOMPoint interface's\nw property holds the point's perspective value, w, for a\npoint in space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDTMFToneChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The RTCDTMFToneChangeEvent interface represents events sent to indicate that DTMF tones have started or finished playing. This interface is used by the tonechange event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPoint/y",
    "pageType": "web-api-instance-property",
    "summary": "The DOMPoint interface's\ny property holds the vertical coordinate, y,\nfor a point in space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDTMFToneChangeEvent/RTCDTMFToneChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The RTCDTMFToneChangeEvent() constructor creates a new\nRTCDTMFToneChangeEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPoint/DOMPoint",
    "pageType": "web-api-constructor",
    "summary": "The DOMPoint() constructor\ncreates and returns a new DOMPoint object, given the values for some or\nall of its properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDTMFToneChangeEvent/tone",
    "pageType": "web-api-instance-property",
    "summary": "The read-only property RTCDTMFToneChangeEvent.tone\nreturns the DTMF character which has just begun to play, or an empty string\n(\"\"). if all queued tones have finished playing (that is,\nRTCDTMFSender.toneBuffer is empty)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMPoint/fromPoint_static",
    "pageType": "web-api-static-method",
    "summary": "The fromPoint() static method of the DOMPoint interface creates and returns a new mutable DOMPoint object given a source point."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGUnitTypes",
    "pageType": "web-api-interface",
    "summary": "The SVGUnitTypes interface defines a commonly used set of constants used for reflecting gradientUnits, patternContentUnits and other similar attributes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage",
    "pageType": "web-api-interface",
    "summary": "The Storage interface of the Web Storage API provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage/getItem",
    "pageType": "web-api-instance-method",
    "summary": "The getItem() method of the Storage\ninterface, when passed a key name, will return that key's value, or null if\nthe key does not exist, in the given Storage object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Prioritized_Task_Scheduling_API",
    "pageType": "web-api-overview",
    "summary": "The Prioritized Task Scheduling API provides a standardized way to prioritize all tasks belonging to an application, whether they are defined in a website developer's code or in third-party libraries and frameworks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage/removeItem",
    "pageType": "web-api-instance-method",
    "summary": "The removeItem() method of the Storage\ninterface, when passed a key name, will remove that key from the given\nStorage object if it exists.\nThe Storage interface of the Web Storage API provides access to a\nparticular domain's session or local storage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUPipelineLayout",
    "pageType": "web-api-interface",
    "summary": "The GPUPipelineLayout interface of the WebGPU API defines the GPUBindGroupLayouts used by a pipeline. GPUBindGroups used with the pipeline during command encoding must have compatible GPUBindGroupLayouts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage/key",
    "pageType": "web-api-instance-method",
    "summary": "The key() method of the Storage interface,\nwhen passed a number n, returns the name of the nth key in a given Storage\nobject. The order of keys is user-agent defined, so you should not rely on it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUPipelineLayout/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUPipelineLayout interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the\nStorage interface returns the number of data items stored in a given\nStorage object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage/setItem",
    "pageType": "web-api-instance-method",
    "summary": "The setItem() method of the Storage\ninterface, when passed a key name and value, will add that key to the given\nStorage object, or update that key's value if it already exists."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the\nIDBDatabase interface is a string that contains the\nname of the connected database."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the Storage\ninterface clears all keys stored in a given Storage object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase",
    "pageType": "web-api-interface",
    "summary": "The IDBDatabase interface of the IndexedDB API provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase/close_event",
    "pageType": "web-api-event",
    "summary": "The close event is fired on IDBDatabase when the database connection is unexpectedly closed. This could happen, for example, if the underlying storage is removed or if the user clears the database in the browser's history preferences."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultReader/read",
    "pageType": "web-api-instance-method",
    "summary": "The read() method of the ReadableStreamDefaultReader interface returns a Promise providing access to the next chunk in the stream's internal queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultReader",
    "pageType": "web-api-interface",
    "summary": "The ReadableStreamDefaultReader interface of the Streams API represents a default reader that can be used to read stream data supplied from a network (such as a fetch request)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase/createObjectStore",
    "pageType": "web-api-instance-method",
    "summary": "The createObjectStore() method of the\nIDBDatabase interface creates and returns a new IDBObjectStore."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultReader/releaseLock",
    "pageType": "web-api-instance-method",
    "summary": "The releaseLock() method of the ReadableStreamDefaultReader interface releases the reader's lock on the stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase/deleteObjectStore",
    "pageType": "web-api-instance-method",
    "summary": "The deleteObjectStore() method of the\nIDBDatabase interface destroys the object store with the given name in\nthe connected database, along with any indexes that reference it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultReader/cancel",
    "pageType": "web-api-instance-method",
    "summary": "The cancel() method of the\nReadableStreamDefaultReader interface returns a Promise that resolves when the stream is canceled. Calling this method signals a loss of interest in the stream by a consumer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase/versionchange_event",
    "pageType": "web-api-event",
    "summary": "The versionchange event is fired when a database structure change (upgradeneeded event send on an IDBOpenDBRequest or IDBFactory.deleteDatabase) was requested elsewhere (most probably in\nanother window/tab on the same computer)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultReader/ReadableStreamDefaultReader",
    "pageType": "web-api-constructor",
    "summary": "The ReadableStreamDefaultReader()\nconstructor creates and returns a ReadableStreamDefaultReader object\ninstance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase/version",
    "pageType": "web-api-instance-property",
    "summary": "The version property of the IDBDatabase\ninterface is a 64-bit integer\nthat contains the version of the connected database.\nWhen a database is first created, this attribute is an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamDefaultReader/closed",
    "pageType": "web-api-instance-property",
    "summary": "The closed read-only property of the\nReadableStreamDefaultReader interface returns a\nPromise that fulfills when the stream closes, or rejects if the\nstream throws an error or the reader's lock is released. This property enables you\nto write code that responds to an end to the streaming process."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the IDBDatabase\ninterface returns immediately and closes the connection in a separate thread."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFRecord",
    "pageType": "web-api-interface",
    "summary": "The NDEFRecord interface of the Web NFC API provides data that can be read from, or written to, compatible NFC devices, e.g., NFC tags supporting NDEF."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase/transaction",
    "pageType": "web-api-instance-method",
    "summary": "The transaction method of the IDBDatabase interface immediately returns a transaction object (IDBTransaction) containing the IDBTransaction.objectStore method, which you can use to access your object store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFRecord/encoding",
    "pageType": "web-api-instance-property",
    "summary": "The encoding\nproperty of the NDEFRecord interface returns the encoding of\na textual payload, or null otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFRecord/data",
    "pageType": "web-api-instance-property",
    "summary": "The data\nproperty of the NDEFRecord interface returns a\nDataView containing the raw bytes of the record's payload."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBDatabase/objectStoreNames",
    "pageType": "web-api-instance-property",
    "summary": "The objectStoreNames read-only property of the\nIDBDatabase interface is a DOMStringList containing a\nlist of the names of the object stores currently in the connected database."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFRecord/mediaType",
    "pageType": "web-api-instance-property",
    "summary": "The mediaType\nproperty of the NDEFRecord interface returns the MIME type of the record. This value will be null if recordType is not equal to \"mime\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fenced_frame_API",
    "pageType": "web-api-overview",
    "summary": "The Fenced Frame API provides functionality for controlling content embedded in <fencedframe> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFRecord/lang",
    "pageType": "web-api-instance-property",
    "summary": "The lang\nproperty of the NDEFRecord interface returns the language of\na textual payload, or null if one was not supplied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFRecord/toRecords",
    "pageType": "web-api-instance-method",
    "summary": "The toRecords()\nmethod of the NDEFRecord interface converts\nNDEFRecord.data to a sequence of records based on\nNDEFRecord.recordType, and returns the result. This allows\nparsing the payloads of record types which may contain nested records, such\nas smart poster and external type records."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fenced_frame_API/Communication_with_embedded_frames",
    "pageType": "guide",
    "summary": "This article provides information on how communication differs between an embedder and content embedded inside different types of frame (i.e., an <iframe> and a <fencedframe>), and how passed data can be stored."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFRecord/NDEFRecord",
    "pageType": "web-api-constructor",
    "summary": "The NDEFRecord()\nconstructor of the Web NFC API returns a\nnewly constructed NDEFRecord object that represents data that can be\nread from, or written to, compatible NFC devices; e.g., NFC tags supporting NDEF."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGClipPathElement",
    "pageType": "web-api-interface",
    "summary": "The SVGClipPathElement interface provides access to the properties of <clipPath> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFRecord/recordType",
    "pageType": "web-api-instance-property",
    "summary": "The recordType\nproperty of the NDEFRecord interface returns the record type of the record."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGClipPathElement/clipPathUnits",
    "pageType": "web-api-instance-property",
    "summary": "The read-only clipPathUnits property of the SVGClipPathElement interface reflects the clipPathUnits attribute of a <clipPath> element which defines the coordinate system to use for the content of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFRecord/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the\nNDEFRecord interface returns the record identifier, which is an\nabsolute or relative URL used to identify the record."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGClipPathElement/transform",
    "pageType": "web-api-instance-property",
    "summary": "The read-only transform property of the SVGClipPathElement interface reflects the transform attribute of a <clipPath> element, that is a list of transformations applied to the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCylinderLayer/centralAngle",
    "pageType": "web-api-instance-property",
    "summary": "The centralAngle property of the XRCylinderLayer interface represents the angle in radians of the visible section of the cylinder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCylinderLayer",
    "pageType": "web-api-interface",
    "summary": "The XRCylinderLayer interface of the WebXR Device API is a layer that takes up a curved rectangular space in the virtual environment. Only the front of the layer is visible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPathElement",
    "pageType": "web-api-interface",
    "summary": "The SVGTextPathElement interface corresponds to the <textPath> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCylinderLayer/radius",
    "pageType": "web-api-instance-property",
    "summary": "The radius property of the XRCylinderLayer interface represents the radius of the cylinder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPathElement/startOffset",
    "pageType": "web-api-instance-property",
    "summary": "The startOffset read-only property of the SVGTextPathElement interface reflects the X component of the startOffset attribute of the given <textPath>, which defines an offset from the start of the path for the initial current text position along the path after converting the path to the <textPath> element's coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCylinderLayer/redraw_event",
    "pageType": "web-api-event",
    "summary": "The redraw event is sent to the XRCylinderLayer object when the underlying resources of the layer are lost or when the XR Compositor can no longer reproject the layer. If this event is sent, authors should redraw the content of the layer in the next XR animation frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPathElement/spacing",
    "pageType": "web-api-instance-property",
    "summary": "The spacing read-only property of the SVGTextPathElement interface reflects the spacing attribute of the given <textPath> element. It takes one of the TEXTPATH_SPACINGTYPE_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCylinderLayer/space",
    "pageType": "web-api-instance-property",
    "summary": "The space property of the XRCylinderLayer interface represents the layer's spatial relationship with the user's physical environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPathElement/method",
    "pageType": "web-api-instance-property",
    "summary": "The method read-only property of the SVGTextPathElement interface reflects the method attribute of the given <textPath> element. It takes one of the TEXTPATH_METHODTYPE_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCylinderLayer/aspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The aspectRatio property of the XRCylinderLayer interface represents the ratio of the visible cylinder section. It is the ratio of the width of the visible section of the cylinder divided by its height. The width is calculated by multiplying the radius with the centralAngle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTextPathElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGTextPathElement interface reflects the href attribute (or the deprecated xlink:href attribute) of the given <textPath> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCylinderLayer/transform",
    "pageType": "web-api-instance-property",
    "summary": "The transform property of the XRCylinderLayer interface represents the offset and orientation relative to the layer's space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationRequest",
    "pageType": "web-api-interface",
    "summary": "A PresentationRequest object is used to initiate or reconnect to a presentation made by a controlling browsing context. The PresentationRequest object MUST be implemented in a controlling browsing context provided by a controlling user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSValue",
    "pageType": "web-api-interface",
    "summary": "The CSSValue interface represents the current computed value of a CSS property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationRequest/start",
    "pageType": "web-api-instance-method",
    "summary": "The start() property of the PresentationRequest interface returns a Promise that resolves with a PresentationConnection after the user agent prompts the user to select a display and grant permission to use that display."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationRequest/PresentationRequest",
    "pageType": "web-api-constructor",
    "summary": "The PresentationRequest()\nconstructor creates a new PresentationRequest object which creates a\nnew PresentationRequest."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSValue/cssText",
    "pageType": "web-api-instance-property",
    "summary": "The cssText property of the CSSValue\ninterface represents the current computed CSS property value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationRequest/getAvailability",
    "pageType": "web-api-instance-method",
    "summary": "When the getAvailability() method is called, the user agent MUST run the following steps:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSValue/cssValueType",
    "pageType": "web-api-instance-property",
    "summary": "The cssValueType read-only property of the\nCSSValue interface represents the type of the current computed CSS\nproperty value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationRequest/reconnect",
    "pageType": "web-api-instance-method",
    "summary": "When the reconnect(presentationId) method is called on a PresentationRequest presentationRequest, the user agent MUST run the following steps to reconnect to a presentation:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaList",
    "pageType": "web-api-interface",
    "summary": "The MediaList interface represents the media queries of a stylesheet, e.g., those set using a <link> element's media attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPositionTryRule/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the CSSPositionTryRule interface represents the name of the position try fallback option specified by the @position-try at-rule's <dashed-ident>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method of the MediaList interface returns the media query at the specified index, or null if the specified index doesn't exist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPositionTryRule",
    "pageType": "web-api-interface",
    "summary": "The CSSPositionTryRule interface describes an object representing a @position-try at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPositionTryRule/style",
    "pageType": "web-api-instance-property",
    "summary": "The style read-only property of the CSSPositionTryRule interface returns a CSSPositionTryDescriptors object representing the declarations set in the body of the @position-try at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaList/deleteMedium",
    "pageType": "web-api-instance-method",
    "summary": "The deleteMedium() method of the MediaList interface removes from this MediaList the given media query."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTranslate",
    "pageType": "web-api-interface",
    "summary": "The CSSTranslate interface of the CSS Typed Object Model API represents the translate() value of the individual transform property in CSS. It inherits properties and methods from its parent CSSTransformValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaList/mediaText",
    "pageType": "web-api-instance-property",
    "summary": "The mediaText property of the MediaList\ninterface is a stringifier that returns a string representing the\nMediaList as text, and also allows you to set a new MediaList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTranslate/x",
    "pageType": "web-api-instance-property",
    "summary": "The x property of the\nCSSTranslate interface gets and sets the abscissa or x-axis of the\ntranslating vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaList/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property of the MediaList interface returns the number of media queries in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTranslate/CSSTranslate",
    "pageType": "web-api-constructor",
    "summary": "The CSSTranslate() constructor creates a\nnew CSSTranslate object representing the translate() value of the\nindividual transform property in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaList/appendMedium",
    "pageType": "web-api-instance-method",
    "summary": "The appendMedium() method of the MediaList interface adds a media query to the list. If the media query is already in the collection, this method does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTranslate/z",
    "pageType": "web-api-instance-property",
    "summary": "The z property of the\nCSSTranslate interface representing the z-component of the translating\nvector. A positive value moves the element towards the viewer, and a negative value\nfarther away."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaList/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() stringifier method of the MediaList interface returns a string representing the object's values. The value is a comma-separated list of media values in the same format as the MediaList.mediaText property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTranslate/y",
    "pageType": "web-api-instance-property",
    "summary": "The y property of the\nCSSTranslate interface gets and sets the ordinate or y-axis of the\ntranslating vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationTransition",
    "pageType": "web-api-interface",
    "summary": "The NavigationTransition interface of the Navigation API represents an ongoing navigation, that is, a navigation that hasn't yet reached the navigatesuccess or navigateerror stage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder",
    "pageType": "web-api-interface",
    "summary": "The GPUComputePassEncoder interface of the WebGPU API encodes commands related to controlling the compute shader stage, as issued by a GPUComputePipeline. It forms part of the overall encoding activity of a GPUCommandEncoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationTransition/from",
    "pageType": "web-api-instance-property",
    "summary": "The from read-only property of the\nNavigationTransition interface returns the NavigationHistoryEntry that the transition is coming from."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the\nGPUComputePassEncoder interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationTransition/finished",
    "pageType": "web-api-instance-property",
    "summary": "The finished read-only property of the\nNavigationTransition interface returns a Promise that fulfills at the same time the navigatesuccess event fires, or rejects at the same time the navigateerror event fires."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder/dispatchWorkgroups",
    "pageType": "web-api-instance-method",
    "summary": "The dispatchWorkgroups() method of the\nGPUComputePassEncoder interface dispatches a specific grid of workgroups to perform the work being done by the current GPUComputePipeline (i.e., set via GPUComputePassEncoder.setPipeline())."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigationTransition/navigationType",
    "pageType": "web-api-instance-property",
    "summary": "The navigationType read-only property of the\nNavigationTransition interface returns the type of the ongoing navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder/dispatchWorkgroupsIndirect",
    "pageType": "web-api-instance-method",
    "summary": "The dispatchWorkgroupsIndirect() method of the\nGPUComputePassEncoder interface dispatches a grid of workgroups, defined by the parameters of a GPUBuffer, to perform the work being done by the current GPUComputePipeline (i.e., set via GPUComputePassEncoder.setPipeline())."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationEvent",
    "pageType": "web-api-interface",
    "summary": "The MutationEvent interface provides event properties that are specific to modifications to the Document Object Model (DOM) hierarchy and nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder/end",
    "pageType": "web-api-instance-method",
    "summary": "The end() method of the\nGPUComputePassEncoder interface completes recording of the current compute pass command sequence."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationEvent/newValue",
    "pageType": "web-api-instance-property",
    "summary": "The newValue read-only property of the MutationEvent interface returns a string. In DOMAttrModified events, it represents the new value of the Attr node. In DOMCharacterDataModified events, it contains the new value of the CharacterData node. In all other cases, returns the empty string (\"\")."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationEvent/attrChange",
    "pageType": "web-api-instance-property",
    "summary": "The attrChange read-only property of the MutationEvent interface returns a number indicating what kind of change triggered the DOMAttrModified event. The three possible values are MODIFICATION (1), ADDITION (2) or REMOVAL (3). It has no meaning for other events and is then set to 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder/popDebugGroup",
    "pageType": "web-api-instance-method",
    "summary": "The popDebugGroup() method of the\nGPUComputePassEncoder interface ends a compute pass debug group, which is begun with a pushDebugGroup() call."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationEvent/prevValue",
    "pageType": "web-api-instance-property",
    "summary": "The prevValue read-only property of the MutationEvent interface returns a string. In DOMAttrModified events, it represents the previous value of the Attr node. In DOMCharacterDataModified events, it contains the previous value of the CharacterData node. In all other cases, returns the empty string (\"\")."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder/insertDebugMarker",
    "pageType": "web-api-instance-method",
    "summary": "The insertDebugMarker() method of the\nGPUComputePassEncoder interface marks a specific point in a series of encoded compute pass commands with a label."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationEvent/relatedNode",
    "pageType": "web-api-instance-property",
    "summary": "The relatedNode read-only property of the MutationEvent interface returns a string indicating the node related to the event, like the changed node inside the subtree for DOMSubtreeModified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder/setPipeline",
    "pageType": "web-api-instance-method",
    "summary": "The setPipeline() method of the\nGPUComputePassEncoder interface sets the GPUComputePipeline to use for this compute pass."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationEvent/initMutationEvent",
    "pageType": "web-api-instance-method",
    "summary": "The initMutationEvent() method of the MutationEvent interface initializes the\nvalue of a mutation event once it's been created (normally using the Document.createEvent() method)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MutationEvent/attrName",
    "pageType": "web-api-instance-property",
    "summary": "The attrName read-only property of the MutationEvent interface returns a string with the name of the node affected by the DOMAttrModified event. It has no meaning for other events and is then set to the empty string (\"\")."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder/setBindGroup",
    "pageType": "web-api-instance-method",
    "summary": "The setBindGroup() method of the\nGPUComputePassEncoder interface sets the GPUBindGroup to use for subsequent compute commands, for a given index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTemplateElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTemplateElement interface enables access to the contents of an HTML <template> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePassEncoder/pushDebugGroup",
    "pageType": "web-api-instance-method",
    "summary": "The pushDebugGroup() method of the\nGPUComputePassEncoder interface begins a compute pass debug group, which is marked with a specified label, and will contain all subsequent encoded commands up until a popDebugGroup() method is invoked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTemplateElement/content",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTemplateElement.content property returns a\n<template> element's template contents (a\nDocumentFragment)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WheelEvent",
    "pageType": "web-api-interface",
    "summary": "The WheelEvent interface represents events that occur due to the user moving a mouse wheel or similar input device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTemplateElement/shadowRootDelegatesFocus",
    "pageType": "web-api-instance-property",
    "summary": "The shadowRootDelegatesFocus property of the HTMLTemplateElement interface reflects the value of the shadowrootdelegatesfocus attribute of the associated <template> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTemplateElement/shadowRootClonable",
    "pageType": "web-api-instance-property",
    "summary": "The shadowRootClonable property reflects the value of the shadowrootclonable attribute of the associated <template> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WheelEvent/deltaX",
    "pageType": "web-api-instance-property",
    "summary": "The WheelEvent.deltaX read-only property is a\ndouble representing the horizontal scroll amount in the\nWheelEvent.deltaMode unit."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTemplateElement/shadowRootSerializable",
    "pageType": "web-api-instance-property",
    "summary": "The shadowRootSerializable property reflects the value of the shadowrootserializable attribute of the associated <template> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WheelEvent/deltaZ",
    "pageType": "web-api-instance-property",
    "summary": "The WheelEvent.deltaZ read-only property is a\ndouble representing the scroll amount along the z-axis, in the\nWheelEvent.deltaMode unit."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTemplateElement/shadowRootMode",
    "pageType": "web-api-instance-property",
    "summary": "The shadowRootMode property of the HTMLTemplateElement interface reflects the value of the shadowrootmode attribute of the associated <template> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BeforeUnloadEvent",
    "pageType": "web-api-interface",
    "summary": "The BeforeUnloadEvent interface represents the event object for the beforeunload event, which is fired when the current window, contained document, and associated resources are about to be unloaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WheelEvent/deltaY",
    "pageType": "web-api-instance-property",
    "summary": "The WheelEvent.deltaY read-only property is a\ndouble representing the vertical scroll amount in the\nWheelEvent.deltaMode unit."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BeforeUnloadEvent/returnValue",
    "pageType": "web-api-instance-property",
    "summary": "The returnValue property of the\nBeforeUnloadEvent interface, when set to a truthy value, triggers a browser-generated confirmation dialog asking users to confirm if they really want to leave the page when they try to close or reload it, or navigate somewhere else. This is intended to help prevent loss of unsaved data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WheelEvent/WheelEvent",
    "pageType": "web-api-constructor",
    "summary": "The WheelEvent() constructor returns a new WheelEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageBitmapRenderingContext",
    "pageType": "web-api-interface",
    "summary": "The ImageBitmapRenderingContext interface is a canvas rendering context that provides the functionality to replace the canvas's contents with the given ImageBitmap. Its context id (the first argument to HTMLCanvasElement.getContext() or OffscreenCanvas.getContext()) is \"bitmaprenderer\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageBitmapRenderingContext/canvas",
    "pageType": "web-api-instance-property",
    "summary": "The ImageBitmapRenderingContext.canvas property, part of the\nCanvas API, is a read-only reference to the\nHTMLCanvasElement or OffscreenCanvas object that is associated with the given context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WheelEvent/deltaMode",
    "pageType": "web-api-instance-property",
    "summary": "The WheelEvent.deltaMode read-only property returns an\nunsigned long representing the unit of the delta values scroll amount.\nPermitted values are:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageBitmapRenderingContext/transferFromImageBitmap",
    "pageType": "web-api-instance-method",
    "summary": "The ImageBitmapRenderingContext.transferFromImageBitmap()\nmethod displays the given ImageBitmap in the canvas associated with this\nrendering context. The ownership of the ImageBitmap is transferred to the\ncanvas as well."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentManager",
    "pageType": "web-api-interface",
    "summary": "The PaymentManager interface of the Payment Handler API is used to manage various aspects of payment app functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentManager/enableDelegations",
    "pageType": "web-api-instance-method",
    "summary": "The enableDelegations() method of the PaymentManager interface delegates responsibility for providing various parts of the required payment information to the payment app rather than collecting it from the browser (for example, via autofill)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalDecodeTime",
    "pageType": "web-api-instance-property",
    "summary": "The totalDecodeTime property of the RTCInboundRtpStreamStats dictionary indicates the total time spend decoding frames for this media source/stream, in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentManager/userHint",
    "pageType": "web-api-instance-property",
    "summary": "The userHint property of the PaymentManager interface provides a hint for the browser to display along with the payment app's name and icon in the Payment Handler UI."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitterBufferTargetDelay",
    "pageType": "web-api-instance-property",
    "summary": "The jitterBufferTargetDelay property of the RTCInboundRtpStreamStats dictionary indicates the accumulated target jitter buffer delay, in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Barcode_Detection_API",
    "pageType": "web-api-overview",
    "summary": "The Barcode Detection API detects linear and two-dimensional barcodes in images."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats",
    "pageType": "web-api-interface",
    "summary": "The RTCInboundRtpStreamStats dictionary of the WebRTC API is used to report statistics related to the receiving end of an RTP stream on the local end of the RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LanguageDetector",
    "pageType": "web-api-interface",
    "summary": "The LanguageDetector interface of the Translator and Language Detector APIs contains all the language detection functionality, including checking AI model availability, creating a new LanguageDetector instance, using it to detect a language, and more."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitterBufferDelay",
    "pageType": "web-api-instance-property",
    "summary": "The jitterBufferDelay property of the RTCInboundRtpStreamStats dictionary indicates the accumulated time that all audio samples and complete video frames have spent in the jitter buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LanguageDetector/availability_static",
    "pageType": "web-api-static-method",
    "summary": "The availability() static method of the LanguageDetector interface returns an enumerated value that indicates whether the browser AI model supports a given LanguageDetector configuration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/concealedSamples",
    "pageType": "web-api-instance-property",
    "summary": "The concealedSamples property of the RTCInboundRtpStreamStats dictionary indicates the total number of concealed samples for the received audio track over the lifetime of this stats object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LanguageDetector/measureInputUsage",
    "pageType": "web-api-instance-method",
    "summary": "The measureInputUsage() method of the LanguageDetector interface reports how much input quota would be used by a language detection operation for a given text input."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind property of the RTCInboundRtpStreamStats dictionary is a string indicating whether the described RTP stream contains audio or video media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LanguageDetector/detect",
    "pageType": "web-api-instance-method",
    "summary": "The detect() method of the LanguageDetector interface detects the closest matching language or languages that a given text string is most likely to be written in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/estimatedPlayoutTimestamp",
    "pageType": "web-api-instance-property",
    "summary": "The estimatedPlayoutTimestamp property of the RTCInboundRtpStreamStats dictionary indicates the estimated playout time of this receiver's track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LanguageDetector/inputQuota",
    "pageType": "web-api-instance-property",
    "summary": "The inputQuota read-only property of the LanguageDetector interface returns the input quota available to the browser for detecting languages."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/concealmentEvents",
    "pageType": "web-api-instance-property",
    "summary": "The concealmentEvents property of the RTCInboundRtpStreamStats dictionary indicates the total number of concealment events for the received audio track over the lifetime of this stats object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LanguageDetector/expectedInputLanguages",
    "pageType": "web-api-instance-property",
    "summary": "The expectedInputLanguages read-only property of the LanguageDetector interface returns the expected languages to be detected in the input text. Specifying expected input languages helps improve the accuracy of the language detection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCInboundRtpStreamStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LanguageDetector/destroy",
    "pageType": "web-api-instance-method",
    "summary": "The destroy() method of the LanguageDetector interface releases the resources assigned to the LanguageDetector instance it is called on and stops any further activity on it. This means that any ongoing and subsequent method calls made on the LanguageDetector will reject with an AbortError."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesDecoded",
    "pageType": "web-api-instance-property",
    "summary": "The framesDecoded property of the RTCInboundRtpStreamStats dictionary indicates the total number of video frames which have been decoded successfully for this media source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LanguageDetector/create_static",
    "pageType": "web-api-static-method",
    "summary": "The create() static method of the LanguageDetector interface creates a new LanguageDetector instance to detect languages."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/codecId",
    "pageType": "web-api-instance-property",
    "summary": "The codecId property of the RTCInboundRtpStreamStats dictionary is a string that uniquely identifies the object that was inspected to produce the data in the RTCCodecStats for the RTP stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/URL_Fragment_Text_Directives",
    "pageType": "web-api-overview",
    "summary": "The URL fragment text directives API allows web apps to interact with text fragments in the URL. Text fragments allow linking directly to a specific portion of text in a web document, without requiring the author to annotate it with an ID, using a particular syntax in the URL fragment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesReceived",
    "pageType": "web-api-instance-property",
    "summary": "The framesReceived property of the RTCInboundRtpStreamStats dictionary indicates the total number of complete frames received on this RTP stream over its lifetime."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Service_Worker_API",
    "pageType": "web-api-overview",
    "summary": "Service workers essentially act as proxy servers that sit between web applications, the browser, and the network (when available). They are intended, among other things, to enable the creation of effective offline experiences, intercept network requests, and take appropriate action based on whether the network is available, and update assets residing on the server. They will also allow access to push notifications and background sync APIs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCInboundRtpStreamStats dictionary is a string with the value \"inbound-rtp\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers",
    "pageType": "guide",
    "summary": "This article provides information on getting started with service workers, including basic architecture, registering a service worker, the installation and activation process for a new service worker, updating your service worker, cache control and custom responses, all in the context of an app with offline functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalPausesDuration",
    "pageType": "web-api-instance-property",
    "summary": "The totalPausesDuration property of the RTCRemoteInboundRtpStreamStats dictionary indicates the total time that the video in this stream has spent paused, in seconds"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ErrorEvent",
    "pageType": "web-api-interface",
    "summary": "The ErrorEvent interface represents events providing information related to errors in scripts or in files."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalSquaredInterFrameDelay",
    "pageType": "web-api-instance-property",
    "summary": "The totalSquaredInterFrameDelay property of the RTCInboundRtpStreamStats dictionary indicates the sum of the square of each inter-frame delay between consecutively rendered frames.\nIt is recorded after each frame is rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ErrorEvent/error",
    "pageType": "web-api-instance-property",
    "summary": "The error read-only property of the ErrorEvent interface returns a JavaScript value, such as an Error or DOMException, representing the error associated with this event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/silentConcealedSamples",
    "pageType": "web-api-instance-property",
    "summary": "The silentConcealedSamples property of the RTCInboundRtpStreamStats dictionary indicates the total number of silent concealed samples for the received audio track over the lifetime of this stats object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsDiscarded",
    "pageType": "web-api-instance-property",
    "summary": "The packetsDiscarded property of the RTCInboundRtpStreamStats dictionary indicates the cumulative number of RTP packets that have been discarded by the jitter buffer due to late or early-arrival, and are hence not played out."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ErrorEvent/filename",
    "pageType": "web-api-instance-property",
    "summary": "The filename read-only property of the ErrorEvent interface returns a string containing the name of the script file in which the error occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalFreezesDuration",
    "pageType": "web-api-instance-property",
    "summary": "The totalFreezesDuration property of the RTCRemoteInboundRtpStreamStats dictionary indicates the total time that the video in this stream has spent frozen, in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ErrorEvent/ErrorEvent",
    "pageType": "web-api-constructor",
    "summary": "The ErrorEvent() constructor creates a new ErrorEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesPerSecond",
    "pageType": "web-api-instance-property",
    "summary": "The framesPerSecond property of the RTCInboundRtpStreamStats dictionary indicates the number of frames decoded in the last second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ErrorEvent/colno",
    "pageType": "web-api-instance-property",
    "summary": "The colno read-only property of the ErrorEvent interface returns an integer containing the column number of the script file on which the error occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsReceived",
    "pageType": "web-api-instance-property",
    "summary": "The fecPacketsReceived property of the RTCInboundRtpStreamStats dictionary indicates how many Forward Error Correction (FEC) packets have been received by this RTP receiver from the remote peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ErrorEvent/message",
    "pageType": "web-api-instance-property",
    "summary": "The message read-only property of the ErrorEvent interface returns a string containing a human-readable error message describing the problem."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsLost",
    "pageType": "web-api-instance-property",
    "summary": "The packetsLost property of the RTCRemoteInboundRtpStreamStats dictionary returns the total number of RTP packets lost from the synchronization source (SSRC) since the beginning of reception."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitter",
    "pageType": "web-api-instance-property",
    "summary": "The jitter property of the RTCInboundRtpStreamStats dictionary indicates the packet interarrival jitter for this synchronization source (SSRC), in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ErrorEvent/lineno",
    "pageType": "web-api-instance-property",
    "summary": "The lineno read-only property of the ErrorEvent interface returns an integer containing the line number of the script file on which the error occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/trackIdentifier",
    "pageType": "web-api-instance-property",
    "summary": "The trackIdentifier property of the RTCInboundRtpStreamStats dictionary is a string that identifies the MediaStreamTrack associated with the inbound stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMPathElement",
    "pageType": "web-api-interface",
    "summary": "The SVGMPathElement interface corresponds to the <mpath> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/keyFramesDecoded",
    "pageType": "web-api-instance-property",
    "summary": "The keyFramesDecoded property of the RTCInboundRtpStreamStats dictionary represents the total number of key frames successfully decoded in this RTP media stream.\nThis includes, for example, key frames in VP8 (RFC 6386) or IDR-frames in H.264 (RFC 6184)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGMPathElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGMPathElement interface reflects the href or xlink:href \nDeprecated\n attribute of the given <mpath> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalInterFrameDelay",
    "pageType": "web-api-instance-property",
    "summary": "The totalInterFrameDelay property of the RTCInboundRtpStreamStats dictionary indicates the total accumulated time between consecutively rendered frames, in seconds.\nIt is recorded after each frame is rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/insertedSamplesForDeceleration",
    "pageType": "web-api-instance-property",
    "summary": "The insertedSamplesForDeceleration property of the RTCInboundRtpStreamStats dictionary accumulates the difference between the number of samples received and the number of samples played out of the jitter buffer while audio playout is slowed down."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAngle",
    "pageType": "web-api-interface",
    "summary": "The SVGAngle interface is used to represent a value that can be an <angle> or <number> value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesAssembledFromMultiplePackets",
    "pageType": "web-api-instance-property",
    "summary": "The framesAssembledFromMultiplePackets property of the RTCInboundRtpStreamStats dictionary indicates the total number of correctly decoded frames for this RTP stream that were assembled from more than one RTP packet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAngle/valueAsString",
    "pageType": "web-api-instance-property",
    "summary": "The valueAsString property of the SVGAngle interface represents the angle's value as a string, in the units expressed by unitType."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsDiscarded",
    "pageType": "web-api-instance-property",
    "summary": "The fecPacketsDiscarded property of the RTCInboundRtpStreamStats dictionary indicates the number of RTP Forward Error Correction (FEC) packets that have been discarded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAngle/valueInSpecifiedUnits",
    "pageType": "web-api-instance-property",
    "summary": "The valueInSpecifiedUnits property of the SVGAngle interface represents the value of this angle as a number, in the units expressed by the angle's unitType."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalAssemblyTime",
    "pageType": "web-api-instance-property",
    "summary": "The totalAssemblyTime property of the RTCInboundRtpStreamStats dictionary indicates the total time spent assembling successfully decoded video frames that were transported in multiple RTP packets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAngle/unitType",
    "pageType": "web-api-instance-property",
    "summary": "The unitType property of the SVGAngle interface is one of the unit type constants and represents the units in which this angle's value is expressed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId",
    "pageType": "web-api-instance-property",
    "summary": "The remoteId property of the RTCInboundRtpStreamStats dictionary specifies the id of the RTCRemoteOutboundRtpStreamStats object representing the remote peer's RTCRtpSender which is sending the media to the local peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAngle/newValueSpecifiedUnits",
    "pageType": "web-api-instance-method",
    "summary": "The newValueSpecifiedUnits() method of the SVGAngle interface sets the value to a number with an associated unitType, thereby replacing the values for all of the attributes on the object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/frameWidth",
    "pageType": "web-api-instance-property",
    "summary": "The frameWidth property of the RTCInboundRtpStreamStats dictionary indicates the width of the last decoded frame, in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAngle/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the SVGAngle interface represents the floating point value of the <angle> in degrees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/pauseCount",
    "pageType": "web-api-instance-property",
    "summary": "The pauseCount property of the RTCRemoteInboundRtpStreamStats dictionary indicates the total number of pauses experienced by this receiver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAngle/convertToSpecifiedUnits",
    "pageType": "web-api-instance-method",
    "summary": "The convertToSpecifiedUnits() method of the SVGAngle interface allows you to convert the angle's value to the specified unit type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/ssrc",
    "pageType": "web-api-instance-property",
    "summary": "The ssrc property of the RTCInboundRtpStreamStats dictionary identifies the synchronization source (SSRC) of this stream of RTP packets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/bytesReceived",
    "pageType": "web-api-instance-property",
    "summary": "The bytesReceived property of the RTCInboundRtpStreamStats dictionary indicates the total number of bytes received so far from this synchronization source (SSRC), not including header and padding bytes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoPlaybackQuality",
    "pageType": "web-api-interface",
    "summary": "A VideoPlaybackQuality object is returned by the HTMLVideoElement.getVideoPlaybackQuality() method and contains metrics that can be used to determine the playback quality of a video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/qpSum",
    "pageType": "web-api-instance-property",
    "summary": "The qpSum property of the RTCInboundRtpStreamStats dictionary indicates the sum of the Quantization Parameter (QP) values for every frame sent or received on the video track corresponding to this RTCInboundRtpStreamStats object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoPlaybackQuality/corruptedVideoFrames",
    "pageType": "web-api-instance-property",
    "summary": "The VideoPlaybackQuality interface's read-only\ncorruptedVideoFrames property the number of corrupted\nvideo frames that have been received since the <video> element was\nlast loaded or reloaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalAudioEnergy",
    "pageType": "web-api-instance-property",
    "summary": "The totalAudioEnergy property of the RTCInboundRtpStreamStats dictionary represents the total audio energy of a received audio track over the lifetime of this stats object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoPlaybackQuality/totalVideoFrames",
    "pageType": "web-api-instance-property",
    "summary": "The VideoPlaybackQuality interface's\ntotalVideoFrames read-only property returns the total\nnumber of video frames that have been displayed or dropped since the media was\nloaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitterBufferMinimumDelay",
    "pageType": "web-api-instance-property",
    "summary": "The jitterBufferMinimumDelay property of the RTCInboundRtpStreamStats dictionary indicates the minimum jitter buffer delay that might be achieved given only the network characteristics such as jitter and packet loss."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoPlaybackQuality/creationTime",
    "pageType": "web-api-instance-property",
    "summary": "The read-only creationTime property on the\nVideoPlaybackQuality interface reports the number of milliseconds since\nthe browsing context was created this quality sample was recorded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/transportId",
    "pageType": "web-api-instance-property",
    "summary": "The transportId property of the RTCInboundRtpStreamStats dictionary is a string that uniquely identifies the associated RTCTransportStats statistics object for this RTP stream's underlying transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoPlaybackQuality/droppedVideoFrames",
    "pageType": "web-api-instance-property",
    "summary": "The read-only droppedVideoFrames\nproperty of the VideoPlaybackQuality interface returns the number of\nvideo frames which have been dropped rather than being displayed since the last time\nthe media was loaded into the HTMLVideoElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/headerBytesReceived",
    "pageType": "web-api-instance-property",
    "summary": "The headerBytesReceived property of the RTCInboundRtpStreamStats dictionary indicates the total number of RTP header and padding bytes received for this synchronization source (SSRC), including those sent in retransmissions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoPlaybackQuality/totalFrameDelay",
    "pageType": "web-api-instance-property",
    "summary": "The VideoPlaybackQuality.totalFrameDelay read-only\nproperty returns a double containing the sum of the frame delay since the\ncreation of the associated HTMLVideoElement. The frame delay is the\ndifference between a frame's theoretical presentation time and its effective display\ntime."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsReceived",
    "pageType": "web-api-instance-property",
    "summary": "The packetsReceived property of the RTCInboundRtpStreamStats dictionary returns the total number of RTP packets received from the synchronization source (SSRC) of this stream, including retransmissions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedVideoFrame",
    "pageType": "web-api-interface",
    "summary": "The RTCEncodedVideoFrame of the WebRTC API represents an encoded video frame in the WebRTC receiver or sender pipeline, which may be modified using a WebRTC Encoded Transform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/nackCount",
    "pageType": "web-api-instance-property",
    "summary": "The nackCount property of the RTCInboundRtpStreamStats dictionary indicates the number of times the receiver sent a NACK packet to the sender."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedVideoFrame/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp read-only property of the RTCEncodedVideoFrame interface indicates the time at which frame sampling started."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/lastPacketReceivedTimestamp",
    "pageType": "web-api-instance-property",
    "summary": "The lastPacketReceivedTimestamp property of the RTCInboundRtpStreamStats dictionary indicates the time at which the most recently received packet arrived from this source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedVideoFrame/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the RTCEncodedVideoFrame interface indicates whether this frame is a key frame, delta frame, or empty frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/freezeCount",
    "pageType": "web-api-instance-property",
    "summary": "The freezeCount property of the RTCInboundRtpStreamStats dictionary indicates the total number of video freezes experienced by this receiver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedVideoFrame/data",
    "pageType": "web-api-instance-property",
    "summary": "The data property of the RTCEncodedVideoFrame interface returns a buffer containing the frame data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/jitterBufferEmittedCount",
    "pageType": "web-api-instance-property",
    "summary": "The jitterBufferEmittedCount property of the RTCInboundRtpStreamStats dictionary indicates the total number of audio samples and/or video frames that have come out of the jitter buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedVideoFrame/RTCEncodedVideoFrame",
    "pageType": "web-api-constructor",
    "summary": "The RTCEncodedVideoFrame() constructor creates a new and fully independent RTCEncodedVideoFrame object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalSamplesReceived",
    "pageType": "web-api-instance-property",
    "summary": "The totalSamplesReceived property of the RTCInboundRtpStreamStats dictionary indicates the total number of samples received on this stream, including concealedSamples."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCEncodedVideoFrame/getMetadata",
    "pageType": "web-api-instance-method",
    "summary": "The getMetadata() method of the RTCEncodedVideoFrame interface returns an object containing the metadata associated with the frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCInboundRtpStreamStats dictionary is a string that uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGScriptElement",
    "pageType": "web-api-interface",
    "summary": "The SVGScriptElement interface corresponds to the SVG <script> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalProcessingDelay",
    "pageType": "web-api-instance-property",
    "summary": "The totalProcessingDelay property of the RTCInboundRtpStreamStats dictionary indicates the total accumulated time spent processing audio or video samples, in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGScriptElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the SVGScriptElement interface reflects the type attribute of the given <script> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/playoutId",
    "pageType": "web-api-instance-property",
    "summary": "The playoutId property of the RTCInboundRtpStreamStats dictionary indicates the id of the RTCAudioPlayoutStats object that corresponds to this stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGScriptElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGScriptElement interface reflects the href or xlink:href \nDeprecated\n attribute of the given <script> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/audioLevel",
    "pageType": "web-api-instance-property",
    "summary": "The audioLevel property of the RTCInboundRtpStreamStats dictionary indicates the audio level of the received (remote) track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/mid",
    "pageType": "web-api-instance-property",
    "summary": "The mid property of the RTCInboundRtpStreamStats dictionary is a string that contains the media id negotiated between the local and remote peers.\nThis uniquely identifies the pairing of source and destination for the transceiver's stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushMessageData",
    "pageType": "web-api-interface",
    "summary": "The PushMessageData interface of the Push API provides methods which let you retrieve the push data sent by a server in various formats."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/removedSamplesForAcceleration",
    "pageType": "web-api-instance-property",
    "summary": "The removedSamplesForAcceleration property of the RTCInboundRtpStreamStats dictionary accumulates the difference between the number of samples played out of the jitter buffer and the number of samples received while audio playout is sped up."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushMessageData/blob",
    "pageType": "web-api-instance-method",
    "summary": "The blob() method of the PushMessageData interface extracts push message data as a Blob object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/totalSamplesDuration",
    "pageType": "web-api-instance-property",
    "summary": "The totalSamplesDuration property of the RTCRemoteInboundRtpStreamStats dictionary indicates the total duration of all audio samples that have been received.\nIn other words, the current duration of the track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushMessageData/json",
    "pageType": "web-api-instance-method",
    "summary": "The json() method of the PushMessageData interface extracts push message data by parsing it as a JSON string and returning the result."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCInboundRtpStreamStats/frameHeight",
    "pageType": "web-api-instance-property",
    "summary": "The frameHeight property of the RTCInboundRtpStreamStats dictionary indicates the height of the last decoded frame, in pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushMessageData/text",
    "pageType": "web-api-instance-method",
    "summary": "The text() method of the PushMessageData interface extracts push message data as a plain text string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList",
    "pageType": "web-api-interface",
    "summary": "The SVGTransformList interface defines a list of SVGTransform objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushMessageData/arrayBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The arrayBuffer() method of the PushMessageData interface extracts push message data as an ArrayBuffer object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/getItem",
    "pageType": "web-api-instance-method",
    "summary": "The getItem() method of the SVGTransformList interface returns the specified item from the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PushMessageData/bytes",
    "pageType": "web-api-instance-method",
    "summary": "The bytes() method of the PushMessageData interface extracts push message data as an Uint8Array object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/appendItem",
    "pageType": "web-api-instance-method",
    "summary": "The appendItem() method of the SVGTransformList interface inserts a new item at the end of the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLightEstimate",
    "pageType": "web-api-interface",
    "summary": "The XRLightEstimate interface of the WebXR Device API provides the estimated lighting values for an XRLightProbe at the time represented by an XRFrame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/consolidate",
    "pageType": "web-api-instance-method",
    "summary": "The consolidate() method of the SVGTransformList interface consolidates the list of separate SVGTransform objects by multiplying the equivalent transformation matrices together to result in a list consisting of a single SVGTransform object of type SVG_TRANSFORM_MATRIX."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLightEstimate/sphericalHarmonicsCoefficients",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sphericalHarmonicsCoefficients property of the XRLightEstimate interface returns a Float32Array containing 9 spherical harmonics coefficients."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/removeItem",
    "pageType": "web-api-instance-method",
    "summary": "The removeItem() method of the SVGTransformList interface removes an existing item from the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLightEstimate/primaryLightIntensity",
    "pageType": "web-api-instance-property",
    "summary": "The read-only primaryLightIntensity property of the XRLightEstimate interface returns a DOMPointReadOnly representing the intensity of the primary light source from the probeSpace of an XRLightProbe."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/insertItemBefore",
    "pageType": "web-api-instance-method",
    "summary": "The insertItemBefore() method of the SVGTransformList interface inserts a new item into the list at the specified position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLightEstimate/primaryLightDirection",
    "pageType": "web-api-instance-property",
    "summary": "The read-only primaryLightDirection property of the XRLightEstimate interface returns a DOMPointReadOnly representing the direction to the primary light source from the probeSpace of an XRLightProbe."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/replaceItem",
    "pageType": "web-api-instance-method",
    "summary": "The replaceItem() method of the SVGTransformList interface replaces an existing item in the list with a new item."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLSampler",
    "pageType": "web-api-interface",
    "summary": "The WebGLSampler interface is part of the WebGL 2 API and stores sampling parameters for WebGLTexture access inside of a shader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the SVGTransformList interface represents the number of items in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/initialize",
    "pageType": "web-api-instance-method",
    "summary": "The initialize() method of the SVGTransformList interface clears all existing current items from the list and re-initializes the list to hold the single item specified by the parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/change_event",
    "pageType": "web-api-event",
    "summary": "The change event of the Screen interface is fired on a specific screen when one or more of the following properties change on it:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the SVGTransformList interface clears all existing current items from the list, with the result being an empty list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen",
    "pageType": "web-api-interface",
    "summary": "The Screen interface represents a screen, usually the one on which the current window is being rendered, and is obtained using window.screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/createSVGTransformFromMatrix",
    "pageType": "web-api-instance-method",
    "summary": "The createSVGTransformFromMatrix() method of the SVGTransformList interface creates an SVGTransform object which is initialized to a transform of type SVG_TRANSFORM_MATRIX and whose values are the given matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/lockOrientation",
    "pageType": "web-api-instance-method",
    "summary": "The lockOrientation() method of the Screen\ninterface locks the screen into a specified orientation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransformList/numberOfItems",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfItems read-only property of the SVGTransformList interface represents the number of items in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/mozBrightness",
    "pageType": "web-api-instance-property",
    "summary": "Indicates how bright the screen's backlight is, on a scale from 0 (very dim) to 1 (full\nbrightness); this value is a double-precision float."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform/angle",
    "pageType": "web-api-instance-property",
    "summary": "The angle read-only property of the SVGTransform interface represents the angle of the transformation in degrees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/unlockOrientation",
    "pageType": "web-api-instance-method",
    "summary": "The Screen.unlockOrientation() method removes all the\nprevious screen locks set by the page/app. The ScreenOrientation.unlock()\nmethod should be used instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform",
    "pageType": "web-api-interface",
    "summary": "The SVGTransform interface reflects one of the component transformations within an SVGTransformList; thus, an SVGTransform object corresponds to a single component (e.g., scale(…) or matrix(…)) within a transform attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform/setSkewY",
    "pageType": "web-api-instance-method",
    "summary": "The setSkewY() method of the SVGTransform interface sets the transform type to SVG_TRANSFORM_SKEWY, with parameter angle defining the amount of skew along the Y-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/orientationchange_event",
    "pageType": "web-api-event",
    "summary": "The orientationchange event fires when the device's orientation has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the SVGTransform interface represents the type of transformation applied, specified by one of the SVG_TRANSFORM_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/pixelDepth",
    "pageType": "web-api-instance-property",
    "summary": "Returns the bit depth of the screen. Per the CSSOM, some implementations\nreturn 24 for compatibility reasons. See the browser compatibility section for those that don't."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform/setSkewX",
    "pageType": "web-api-instance-method",
    "summary": "The setSkewX() method of the SVGTransform interface sets the transform type to SVG_TRANSFORM_SKEWX, with parameter angle defining the amount of skew along the X-axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/height",
    "pageType": "web-api-instance-property",
    "summary": "The Screen.height read-only property returns the height\nof the screen in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform/setScale",
    "pageType": "web-api-instance-method",
    "summary": "The setScale() method of the SVGTransform interface sets the transform type to SVG_TRANSFORM_SCALE, with parameters sx and sy defining the scale amounts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/orientation",
    "pageType": "web-api-instance-property",
    "summary": "The orientation read-only property of the\nScreen interface returns the current orientation of the screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform/setRotate",
    "pageType": "web-api-instance-method",
    "summary": "The setRotate() method of the SVGTransform interface sets the transform type to SVG_TRANSFORM_ROTATE, with parameter angle defining the rotation angle and parameters cx and cy defining the optional center of rotation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/width",
    "pageType": "web-api-instance-property",
    "summary": "The Screen.width read-only property returns the width of\nthe screen in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform/setMatrix",
    "pageType": "web-api-instance-method",
    "summary": "The setMatrix() method of the SVGTransform interface sets the transform type to SVG_TRANSFORM_MATRIX, with parameter matrix defining the new transformation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/isExtended",
    "pageType": "web-api-instance-property",
    "summary": "The isExtended read-only property of the\nScreen interface returns true if the user's device has multiple screens, and false if not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform/setTranslate",
    "pageType": "web-api-instance-method",
    "summary": "The setTranslate() method of the SVGTransform interface sets the transform type to SVG_TRANSFORM_TRANSLATE, with parameters tx and ty defining the translation amounts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/availWidth",
    "pageType": "web-api-instance-property",
    "summary": "The Screen.availWidth property returns the amount of\nhorizontal space (in CSS pixels) available to the window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTransform/matrix",
    "pageType": "web-api-instance-property",
    "summary": "The matrix read-only property of the SVGTransform interface represents the transformation matrix that corresponds to the transformation type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/mozEnabled",
    "pageType": "web-api-instance-property",
    "summary": "This Boolean attribute controls the device's screen. Setting it to false\nwill turn off the screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Speculation_Rules_API",
    "pageType": "web-api-overview",
    "summary": "The Speculation Rules API is designed to improve performance for future navigations. It targets document URLs rather than specific resource files, and so makes sense for multi-page applications (MPAs) rather than single-page applications (SPAs)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/colorDepth",
    "pageType": "web-api-instance-property",
    "summary": "The Screen.colorDepth read-only property returns the\ncolor depth of the screen. Per the CSSOM, some implementations return 24\nfor compatibility reasons. See the browser compatibility section for those that don't."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParamDescriptor",
    "pageType": "web-api-interface",
    "summary": "The AudioParamDescriptor dictionary of the Web Audio API specifies properties for AudioParam objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_standard_derivatives",
    "pageType": "webgl-extension",
    "summary": "The OES_standard_derivatives extension is part of the WebGL API and adds the GLSL derivative functions dFdx, dFdy, and fwidth."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Screen/availHeight",
    "pageType": "web-api-instance-property",
    "summary": "The read-only Screen interface's\navailHeight property returns the height, in CSS pixels, of\nthe space available for Web content on the screen. Since Screen is\nexposed on the Window interface's window.screen\nproperty, you access availHeight using window.screen.availHeight."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUInternalError",
    "pageType": "web-api-interface",
    "summary": "The GPUInternalError interface of the WebGPU API describes an application error indicating that an operation failed for a system or implementation-specific reason, even when all validation requirements were satisfied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUInternalError/GPUInternalError",
    "pageType": "web-api-constructor",
    "summary": "The GPUInternalError() constructor creates a new\nGPUInternalError object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch",
    "pageType": "web-api-interface",
    "summary": "The Touch interface represents a single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack",
    "pageType": "web-api-interface",
    "summary": "The TextTrack interface of the WebVTT API represents a text track associated with a media element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/rotationAngle",
    "pageType": "web-api-instance-property",
    "summary": "The rotationAngle read-only property of the Touch interface returns the rotation angle, in degrees, of the contact area ellipse defined by Touch.radiusX and Touch.radiusY. The value may be between 0 and 90. Together, these three values describe an ellipse that approximates the size and shape of the area of contact between the user and the screen. This may be a relatively large ellipse representing the contact between a fingertip and the screen or a small area representing the tip of a stylus, for example."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind read-only property of the TextTrack interface returns the kind of text track this object represents. This decides how the track will be handled by a user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/screenY",
    "pageType": "web-api-instance-property",
    "summary": "Returns the Y coordinate of the touch point relative to the screen, not including any scroll offset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the TextTrack interface returns a human-readable label for the text track, if it is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/cuechange_event",
    "pageType": "web-api-event",
    "summary": "The cuechange event fires when a TextTrack has changed the currently displaying cues. The event is fired on both the TextTrack and the HTMLTrackElement in which it's being presented, if any."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/force",
    "pageType": "web-api-instance-property",
    "summary": "The Touch.force read-only property returns the amount of\npressure the user is applying to the touch surface for a Touch point."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/inBandMetadataTrackDispatchType",
    "pageType": "web-api-instance-property",
    "summary": "The inBandMetadataTrackDispatchType read-only property of the TextTrack interface returns the text track's in-band metadata dispatch type of the text track represented by the TextTrack object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/identifier",
    "pageType": "web-api-instance-property",
    "summary": "The Touch.identifier returns a value uniquely identifying\nthis point of contact with the touch surface. This value remains consistent for every\nevent involving this finger's (or stylus's) movement on the surface until it is lifted\noff the surface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/removeCue",
    "pageType": "web-api-instance-method",
    "summary": "The removeCue() method of the TextTrack interface removes a cue from the list of cues."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/clientX",
    "pageType": "web-api-instance-property",
    "summary": "The Touch.clientX read-only property returns the X coordinate of the touch\npoint relative to the viewport, not including any scroll offset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/cues",
    "pageType": "web-api-instance-property",
    "summary": "The cues read-only property of the TextTrack interface returns a TextTrackCueList object containing all of the track's cues."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/Touch",
    "pageType": "web-api-constructor",
    "summary": "The Touch() constructor creates a new Touch object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/sourceBuffer",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sourceBuffer property of the TextTrack interface returns the\nSourceBuffer that created the track, or null if the track was not\ncreated by a SourceBuffer or the SourceBuffer has been\nremoved from the MediaSource.sourceBuffers attribute of its parent\nmedia source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/mode",
    "pageType": "web-api-instance-property",
    "summary": "The TextTrack interface's\nmode property is a string specifying and controlling the\ntext track's mode: disabled, hidden, or\nshowing. You can read this value to determine the current mode,\nand you can change this value to switch modes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/screenX",
    "pageType": "web-api-instance-property",
    "summary": "Returns the X coordinate of the touch point relative to the screen, not including any scroll offset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/activeCues",
    "pageType": "web-api-instance-property",
    "summary": "The activeCues read-only property of the TextTrack interface returns a TextTrackCueList object listing the currently active cues."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/radiusX",
    "pageType": "web-api-instance-property",
    "summary": "The radiusX read-only property of the Touch interface returns the X radius of the ellipse that most closely circumscribes the area of contact with the touch surface. The value is in CSS pixels of the same scale as Touch.screenX."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the TextTrack interface returns the ID of the track if it has one."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/language",
    "pageType": "web-api-instance-property",
    "summary": "The language read-only property of the TextTrack interface returns the language of the text track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/target",
    "pageType": "web-api-instance-property",
    "summary": "The read-only target property of the Touch interface returns the (EventTarget) on which the touch contact started when it was first placed on the surface, even if the touch point has since moved outside the interactive area of that element or even been removed from the document. Note that if the target element is removed from the document, events will still be targeted at it, and hence won't necessarily bubble up to the window or document anymore. If there is any risk of an element being removed while it is being touched, the best practice is to attach the touch listeners directly to the target."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrack/addCue",
    "pageType": "web-api-instance-method",
    "summary": "The addCue() method of the TextTrack interface adds a new cue to the list of cues."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/pageY",
    "pageType": "web-api-instance-property",
    "summary": "The Touch.pageY read-only property returns the Y\ncoordinate of the touch point relative to the viewport, including any scroll offset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLSerializer",
    "pageType": "web-api-interface",
    "summary": "The XMLSerializer interface provides the serializeToString() method to construct an XML string representing a DOM tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/clientY",
    "pageType": "web-api-instance-property",
    "summary": "The Touch.clientY read-only property returns the Y\ncoordinate of the touch point relative to the browser's viewport, not including any\nscroll offset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLSerializer/serializeToString",
    "pageType": "web-api-instance-method",
    "summary": "The XMLSerializer method\nserializeToString() constructs a string representing the\nspecified DOM tree in XML form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/radiusY",
    "pageType": "web-api-instance-property",
    "summary": "The radiusY read-only property of the Touch interface returns the Y radius of the ellipse that most closely circumscribes the area of contact with the touch surface. The value is in CSS pixels of the same scale as Touch.screenX."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLSerializer/XMLSerializer",
    "pageType": "web-api-constructor",
    "summary": "The XMLSerializer() constructor creates a new XMLSerializer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch/pageX",
    "pageType": "web-api-instance-property",
    "summary": "The Touch.pageX read-only property returns the X\ncoordinate of the touch point relative to the viewport, including any scroll offset."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayEvent",
    "pageType": "web-api-interface",
    "summary": "The VRDisplayEvent interface of the WebVR API represents the event object of WebVR-related events (see the list of WebVR window extensions)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayEvent/display",
    "pageType": "web-api-instance-property",
    "summary": "The display read-only property of the VRDisplayEvent interface returns the VRDisplay associated with this event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/animationsPaused",
    "pageType": "web-api-instance-method",
    "summary": "The animationsPaused() method of the SVGSVGElement interface checks whether the animations in the SVG document fragment are currently paused."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayEvent/reason",
    "pageType": "web-api-instance-property",
    "summary": "The reason read-only property of the VRDisplayEvent interface returns a human-readable reason why the event was fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/createSVGNumber",
    "pageType": "web-api-instance-method",
    "summary": "The createSVGNumber() method of the SVGSVGElement interface creates an SVGNumber object outside of any document trees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayEvent/VRDisplayEvent",
    "pageType": "web-api-constructor",
    "summary": "The VRDisplayEvent() constructor creates a VRDisplayEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement",
    "pageType": "web-api-interface",
    "summary": "The SVGSVGElement interface provides access to the properties of <svg> elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API",
    "pageType": "web-api-overview",
    "summary": "The Canvas API provides a means for drawing graphics via JavaScript and the HTML <canvas> element. Among other things, it can be used for animation, game graphics, data visualization, photo manipulation, and real-time video processing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/getElementById",
    "pageType": "web-api-instance-method",
    "summary": "The getElementById() method of the SVGSVGElement interface searches the SVG document fragment (i.e., the search is restricted to a subset of the document tree) for an Element whose id property matches the specified string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial",
    "pageType": "guide",
    "summary": "This tutorial describes how to use the <canvas> element to draw 2D graphics, starting with the basics. The examples provided should give you some clear ideas about what you can do with canvas, and will provide code snippets that may get you started in building your own content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/unpauseAnimations",
    "pageType": "web-api-instance-method",
    "summary": "The unpauseAnimations() method of the SVGSVGElement interface resumes (i.e., unpauses) currently running animations that are defined within the SVG document fragment, causing the animation clock to continue from the time at which it was suspended."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Finale",
    "pageType": "guide",
    "summary": "Congratulations! You finished the Canvas tutorial! This knowledge will help you to make great 2D graphics on the web."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/preserveAspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The preserveAspectRatio read-only property of the SVGSVGElement interface reflects the preserveAspectRatio attribute of the given element. It defines how the SVG element's content should be scaled to fit the given space, preserving its aspect ratio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage",
    "pageType": "guide",
    "summary": "Let's start this tutorial by looking at the <canvas> HTML element itself. At the end of this page, you will know how to set up a canvas 2D context and have drawn a first example in your browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGSVGElement interface describes the horizontal coordinate of the position of that SVG as an SVGAnimatedLength. When an <svg> is nested within another <svg>, the horizontal coordinate is a length in the user coordinate system that is the given distance from the origin of the user coordinate system along the x-axis. Its syntax is the same as that for <length>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations",
    "pageType": "guide",
    "summary": "Since we're using JavaScript to control <canvas> elements, it's also very easy to make (interactive) animations. In this chapter we will take a look at how to do some basic animations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/currentTranslate",
    "pageType": "web-api-instance-property",
    "summary": "The currentTranslate read-only property of the SVGSVGElement interface reflects the translation factor that takes into account user \"magnification\" corresponding to an outermost <svg> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Using_images",
    "pageType": "guide",
    "summary": "Until now we have created our own shapes and applied styles to them. One of the more exciting features of <canvas> is the ability to use images. These can be used to do dynamic photo compositing or as backdrops of graphs, for sprites in games, and so forth. External images can be used in any format supported by the browser, such as PNG, GIF, or JPEG. You can even use the image produced by other canvas elements on the same page as the source!"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/createSVGMatrix",
    "pageType": "web-api-instance-method",
    "summary": "The createSVGMatrix() method of the SVGSVGElement interface creates a DOMMatrix object outside of any document trees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas",
    "pageType": "guide",
    "summary": "Until now we haven't looked at the actual pixels of our canvas. With the ImageData object you can directly read and write a data array to manipulate pixel data. We will also look into how image smoothing (anti-aliasing) can be controlled and how to save images from your canvas."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/createSVGTransform",
    "pageType": "web-api-instance-method",
    "summary": "The createSVGTransform() method of the SVGSVGElement interface creates an SVGTransform object outside of any document trees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes",
    "pageType": "guide",
    "summary": "Now that we have set up our canvas environment, we can get into the details of how to draw on the canvas. By the end of this article, you will have learned how to draw rectangles, triangles, lines, arcs and curves, providing familiarity with some of the basic shapes. Working with paths is essential when drawing objects onto the canvas and we will see how that can be done."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Advanced_animations",
    "pageType": "guide",
    "summary": "In the last chapter we made some basic animations and got to know ways to get things moving. In this part we will have a closer look at the motion itself and are going to add some physics to make our animations more advanced."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/checkEnclosure",
    "pageType": "web-api-instance-method",
    "summary": "The checkEnclosure() method of the SVGSVGElement interface checks if the rendered content of the given element is entirely contained within the supplied rectangle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_text",
    "pageType": "guide",
    "summary": "After having seen how to apply styles and colors in the previous chapter, we will now have a look at how to draw text onto the canvas."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/checkIntersection",
    "pageType": "web-api-instance-method",
    "summary": "The checkIntersection() method of the SVGSVGElement interface checks if the rendered content of the given element intersects the supplied rectangle."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Applying_styles_and_colors",
    "pageType": "guide",
    "summary": "In the chapter about drawing shapes, we used only the default line and fill styles. Here we will explore the canvas options we have at our disposal to make our drawings a little more attractive. You will learn how to add different colors, line styles, gradients, patterns and shadows to your drawings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGSVGElement interface describes the vertical size of element as an SVGAnimatedLength. It reflects the <svg> element's height attribute, which may not be the SVG's rendered height."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations",
    "pageType": "guide",
    "summary": "Earlier in this tutorial we've learned about the canvas grid and the coordinate space. Until now, we only used the default grid and changed the size of the overall canvas for our needs. With transformations there are more powerful ways to translate the origin to a different position, rotate the grid and even scale it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGSVGElement interface describes the vertical coordinate of the position of that SVG as an SVGAnimatedLength. When an <svg> is nested within another <svg>, the vertical coordinate is a length in the user coordinate system that is the given distance from the origin of the user coordinate system along the y-axis. Its syntax is the same as that for <length>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Optimizing_canvas",
    "pageType": "guide",
    "summary": "The <canvas> element is one of the most widely used tools for rendering 2D graphics on the web. However, when websites and apps push the Canvas API to its limits, performance begins to suffer. This article provides suggestions for optimizing your use of the canvas element to ensure that your graphics perform well."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/createSVGRect",
    "pageType": "web-api-instance-method",
    "summary": "The createSVGRect() method of the SVGSVGElement interface creates a DOMRect object outside of any document trees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Tutorial/Compositing",
    "pageType": "guide",
    "summary": "In all of our previous examples, shapes were always drawn one on top of the other. This is more than adequate for most situations, but it limits the order in which composite shapes are built. We can, however, change this behavior by setting the globalCompositeOperation property. In addition, the clip property allows us to hide unwanted parts of shapes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/currentScale",
    "pageType": "web-api-instance-property",
    "summary": "The currentScale property of the SVGSVGElement interface reflects the current scale factor relative to the initial view to take into account user magnification and panning operations on the outermost <svg> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Canvas_API/Manipulating_video_using_canvas",
    "pageType": "guide",
    "summary": "By combining the capabilities of the video element with a canvas, you can manipulate video data in real time to incorporate a variety of visual effects to the video being displayed. This tutorial demonstrates how to perform chroma-keying (also known as the \"green screen effect\") using JavaScript code."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGSVGElement interface describes the horizontal size of element as an SVGAnimatedLength. It reflects the <svg> element's width attribute, which may not be the SVG's rendered width."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the BaseAudioContext\ninterface returns the current state of the AudioContext."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/deselectAll",
    "pageType": "web-api-instance-method",
    "summary": "The deselectAll() method of the SVGSVGElement interface unselects any selected objects, including any selections of text strings and type-in bars."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext",
    "pageType": "web-api-interface",
    "summary": "The BaseAudioContext interface of the Web Audio API acts as a base definition for online and offline audio-processing graphs, as represented by AudioContext and OfflineAudioContext respectively. You wouldn't use BaseAudioContext directly — you'd use its features via one of these two inheriting interfaces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createDynamicsCompressor",
    "pageType": "web-api-instance-method",
    "summary": "The createDynamicsCompressor() method of the BaseAudioContext Interface is used to create a DynamicsCompressorNode, which can be used to apply compression to an audio signal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/createSVGLength",
    "pageType": "web-api-instance-method",
    "summary": "The createSVGLength() method of the SVGSVGElement interface creates an SVGLength object outside of any document trees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createIIRFilter",
    "pageType": "web-api-instance-method",
    "summary": "The createIIRFilter() method of the BaseAudioContext interface creates an IIRFilterNode, which represents a general infinite impulse response (IIR) filter which can be configured to serve as various types of filter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/createSVGTransformFromMatrix",
    "pageType": "web-api-instance-method",
    "summary": "The createSVGTransformFromMatrix() method of the SVGSVGElement interface creates an SVGTransform object outside of any document trees, based on the given DOMMatrix object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createPeriodicWave",
    "pageType": "web-api-instance-method",
    "summary": "The createPeriodicWave() method of the BaseAudioContext interface is used to create a PeriodicWave. This wave is used to define a periodic waveform that can be used to shape the output of an OscillatorNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/getCurrentTime",
    "pageType": "web-api-instance-method",
    "summary": "The getCurrentTime() method of the SVGSVGElement interface returns the current time in seconds relative to the start time for the current SVG document fragment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createPanner",
    "pageType": "web-api-instance-method",
    "summary": "The createPanner() method of the BaseAudioContext\nInterface is used to create a new PannerNode, which is used to\nspatialize an incoming audio stream in 3D space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/viewBox",
    "pageType": "web-api-instance-property",
    "summary": "The viewBox read-only property of the SVGSVGElement interface reflects the <svg> element's viewBox attribute as an SVGAnimatedRect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createWaveShaper",
    "pageType": "web-api-instance-method",
    "summary": "The createWaveShaper() method of the BaseAudioContext\ninterface creates a WaveShaperNode, which represents a non-linear\ndistortion. It is used to apply distortion effects to your audio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/sampleRate",
    "pageType": "web-api-instance-property",
    "summary": "The sampleRate property of the BaseAudioContext interface returns a floating point number representing the sample rate, in samples per second, used by all nodes in this audio context.\nThis limitation means that sample-rate converters are not supported."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/pauseAnimations",
    "pageType": "web-api-instance-method",
    "summary": "The pauseAnimations() method of the SVGSVGElement interface suspends (i.e., pauses) all currently running animations that are defined within the SVG document fragment corresponding to this <svg> element, causing the animation clock corresponding to this document fragment to stand still until it is unpaused."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createDelay",
    "pageType": "web-api-instance-method",
    "summary": "The createDelay() method of the\nBaseAudioContext Interface is used to create a DelayNode,\nwhich is used to delay the incoming audio signal by a certain amount of time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/createSVGAngle",
    "pageType": "web-api-instance-method",
    "summary": "The createSVGAngle() method of the SVGSVGElement interface creates an SVGAngle object outside of any document trees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The createBuffer() method of the BaseAudioContext\nInterface is used to create a new, empty AudioBuffer object, which\ncan then be populated by data, and played via an AudioBufferSourceNode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/setCurrentTime",
    "pageType": "web-api-instance-method",
    "summary": "The setCurrentTime() method of the SVGSVGElement interface adjusts the clock for this SVG document fragment, establishing a new current time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createBufferSource",
    "pageType": "web-api-instance-method",
    "summary": "The createBufferSource() method of the BaseAudioContext\nInterface is used to create a new AudioBufferSourceNode, which can be\nused to play audio data contained within an AudioBuffer object.\nAudioBuffers are created using BaseAudioContext.createBuffer or returned by BaseAudioContext.decodeAudioData when it successfully decodes an audio track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/audioWorklet",
    "pageType": "web-api-instance-property",
    "summary": "The audioWorklet read-only property of the\nBaseAudioContext interface returns an instance of\nAudioWorklet that can be used for adding\nAudioWorkletProcessor-derived classes which implement custom audio\nprocessing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGSVGElement/createSVGPoint",
    "pageType": "web-api-instance-method",
    "summary": "The createSVGPoint() method of the SVGSVGElement interface creates a DOMPoint object outside of any document trees."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createAnalyser",
    "pageType": "web-api-instance-method",
    "summary": "The createAnalyser() method of the\nBaseAudioContext interface creates an AnalyserNode, which\ncan be used to expose audio time and frequency data and create data visualizations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList",
    "pageType": "web-api-interface",
    "summary": "The DOMTokenList interface represents a set of space-separated tokens. Such a set is returned by Element.classList or HTMLLinkElement.relList, and many others."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createStereoPanner",
    "pageType": "web-api-instance-method",
    "summary": "The createStereoPanner() method of the BaseAudioContext interface creates a StereoPannerNode, which can be used to apply\nstereo panning to an audio source.\nIt positions an incoming audio stream in a stereo image using a low-cost panning algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/add",
    "pageType": "web-api-instance-method",
    "summary": "The add() method of the DOMTokenList interface adds the given tokens to the list, omitting any that are already present."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createChannelMerger",
    "pageType": "web-api-instance-method",
    "summary": "The createChannelMerger() method of the BaseAudioContext interface creates a ChannelMergerNode,\nwhich combines channels from multiple audio streams into a single audio stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the DOMTokenList interface\nreturns an iterator allowing you\nto go through all key/value pairs contained in this object. The values are\nArrays which have [key, value] pairs, each representing a single token."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createScriptProcessor",
    "pageType": "web-api-instance-method",
    "summary": "The createScriptProcessor() method of the BaseAudioContext interface\ncreates a ScriptProcessorNode used for direct audio processing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createChannelSplitter",
    "pageType": "web-api-instance-method",
    "summary": "The createChannelSplitter() method of the BaseAudioContext Interface is used to create a ChannelSplitterNode,\nwhich is used to access the individual channels of an audio stream and process them separately."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/item",
    "pageType": "web-api-instance-method",
    "summary": "The item() method of the DOMTokenList interface returns an item in the list,\ndetermined by its position in the list, its index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/destination",
    "pageType": "web-api-instance-property",
    "summary": "The destination property of the BaseAudioContext\ninterface returns an AudioDestinationNode representing the final\ndestination of all audio in the context. It often represents an actual audio-rendering\ndevice such as your device's speakers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/remove",
    "pageType": "web-api-instance-method",
    "summary": "The remove() method of the DOMTokenList interface\nremoves the specified tokens from the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createConvolver",
    "pageType": "web-api-instance-method",
    "summary": "The createConvolver() method of the BaseAudioContext\ninterface creates a ConvolverNode, which is commonly used to apply\nreverb effects to your audio. See the spec definition of Convolution for more information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/toggle",
    "pageType": "web-api-instance-method",
    "summary": "The toggle() method of the DOMTokenList interface\nremoves an existing token from the list and returns false.\nIf the token doesn't exist it's added and the function returns true."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createGain",
    "pageType": "web-api-instance-method",
    "summary": "The createGain() method of the BaseAudioContext\ninterface creates a GainNode, which can be used to control the\noverall gain (or volume) of the audio graph."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createOscillator",
    "pageType": "web-api-instance-method",
    "summary": "The createOscillator() method of the BaseAudioContext\ninterface creates an OscillatorNode, a source representing a periodic\nwaveform. It basically generates a constant tone."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property of the DOMTokenList interface is an integer representing the number\nof objects stored in the object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/currentTime",
    "pageType": "web-api-instance-property",
    "summary": "The currentTime read-only property of the BaseAudioContext\ninterface returns a double representing an ever-increasing hardware timestamp in seconds that\ncan be used for scheduling audio playback, visualizing timelines, etc. It starts at 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the DOMTokenList\ninterface is a stringifier that returns the value of the list serialized as a\nstring, or clears and sets the list to the given value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createConstantSource",
    "pageType": "web-api-instance-method",
    "summary": "The createConstantSource()\nproperty of the BaseAudioContext interface creates a\nConstantSourceNode object, which is an audio source that continuously\noutputs a monaural (one-channel) sound signal whose samples all have the same\nvalue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the DOMTokenList interface\nreturns an iterator allowing to go through all keys contained in this object.\nThe keys are unsigned integers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/createBiquadFilter",
    "pageType": "web-api-instance-method",
    "summary": "The createBiquadFilter() method of the BaseAudioContext\ninterface creates a BiquadFilterNode, which represents a second order\nfilter configurable as several different common filter types."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/decodeAudioData",
    "pageType": "web-api-instance-method",
    "summary": "The decodeAudioData() method of the BaseAudioContext\nInterface is used to asynchronously decode audio file data contained in an\nArrayBuffer that is loaded from fetch(),\nXMLHttpRequest, or FileReader. The decoded\nAudioBuffer is resampled to the AudioContext's sampling\nrate, then passed to a callback or promise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/supports",
    "pageType": "web-api-instance-method",
    "summary": "The supports() method of the DOMTokenList interface\nreturns true if a given token is in the associated attribute's supported tokens.\nThis method is intended to support feature detection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/statechange_event",
    "pageType": "web-api-event",
    "summary": "A statechange event is fired at a BaseAudioContext object when its state member changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/contains",
    "pageType": "web-api-instance-method",
    "summary": "The contains() method of the DOMTokenList interface\nreturns a boolean value — true if the underlying list contains the given token,\notherwise false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BaseAudioContext/listener",
    "pageType": "web-api-instance-property",
    "summary": "The listener property of the BaseAudioContext interface\nreturns an AudioListener object that can then be used for\nimplementing 3D audio spatialization."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the DOMTokenList interface\ncalls the callback given in parameter once for each value pair in the list, in\ninsertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursorWithValue",
    "pageType": "web-api-interface",
    "summary": "The IDBCursorWithValue interface of the IndexedDB API represents a cursor for traversing or iterating over multiple records in a database. It is the same as the IDBCursor, except that it includes the value property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBCursorWithValue/value",
    "pageType": "web-api-instance-property",
    "summary": "The value read-only property of the\nIDBCursorWithValue interface returns the value of the current cursor,\nwhatever that is."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the DOMTokenList interface\nreturns an iterator\nallowing the caller to go through all values contained in the DOMTokenList.\nThe individual values are strings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvasRenderingContext2D",
    "pageType": "web-api-interface",
    "summary": "The OffscreenCanvasRenderingContext2D interface is a CanvasRenderingContext2D rendering context for drawing to the bitmap of an OffscreenCanvas object.\nIt is similar to the CanvasRenderingContext2D object, with the following differences:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/replace",
    "pageType": "web-api-instance-method",
    "summary": "The replace() method of the DOMTokenList interface\nreplaces an existing token with a new token.\nIf the first token doesn't exist, replace() returns false immediately,\nwithout adding the new token to the token list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvasRenderingContext2D/commit",
    "pageType": "web-api-instance-method",
    "summary": "The\nOffscreenCanvasRenderingContext2D.commit()\nmethod of the Canvas 2D API was intended to copy the rendering context's bitmap to the bitmap of the placeholder <canvas> element of the associated OffscreenCanvas object.\nThe copy operation is synchronous. Calling this method is not needed for the transfer, since it happens automatically during the event-loop execution."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMTokenList/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() stringifier method of the DOMTokenList interface returns the values of the token list serialized as a string. The return value is a space-separated list of tokens equal to the DOMTokenList.value property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState",
    "pageType": "web-api-interface",
    "summary": "The ValidityState interface represents the validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element's value fails to validate, if it's not valid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/customError",
    "pageType": "web-api-instance-property",
    "summary": "The read-only customError property of the ValidityState interface returns true if an element doesn't meet the validation required in the custom validity set by the element's setCustomValidity() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPrimitiveValue/setFloatValue",
    "pageType": "web-api-instance-method",
    "summary": "The setFloatValue() method of the\nCSSPrimitiveValue interface is used to set a float value. If the property\nattached to this value can't accept the specified unit or the float value, the value\nwill be unchanged and a DOMException will be raised."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/valid",
    "pageType": "web-api-instance-property",
    "summary": "The read-only valid property of the ValidityState interface indicates if the value of an <input> element meets all its validation constraints, and is therefore considered to be valid."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPrimitiveValue",
    "pageType": "web-api-interface",
    "summary": "The CSSPrimitiveValue interface derives from the CSSValue interface and represents the current computed value of a CSS property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/typeMismatch",
    "pageType": "web-api-instance-property",
    "summary": "The read-only typeMismatch property of the ValidityState interface indicates if the value of an <input>, after having been edited by the user, does not conform to the constraints set by the element's type attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPrimitiveValue/getRGBColorValue",
    "pageType": "web-api-instance-method",
    "summary": "The getRGBColorValue() method of the\nCSSPrimitiveValue interface is used to get an RGB color value. If this\nCSS value doesn't contain a RGB color value, a DOMException is raised.\nModification to the corresponding style property can be achieved using the\nRGBColor interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/tooLong",
    "pageType": "web-api-instance-property",
    "summary": "The read-only tooLong property of the ValidityState interface indicates if the value of an <input> or <textarea>, after having been edited by the user, exceeds the maximum code-unit length established by the element's maxlength attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/patternMismatch",
    "pageType": "web-api-instance-property",
    "summary": "The read-only patternMismatch property of the ValidityState interface indicates if the value of an <input>, after having been edited by the user, does not conform to the constraints set by the element's pattern attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPrimitiveValue/getRectValue",
    "pageType": "web-api-instance-method",
    "summary": "The getRectValue() method of the\nCSSPrimitiveValue interface is used to get a rect value. If this CSS\nvalue doesn't contain a rect value, a DOMException is raised.\nModification to the corresponding style property can be achieved using the\nRect interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/tooShort",
    "pageType": "web-api-instance-property",
    "summary": "The read-only tooShort property of the ValidityState interface indicates if the value of an <input>, <button>, <select>, <output>, <fieldset> or <textarea>, after having been edited by the user, is less than the minimum code-unit length established by the element's minlength attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPrimitiveValue/primitiveType",
    "pageType": "web-api-instance-property",
    "summary": "The primitiveType read-only property of the\nCSSPrimitiveValue interface represents the type of a CSS value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/valueMissing",
    "pageType": "web-api-instance-property",
    "summary": "The read-only valueMissing property of the ValidityState interface indicates if a required control, such as an <input>, <select>, or <textarea>, has an empty value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPrimitiveValue/getStringValue",
    "pageType": "web-api-instance-method",
    "summary": "The getStringValue() method of the\nCSSPrimitiveValue interface is used to get a string value. If this CSS\nvalue doesn't contain a string value, a DOMException is raised."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/stepMismatch",
    "pageType": "web-api-instance-property",
    "summary": "The read-only stepMismatch property of the ValidityState interface indicates if the value of an <input>, after having been edited by the user, does not conform to the constraints set by the element's step attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/rangeOverflow",
    "pageType": "web-api-instance-property",
    "summary": "The read-only rangeOverflow property of the ValidityState interface indicates if the value of an <input>, after having been edited by the user, does not conform to the constraints set by the element's max attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPrimitiveValue/getFloatValue",
    "pageType": "web-api-instance-method",
    "summary": "The getFloatValue() method of the\nCSSPrimitiveValue interface is used to get a float value in a specified\nunit. If this CSS value doesn't contain a float value or can't be converted into the\nspecified unit, a DOMException is raised."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/rangeUnderflow",
    "pageType": "web-api-instance-property",
    "summary": "The read-only rangeUnderflow property of the ValidityState interface indicates if the value of an <input>, after having been edited by the user, does not conform to the constraints set by the element's min attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPrimitiveValue/getCounterValue",
    "pageType": "web-api-instance-method",
    "summary": "The getCounterValue() method of the\nCSSPrimitiveValue interface is used to get the counter\nvalue. If this CSS value doesn't contain a counter value, a DOMException\nis raised. Modification to the corresponding style property can be achieved using the\nCounter interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ValidityState/badInput",
    "pageType": "web-api-instance-property",
    "summary": "The read-only badInput property of the ValidityState interface indicates if the user has provided input that the browser is unable to convert. For example, if you have a number input element whose content is a string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPrimitiveValue/setStringValue",
    "pageType": "web-api-instance-method",
    "summary": "The setStringValue() method of the\nCSSPrimitiveValue interface is used to set a string value. If the\nproperty attached to this value can't accept the specified unit or the string value, the\nvalue will be unchanged and a DOMException will be raised."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBRequest",
    "pageType": "web-api-interface",
    "summary": "The ReadableStreamBYOBRequest interface of the Streams API represents a \"pull request\" for data from an underlying source that will made as a zero-copy transfer to a consumer (bypassing the stream's internal queues)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBRequest/respondWithNewView",
    "pageType": "web-api-instance-method",
    "summary": "The respondWithNewView() method of the ReadableStreamBYOBRequest interface specifies a new view that the consumer of the associated readable byte stream should write to instead of ReadableStreamBYOBRequest.view."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet",
    "pageType": "web-api-interface",
    "summary": "The CustomStateSet interface of the Document Object Model stores a list of states for an autonomous custom element, and allows states to be added and removed from the set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBRequest/view",
    "pageType": "web-api-instance-property",
    "summary": "The view getter property of the ReadableStreamBYOBRequest interface returns the current view."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBRequest/respond",
    "pageType": "web-api-instance-method",
    "summary": "The respond() method of the ReadableStreamBYOBRequest interface is used to signal to the associated readable byte stream that the specified number of bytes were written into the ReadableStreamBYOBRequest.view."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet/add",
    "pageType": "web-api-instance-method",
    "summary": "The add method of the CustomStateSet interface adds value representing a custom state to the CustomStateSet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries method of the CustomStateSet interface returns a new iterator object, containing an array of [value,value] for each element in the CustomStateSet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLSelectElement interface indicates the name of the <select> element. It reflects the element's name attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLSelectElement interface represents a <select> HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet/size",
    "pageType": "web-api-instance-property",
    "summary": "The size property of the CustomStateSet interface returns the number of values in the CustomStateSet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/required",
    "pageType": "web-api-instance-property",
    "summary": "The required property of the HTMLSelectElement interface specifies that the user must select an option with a non-empty string value before submitting a form. It reflects the <select> element's required attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the CustomStateSet interface returns a Boolean asserting whether an element is present with the given value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/autocomplete",
    "pageType": "web-api-instance-property",
    "summary": "The autocomplete property of the HTMLSelectElement interface indicates whether the value of the control can be automatically completed by the browser. It reflects the <select> element's autocomplete attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the CustomStateSet interface is an alias for CustomStateSet.values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLSelectElement.disabled property is a boolean value that reflects the\ndisabled\nHTML attribute, which indicates whether the control is disabled. If it is disabled, it\ndoes not accept clicks. A disabled element is unusable and un-clickable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the CustomStateSet interface deletes a single value from the CustomStateSet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/selectedOptions",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLSelectElement property\nselectedOptions contains a list of the\n<option> elements contained within the <select>\nelement that are currently selected. The list of selected options is an\nHTMLCollection object with one entry per currently selected option."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the CustomStateSet interface removes all elements from the CustomStateSet object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/add",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLSelectElement.add() method adds an element to the\ncollection of option elements for this select element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the CustomStateSet interface executes a provided function for each value in the CustomStateSet object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/willValidate",
    "pageType": "web-api-instance-property",
    "summary": "The willValidate read-only property of the HTMLSelectElement interface indicates whether the <select> element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation, such as when its disabled property is true."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomStateSet/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the CustomStateSet interface returns a new iterator object that yields the values for each element in the CustomStateSet object in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLSelectElement.type\nread-only property returns the form control's type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/validity",
    "pageType": "web-api-instance-property",
    "summary": "The validity read-only property of the HTMLSelectElement interface returns a ValidityState object that represents the validity states this element is in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureRecord/state",
    "pageType": "web-api-instance-property",
    "summary": "The read-only state property is a string indicating the pressure state recorded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/item",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLSelectElement.item() method returns the\nElement corresponding to the HTMLOptionElement whose\nposition in the options list corresponds to the index given in the parameter, or\nnull if there are none."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureRecord",
    "pageType": "web-api-interface",
    "summary": "The PressureRecord interface is part of the Compute Pressure API and describes the pressure trend of a source at a specific moment of transition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/remove",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLSelectElement.remove() method removes the element\nat the specified index from the options collection for this select element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureRecord/source",
    "pageType": "web-api-instance-property",
    "summary": "The read-only source property is a string indicating the origin source from which the record is coming."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/size",
    "pageType": "web-api-instance-property",
    "summary": "The size property of the HTMLSelectElement interface specifies the number of options, or rows, that should be visible at one time. It reflects the <select> element's size attribute. If omitted, the value is 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureRecord/time",
    "pageType": "web-api-instance-property",
    "summary": "The read-only time property returns the timestamp recorded for a PressureRecord. It corresponds to the time the data was obtained from the system relative to the time origin of the global object in which the PressureObserver generated the notification."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLSelectElement interface returns an HTMLFormElement object that owns this <select>, or null if this select is not owned by any form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PressureRecord/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method is a serializer; it returns a JSON representation of the PressureRecord object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the HTMLSelectElement interface specifies the number of <option> elements in the <select> element. It represents the number of nodes in the options collection. On setting, it acts as (HTMLOptionsCollection.length)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLSelectElement.value property contains the value of the first selected <option> element associated with this <select> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathMin",
    "pageType": "web-api-interface",
    "summary": "The CSSMathMin interface of the CSS Typed Object Model API represents the CSS min() function. It inherits properties and methods from its parent CSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/showPicker",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLSelectElement.showPicker() method displays the browser picker for a select element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathMin/CSSMathMin",
    "pageType": "web-api-constructor",
    "summary": "The CSSMathMin() constructor creates a\nnew CSSMathMin object which represents the CSS\nmin() function."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/setCustomValidity",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLSelectElement.setCustomValidity() method sets the\ncustom validity message for the selection element to the specified message. Use the\nempty string to indicate that the element does not have a custom validity\nerror."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathMin/values",
    "pageType": "web-api-instance-property",
    "summary": "The CSSMathMin.values read-only property of the\nCSSMathMin interface returns a CSSNumericArray object\nwhich contains one or more CSSNumericValue objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/reportValidity",
    "pageType": "web-api-instance-method",
    "summary": "The reportValidity() method of the HTMLSelectElement interface performs the same validity checking steps as the checkValidity() method. In addition, if the invalid event is not canceled, the browser displays the problem to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPageDescriptors",
    "pageType": "web-api-interface",
    "summary": "The CSSPageDescriptors interface represents a CSS declaration block for an @page at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/validationMessage",
    "pageType": "web-api-instance-property",
    "summary": "The validationMessage read-only property of the HTMLSelectElement interface returns a string representing a localized message that describes the validation constraints that the <select> control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (HTMLSelectElement.willValidate is false), or it satisfies its constraints."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSGroupingRule",
    "pageType": "web-api-interface",
    "summary": "The CSSGroupingRule interface of the CSS Object Model represents any CSS at-rule that contains other rules nested within it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/multiple",
    "pageType": "web-api-instance-property",
    "summary": "The multiple property of the HTMLSelectElement interface specifies that the user may select more than one option from the list of options. It reflects the <select> element's multiple attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSGroupingRule/insertRule",
    "pageType": "web-api-instance-method",
    "summary": "The insertRule() method of the\nCSSGroupingRule interface adds a new CSS rule to a list of CSS rules."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/options",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLSelectElement.options read-only property returns\na HTMLOptionsCollection of the <option> elements\ncontained by the <select> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/selectedIndex",
    "pageType": "web-api-instance-property",
    "summary": "The selectedIndex property of the HTMLSelectElement interface is the numeric index of the first selected <option> element in a <select> element, if any, or −1 if no <option> is selected. Setting this property selects the option at that index and deselects all other options, while setting it to -1 deselects any currently selected options."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSGroupingRule/deleteRule",
    "pageType": "web-api-instance-method",
    "summary": "The deleteRule() method of the\nCSSGroupingRule interface removes a CSS rule from a list of child CSS\nrules."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/namedItem",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLSelectElement.namedItem() method returns the\nHTMLOptionElement corresponding to the HTMLOptionElement\nwhose name or id match the specified name, or\nnull if no option matches."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSGroupingRule/cssRules",
    "pageType": "web-api-instance-property",
    "summary": "The cssRules property of the\nCSSGroupingRule interface returns a CSSRuleList containing\na collection of CSSRule objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/labels",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLSelectElement.labels read-only property returns a\nNodeList of the <label> elements associated with the\n<select> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Object_Model",
    "pageType": "web-api-overview",
    "summary": "The CSS Object Model is a set of APIs allowing the manipulation of CSS from JavaScript. It is much like the DOM, but for the CSS rather than the HTML. It allows users to read and modify CSS style dynamically."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSelectElement/checkValidity",
    "pageType": "web-api-instance-method",
    "summary": "The checkValidity() method of the HTMLSelectElement interface returns a boolean value which indicates if the element meets any constraint validation rules applied to it. If false, the method also fires an invalid event on the element. Because there's no default browser behavior for checkValidity(), canceling this invalid event has no effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Object_Model/CSS_Declaration",
    "pageType": "guide",
    "summary": "A CSS declaration is an abstract concept not exposed as an object in the DOM. It represents a CSS property and value pairing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/securePaymentConfirmationAvailability_static",
    "pageType": "web-api-static-method",
    "summary": "The securePaymentConfirmationAvailability() static method of the PaymentRequest interface indicates whether the Secure payment confirmation (SPC) feature is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Object_Model/Using_dynamic_styling_information",
    "pageType": "guide",
    "summary": "The CSS Object Model (CSSOM), part of the DOM, exposes specific interfaces allowing manipulation of a wide amount of information regarding CSS. Initially defined in the DOM Level 2 Style recommendation, these interfaces forms now a specification, CSS Object Model (CSSOM) which aims at superseding it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest",
    "pageType": "web-api-interface",
    "summary": "The Payment Request API's PaymentRequest interface is the primary access point into the API, and lets web content and apps accept payments from the end user on behalf of the operator of the site or the publisher of the app."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Object_Model/Managing_screen_orientation",
    "pageType": "guide",
    "summary": "The term screen orientation refers to whether a browser viewport is in landscape mode (that is, the width of the viewport is greater than its height), or else in portrait mode (the height of the viewport is greater than its width)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/shippingAddress",
    "pageType": "web-api-instance-property",
    "summary": "The shippingAddress read-only property of\nthe PaymentRequest interface returns the shipping address provided by the\nuser. It is null by default."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements",
    "pageType": "guide",
    "summary": "There are several properties you can look at in order to determine the width and height of elements, and it can be tricky to determine which is the right one for your needs. This article is designed to help you make that decision. Note that all these properties are read-only. If you want to set the width and height of an element, use width and height or the overriding min-width and max-width, and min-height and max-height properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/shippingaddresschange_event",
    "pageType": "web-api-event",
    "summary": "The shippingaddresschange event is sent to the PaymentRequest object when the user selects a shipping address or changes details of their shipping address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Object_Model/CSS_Declaration_Block",
    "pageType": "guide",
    "summary": "A CSS declaration block is an ordered collection of CSS properties and values. It is represented in the DOM as a CSSStyleDeclaration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/merchantvalidation_event",
    "pageType": "web-api-event",
    "summary": "merchantvalidation events are delivered by the Payment Request API to a PaymentRequest object when a payment handler requires that the merchant requesting the purchase validate itself as permitted to use the payment handler."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/abort",
    "pageType": "web-api-instance-method",
    "summary": "The PaymentRequest.abort() method of the PaymentRequest\ninterface causes the user agent to end the payment request and to remove any user\ninterface that might be shown."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/PaymentRequest",
    "pageType": "web-api-constructor",
    "summary": "The PaymentRequest() constructor\ncreates a new PaymentRequest object which will be used to handle the\nprocess of generating, validating, and submitting a payment request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/referrer",
    "pageType": "web-api-instance-property",
    "summary": "The referrer read-only property of the\nRequest interface is set by the user agent to be the referrer of the\nRequest. (e.g., client, no-referrer, or a URL.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/shippingOption",
    "pageType": "web-api-instance-property",
    "summary": "The shippingOption read-only attribute of the PaymentRequest interface returns either the id of a selected shipping option, null (if no shipping option was set to be selected) or a shipping option selected by the user.\nIt is initially null by when no \"selected\" shipping options are provided."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request",
    "pageType": "web-api-interface",
    "summary": "The Request interface of the Fetch API represents a resource request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/canMakePayment",
    "pageType": "web-api-instance-method",
    "summary": "The PaymentRequest method\ncanMakePayment() determines whether or not the request\nis configured in a way that is compatible with at least one payment method supported\nby the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/signal",
    "pageType": "web-api-instance-property",
    "summary": "The read-only signal property of the Request interface returns the AbortSignal associated with the request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/shippingType",
    "pageType": "web-api-instance-property",
    "summary": "The shippingType read-only property of the\nPaymentRequest interface returns one of \"shipping\",\n\"delivery\", \"pickup\", or null if one was not\nprovided by the constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/keepalive",
    "pageType": "web-api-instance-property",
    "summary": "The keepalive read-only property of the Request interface contains the request's keepalive setting (true or false), which indicates whether the browser will keep the associated request alive if the page that initiated it is unloaded before the request is complete."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/paymentmethodchange_event",
    "pageType": "web-api-event",
    "summary": "The paymentmethodchange event is delivered the Payment Request API to a PaymentRequest object when the user changes the payment method within a given payment handler."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/blob",
    "pageType": "web-api-instance-method",
    "summary": "The blob() method of the Request interface\nreads the request body and returns it as a promise that resolves with a Blob."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/show",
    "pageType": "web-api-instance-method",
    "summary": "The PaymentRequest interface's\nshow() method instructs the user agent to begin the\nprocess of showing and handling the user interface for the payment request to the\nuser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only attribute of the\nPaymentRequest interface returns a unique identifier for a particular\nPaymentRequest instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/headers",
    "pageType": "web-api-instance-property",
    "summary": "The headers read-only property of the\nRequest interface contains the Headers object associated\nwith the request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentRequest/shippingoptionchange_event",
    "pageType": "web-api-event",
    "summary": "For payment requests that request shipping information, and for which shipping options are offered, the shippingoptionchange event is sent to the PaymentRequest whenever the user chooses a shipping option from the list of available options."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/body",
    "pageType": "web-api-instance-property",
    "summary": "The body read-only property of the Request\ninterface contains a ReadableStream with the body contents\nthat have been added to the request. Note that a request using the\nGET or HEAD method cannot have a body\nand null is returned in these cases."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebVTT_API",
    "pageType": "web-api-overview",
    "summary": "Web Video Text Tracks (WebVTT) are text tracks providing specific text \"cues\" that are time-aligned with other media, such as video or audio tracks. The WebVTT API provides functionality to define and manipulate these text tracks.\nThe WebVTT API is primarily used for displaying subtitles or captions that overlay with video content, but it has other uses: providing chapter information for easier navigation and generic metadata that needs to be time-aligned with audio or video content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the Request\ninterface contains the URL of the request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebVTT_API/Web_Video_Text_Tracks_Format",
    "pageType": "guide",
    "summary": "Web Video Text Tracks Format (WebVTT) is a plain-text file format for displaying timed text tracks that are synchronized with content in <video> and <audio> elements.\nThese can be used, for example, to add closed captions and subtitle text overlays to a <video>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/bodyUsed",
    "pageType": "web-api-instance-property",
    "summary": "The bodyUsed read-only property of the\nRequest interface is a boolean value that indicates\nwhether the request body has been read yet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_NFC_API",
    "pageType": "web-api-overview",
    "summary": "The Web NFC API allows exchanging data over NFC via light-weight NFC Data Exchange Format (NDEF) messages."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/clone",
    "pageType": "web-api-instance-method",
    "summary": "The clone() method of the Request interface creates a copy of the current Request object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EyeDropper",
    "pageType": "web-api-interface",
    "summary": "The EyeDropper interface represents an instance of an eyedropper tool that can be opened and used by the user to select colors from the screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/json",
    "pageType": "web-api-instance-method",
    "summary": "The json() method of the Request interface\nreads the request body and returns it as a promise that resolves with the result of parsing the body text as JSON."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EyeDropper/open",
    "pageType": "web-api-instance-method",
    "summary": "The EyeDropper.open() method starts the eyedropper mode, returning a promise which is fulfilled once the user has selected a color and exited the eyedropper mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/Request",
    "pageType": "web-api-constructor",
    "summary": "The Request() constructor creates a new\nRequest object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EyeDropper/EyeDropper",
    "pageType": "web-api-constructor",
    "summary": "The EyeDropper() constructor returns a new EyeDropper object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackProcessor",
    "pageType": "web-api-interface",
    "summary": "The MediaStreamTrackProcessor interface of the Insertable Streams for MediaStreamTrack API consumes a video MediaStreamTrack object's source and generates a stream of VideoFrame objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/cache",
    "pageType": "web-api-instance-property",
    "summary": "The cache read-only property of the Request interface contains the cache mode of the request. It controls how the request will interact with the browser's HTTP cache."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackProcessor/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable property of the MediaStreamTrackProcessor interface returns a ReadableStream of VideoFrames."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/integrity",
    "pageType": "web-api-instance-property",
    "summary": "The integrity read-only property of the Request interface contains the subresource integrity value of the request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackProcessor/MediaStreamTrackProcessor",
    "pageType": "web-api-constructor",
    "summary": "The MediaStreamTrackProcessor() constructor creates a new MediaStreamTrackProcessor object which consumes a video MediaStreamTrack object's source and generates a stream of VideoFrames."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/credentials",
    "pageType": "web-api-instance-property",
    "summary": "The credentials read-only property of the Request interface reflects the value given to the Request() constructor in the credentials option. It determines whether or not the browser sends credentials with the request, as well as whether any Set-Cookie response headers are respected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLayer",
    "pageType": "web-api-interface",
    "summary": "The XRLayer interface of the WebXR Device API is the base class for WebXR layer types. It inherits methods from EventTarget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/text",
    "pageType": "web-api-instance-method",
    "summary": "The text() method of the Request interface\nreads the request body and returns it as a promise that resolves with a String.\nThe response is always decoded using UTF-8."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame",
    "pageType": "web-api-interface",
    "summary": "A WebXR Device API XRFrame object is passed into the requestAnimationFrame() callback function and provides access to the information needed in order to render a single frame of animation for an XRSession describing a VR or AR scene. Events which communicate the tracking state of objects also provide an XRFrame reference as part of their structure."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/referrerPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The referrerPolicy read-only property of the\nRequest interface returns the referrer policy, which governs what\nreferrer information, sent in the Referer header, should be included\nwith the request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/trackedAnchors",
    "pageType": "web-api-instance-property",
    "summary": "The read-only trackedAnchor property of the XRFrame interface returns an XRAnchorSet object containing all anchors still tracked in the frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/arrayBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The arrayBuffer() method of the Request interface\nreads the request body and returns it as a promise that resolves with an ArrayBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/getLightEstimate",
    "pageType": "web-api-instance-method",
    "summary": "The getLightEstimate() method of the XRFrame interface returns an XRLightEstimate object containing estimated lighting values for a given XRLightProbe."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/formData",
    "pageType": "web-api-instance-method",
    "summary": "The formData() method of the Request interface\nreads the request body and returns it as a promise that resolves with a FormData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/getJointPose",
    "pageType": "web-api-instance-method",
    "summary": "The getJointPose() method of the XRFrame interface returns an XRJointPose object providing the pose of a hand joint (see XRHand) relative to a given base space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/getViewerPose",
    "pageType": "web-api-instance-method",
    "summary": "The getViewerPose() method, a member of the XRFrame interface, returns a XRViewerPose object which describes the viewer's pose (position and orientation) relative to the specified reference space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/destination",
    "pageType": "web-api-instance-property",
    "summary": "The destination read-only property of the Request interface returns a string describing the type of content being requested."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/session",
    "pageType": "web-api-instance-property",
    "summary": "An XRFrame object's read-only session property returns the XRSession object that generated the frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/method",
    "pageType": "web-api-instance-property",
    "summary": "The method read-only property of the\nRequest interface contains the request's method (GET,\nPOST, etc.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/fillPoses",
    "pageType": "web-api-instance-method",
    "summary": "The fillPoses() method of the XRFrame interface populates a Float32Array with the matrices of the poses relative to a given base space and returns true if successful for all spaces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/isHistoryNavigation",
    "pageType": "web-api-instance-property",
    "summary": "The isHistoryNavigation read-only property of the Request interface is a boolean indicating whether the request is a history navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/fillJointRadii",
    "pageType": "web-api-instance-method",
    "summary": "The fillJointRadii() method of the XRFrame interface populates a Float32Array with radii for a list of hand joint spaces and returns true if successful for all spaces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/mode",
    "pageType": "web-api-instance-property",
    "summary": "The mode read-only property of the Request\ninterface contains the mode of the request (e.g., cors,\nno-cors, same-origin, or navigate.) This is used\nto determine if cross-origin requests lead to valid responses, and which properties of the response are readable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/getDepthInformation",
    "pageType": "web-api-instance-method",
    "summary": "The getDepthInformation() method of the XRFrame interface returns an XRCPUDepthInformation object containing CPU depth information for the active and animated frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/getPose",
    "pageType": "web-api-instance-method",
    "summary": "The XRFrame method getPose() returns the relative position and\norientation—the pose—of one XRSpace to that of another space. With this, you can observe the motion of objects relative to each other and to fixed locations throughout the scene."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/redirect",
    "pageType": "web-api-instance-property",
    "summary": "The redirect read-only property of the Request interface contains the mode for how redirects are handled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/getHitTestResults",
    "pageType": "web-api-instance-method",
    "summary": "The getHitTestResults() method of the XRFrame interface returns an array of XRHitTestResult objects containing hit test results for a given XRHitTestSource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/duplex",
    "pageType": "web-api-instance-property",
    "summary": "The duplex read-only property of the Request interface returns the duplex mode of the request, which determines whether the browser must send the entire request before processing the response."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/getHitTestResultsForTransientInput",
    "pageType": "web-api-instance-method",
    "summary": "The getHitTestResultsForTransientInput() method of the XRFrame interface returns an array of XRTransientInputHitTestResult objects containing transient input hit test results for a given XRTransientInputHitTestSource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Request/bytes",
    "pageType": "web-api-instance-method",
    "summary": "The bytes() method of the Request interface reads the request body and returns it as a promise that resolves with an Uint8Array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRFrame/createAnchor",
    "pageType": "web-api-instance-method",
    "summary": "The createAnchor() method of the XRFrame interface creates a free-floating XRAnchor which will be fixed relative to the real world."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisErrorEvent",
    "pageType": "web-api-interface",
    "summary": "The SpeechSynthesisErrorEvent interface of the Web Speech API contains information about any errors that occur while processing SpeechSynthesisUtterance objects in the speech service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDataElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLDataElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <data> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisErrorEvent/error",
    "pageType": "web-api-instance-property",
    "summary": "The error property of the\nSpeechSynthesisErrorEvent interface returns an error code indicating what has gone wrong with a speech synthesis attempt."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDataElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the HTMLDataElement\ninterface returns a string reflecting the value HTML attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisErrorEvent/SpeechSynthesisErrorEvent",
    "pageType": "web-api-constructor",
    "summary": "The SpeechSynthesisErrorEvent() constructor creates a new SpeechSynthesisErrorEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIMessageEvent",
    "pageType": "web-api-interface",
    "summary": "The MIDIMessageEvent interface of the Web MIDI API represents the event passed to the midimessage event of the MIDIInput interface. A midimessage event is fired every time a MIDI message is sent from a device represented by a MIDIInput, for example when a MIDI keyboard key is pressed, a knob is tweaked, or a slider is moved."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRenderingIntent",
    "pageType": "web-api-interface",
    "summary": "The SVGRenderingIntent interface defines the enumerated list of possible values for rendering-intent attributes or descriptors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIMessageEvent/data",
    "pageType": "web-api-instance-property",
    "summary": "The data read-only property of the MIDIMessageEvent interface returns the MIDI data bytes of a single MIDI message."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLOptionElement interface represents <option> elements and inherits all properties and methods of the HTMLElement interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIMessageEvent/MIDIMessageEvent",
    "pageType": "web-api-constructor",
    "summary": "The MIDIMessageEvent() constructor creates a new MIDIMessageEvent object. Typically this constructor is not used as events are created when a MIDIInput finishes receiving one or more MIDI messages."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement/Option",
    "pageType": "web-api-constructor",
    "summary": "The Option() constructor creates a new\nHTMLOptionElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LaunchParams",
    "pageType": "web-api-interface",
    "summary": "The LaunchParams interface of the Launch Handler API is used when implementing custom launch navigation handling in a PWA. When window.launchQueue.setConsumer() is invoked to set up the launch navigation handling functionality, the callback function inside setConsumer() is passed a LaunchParams object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the HTMLOptionElement represents the text displayed for an option in a <select> element or as part of a list of suggestions in a <datalist> element. It reflects the <option> element's label attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LaunchParams/files",
    "pageType": "web-api-instance-property",
    "summary": "The files read-only property of the LaunchParams interface returns an array of FileSystemHandle objects representing any files passed along with the launch navigation via the POST method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The disabled property of the HTMLOptionElement is a boolean value that indicates whether the <option> element is unavailable to be selected. The property reflects the value of the disabled HTML attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/LaunchParams/targetURL",
    "pageType": "web-api-instance-property",
    "summary": "The targetURL read-only property of the LaunchParams interface returns the target URL of the associated web app launch."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement/defaultSelected",
    "pageType": "web-api-instance-property",
    "summary": "The defaultSelected property of the HTMLOptionElement interface specifies the default selected state of the element. This property reflects the <option> element's selected attribute. The presence of the selected attribute sets the defaultSelected property to true."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDConnectionEvent",
    "pageType": "web-api-interface",
    "summary": "The HIDConnectionEvent interface of the WebHID API represents HID connection events, and is the event type passed to connect and disconnect event handlers when a device's connection state changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLOptionElement interface returns an HTMLFormElement object that owns the HTMLSelectElement associated with this <option>, or null if this option is not associated with a <select> owned by a form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDConnectionEvent/HIDConnectionEvent",
    "pageType": "web-api-constructor",
    "summary": "The HIDConnectionEvent() constructor creates a new HIDConnectionEvent object. Typically this constructor is not used as events are created when a device's connection state changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement/text",
    "pageType": "web-api-instance-property",
    "summary": "The text property of the HTMLOptionElement represents the text inside the <option> element.\nThis property represents the same information as Node.textContent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDConnectionEvent/device",
    "pageType": "web-api-instance-property",
    "summary": "The device read-only property of the HIDConnectionEvent interface returns the HIDDevice associated with this connection event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the HTMLOptionElement interface represents the value of the <option> element as a string, or the empty string if no value is set. It reflects the element's value attribute, if present. Otherwise, it returns or sets the contents of the element, similar to the textContent property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackEvent",
    "pageType": "web-api-interface",
    "summary": "The MediaStreamTrackEvent interface of the Media Capture and Streams API represents events which indicate that a MediaStream has had tracks added to or removed from the stream through calls to Media Capture and Streams API methods. These events are sent to the stream when these changes occur."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement/index",
    "pageType": "web-api-instance-property",
    "summary": "The read-only index property of the HTMLOptionElement interface specifies the 0-based index of the element; that is, the position of the <option> within the list of options it belongs to, in tree-order, as an integer. If the <option> is not part of an option-list, the value is 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackEvent/MediaStreamTrackEvent",
    "pageType": "web-api-constructor",
    "summary": "The MediaStreamTrackEvent() constructor returns a new MediaStreamTrackEvent object,\nwhich represents an event signaling that a MediaStreamTrack has been added to or removed from a MediaStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOptionElement/selected",
    "pageType": "web-api-instance-property",
    "summary": "The selected property of the HTMLOptionElement interface specifies the current selectedness of the element; that is, whether the <option> is selected or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackEvent/track",
    "pageType": "web-api-instance-property",
    "summary": "The track read-only property of the MediaStreamTrackEvent interface returns the MediaStreamTrack associated with this event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/loaded",
    "pageType": "web-api-instance-property",
    "summary": "The loaded read-only property of the FontFace interface returns a Promise that resolves with the current FontFace object when the font specified in the object's constructor is done loading or rejects with a SyntaxError."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Cache",
    "pageType": "web-api-interface",
    "summary": "The Cache interface provides a persistent storage mechanism for Request / Response object pairs that are cached in long lived memory. How long a Cache object lives is browser dependent, but a single origin's scripts can typically rely on the presence of a previously populated Cache object. Note that the Cache interface is exposed to windowed scopes as well as workers. You don't have to use it in conjunction with service workers, even though it is defined in the service worker spec."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace",
    "pageType": "web-api-interface",
    "summary": "The FontFace interface of the CSS Font Loading API represents a single usable font face."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Cache/match",
    "pageType": "web-api-instance-method",
    "summary": "The match() method of the Cache interface returns a Promise that resolves to the Response associated with the first matching request in the Cache object.\nIf no match is found, the Promise resolves to undefined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/status",
    "pageType": "web-api-instance-property",
    "summary": "The status read-only property of the FontFace interface returns an enumerated value indicating the status of the font, one of \"unloaded\", \"loading\", \"loaded\", or \"error\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Cache/add",
    "pageType": "web-api-instance-method",
    "summary": "The add() method of the Cache interface takes a URL, retrieves it, and adds the resulting response object to the given cache."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/display",
    "pageType": "web-api-instance-property",
    "summary": "The display property of the FontFace interface determines how a font face is displayed based on whether and when it is downloaded and ready to use.\nThis property is equivalent to the CSS font-display descriptor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Cache/matchAll",
    "pageType": "web-api-instance-method",
    "summary": "The matchAll() method of the Cache\ninterface returns a Promise that resolves to an array of all matching\nresponses in the Cache object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/variationSettings",
    "pageType": "web-api-instance-property",
    "summary": "The variationSettings property of the FontFace interface retrieves or sets low-level OpenType or TrueType font variations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Cache/addAll",
    "pageType": "web-api-instance-method",
    "summary": "The addAll() method of the Cache interface takes an array of URLs, retrieves them, and adds the resulting response objects to the given cache. The request objects created during retrieval become keys to the stored response operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/weight",
    "pageType": "web-api-instance-property",
    "summary": "The weight property of the FontFace interface retrieves or sets the weight of the font."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Cache/put",
    "pageType": "web-api-instance-method",
    "summary": "The put() method of the\nCache interface allows key/value pairs to be added to the current\nCache object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/lineGapOverride",
    "pageType": "web-api-instance-property",
    "summary": "The lineGapOverride property of the FontFace interface returns and sets the value of the line-gap-override descriptor.\nThe possible values are normal, indicating that the metric used should be obtained from the font file, or a percentage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Cache/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the Cache interface returns a\nPromise that resolves to an array of Request objects\nrepresenting the keys of the Cache."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/style",
    "pageType": "web-api-instance-property",
    "summary": "The style property of the FontFace interface retrieves or sets the font's style."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Cache/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the Cache interface finds the Cache entry whose key is the request, and if found, deletes the Cache entry and returns a Promise that resolves to true.\nIf no Cache entry is found, it resolves to false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/unicodeRange",
    "pageType": "web-api-instance-property",
    "summary": "The unicodeRange property of the FontFace interface retrieves or sets the range of unicode code points encompassing the font."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimateMotionElement",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimateMotionElement interface corresponds to the <animateMotion> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/featureSettings",
    "pageType": "web-api-instance-property",
    "summary": "The featureSettings property of the FontFace interface retrieves or sets infrequently used font features that are not available from a font's variant properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/FontFace",
    "pageType": "web-api-constructor",
    "summary": "The FontFace() constructor creates a new FontFace object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLTextAreaElement interface indicates the name of the <textarea> element. It reflects the element's name attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/load",
    "pageType": "web-api-instance-method",
    "summary": "The load() method of the FontFace interface requests and loads a font whose source was specified as a URL. It returns a Promise that resolves with the current FontFace object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTextAreaElement interface provides properties and methods for manipulating the layout and presentation of <textarea> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/descentOverride",
    "pageType": "web-api-instance-property",
    "summary": "The descentOverride property of the FontFace interface returns and sets the value of the descent-override descriptor.\nThe possible values are normal, indicating that the metric used should be obtained from the font file, or a percentage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/selectionStart",
    "pageType": "web-api-instance-property",
    "summary": "The selectionStart property of the HTMLTextAreaElement interface specifies the start position of the current text selection in a <textarea> element. It is a number representing the beginning index of the selected text. It can be used to both retrieve and set the start of the index of the beginning of a <textarea>s selected text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/stretch",
    "pageType": "web-api-instance-property",
    "summary": "The stretch property of the FontFace interface retrieves or sets how the font stretches."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/select_event",
    "pageType": "web-api-event",
    "summary": "The select event fires when some text has been selected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/ascentOverride",
    "pageType": "web-api-instance-property",
    "summary": "The ascentOverride property of the FontFace interface returns and sets the ascent metric for the font, the height above the baseline that CSS uses to lay out line boxes in an inline formatting context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/selectionchange_event",
    "pageType": "web-api-event",
    "summary": "The selectionchange event of the Selection API is fired when the text selection within a <textarea> element is changed.\nThis includes both changes in the selected range of characters, or if the caret moves."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/variant",
    "pageType": "web-api-instance-property",
    "summary": "The variant property of the\nFontFace interface programmatically retrieves or sets font variant\nvalues."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/maxLength",
    "pageType": "web-api-instance-property",
    "summary": "The maxLength property of the HTMLTextAreaElement interface indicates the maximum number of characters (in UTF-16 code units) allowed to be entered for the value of the <textarea> element, and the maximum number of characters allowed for the value to be valid. It reflects the element's maxlength attribute. -1 means there is no limit on the length of the value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FontFace/family",
    "pageType": "web-api-instance-property",
    "summary": "The FontFace.family property allows the author to get or set the font family of a FontFace object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/required",
    "pageType": "web-api-instance-property",
    "summary": "The required property of the HTMLTextAreaElement interface specifies that the user must fill in a value before submitting a form. It reflects the <textarea> element's required attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageCapture/grabFrame",
    "pageType": "web-api-instance-method",
    "summary": "The grabFrame() method of the\nImageCapture interface takes a snapshot of the live video in a\nMediaStreamTrack and returns a Promise that resolves with\nan ImageBitmap containing the snapshot."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageCapture",
    "pageType": "web-api-interface",
    "summary": "The ImageCapture interface of the MediaStream Image Capture API provides methods to enable the capture of images or photos from a camera or other photographic device. It provides an interface for capturing images from a photographic device referenced through a valid MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/wrap",
    "pageType": "web-api-instance-property",
    "summary": "The wrap property of the HTMLTextAreaElement interface indicates how the control should wrap the value for form submission. It reflects the <textarea> element's wrap attribute. Note that the \"hard\" value only has an effect when the cols attribute is also set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageCapture/getPhotoCapabilities",
    "pageType": "web-api-instance-method",
    "summary": "The getPhotoCapabilities()\nmethod of the ImageCapture interface returns a Promise\nthat resolves with an object containing the ranges of\navailable configuration options."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageCapture/takePhoto",
    "pageType": "web-api-instance-method",
    "summary": "The takePhoto() method of the\nImageCapture interface takes a single exposure using the video capture\ndevice sourcing a MediaStreamTrack and returns a Promise\nthat resolves with a Blob containing the data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/selectionEnd",
    "pageType": "web-api-instance-property",
    "summary": "The selectionEnd property of the HTMLTextAreaElement interface specifies the end position of the current text selection in a <textarea> element. It is a number representing the last index of the selected text. It can be used to both retrieve and set the index of the end of a <textarea>s selected text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageCapture/track",
    "pageType": "web-api-instance-property",
    "summary": "The track read-only property of the\nImageCapture interface returns a reference to the\nMediaStreamTrack passed to the\nImageCapture() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/autocomplete",
    "pageType": "web-api-instance-property",
    "summary": "The autocomplete property of the HTMLTextAreaElement interface indicates whether the value of the control can be automatically completed by the browser. It reflects the <textarea> element's autocomplete attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageCapture/ImageCapture",
    "pageType": "web-api-constructor",
    "summary": "The ImageCapture() constructor\ncreates a new ImageCapture object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The disabled property of the HTMLTextAreaElement interface indicates whether this multi-line text control is disabled and cannot be interacted with. It reflects the <textarea> element's disabled attribute. When false, this textarea may still be disabled if its containing element, such as a <fieldset>, is disabled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageCapture/getPhotoSettings",
    "pageType": "web-api-instance-method",
    "summary": "The getPhotoSettings() method of\nthe ImageCapture interface returns a Promise that\nresolves with an object containing the current photo\nconfiguration settings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent",
    "pageType": "web-api-interface",
    "summary": "The RTCPeerConnectionIceErrorEvent interface—based upon the Event interface—provides details pertaining to an ICE error announced by sending an icecandidateerror event to the RTCPeerConnection object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/willValidate",
    "pageType": "web-api-instance-property",
    "summary": "The willValidate read-only property of the HTMLTextAreaElement interface indicates whether the <textarea> element is a candidate for constraint validation. It is false if any conditions bar it from constraint validation, such as when its disabled or readOnly property is true."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent/address",
    "pageType": "web-api-instance-property",
    "summary": "The RTCPeerConnectionIceErrorEvent property\naddress is a string which indicates the local IP address\nbeing used to communicate with the STUN or TURN server\nduring negotiations. The error which occurred involved this address."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the HTMLTextAreaElement interface returns the string \"textarea\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransformEvent/transformer",
    "pageType": "web-api-instance-property",
    "summary": "The read-only transformer property of the RTCTransformEvent interface returns the RTCRtpScriptTransformer associated with the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/validity",
    "pageType": "web-api-instance-property",
    "summary": "The validity read-only property of the HTMLTextAreaElement interface returns a ValidityState object that represents the validity states this element is in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCTransformEvent",
    "pageType": "web-api-interface",
    "summary": "The RTCTransformEvent of the WebRTC API represent an event that is fired in a dedicated worker when an encoded frame has been queued for processing by a WebRTC Encoded Transform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUOutOfMemoryError",
    "pageType": "web-api-interface",
    "summary": "The GPUOutOfMemoryError interface of the WebGPU API describes an out-of-memory (oom) error indicating that there was not enough free memory to complete the requested operation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/readOnly",
    "pageType": "web-api-instance-property",
    "summary": "The readOnly property of the HTMLTextAreaElement interface indicates that the user cannot modify the value of the control. Unlike the disabled attribute, the readonly attribute does not prevent the user from clicking or selecting in the control. It reflects the <textarea> element's readonly attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUOutOfMemoryError/GPUOutOfMemoryError",
    "pageType": "web-api-constructor",
    "summary": "The GPUOutOfMemoryError() constructor creates a new\nGPUOutOfMemoryError object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLTextAreaElement interface returns an HTMLFormElement object that owns this <textarea>, or null if this textarea is not owned by any form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathExpression",
    "pageType": "web-api-interface",
    "summary": "This interface is a compiled XPath expression that can be evaluated on a document or specific node to return information from its DOM tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/rows",
    "pageType": "web-api-instance-property",
    "summary": "The rows property of the HTMLTextAreaElement interface is a positive integer representing the visible text lines of the text control. It reflects the <textarea> element's rows attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XPathExpression/evaluate",
    "pageType": "web-api-instance-method",
    "summary": "The evaluate() method of the\nXPathExpression interface executes an XPath expression on the given node or document and\nreturns an XPathResult."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/setSelectionRange",
    "pageType": "web-api-instance-method",
    "summary": "The setSelectionRange() method of the HTMLTextAreaElement interface sets the start and end positions of the current text selection, and optionally the direction, in a <textarea> element. This updates the selection state immediately, though the visual highlight only appears when the element is focused. The direction indicates the in which selection should be considered to have occurred; for example, that the selection was set by the user clicking and dragging from the end of the selected text toward the beginning. In addition, the select and selectionchange events are fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothUUID",
    "pageType": "web-api-interface",
    "summary": "The BluetoothUUID interface of the Web Bluetooth API provides a way to look up Universally Unique Identifier (UUID) values by name in the\nregistry maintained by the Bluetooth SIG."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothUUID/getDescriptor_static",
    "pageType": "web-api-static-method",
    "summary": "The getDescriptor() static method of the BluetoothUUID interface returns a UUID representing a registered descriptor when passed a name or the 16- or 32-bit UUID alias."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/textLength",
    "pageType": "web-api-instance-property",
    "summary": "The textLength read-only property of the HTMLTextAreaElement interface is a non-negative integer representing the number of characters, in UTF-16 code units, of the <textarea> element's value. It is a shortcut of accessing length on its value property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothUUID/canonicalUUID_static",
    "pageType": "web-api-static-method",
    "summary": "The canonicalUUID() static method of the BluetoothUUID interface returns the 128-bit UUID when passed a 16- or 32-bit UUID alias."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the HTMLTextAreaElement interface represents the value of the <textarea> element as a string, which is an empty string if the widget contains no content. It returns or sets the raw value contained in the control."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothUUID/getCharacteristic_static",
    "pageType": "web-api-static-method",
    "summary": "The getCharacteristic() static method of the BluetoothUUID interface returns a UUID representing a registered characteristic when passed a name or the 16- or 32-bit UUID alias."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/setCustomValidity",
    "pageType": "web-api-instance-method",
    "summary": "The setCustomValidity() method of the HTMLTextAreaElement interface sets the custom validity message for the <textarea> element. Use the empty string to indicate that the element does not have a custom validity error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothUUID/getService_static",
    "pageType": "web-api-static-method",
    "summary": "The getService() static method of the BluetoothUUID interface returns a UUID representing a registered service when passed a name or the 16- or 32-bit UUID alias."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/reportValidity",
    "pageType": "web-api-instance-method",
    "summary": "The reportValidity() method of the HTMLTextAreaElement interface performs the same validity checking steps as the checkValidity() method. In addition, if the invalid event is not canceled, the browser displays the problem to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SensorErrorEvent",
    "pageType": "web-api-interface",
    "summary": "The SensorErrorEvent interface of the Sensor APIs provides information about errors thrown by a Sensor or derived interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SensorErrorEvent/error",
    "pageType": "web-api-instance-property",
    "summary": "The error read-only property of\nthe SensorErrorEvent interface returns the DOMException\nobject passed in the event's constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/validationMessage",
    "pageType": "web-api-instance-property",
    "summary": "The validationMessage read-only property of the HTMLTextAreaElement interface returns a string representing a localized message that describes the validation constraints that the <textarea> control does not satisfy (if any). This is the empty string if the control is not a candidate for constraint validation (HTMLTextAreaElement.willValidate is false), or it satisfies its constraints."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SensorErrorEvent/SensorErrorEvent",
    "pageType": "web-api-constructor",
    "summary": "The SensorErrorEvent() constructor\ncreates a new SensorErrorEvent object which provides information about\nerrors thrown by any of the interfaces based on Sensor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/cols",
    "pageType": "web-api-instance-property",
    "summary": "The cols property of the HTMLTextAreaElement interface is a positive integer representing the visible width of the multi-line text control, in average character widths. It reflects the <textarea> element's cols attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/dirName",
    "pageType": "web-api-instance-property",
    "summary": "The dirName property of the HTMLTextAreaElement interface is the directionality of the element. It reflects the value of the <textarea> element's dirName attribute. This property can be retrieved or set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLIFrameElement interface is a string value that reflects the name attribute of the <iframe> element, indicating the specific name of the <iframe> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLIFrameElement interface provides special properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/select",
    "pageType": "web-api-instance-method",
    "summary": "The select() method of the HTMLTextAreaElement interface selects the entire contents of the <textarea> element. In addition, the select event is fired. The select() method does not take any parameters and does not return a value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/src",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLIFrameElement.src\nA string that reflects the src HTML attribute, containing the address of the content to be embedded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/minLength",
    "pageType": "web-api-instance-property",
    "summary": "The minLength property of the HTMLTextAreaElement interface indicates the minimum number of characters (in UTF-16 code units) required for the value of the <textarea> element to be valid. It reflects the element's minlength attribute. -1 means there is no minimum length requirement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/allowFullscreen",
    "pageType": "web-api-instance-property",
    "summary": "The allowFullscreen property of the HTMLIFrameElement interface is a boolean value that reflects the allowfullscreen attribute of the <iframe> element, indicating whether to allow the iframe's contents to use requestFullscreen()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/defaultValue",
    "pageType": "web-api-instance-property",
    "summary": "The defaultValue property of the HTMLTextAreaElement interface represents the default text content of this text area. Getting and setting this value is equivalent to getting and setting textContent on the <textarea>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/browsingTopics",
    "pageType": "web-api-instance-property",
    "summary": "The browsingTopics property of the HTMLIFrameElement interface is a boolean specifying that the selected topics for the current user should be sent with the request for the associated <iframe>'s source in a Sec-Browsing-Topics header. This reflects the browsingtopics HTML attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/loading",
    "pageType": "web-api-instance-property",
    "summary": "The loading property of the HTMLIFrameElement interface is a string that provides a hint to the user agent indicating whether the iframe should be loaded immediately on page load, or only when it is needed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/placeholder",
    "pageType": "web-api-instance-property",
    "summary": "The placeholder property of the HTMLTextAreaElement interface represents a hint to the user of what can be entered in the control. It reflects the <textarea> element's placeholder attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/srcdoc",
    "pageType": "web-api-instance-property",
    "summary": "The srcdoc property of the HTMLIFrameElement interface gets or sets the inline HTML markup of the frame's document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/setRangeText",
    "pageType": "web-api-instance-method",
    "summary": "The setRangeText() method of the HTMLTextAreaElement interface replaces a\nrange of text in a <textarea> element with new text passed as the argument."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/featurePolicy",
    "pageType": "web-api-instance-property",
    "summary": "The featurePolicy read-only\nproperty of the HTMLIFrameElement interface returns the\nFeaturePolicy interface which provides a simple API for introspecting\nthe Permissions Policies applied to a specific frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/labels",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTextAreaElement.labels read-only property returns\na NodeList of the <label> elements associated with the\n<textArea> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy",
    "pageType": "web-api-instance-property",
    "summary": "The\nHTMLIFrameElement.referrerPolicy\nproperty reflects the HTML referrerpolicy attribute of the\n<iframe> element defining which referrer is sent when fetching the\nresource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/selectionDirection",
    "pageType": "web-api-instance-property",
    "summary": "The selectionDirection property of the HTMLTextAreaElement interface specifies the current direction of the selection. The possible values are \"forward\", \"backward\", and \"none\". The forward value indicates the selection was performed in the start-to-end direction of the current locale, with backward indicating the opposite direction. The none value occurs if the direction is unknown. It can be used to both retrieve and change the direction of the <textarea>s selected text."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the HTMLIFrameElement interface returns a string that reflects the height attribute of the <iframe> element, indicating the height of the frame in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTextAreaElement/checkValidity",
    "pageType": "web-api-instance-method",
    "summary": "The checkValidity() method of the HTMLTextAreaElement interface returns a boolean value which indicates if the element meets any constraint validation rules applied to it. If false, the method also fires an invalid event on the element. Because there's no default browser behavior for checkValidity(), canceling this invalid event has no effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/allow",
    "pageType": "web-api-instance-property",
    "summary": "The allow property of the HTMLIFrameElement interface indicates the Permissions Policy specified for this <iframe> element. The policy defines what features are available to the <iframe> element (for example, access to the microphone, camera, battery, web-share, etc.) based on the origin of the request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/contentDocument",
    "pageType": "web-api-instance-property",
    "summary": "If the iframe and the iframe's parent document are Same Origin, returns a Document (that is, the active document in the inline frame's nested browsing context), else returns null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCompositionLayer/mipLevels",
    "pageType": "web-api-instance-property",
    "summary": "The read-only mipLevels property of the XRCompositionLayer interface is a layer's number of mip levels in the color and texture data. See also Mipmap on Wikipedia."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the HTMLIFrameElement interface returns a string that reflects the width attribute of the <iframe> element, indicating the width of the frame in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCompositionLayer",
    "pageType": "web-api-interface",
    "summary": "The XRCompositionLayer interface of the WebXR Device API is a base class that defines a set of common properties and behaviors for WebXR layer types. It is not constructable on its own."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/csp",
    "pageType": "web-api-instance-property",
    "summary": "The csp property of the HTMLIFrameElement\ninterface specifies the Content Security Policy that an\nembedded document must agree to enforce upon itself."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/allowPaymentRequest",
    "pageType": "web-api-instance-property",
    "summary": "The allowPaymentRequest property of the\nHTMLIFrameElement interface returns a boolean value indicating\nwhether the Payment Request API may be invoked on a cross-origin iframe."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCompositionLayer/layout",
    "pageType": "web-api-instance-property",
    "summary": "The read-only layout property of the XRCompositionLayer interface is the layout type of the layer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/getSVGDocument",
    "pageType": "web-api-instance-method",
    "summary": "The getSVGDocument() method of the HTMLIFrameElement interface returns the Document object of the embedded SVG."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCompositionLayer/blendTextureSourceAlpha",
    "pageType": "web-api-instance-property",
    "summary": "The blendTextureSourceAlpha property of the XRCompositionLayer interface is a boolean enabling the layer's texture alpha channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/contentWindow",
    "pageType": "web-api-instance-property",
    "summary": "The contentWindow property returns the Window object of an HTMLIFrameElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCompositionLayer/destroy",
    "pageType": "web-api-instance-method",
    "summary": "The destroy() method of the XRCompositionLayer interface deletes the references to the underlying graphics library for the layer. It also sets the color textures and depth stencil texture arrays to an empty array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/sandbox",
    "pageType": "web-api-instance-property",
    "summary": "The sandbox read-only property of the HTMLIFrameElement interface returns a DOMTokenList indicating extra restrictions on the behavior of the nested content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLIFrameElement/credentialless",
    "pageType": "web-api-instance-property",
    "summary": "The credentialless property of the HTMLIFrameElement interface indicates whether the <iframe> is credentialless, meaning that documents inside will be loaded using new, ephemeral contexts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCompositionLayer/needsRedraw",
    "pageType": "web-api-instance-property",
    "summary": "The read-only needsRedraw property of the XRCompositionLayer interface is a boolean signaling that the layer should be re-rendered in the next frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaintSize",
    "pageType": "web-api-interface",
    "summary": "The PaintSize interface of the CSS Painting API represents the size of the output bitmap that the author should draw."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRViewport",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API's XRViewport interface provides properties used to describe the size and position of the current viewport within the XRWebGLLayer being used to render the 3D scene."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaintSize/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the PaintSize interface returns the height of the output bitmap that the author should draw."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRViewport/x",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRViewport interface's\nx property indicates the offset from the left edge of\nthe destination surface (typically a XRWebGLLayer) to the left edge of\nthe viewport within the surface into which WebXR content is to be rendered. The\nviewport's y property identifies the y\ncomponent of the origin, and its is given by the width\nand height properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaintSize/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the PaintSize interface returns the width of the output bitmap that the author should draw."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRViewport/height",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRViewport property\nheight specifies the height, in pixels, of the viewport\nonto the drawing surface within which the WebXR view is to be rendered. Along\nwith width and the origin point given by\nx and y, this defines the\narea within which rendered content will be drawn."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRecord",
    "pageType": "web-api-interface",
    "summary": "The BackgroundFetchRecord interface of the Background Fetch API represents an individual request and response."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRViewport/y",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRViewport interface's\ny property indicates the offset from the bottom edge of\nthe destination surface (typically a XRWebGLLayer) to the bottom edge of\nthe viewport within the surface into which WebXR content is to be rendered. The\nviewport's x property identifies the x\ncomponent of the origin, and its is given by the width\nand height properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRecord/responseReady",
    "pageType": "web-api-instance-property",
    "summary": "The responseReady read-only property of the BackgroundFetchRecord interface returns a Promise that resolves with a Response."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchRecord/request",
    "pageType": "web-api-instance-property",
    "summary": "The request read-only property of the BackgroundFetchRecord interface returns the details of the resource to be fetched."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRViewport/width",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRViewport property\nwidth specifies the width of the viewport, in pixels,\nonto the drawing surface the 3D scene is to be rendered into. This is defined\nusing this property along with the viewport's height\nand its origin given by its properties x and\ny."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSlotElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLSlotElement\ninterface returns or sets the slot name. A slot is a placeholder inside a web component\nthat users can fill with their own markup."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackList/change_event",
    "pageType": "web-api-event",
    "summary": "The change event is fired when a text track is made active or inactive, or a TextTrackList is otherwise changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSlotElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLSlotElement interface of the Shadow DOM API enables access to the name and assigned nodes of an HTML <slot> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackList",
    "pageType": "web-api-interface",
    "summary": "The TextTrackList interface is used to represent a list of the text tracks defined for the associated video or audio element, with each track represented by a separate TextTrack object in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSlotElement/assignedNodes",
    "pageType": "web-api-instance-method",
    "summary": "The assignedNodes() method of the HTMLSlotElement interface returns a sequence of the nodes assigned to this slot."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackList/addtrack_event",
    "pageType": "web-api-event",
    "summary": "The addtrack event is fired when a track is added to a TextTrackList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSlotElement/slotchange_event",
    "pageType": "web-api-event",
    "summary": "The slotchange event is fired on an HTMLSlotElement instance (<slot> element) when the node(s) contained in that slot change."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackList/removetrack_event",
    "pageType": "web-api-event",
    "summary": "The removetrack event is fired when a track is removed from a TextTrackList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSlotElement/assign",
    "pageType": "web-api-instance-method",
    "summary": "The assign() method of the HTMLSlotElement interface sets the slot's manually assigned nodes to an ordered set of slottables. The manually assigned nodes set is initially empty until nodes are assigned using assign()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackList/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only TextTrackList\nproperty length returns the number of entries in the\nTextTrackList, each of which is a TextTrack representing\none track in the media element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSlotElement/assignedElements",
    "pageType": "web-api-instance-method",
    "summary": "The assignedElements() method of the HTMLSlotElement\ninterface returns a sequence of the elements assigned to this slot (and no\nother nodes)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackList/getTrackById",
    "pageType": "web-api-instance-method",
    "summary": "The TextTrackList method\ngetTrackById() returns the first\nTextTrack object from the track list whose\nid matches the\nspecified string. This lets you find a specified track if you know its ID\nstring."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNamespaceRule",
    "pageType": "web-api-interface",
    "summary": "The CSSNamespaceRule interface describes an object representing a single CSS @namespace at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNamespaceRule/prefix",
    "pageType": "web-api-instance-property",
    "summary": "The read-only prefix property of the CSSNamespaceRule returns a string with the name of the prefix associated to this namespace. If there is no such prefix, it returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RsaOaepParams",
    "pageType": "web-api-interface",
    "summary": "The RsaOaepParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.encrypt(), SubtleCrypto.decrypt(), SubtleCrypto.wrapKey(), or SubtleCrypto.unwrapKey(), when using the RSA_OAEP algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNamespaceRule/namespaceURI",
    "pageType": "web-api-instance-property",
    "summary": "The read-only namespaceURI property of the CSSNamespaceRule returns a string containing the text of the URI of the given namespace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BlobEvent",
    "pageType": "web-api-interface",
    "summary": "The BlobEvent interface of the MediaStream Recording API represents events associated with a Blob. These blobs are typically, but not necessarily, associated with media content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorageRunOperation",
    "pageType": "web-api-interface",
    "summary": "The SharedStorageRunOperation interface of the Shared Storage API represents a Run output gate operation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorageRunOperation/run",
    "pageType": "web-api-instance-method",
    "summary": "The run() method of the\nSharedStorageRunOperation interface defines the structure to which the run() method defined inside a Run output gate operation should conform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BlobEvent/timecode",
    "pageType": "web-api-instance-property",
    "summary": "The timecode read-only property of the BlobEvent interface indicates the difference between the timestamp of the first chunk of data, and the timestamp of the first chunk in the first BlobEvent produced by this recorder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BlobEvent/data",
    "pageType": "web-api-instance-property",
    "summary": "The data read-only property of the BlobEvent interface represents a Blob associated with the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/JS_Self-Profiling_API",
    "pageType": "web-api-overview",
    "summary": "The JS Self-Profiling API enables a website to run a sampling profiler, to understand where it is spending JavaScript execution time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/JS_Self-Profiling_API/Profile_content_and_format",
    "pageType": "guide",
    "summary": "In this page we'll describe how to interpret a profile captured using the Self-Profiling API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BlobEvent/BlobEvent",
    "pageType": "web-api-constructor",
    "summary": "The BlobEvent() constructor returns a newly created\nBlobEvent object with an associated Blob."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HID",
    "pageType": "web-api-interface",
    "summary": "The HID interface provides methods for connecting to HID devices, listing attached HID devices and event handlers for connected HID devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/features",
    "pageType": "web-api-instance-property",
    "summary": "The features read-only property of the\nGPUDevice interface returns a GPUSupportedFeatures object that describes additional functionality supported by the device. Only features requested during the creation of the device (i.e., when GPUAdapter.requestDevice() is called) are included."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HID/connect_event",
    "pageType": "web-api-event",
    "summary": "The connect event of the HID interface fires when the user agent connects to a HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/limits",
    "pageType": "web-api-instance-property",
    "summary": "The limits read-only property of the\nGPUDevice interface returns a GPUSupportedLimits object that describes the limits supported by the device. All limit values will be included, and the limits requested during the creation of the device (i.e., when GPUAdapter.requestDevice() is called) will be reflected in those values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice",
    "pageType": "web-api-interface",
    "summary": "The GPUDevice interface of the WebGPU API represents a logical GPU device. This is the main interface through which the majority of WebGPU functionality is accessed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HID/requestDevice",
    "pageType": "web-api-instance-method",
    "summary": "The requestDevice() method of the HID interface requests access to a HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createComputePipelineAsync",
    "pageType": "web-api-instance-method",
    "summary": "The createComputePipelineAsync() method of the\nGPUDevice interface returns a Promise that fulfills with a GPUComputePipeline, which can control the compute shader stage and be used in a GPUComputePassEncoder, once the pipeline can be used without any stalling."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createBindGroup",
    "pageType": "web-api-instance-method",
    "summary": "The createBindGroup() method of the\nGPUDevice interface creates a GPUBindGroup based on a GPUBindGroupLayout that defines a set of resources to be bound together in a group and how those resources are used in shader stages."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HID/getDevices",
    "pageType": "web-api-instance-method",
    "summary": "The getDevices() method of the HID interface gets a list of connected HID devices that the user has previously been granted access to in response to a requestDevice() call."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createQuerySet",
    "pageType": "web-api-instance-method",
    "summary": "The createQuerySet() method of the\nGPUDevice interface creates a GPUQuerySet that can be used to record the results of queries on passes, such as occlusion or timestamp queries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HID/disconnect_event",
    "pageType": "web-api-event",
    "summary": "The disconnect event of the HID interface fires when the user agent disconnects a HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createComputePipeline",
    "pageType": "web-api-instance-method",
    "summary": "The createComputePipeline() method of the\nGPUDevice interface creates a GPUComputePipeline that can control the compute shader stage and be used in a GPUComputePassEncoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItem",
    "pageType": "web-api-interface",
    "summary": "The DataTransferItem object represents one drag data item. During a drag operation, each DragEvent has a dataTransfer property which contains a list of drag data items. Each item in the list is a DataTransferItem object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the\nGPUDevice interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItem/kind",
    "pageType": "web-api-instance-property",
    "summary": "The read-only DataTransferItem.kind property returns the kind–a string or a file–of the DataTransferItem object representing the drag data item."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The createBuffer() method of the\nGPUDevice interface creates a GPUBuffer in which to store raw data to use in GPU operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createPipelineLayout",
    "pageType": "web-api-instance-method",
    "summary": "The createPipelineLayout() method of the\nGPUDevice interface creates a GPUPipelineLayout that defines the GPUBindGroupLayouts used by a pipeline. GPUBindGroups used with the pipeline during command encoding must have compatible GPUBindGroupLayouts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItem/getAsString",
    "pageType": "web-api-instance-method",
    "summary": "The DataTransferItem.getAsString() method invokes the given callback with the drag data item's string data as the argument if the item's kind is a Plain unicode string (i.e., kind is string)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createShaderModule",
    "pageType": "web-api-instance-method",
    "summary": "The createShaderModule() method of the\nGPUDevice interface creates a GPUShaderModule from a string of WGSL source code."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItem/type",
    "pageType": "web-api-instance-property",
    "summary": "The read-only DataTransferItem.type property returns the type (format) of the DataTransferItem object representing the drag data item.\nThe type is a Unicode string generally given by a MIME type, although a MIME type is not required."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createSampler",
    "pageType": "web-api-instance-method",
    "summary": "The createSampler() method of the\nGPUDevice interface creates a GPUSampler, which controls how shaders transform and filter texture resource data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItem/getAsFileSystemHandle",
    "pageType": "web-api-instance-method",
    "summary": "The getAsFileSystemHandle() method of the DataTransferItem interface returns a Promise that fulfills with a FileSystemFileHandle if the dragged item is a file, or fulfills with a FileSystemDirectoryHandle if the dragged item is a directory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/popErrorScope",
    "pageType": "web-api-instance-method",
    "summary": "The popErrorScope() method of the\nGPUDevice interface pops an existing GPU error scope from the error scope stack (originally pushed using GPUDevice.pushErrorScope()) and returns a Promise that resolves to an object describing the first error captured in the scope, or null if no error occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/lost",
    "pageType": "web-api-instance-property",
    "summary": "The lost read-only property of the\nGPUDevice interface contains a Promise that remains pending throughout the device's lifetime and resolves with a GPUDeviceLostInfo object when the device is lost."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry",
    "pageType": "web-api-instance-method",
    "summary": "If the item described by the DataTransferItem is a file, webkitGetAsEntry() returns a FileSystemFileEntry or FileSystemDirectoryEntry representing it. If the item isn't a file, null is returned."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createRenderBundleEncoder",
    "pageType": "web-api-instance-method",
    "summary": "The createRenderBundleEncoder() method of the\nGPUDevice interface creates a GPURenderBundleEncoder that can be used to pre-record bundles of commands. These can be reused in GPURenderPassEncoders via the executeBundles() method, as many times as required."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItem/getAsFile",
    "pageType": "web-api-instance-method",
    "summary": "If the item is a file, the DataTransferItem.getAsFile() method returns the drag data item's File object.\nIf the item is not a file, this method returns null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createBindGroupLayout",
    "pageType": "web-api-instance-method",
    "summary": "The createBindGroupLayout() method of the\nGPUDevice interface creates a GPUBindGroupLayout that defines the structure and purpose of related GPU resources such as buffers that will be used in a pipeline, and is used as a template when creating GPUBindGroups."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Report",
    "pageType": "web-api-interface",
    "summary": "The Report interface of the Reporting API represents a single report."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createRenderPipeline",
    "pageType": "web-api-instance-method",
    "summary": "The createRenderPipeline() method of the\nGPUDevice interface creates a GPURenderPipeline that can control the vertex and fragment shader stages and be used in a GPURenderPassEncoder or GPURenderBundleEncoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Report/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the Report\ninterface returns the type of report generated, e.g., deprecation or\nintervention."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/pushErrorScope",
    "pageType": "web-api-instance-method",
    "summary": "The pushErrorScope() method of the\nGPUDevice interface pushes a new GPU error scope onto the device's error scope stack, allowing you to capture errors of a particular type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Report/body",
    "pageType": "web-api-instance-property",
    "summary": "The body read-only property of the Report\ninterface returns the body of the report, which is a ReportBody object\ncontaining the detailed report information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/uncapturederror_event",
    "pageType": "web-api-event",
    "summary": "The uncapturederror event of the GPUDevice interface is fired when an error is thrown that has not been observed by a GPU error scope, to provide a way to report unexpected errors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createCommandEncoder",
    "pageType": "web-api-instance-method",
    "summary": "The createCommandEncoder() method of the\nGPUDevice interface creates a GPUCommandEncoder, used to encode commands to be issued to the GPU."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Report/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the Report\ninterface returns the URL of the document that generated the report."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/destroy",
    "pageType": "web-api-instance-method",
    "summary": "The destroy() method of the\nGPUDevice interface destroys the device, preventing further operations on it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/importExternalTexture",
    "pageType": "web-api-instance-method",
    "summary": "The importExternalTexture() method of the\nGPUDevice interface takes an HTMLVideoElement or a VideoFrame object as an input and returns a GPUExternalTexture wrapper object containing a snapshot of the video that can be used as a frame in GPU rendering operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframesRule/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the CSSKeyframeRule interface gets and sets the name of the animation as used by the animation-name property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframesRule",
    "pageType": "web-api-interface",
    "summary": "The CSSKeyframesRule interface describes an object representing a complete set of keyframes for a CSS animation. It corresponds to the contents of a whole @keyframes at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createTexture",
    "pageType": "web-api-instance-method",
    "summary": "The createTexture() method of the\nGPUDevice interface creates a GPUTexture in which to store 1D, 2D, or 3D arrays of data, such as images, to use in GPU rendering operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/adapterInfo",
    "pageType": "web-api-instance-property",
    "summary": "The adapterInfo read-only property of the\nGPUDevice interface returns a GPUAdapterInfo object containing identifying information about the device's originating adapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframesRule/findRule",
    "pageType": "web-api-instance-method",
    "summary": "The findRule() method of the CSSKeyframeRule interface finds the CSSKeyFrameRule that matches the specified keyframe selector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/queue",
    "pageType": "web-api-instance-property",
    "summary": "The queue read-only property of the\nGPUDevice interface returns the primary GPUQueue for the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframesRule/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property of the CSSKeyframeRule interface returns the number of CSSKeyframeRule objects in its list. You can then access each keyframe rule by its index directly on the CSSKeyframeRule object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUDevice/createRenderPipelineAsync",
    "pageType": "web-api-instance-method",
    "summary": "The createRenderPipelineAsync() method of the\nGPUDevice interface returns a Promise that fulfills with a GPURenderPipeline, which can control the vertex and fragment shader stages and be used in a GPURenderPassEncoder or GPURenderBundleEncoder, once the pipeline can be used without any stalling."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframesRule/deleteRule",
    "pageType": "web-api-instance-method",
    "summary": "The deleteRule() method of the CSSKeyframeRule interface deletes the CSSKeyFrameRule that matches the specified keyframe selector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Contact_Picker_API",
    "pageType": "web-api-overview",
    "summary": "The Contact Picker API allows users to select entries from their contact list and share limited details of the selected entries with a website or application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframesRule/cssRules",
    "pageType": "web-api-instance-property",
    "summary": "The read-only cssRules property of the CSSKeyframeRule interface returns a CSSRuleList containing the rules in the keyframes at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrackList",
    "pageType": "web-api-interface",
    "summary": "The ImageTrackList interface of the WebCodecs API represents a list of image tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSKeyframesRule/appendRule",
    "pageType": "web-api-instance-method",
    "summary": "The appendRule() method of the CSSKeyframeRule interface appends a CSSKeyFrameRule to the end of the rules."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrackList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length property of the ImageTrackList interface returns the length of the ImageTrackList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrackList/ready",
    "pageType": "web-api-instance-property",
    "summary": "The ready property of the ImageTrackList interface returns a Promise that resolves when the ImageTrackList is populated with tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasPattern",
    "pageType": "web-api-interface",
    "summary": "The CanvasPattern interface represents an opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.createPattern() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrackList/selectedIndex",
    "pageType": "web-api-instance-property",
    "summary": "The selectedIndex property of the ImageTrackList interface returns the index of the selected track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasPattern/setTransform",
    "pageType": "web-api-instance-method",
    "summary": "The CanvasPattern.setTransform() method uses a DOMMatrix object as the pattern's transformation matrix and invokes it on the pattern."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrackList/selectedTrack",
    "pageType": "web-api-instance-property",
    "summary": "The selectedTrack property of the ImageTrackList interface returns an ImageTrack object representing the currently selected track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionEvent",
    "pageType": "web-api-interface",
    "summary": "The SpeechRecognitionEvent interface of the Web Speech API represents the event object for the result and nomatch events, and contains all the data associated with an interim or final speech recognition result."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ProgressEvent/loaded",
    "pageType": "web-api-instance-property",
    "summary": "The ProgressEvent.loaded read-only property is a number indicating the size of the data already transmitted or processed.\nThe progress ratio can be calculated by dividing the value of this property by ProgressEvent.total."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionEvent/resultIndex",
    "pageType": "web-api-instance-property",
    "summary": "The resultIndex read-only property of the\nSpeechRecognitionEvent interface returns the lowest index value result in\nthe SpeechRecognitionResultList \"array\" that has actually changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ProgressEvent",
    "pageType": "web-api-interface",
    "summary": "The ProgressEvent interface represents events that measure the progress of an underlying process, like an HTTP request (e.g., an XMLHttpRequest, or the loading of the underlying resource of an <img>, <audio>, <video>, <style> or <link>)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionEvent/SpeechRecognitionEvent",
    "pageType": "web-api-constructor",
    "summary": "The SpeechRecognitionEvent() constructor creates a new\nSpeechRecognitionEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ProgressEvent/ProgressEvent",
    "pageType": "web-api-constructor",
    "summary": "The ProgressEvent() constructor returns a new ProgressEvent object, representing the current completion of a long process."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionEvent/results",
    "pageType": "web-api-instance-property",
    "summary": "The results read-only property of the\nSpeechRecognitionEvent interface returns a\nSpeechRecognitionResultList object representing all the speech\nrecognition results for the current session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ProgressEvent/total",
    "pageType": "web-api-instance-property",
    "summary": "The ProgressEvent.total read-only property is a number indicating the total size of the data being transmitted or processed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WakeLockSentinel",
    "pageType": "web-api-interface",
    "summary": "The WakeLockSentinel interface of the Screen Wake Lock API can be used to monitor the status of the platform screen wake lock, and manually release the lock when needed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ProgressEvent/lengthComputable",
    "pageType": "web-api-instance-property",
    "summary": "The\nProgressEvent.lengthComputable read-only property is a\nboolean flag indicating if the resource concerned by the\nProgressEvent has a length that can be calculated. If not, the\nProgressEvent.total property has no significant value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WakeLockSentinel/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the WakeLockSentinel interface returns a string representation of the currently acquired WakeLockSentinel type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WakeLockSentinel/released",
    "pageType": "web-api-instance-property",
    "summary": "The released read-only property of the WakeLockSentinel interface returns a boolean that indicates whether a WakeLockSentinel has been released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleValue",
    "pageType": "web-api-interface",
    "summary": "The CSSStyleValue interface of the CSS Typed Object Model API is the base class of all CSS values accessible through the Typed OM API. An instance of this class may be used anywhere a string is expected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WakeLockSentinel/release_event",
    "pageType": "web-api-event",
    "summary": "The release event of the WakeLockSentinel interface is fired when the sentinel object's handle has been released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleValue/parse_static",
    "pageType": "web-api-static-method",
    "summary": "The parse() static method of the CSSStyleValue\ninterface sets a specific CSS property to the specified values and returns the first\nvalue as a CSSStyleValue object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WakeLockSentinel/release",
    "pageType": "web-api-instance-method",
    "summary": "The release() method of the WakeLockSentinel interface releases the WakeLockSentinel, returning a Promise that is resolved once the sentinel has been successfully released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSStyleValue/parseAll_static",
    "pageType": "web-api-static-method",
    "summary": "The parseAll() static method of the CSSStyleValue\ninterface sets all occurrences of a specific CSS property to the specified value and\nreturns an array of CSSStyleValue objects, each containing one of the\nsupplied values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/additiveSymbols",
    "pageType": "web-api-instance-property",
    "summary": "The additiveSymbols property of the CSSCounterStyleRule interface gets and sets the value of the additive-symbols descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLRenderbuffer",
    "pageType": "web-api-interface",
    "summary": "The WebGLRenderbuffer interface is part of the WebGL API and represents a buffer that can contain an image, or that can be a source or target of a rendering operation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the CSSCounterStyleRule interface gets and sets the <custom-ident> defined as the name for the associated rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule",
    "pageType": "web-api-interface",
    "summary": "The CSSCounterStyleRule interface represents an @counter-style at-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Reporting_API",
    "pageType": "web-api-overview",
    "summary": "The Reporting API provides a generic reporting mechanism for web applications to use to make reports available based on various platform features (for example Content Security Policy, Permissions-Policy, or feature deprecation reports) in a consistent manner."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/range",
    "pageType": "web-api-instance-property",
    "summary": "The range property of the CSSCounterStyleRule interface gets and sets the value of the range descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/prefix",
    "pageType": "web-api-instance-property",
    "summary": "The prefix property of the CSSCounterStyleRule interface gets and sets the value of the prefix descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFrameData",
    "pageType": "web-api-interface",
    "summary": "The VRFrameData interface of the WebVR API represents all the information needed to render a single frame of a VR scene; constructed by VRDisplay.getFrameData()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/speakAs",
    "pageType": "web-api-instance-property",
    "summary": "The speakAs property of the CSSCounterStyleRule interface gets and sets the value of the speak-as descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFrameData/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp read-only property of the VRFrameData interface returns a constantly increasing timestamp value representing the time a frame update occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/system",
    "pageType": "web-api-instance-property",
    "summary": "The system property of the CSSCounterStyleRule interface gets and sets the value of the system descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/pad",
    "pageType": "web-api-instance-property",
    "summary": "The pad property of the CSSCounterStyleRule interface gets and sets the value of the pad descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFrameData/pose",
    "pageType": "web-api-instance-property",
    "summary": "The pose read-only property of the VRFrameData interface returns the VRPose of the VRDisplay at the current VRFrameData.timestamp."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/symbols",
    "pageType": "web-api-instance-property",
    "summary": "The symbols property of the CSSCounterStyleRule interface gets and sets the value of the symbols descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFrameData/leftProjectionMatrix",
    "pageType": "web-api-instance-property",
    "summary": "The leftProjectionMatrix read-only property of the VRFrameData interface returns a Float32Array representing a 4x4 matrix that describes the projection to be used for the left eye's rendering."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/fallback",
    "pageType": "web-api-instance-property",
    "summary": "The fallback property of the CSSCounterStyleRule interface gets and sets the value of the fallback descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/negative",
    "pageType": "web-api-instance-property",
    "summary": "The negative property of the CSSCounterStyleRule interface gets and sets the value of the negative descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFrameData/VRFrameData",
    "pageType": "web-api-constructor",
    "summary": "The VRFrameData() constructor creates a VRFrameData object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSCounterStyleRule/suffix",
    "pageType": "web-api-instance-property",
    "summary": "The suffix property of the CSSCounterStyleRule interface gets and sets the value of the suffix descriptor. If the descriptor does not have a value set, this attribute returns an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFrameData/leftViewMatrix",
    "pageType": "web-api-instance-property",
    "summary": "The leftViewMatrix read-only property of the VRFrameData interface returns a Float32Array representing a 4x4 matrix that describes the view transform to be used for the left eye's rendering."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFrameData/rightProjectionMatrix",
    "pageType": "web-api-instance-property",
    "summary": "The rightProjectionMatrix read-only property of the VRFrameData interface returns a Float32Array representing a 4x4 matrix that describes the projection to be used for the right eye's rendering."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/registration",
    "pageType": "web-api-instance-property",
    "summary": "The registration read-only property of the ServiceWorkerGlobalScope interface returns a reference to the ServiceWorkerRegistration object, which represents the service worker's registration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope",
    "pageType": "web-api-interface",
    "summary": "The ServiceWorkerGlobalScope interface of the Service Worker API represents the global execution context of a service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRFrameData/rightViewMatrix",
    "pageType": "web-api-instance-property",
    "summary": "The rightViewMatrix read-only property of the VRFrameData interface returns a Float32Array representing a 4x4 matrix that describes the view transform to be used for the right eye's rendering."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchsuccess_event",
    "pageType": "web-api-event",
    "summary": "The backgroundfetchsuccess event of the ServiceWorkerGlobalScope interface is fired when a background fetch operation has completed successfully: that is, when all network requests in the fetch have completed successfully."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage_Access_API",
    "pageType": "web-api-overview",
    "summary": "The Storage Access API provides a way for cross-site content loaded in a third-party context (i.e., embedded in an <iframe>) to gain access to third-party cookies and unpartitioned state that it would typically only have access to in a first-party context (i.e., when loaded directly in a browser tab)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/message_event",
    "pageType": "web-api-event",
    "summary": "The message event of the ServiceWorkerGlobalScope interface occurs when incoming messages are received. Controlled pages can use the ServiceWorker.postMessage() method to send messages to service workers.\nThe service worker can optionally send a response back via the Client.postMessage(), corresponding to the controlled page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/fetch_event",
    "pageType": "web-api-event",
    "summary": "The fetch event of the ServiceWorkerGlobalScope interface is fired in the service worker's global scope when the main app thread makes a network request. It enables the service worker to intercept network requests and send customized responses (for example, from a local cache)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage_Access_API/Using",
    "pageType": "guide",
    "summary": "The Storage Access API can be used by embedded cross-site documents to verify whether they have access to third-party cookies and unpartitioned state and, if not, to request access. We'll briefly look at a common storage access scenario."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/clients",
    "pageType": "web-api-instance-property",
    "summary": "The clients read-only property of the\nServiceWorkerGlobalScope interface returns the Clients\nobject associated with the service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage_Access_API/Related_website_sets",
    "pageType": "guide",
    "summary": "Related website sets are a mechanism for defining a set of related sites that share trusted content. As a result, browsers can grant default access for these sites to third-party cookies and unpartitioned state when they have content embedded in other set members, without requiring users to grant access to the Storage Access API via a permission prompt."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchabort_event",
    "pageType": "web-api-event",
    "summary": "The backgroundfetchabort event of the ServiceWorkerGlobalScope interface is fired when the user or the app itself cancels a background fetch operation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReadingEvent",
    "pageType": "web-api-interface",
    "summary": "The NDEFReadingEvent interface of the Web NFC API represents events dispatched on new NFC readings obtained by NDEFReader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/cookieStore",
    "pageType": "web-api-instance-property",
    "summary": "The cookieStore read-only property of the ServiceWorkerGlobalScope interface returns a reference to the CookieStore object associated with this service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReadingEvent/NDEFReadingEvent",
    "pageType": "web-api-constructor",
    "summary": "The NDEFReadingEvent() constructor creates a new NDEFReadingEvent object which represents events dispatched on new NFC readings obtained by NDEFReader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/cookiechange_event",
    "pageType": "web-api-event",
    "summary": "The cookiechange event of the ServiceWorkerGlobalScope interface is fired when a cookie change occurs that matches the service worker's cookie change subscription list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReadingEvent/message",
    "pageType": "web-api-instance-property",
    "summary": "The message property of the NDEFReadingEvent interface returns an NDEFMessage object containing the received message."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/serviceWorker",
    "pageType": "web-api-instance-property",
    "summary": "The serviceWorker read-only property of the ServiceWorkerGlobalScope interface returns a reference to the ServiceWorker object, which represents the service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NDEFReadingEvent/serialNumber",
    "pageType": "web-api-instance-property",
    "summary": "The serialNumber property of the NDEFReadingEvent interface returns the serial number of the device, which is used for anti-collision and identification, or an empty string if no serial number is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/paymentrequest_event",
    "pageType": "web-api-event",
    "summary": "The paymentrequest event of the ServiceWorkerGlobalScope interface is fired on a payment app when a payment flow has been initiated on the merchant website via the PaymentRequest.show() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/notificationclick_event",
    "pageType": "web-api-event",
    "summary": "The notificationclick event of the ServiceWorkerGlobalScope interface is fired to indicate that a system notification spawned by ServiceWorkerRegistration.showNotification() has been clicked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch_events/Using_Touch_Events",
    "pageType": "guide",
    "summary": "Today, most Web content is designed for keyboard and mouse input. However, devices with touch screens (especially portable devices) are mainstream and Web applications can either directly process touch-based input by using touch events or the application can use interpreted mouse events for the application input. A disadvantage to using mouse events is that they do not support concurrent user input, whereas touch events support multiple simultaneous inputs (possibly at different locations on the touch surface), thus enhancing user experiences."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/messageerror_event",
    "pageType": "web-api-event",
    "summary": "The messageerror event of the ServiceWorkerGlobalScope interface occurs when incoming messages can't be deserialized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch_events",
    "pageType": "web-api-overview",
    "summary": "To provide quality support for touch-based user interfaces, touch events offer the ability to interpret finger (or stylus) activity on touch screens or trackpads."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/push_event",
    "pageType": "web-api-event",
    "summary": "The push event is sent to a service worker's global scope (represented by the ServiceWorkerGlobalScope interface) when the service worker has received a push message."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Touch_events/Multi-touch_interaction",
    "pageType": "guide",
    "summary": "The touch event interfaces support application-specific single and multi-touch interactions. However, the interfaces can be a bit tricky for programmers to use because touch events are very different from other DOM input events, such as mouse events. The application described in this guide shows how to use touch events for simple single and multi-touch interactions, the basics needed to build application-specific gestures."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/notificationclose_event",
    "pageType": "web-api-event",
    "summary": "The notificationclose event of the ServiceWorkerGlobalScope interface fires when a user closes a displayed notification spawned by ServiceWorkerRegistration.showNotification()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/activate_event",
    "pageType": "web-api-event",
    "summary": "The activate event of the ServiceWorkerGlobalScope interface is fired when a ServiceWorkerRegistration acquires a new ServiceWorkerRegistration.active worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DynamicsCompressorNode/knee",
    "pageType": "web-api-instance-property",
    "summary": "The knee property of the DynamicsCompressorNode interface is a k-rate AudioParam containing a decibel value representing the range above the threshold where the curve smoothly transitions to the compressed portion."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/install_event",
    "pageType": "web-api-event",
    "summary": "The install event of the ServiceWorkerGlobalScope interface is fired when a ServiceWorkerRegistration acquires a new ServiceWorkerRegistration.installing worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DynamicsCompressorNode",
    "pageType": "web-api-interface",
    "summary": "The DynamicsCompressorNode interface provides a compression effect, which lowers the volume of the loudest parts of the signal in order to help prevent clipping and distortion that can occur when multiple sounds are played and multiplexed together at once. This is often used in musical production and game audio. DynamicsCompressorNode is an AudioNode that has exactly one input and one output."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchfail_event",
    "pageType": "web-api-event",
    "summary": "The backgroundfetchfail event of the ServiceWorkerGlobalScope interface is fired when a background fetch operation has failed: that is, when at least one network request in the fetch has failed to complete successfully."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DynamicsCompressorNode/reduction",
    "pageType": "web-api-instance-property",
    "summary": "The reduction read-only property of the DynamicsCompressorNode interface is a float representing the amount of gain reduction currently applied by the compressor to the signal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting",
    "pageType": "web-api-instance-method",
    "summary": "The skipWaiting() method of the ServiceWorkerGlobalScope interface forces the waiting service worker to become the active service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DynamicsCompressorNode/ratio",
    "pageType": "web-api-instance-property",
    "summary": "The ratio property of the DynamicsCompressorNode interface Is a k-rate AudioParam representing the amount of change, in dB, needed in the input for a 1 dB change in the output."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/backgroundfetchclick_event",
    "pageType": "web-api-event",
    "summary": "The backgroundfetchclick event of the ServiceWorkerGlobalScope interface is fired when the user clicks on the UI that the browser provides to show the user the progress of the background fetch operation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DynamicsCompressorNode/DynamicsCompressorNode",
    "pageType": "web-api-constructor",
    "summary": "The DynamicsCompressorNode()\nconstructor creates a new DynamicsCompressorNode object which provides\na compression effect, which lowers the volume of the loudest parts of the\nsignal, in order to help prevent clipping and distortion. That can occur when\nmultiple sounds are played and multiplexed together at once."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/periodicsync_event",
    "pageType": "web-api-event",
    "summary": "The periodicsync event of the ServiceWorkerGlobalScope interface is fired at timed intervals, specified when registering a PeriodicSyncManager."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/sync_event",
    "pageType": "web-api-event",
    "summary": "The sync event of the ServiceWorkerGlobalScope interface is fired when the page (or worker) that registered the event with the SyncManager is running and as soon as network connectivity is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DynamicsCompressorNode/attack",
    "pageType": "web-api-instance-property",
    "summary": "The attack property of the DynamicsCompressorNode interface is a k-rate AudioParam representing the amount of time, in seconds, required to reduce the gain by 10 dB. It defines how quickly the signal is adapted when its volume is increased."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/canmakepayment_event",
    "pageType": "web-api-event",
    "summary": "The canmakepayment event of the ServiceWorkerGlobalScope interface is fired on a payment app's service worker to check whether it is ready to handle a payment. Specifically, it is fired when the merchant website calls the PaymentRequest() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DynamicsCompressorNode/threshold",
    "pageType": "web-api-instance-property",
    "summary": "The threshold property of the DynamicsCompressorNode interface is a k-rate AudioParam representing the decibel value above which the compression will start taking effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/pushsubscriptionchange_event",
    "pageType": "web-api-event",
    "summary": "The pushsubscriptionchange event is sent to the global scope of a ServiceWorker to indicate a change in push subscription that was triggered outside the application's control."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DynamicsCompressorNode/release",
    "pageType": "web-api-instance-property",
    "summary": "The release property of the DynamicsCompressorNode interface Is a k-rate AudioParam representing the amount of time, in seconds, required to increase the gain by 10 dB. It defines how quick the signal is adapted when its volume is reduced."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerGlobalScope/contentdelete_event",
    "pageType": "web-api-event",
    "summary": "The contentdelete event of the ServiceWorkerGlobalScope interface is fired when an item is removed from the indexed content via the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDListElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLDListElement interface provides special properties (beyond those of the regular HTMLElement interface it also has available to it by inheritance) for manipulating definition list (<dl>) elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentVisibilityAutoStateChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The ContentVisibilityAutoStateChangeEvent interface is the event object for the contentvisibilityautostatechange event, which fires on any element with content-visibility: auto set on it when it starts or stops being relevant to the user and skipping its contents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDListElement/compact",
    "pageType": "web-api-instance-property",
    "summary": "The compact property of the HTMLDListElement interface indicates that spacing between list items should be reduced. The exact handling of the compact attribute is browser-specific. Instead of using this property, consider using CSS line-height instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentVisibilityAutoStateChangeEvent/ContentVisibilityAutoStateChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The ContentVisibilityAutoStateChangeEvent() constructor creates a new ContentVisibilityAutoStateChangeEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse",
    "pageType": "web-api-interface",
    "summary": "The PaymentResponse interface of the Payment Request API is returned after a user selects a payment method and approves a payment request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentVisibilityAutoStateChangeEvent/skipped",
    "pageType": "web-api-instance-property",
    "summary": "The skipped read-only property of the ContentVisibilityAutoStateChangeEvent interface returns true if the user agent skips the element's contents, or false otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/payerEmail",
    "pageType": "web-api-instance-property",
    "summary": "The payerEmail read-only property of the PaymentResponse\ninterface returns the email address supplied by the user. This option is only present\nwhen the requestPayerEmail option is set to true in the\noptions object passed to the\nPaymentRequest constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Pointer_Lock_API",
    "pageType": "web-api-overview",
    "summary": "The Pointer Lock API (formerly called Mouse Lock API) provides input methods based on the movement of the mouse over time (i.e., deltas), not just the absolute position of the mouse cursor in the viewport. It gives you access to raw mouse movement, locks the target of mouse events to a single element, eliminates limits on how far mouse movement can go in a single direction, and removes the cursor from view. It is ideal for first-person 3D games, for example."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/details",
    "pageType": "web-api-instance-property",
    "summary": "The details read-only property of the\nPaymentResponse interface returns a JSON-serializable object that\nprovides a payment method specific message used by the merchant to process the\ntransaction and determine a successful funds transfer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the\nDedicatedWorkerGlobalScope interface returns the name that the\nWorker was (optionally) given when it was created. This is the name that\nthe Worker() constructor can pass to get a reference to\nthe DedicatedWorkerGlobalScope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope",
    "pageType": "web-api-interface",
    "summary": "The DedicatedWorkerGlobalScope object (the Worker global scope) is accessible through the self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See also: Functions available to workers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/payerdetailchange_event",
    "pageType": "web-api-event",
    "summary": "A payerdetailchange event is fired by the Payment Request API to a PaymentResponse object when the user makes changes to their personal information while filling out a payment request form. This can happen when the payer is retrying to submit its details after an error has been detected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope/rtctransform_event",
    "pageType": "web-api-event",
    "summary": "The rtctransform event is fired at a worker's DedicatedWorkerGlobalScope object when an encoded video or audio frame has been queued for processing by a WebRTC Encoded Transform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/shippingAddress",
    "pageType": "web-api-instance-property",
    "summary": "The shippingAddress read-only property of\nthe PaymentRequest interface returns a PaymentAddress object\ncontaining the shipping address provided by the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope/postMessage",
    "pageType": "web-api-instance-method",
    "summary": "The postMessage() method of the DedicatedWorkerGlobalScope interface sends a message to the main thread that spawned it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/payerName",
    "pageType": "web-api-instance-property",
    "summary": "The payerName read-only property of the\nPaymentResponse interface returns the name supplied by the user. This\noption is only present when the requestPayerName option is set to\ntrue in the options parameter of the\nPaymentRequest() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope/message_event",
    "pageType": "web-api-event",
    "summary": "The message event is fired on a DedicatedWorkerGlobalScope object when the worker receives a message from its parent (i.e., when the parent sends a message using Worker.postMessage())."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/retry",
    "pageType": "web-api-instance-method",
    "summary": "The PaymentResponse interface's\nretry() method makes it possible to ask the user to\nretry a payment after an error occurs during processing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope/messageerror_event",
    "pageType": "web-api-event",
    "summary": "The messageerror event is fired on a DedicatedWorkerGlobalScope object when it receives a message that can't be deserialized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/requestId",
    "pageType": "web-api-instance-property",
    "summary": "The requestId read-only property of the\nPaymentResponse interface returns the free-form identifier supplied by\nthe PaymentResponse() constructor by details.id."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope/cancelAnimationFrame",
    "pageType": "web-api-instance-method",
    "summary": "The cancelAnimationFrame() method of the DedicatedWorkerGlobalScope interface cancels an animation frame request previously scheduled through a call to requestAnimationFrame()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/methodName",
    "pageType": "web-api-instance-property",
    "summary": "The methodName read-only\nproperty of the PaymentResponse interface returns a string uniquely\nidentifying the payment handler selected by the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the DedicatedWorkerGlobalScope interface discards any tasks queued in the DedicatedWorkerGlobalScope's event loop, effectively closing this particular scope."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/complete",
    "pageType": "web-api-instance-method",
    "summary": "The PaymentRequest method\ncomplete() of the Payment Request API notifies the\nuser agent that the user interaction is over, and causes any remaining\nuser interface to be closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DedicatedWorkerGlobalScope/requestAnimationFrame",
    "pageType": "web-api-instance-method",
    "summary": "The requestAnimationFrame() method of the DedicatedWorkerGlobalScope interface tells the browser you wish to perform an animation frame request and call a user-supplied callback function before the next repaint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PaymentResponse interface is a serializer; it returns a JSON representation of the PaymentResponse object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionErrorEvent",
    "pageType": "web-api-interface",
    "summary": "The SpeechRecognitionErrorEvent interface of the Web Speech API represents error messages from the recognition service."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/shippingOption",
    "pageType": "web-api-instance-property",
    "summary": "The shippingOption read-only property of\nthe PaymentRequest interface returns the ID attribute of the shipping\noption selected by the user. This option is only present when the\nrequestShipping option is set to true in the\noptions object passed to the\nPaymentRequest constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionErrorEvent/error",
    "pageType": "web-api-instance-property",
    "summary": "The error read-only property of the\nSpeechRecognitionErrorEvent interface returns the type of error raised."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaymentResponse/payerPhone",
    "pageType": "web-api-instance-property",
    "summary": "The payerPhone read-only property of the PaymentResponse\ninterface returns the phone number supplied by the user. This option is only present\nwhen the requestPayerPhone option is set to true in the\noptions object passed to the\nPaymentRequest constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionErrorEvent/SpeechRecognitionErrorEvent",
    "pageType": "web-api-constructor",
    "summary": "The SpeechRecognitionErrorEvent() constructor creates a new\nSpeechRecognitionErrorEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechRecognitionErrorEvent/message",
    "pageType": "web-api-instance-property",
    "summary": "The message read-only property of the\nSpeechRecognitionErrorEvent interface returns a message describing the\nerror in more detail."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document_Picture-in-Picture_API",
    "pageType": "web-api-overview",
    "summary": "The Document Picture-in-Picture API makes it possible to open an always-on-top window that can be populated with arbitrary HTML content — for example a video with custom controls or a set of streams showing the participants of a video conference call. It extends the earlier Picture-in-Picture API for <video>, which specifically enables an HTML <video> element to be put into an always-on-top window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Worker",
    "pageType": "web-api-interface",
    "summary": "The Worker interface of the Web Workers API represents a background task that can be created via script, which can send messages back to its creator."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document_Picture-in-Picture_API/Using",
    "pageType": "guide",
    "summary": "This guide provides a walkthrough of typical usage of the Document Picture-in-Picture API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Worker/postMessage",
    "pageType": "web-api-instance-method",
    "summary": "The postMessage() method of the Worker interface sends a message to the worker. The first parameter is the data to send to the worker. The data may be any JavaScript object that can be handled by the structured clone algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Worker/message_event",
    "pageType": "web-api-event",
    "summary": "The message event is fired on a Worker object when the worker's parent receives a message from its worker (i.e., when the worker sends a message using DedicatedWorkerGlobalScope.postMessage())."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioProcessingEvent/inputBuffer",
    "pageType": "web-api-instance-property",
    "summary": "The inputBuffer read-only property of the AudioProcessingEvent interface represents the input buffer of an audio processing event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Worker/messageerror_event",
    "pageType": "web-api-event",
    "summary": "The messageerror event is fired on a Worker object when it receives a message that can't be deserialized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioProcessingEvent",
    "pageType": "web-api-interface",
    "summary": "The AudioProcessingEvent interface of the Web Audio API represents events that occur when a ScriptProcessorNode input buffer is ready to be processed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Worker/Worker",
    "pageType": "web-api-constructor",
    "summary": "The Worker() constructor creates a Worker object that executes the script at the specified URL. This script must obey the same-origin policy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Worker/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the Worker interface fires when an error occurs in the worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioProcessingEvent/outputBuffer",
    "pageType": "web-api-instance-property",
    "summary": "The outputBuffer read-only property of the AudioProcessingEvent interface represents the output buffer of an audio processing event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Worker/terminate",
    "pageType": "web-api-instance-method",
    "summary": "The terminate() method of the Worker interface immediately terminates the Worker. This does not offer the worker an opportunity to finish its operations; it is stopped at once."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioProcessingEvent/AudioProcessingEvent",
    "pageType": "web-api-constructor",
    "summary": "The AudioProcessingEvent() constructor creates a new AudioProcessingEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UserActivation",
    "pageType": "web-api-interface",
    "summary": "The UserActivation interface provides information about whether a user is currently interacting with the page, or has completed an interaction since page load."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UserActivation/isActive",
    "pageType": "web-api-instance-property",
    "summary": "The read-only isActive property of the UserActivation interface indicates whether the current window has transient user activation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioProcessingEvent/playbackTime",
    "pageType": "web-api-instance-property",
    "summary": "The playbackTime read-only property of the AudioProcessingEvent interface represents the time when the audio will be played. It is in the same coordinate system as the time used by the AudioContext."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UserActivation/hasBeenActive",
    "pageType": "web-api-instance-property",
    "summary": "The read-only hasBeenActive property of the UserActivation interface indicates whether the current window has sticky user activation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMarqueeElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLMarqueeElement interface provides methods to manipulate <marquee> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentPictureInPictureEvent",
    "pageType": "web-api-interface",
    "summary": "The DocumentPictureInPictureEvent interface of the Document Picture-in-Picture API is the event object for the enter event, which fires when the Picture-in-Picture window is opened."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSessionEvent",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API's XRSessionEvent interface describes an event which indicates the change of the state of an XRSession. These events occur, for example, when the session ends or the visibility of its context changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentPictureInPictureEvent/window",
    "pageType": "web-api-instance-property",
    "summary": "The window read-only property of the\nDocumentPictureInPictureEvent interface returns a Window instance representing the browsing context inside the DocumentPictureInPicture window the event was fired on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSessionEvent/session",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRSessionEvent interface's\nsession property indicates which\nXRSession the event is about."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSessionEvent/XRSessionEvent",
    "pageType": "web-api-constructor",
    "summary": "The WebXR Device API's\nXRSessionEvent() constructor creates and returns a new\nXRSessionEvent object. These objects represent events announcing\nstate changes in an XRSession representing an augmented or virtual\nreality session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentPictureInPictureEvent/DocumentPictureInPictureEvent",
    "pageType": "web-api-constructor",
    "summary": "The DocumentPictureInPictureEvent() constructor creates a new\nDocumentPictureInPictureEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RsaHashedImportParams",
    "pageType": "web-api-interface",
    "summary": "The RsaHashedImportParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.importKey() or SubtleCrypto.unwrapKey(), when importing any RSA-based key pair: that is, when the algorithm is identified as any of RSASSA-PKCS1-v1_5, RSA-PSS, or RSA-OAEP."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationPosition",
    "pageType": "web-api-interface",
    "summary": "The GeolocationPosition interface represents the position of the concerned device at a given time. The position, represented by a GeolocationCoordinates object, comprehends the 2D position of the device, on a spheroid representing the Earth, but also its altitude and its speed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUValidationError",
    "pageType": "web-api-interface",
    "summary": "The GPUValidationError interface of the WebGPU API describes an application error indicating that an operation did not pass the WebGPU API's validation constraints."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationPosition/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp read-only property of the GeolocationPosition interface represents the date and time that the position was acquired by the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUValidationError/GPUValidationError",
    "pageType": "web-api-constructor",
    "summary": "The GPUValidationError() constructor creates a new\nGPUValidationError object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationPosition/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the GeolocationPosition interface is a serializer; it returns a JSON representation of the GeolocationPosition object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Client",
    "pageType": "web-api-interface",
    "summary": "The Client interface represents an executable context such as a Worker, or a SharedWorker. Window clients are represented by the more-specific WindowClient. You can get Client/WindowClient objects from methods such as Clients.matchAll() and Clients.get()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Client/postMessage",
    "pageType": "web-api-instance-method",
    "summary": "The postMessage() method of the\nClient interface allows a service worker to send a message to a client\n(a Window, Worker, or SharedWorker). The\nmessage is received in the message event on\nnavigator.serviceWorker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GeolocationPosition/coords",
    "pageType": "web-api-instance-property",
    "summary": "The coords read-only property of the GeolocationPosition interface returns a GeolocationCoordinates object representing a geographic position. It contains the location, that is longitude and latitude on the Earth, the altitude, and the speed of the object concerned, regrouped inside the returned value. It also contains accuracy information about these values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Client/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the Client\ninterface indicates the type of client the service worker is controlling."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoColorSpace",
    "pageType": "web-api-interface",
    "summary": "The VideoColorSpace interface of the WebCodecs API represents the color space of a video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Client/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the Client\ninterface returns the URL of the current service worker client."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoColorSpace/primaries",
    "pageType": "web-api-instance-property",
    "summary": "The primaries read-only property of the VideoColorSpace interface returns the color gamut of the video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Client/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the Client interface returns the universally unique identifier of the Client object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Client/frameType",
    "pageType": "web-api-instance-property",
    "summary": "The frameType read-only property of the Client interface indicates the type of browsing context of the current Client. This value can be one of \"auxiliary\", \"top-level\", \"nested\", or \"none\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoColorSpace/fullRange",
    "pageType": "web-api-instance-property",
    "summary": "The fullRange read-only property of the VideoColorSpace interface returns true if full-range color values are used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOListElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLOListElement interface provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating ordered list elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoColorSpace/VideoColorSpace",
    "pageType": "web-api-constructor",
    "summary": "The VideoColorSpace() constructor creates a new VideoColorSpace object which represents a video color space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOListElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the HTMLOListElement interface indicates the kind of marker to be used to display ordered list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOListElement/start",
    "pageType": "web-api-instance-property",
    "summary": "The start property of the HTMLOListElement interface indicates starting value of the ordered list, with default value of 1."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoColorSpace/transfer",
    "pageType": "web-api-instance-property",
    "summary": "The transfer read-only property of the VideoColorSpace interface returns the opto-electronic transfer characteristics of the video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOListElement/reversed",
    "pageType": "web-api-instance-property",
    "summary": "The reversed property of the HTMLOListElement interface indicates order of a list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoColorSpace/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the VideoColorSpace interface is a serializer that returns a JSON representation of the VideoColorSpace object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLOListElement/compact",
    "pageType": "web-api-instance-property",
    "summary": "The compact property of the HTMLOListElement interface indicates that spacing between list items should be reduced. The exact handling of the compact attribute is browser-specific. Instead of using this property, consider using CSS line-height instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoColorSpace/matrix",
    "pageType": "web-api-instance-property",
    "summary": "The matrix read-only property of the VideoColorSpace interface returns the matrix coefficient of the video. Matrix coefficients describe the relationship between sample component values and color coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSScale",
    "pageType": "web-api-interface",
    "summary": "The CSSScale interface of the CSS Typed Object Model API represents the scale() and scale3d() values of the individual transform property in CSS. It inherits properties and methods from its parent CSSTransformValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSScale/x",
    "pageType": "web-api-instance-property",
    "summary": "The x property of the\nCSSScale interface gets and sets the abscissa or x-axis of the\ntranslating vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage_API",
    "pageType": "web-api-overview",
    "summary": "The Storage Standard defines a shared storage system designed to be used by all APIs and technologies that websites can use to store data in a user's browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSScale/z",
    "pageType": "web-api-instance-property",
    "summary": "The z property of the\nCSSScale interface representing the z-component of the translating\nvector. A positive value moves the element towards the viewer, and a negative value\nfarther away."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Storage_API/Storage_quotas_and_eviction_criteria",
    "pageType": "guide",
    "summary": "Web developers can use a number of technologies to store data in the user's browser (i.e., on the local disk of the device the user is using to view the website)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSScale/y",
    "pageType": "web-api-instance-property",
    "summary": "The y property of the\nCSSScale interface gets and sets the ordinate or y-axis of the\ntranslating vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSScale/CSSScale",
    "pageType": "web-api-constructor",
    "summary": "The CSSScale() constructor creates a new\nCSSScale object representing the scale() and scale3d() values of the\nindividual transform property in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OTPCredential",
    "pageType": "web-api-interface",
    "summary": "The OTPCredential interface of the WebOTP API is returned when a WebOTP navigator.credentials.get() call (i.e., invoked with an otp option) fulfills. It includes a code property that contains the retrieved one-time password (OTP)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRDepthInformation",
    "pageType": "web-api-interface",
    "summary": "The XRDepthInformation interface contains information about the distance from the user's device to the real-world geometry in the user's environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OTPCredential/code",
    "pageType": "web-api-instance-property",
    "summary": "The code read-only property of the OTPCredential interface contains the one-time password (OTP)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRDepthInformation/height",
    "pageType": "web-api-instance-property",
    "summary": "The read-only height property of the XRDepthInformation interface contains the height of the depth buffer (number of rows)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioScheduledSourceNode",
    "pageType": "web-api-interface",
    "summary": "The AudioScheduledSourceNode interface—part of the Web Audio API—is a parent interface for several types of audio source node interfaces which share the ability to be started and stopped, optionally at specified times. Specifically, this interface defines the start() and stop() methods, as well as the ended event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRDepthInformation/width",
    "pageType": "web-api-instance-property",
    "summary": "The read-only width property of the XRDepthInformation interface contains the width of the depth buffer (number of columns)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioScheduledSourceNode/stop",
    "pageType": "web-api-instance-method",
    "summary": "The stop() method on AudioScheduledSourceNode schedules a\nsound to cease playback at the specified time. If no time is specified, then the sound\nstops playing immediately."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRDepthInformation/rawValueToMeters",
    "pageType": "web-api-instance-property",
    "summary": "The read-only rawValueToMeters property of the XRDepthInformation interface contains the scale factor by which the raw depth values must be multiplied in order to get the depths in meters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioScheduledSourceNode/start",
    "pageType": "web-api-instance-method",
    "summary": "The start() method on AudioScheduledSourceNode schedules a sound to begin playback at the specified time.\nIf no time is specified, then the sound begins playing immediately."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRDepthInformation/normDepthBufferFromNormView",
    "pageType": "web-api-instance-property",
    "summary": "The read-only normDepthBufferFromNormView property of the XRDepthInformation interface contains the 3D geometric transform that needs to be applied when indexing into the depth buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioScheduledSourceNode/ended_event",
    "pageType": "web-api-event",
    "summary": "The ended event of the AudioScheduledSourceNode interface is fired when the source node has stopped playing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/clearData",
    "pageType": "web-api-instance-method",
    "summary": "The DataTransfer.clearData() method removes the drag\noperation's drag data for the given type. If data for the\ngiven type does not exist, this method does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer",
    "pageType": "web-api-interface",
    "summary": "The DataTransfer object is used to hold any data transferred between contexts, such as a drag and drop operation, or clipboard read/write. It may hold one or more data items, each of one or more data types."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStream",
    "pageType": "web-api-interface",
    "summary": "The ReadableStream interface of the Streams API represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/getData",
    "pageType": "web-api-instance-method",
    "summary": "The DataTransfer.getData()\nmethod retrieves drag data (as a string) for the specified type.\nIf the drag operation does not include data, this method returns an empty\nstring."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStream/from_static",
    "pageType": "web-api-static-method",
    "summary": "The ReadableStream.from() static method returns a ReadableStream from a provided iterable or async iterable object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/items",
    "pageType": "web-api-instance-property",
    "summary": "The read-only items property of the DataTransfer interface is a\nlist of the data transfer items in a drag operation. The list includes one item for each item in the operation and if the operation had no items, the list is empty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/files",
    "pageType": "web-api-instance-property",
    "summary": "The files read-only property of DataTransfer objects is a list of the files in the drag operation. If the operation includes no files, the list is empty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStream/pipeTo",
    "pageType": "web-api-instance-method",
    "summary": "The pipeTo() method of the ReadableStream interface pipes the current ReadableStream to a given WritableStream and returns a Promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/addElement",
    "pageType": "web-api-instance-method",
    "summary": "The DataTransfer.addElement() method sets the drag source\nto the given element. This element will be the element to which drag and\ndragend events are fired, and not the default target (the node that was\ndragged)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStream/cancel",
    "pageType": "web-api-instance-method",
    "summary": "The cancel() method of the ReadableStream interface returns a Promise that resolves when the stream is canceled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/effectAllowed",
    "pageType": "web-api-instance-property",
    "summary": "The DataTransfer.effectAllowed property specifies the\neffect that is allowed for a drag operation. The copy operation is used to\nindicate that the data being dragged will be copied from its present location to the\ndrop location. The move operation is used to indicate that the data being\ndragged will be moved, and the link operation is used to indicate that some\nform of relationship or connection will be created between the source and drop\nlocations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStream/tee",
    "pageType": "web-api-instance-method",
    "summary": "The tee() method of the\nReadableStream interface tees the current readable stream, returning a\ntwo-element array containing the two resulting branches as\nnew ReadableStream instances."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/setData",
    "pageType": "web-api-instance-method",
    "summary": "The DataTransfer.setData() method sets the drag\noperation's drag data to the specified data and type. If\ndata for the given type does not exist, it is added at the end of the drag data store,\nsuch that the last item in the types list will be\nthe new type. If data for the given type already exists, the existing data is replaced\nin the same position. That is, the order of the\ntypes list is not changed when replacing data of the\nsame type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStream/pipeThrough",
    "pageType": "web-api-instance-method",
    "summary": "The pipeThrough() method of the ReadableStream interface provides a chainable way of piping the current stream through a transform stream or any other writable/readable pair."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/dropEffect",
    "pageType": "web-api-instance-property",
    "summary": "The DataTransfer.dropEffect property controls the\nfeedback (typically visual) the user is given during a drag and drop operation. It will\naffect which cursor is displayed while dragging. For example, when the user hovers over\na target drop element, the browser's cursor may indicate which type of operation will\noccur."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStream/locked",
    "pageType": "web-api-instance-property",
    "summary": "The locked read-only property of the ReadableStream interface returns whether or not the readable stream is locked to a reader."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/DataTransfer",
    "pageType": "web-api-constructor",
    "summary": "The DataTransfer constructor creates a new\nDataTransfer object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/setDragImage",
    "pageType": "web-api-instance-method",
    "summary": "When a drag occurs, a translucent image is generated from the drag target (the element\nthe dragstart event is fired at), and follows the mouse pointer during the\ndrag. This image is created automatically, so you do not need to create it yourself.\nHowever, if a custom image is desired, the\nDataTransfer.setDragImage() method can be used to set the\ncustom image to be used. The image will typically be an <img> element\nbut it can also be a <canvas> or any other visible element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStream/getReader",
    "pageType": "web-api-instance-method",
    "summary": "The getReader() method of the ReadableStream interface creates a reader and locks the stream to it.\nWhile the stream is locked, no other reader can be acquired until this one is released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransfer/types",
    "pageType": "web-api-instance-property",
    "summary": "The DataTransfer.types read-only property returns the available types that exist in the items."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStream/ReadableStream",
    "pageType": "web-api-constructor",
    "summary": "The ReadableStream() constructor creates and returns a readable stream object from the given handlers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USB",
    "pageType": "web-api-interface",
    "summary": "The USB interface of the WebUSB API provides attributes and methods for finding and connecting USB devices from a web page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USB/connect_event",
    "pageType": "web-api-event",
    "summary": "The connect event of the USB interface is fired whenever a paired device is connected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USB/requestDevice",
    "pageType": "web-api-instance-method",
    "summary": "The requestDevice() method of the USB\ninterface returns a Promise that resolves with an instance of\nUSBDevice if the specified device is found. Calling this function\ntriggers the user agent's pairing flow."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USB/getDevices",
    "pageType": "web-api-instance-method",
    "summary": "The getDevices method of the USB interface\nreturns a Promise that resolves with an array of USBDevice\nobjects for paired attached devices. For information on pairing devices, see\nUSB.requestDevice()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/maxTouchPoints",
    "pageType": "web-api-instance-property",
    "summary": "The maxTouchPoints read-only property of the\nNavigator interface returns the maximum number of simultaneous touch\ncontact points that are supported by the current device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USB/disconnect_event",
    "pageType": "web-api-event",
    "summary": "The disconnect event of the USB interface is fired whenever a paired device is disconnected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/clipboard",
    "pageType": "web-api-instance-property",
    "summary": "The clipboard read-only property of the Navigator interface returns a Clipboard object used to read and write the clipboard's contents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedHTML",
    "pageType": "web-api-interface",
    "summary": "The TrustedHTML interface of the Trusted Types API represents a string that a developer can insert into an injection sink that will render it as HTML. These objects are created via TrustedTypePolicy.createHTML() and therefore have no constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator",
    "pageType": "web-api-interface",
    "summary": "The Navigator interface represents the state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedHTML/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the TrustedHTML interface returns a JSON representation of the stored data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/devicePosture",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.devicePosture read-only property returns the browser's DevicePosture object, which allows developers to query the device's current posture (that is, whether the viewport is in a flat or folded state) and run code in response to posture changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TrustedHTML/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() method of the TrustedHTML interface returns a string which may safely inserted into an injection sink."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/virtualKeyboard",
    "pageType": "web-api-instance-property",
    "summary": "The virtualKeyboard read-only property\nof the navigator interface returns a reference to the VirtualKeyboard instance object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBIsochronousOutTransferResult",
    "pageType": "web-api-interface",
    "summary": "The USBIsochronousOutTransferResult interface of the WebUSB API provides the result from a call to the isochronousTransferOut() method of the USBDevice interface. It represents the result from requesting a transfer of data from the USB host to the USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/getGamepads",
    "pageType": "web-api-instance-method",
    "summary": "The Navigator.getGamepads() method returns an array of\nGamepad objects, one for each gamepad connected to the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCue",
    "pageType": "web-api-interface",
    "summary": "The TextTrackCue interface of the WebVTT API is the abstract base class for the various derived cue types, such as VTTCue; you will work with these derived types rather than the base class."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/bluetooth",
    "pageType": "web-api-instance-property",
    "summary": "The bluetooth read-only property of the Navigator interface returns a Bluetooth object for the current document, providing access to Web Bluetooth API functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCue/startTime",
    "pageType": "web-api-instance-property",
    "summary": "The startTime property of the TextTrackCue interface returns and sets the start time of the cue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/ink",
    "pageType": "web-api-instance-property",
    "summary": "The ink read-only property of the Navigator interface returns an Ink object for the current document, providing access to Ink API functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCue/pauseOnExit",
    "pageType": "web-api-instance-property",
    "summary": "The pauseOnExit property of the TextTrackCue interface returns or sets the flag indicating whether playback of the media should pause when the end of the range to which this cue applies is reached."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/mediaDevices",
    "pageType": "web-api-instance-property",
    "summary": "The mediaDevices read-only property of the Navigator interface returns a MediaDevices object, which provides access to connected media input devices like cameras and microphones, as well as screen sharing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/presentation",
    "pageType": "web-api-instance-property",
    "summary": "The presentation read-only property of Navigator serves as the entry\npoint for the Presentation API and\nreturns a reference to Presentation object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCue/exit_event",
    "pageType": "web-api-event",
    "summary": "The exit event fires when a cue stops being active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/canShare",
    "pageType": "web-api-instance-method",
    "summary": "The canShare() method of the Navigator interface returns true if the equivalent call to navigator.share() would succeed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCue/enter_event",
    "pageType": "web-api-event",
    "summary": "The enter event fires when a cue becomes active. In the case of subtitles or a caption this is when it displays over the media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/share",
    "pageType": "web-api-instance-method",
    "summary": "The share() method of the Navigator interface invokes the native sharing mechanism of the device to share data such as text, URLs, or files. The available share targets depend on the device, but might include the clipboard, contacts and email applications, websites, Bluetooth, etc."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCue/track",
    "pageType": "web-api-instance-property",
    "summary": "The track read-only property of the TextTrackCue interface returns the TextTrack object that this cue belongs to."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/vendor",
    "pageType": "web-api-instance-property",
    "summary": "The value of the Navigator vendor property is always either \"Google Inc.\", \"Apple Computer, Inc.\", or (in Firefox) the empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCue/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the TextTrackCue interface returns and sets the identifier for this cue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/productSub",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.productSub read-only property that returns either the string \"20030107\", or the string \"20100101\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/deviceMemory",
    "pageType": "web-api-instance-property",
    "summary": "The deviceMemory read-only\nproperty of the Navigator interface returns the approximate amount of\ndevice memory in gigabytes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextTrackCue/endTime",
    "pageType": "web-api-instance-property",
    "summary": "The endTime property of the TextTrackCue interface returns and sets the end time of the cue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/locks",
    "pageType": "web-api-instance-property",
    "summary": "The locks read-only property of\nthe Navigator interface returns a LockManager object\nwhich provides methods for requesting a new Lock object and querying\nfor an existing Lock object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRHand",
    "pageType": "web-api-interface",
    "summary": "The XRHand interface is pair iterator (an ordered map) with the key being the hand joints and the value being an XRJointSpace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/xr",
    "pageType": "web-api-instance-property",
    "summary": "The read-only xr property\nprovided by the Navigator interface returns an XRSystem object\nwhich can be used to access the WebXR Device API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/activeVRDisplays",
    "pageType": "web-api-instance-property",
    "summary": "The activeVRDisplays read-only property of the\nNavigator interface returns an array containing every\nVRDisplay object that is currently presenting\n(VRDisplay.isPresenting is true)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCError/sentAlert",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sentAlert property in an\nRTCError object specifies the DTLS alert number occurred\nwhile sending data to the remote peer, if the error represents an outbound DTLS error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/permissions",
    "pageType": "web-api-instance-property",
    "summary": "The permissions read-only property of the Navigator interface returns a\nPermissions object that can be used to query and update permission\nstatus of APIs covered by the Permissions API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCError",
    "pageType": "web-api-interface",
    "summary": "The RTCError interface describes an error which has occurred while handling WebRTC operations. It's based upon the standard DOMException interface that describes general DOM errors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/serial",
    "pageType": "web-api-instance-property",
    "summary": "The serial read-only property of the Navigator interface returns a Serial object which represents the entry point into the Web Serial API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCError/errorDetail",
    "pageType": "web-api-instance-property",
    "summary": "The RTCError interface's read-only\nerrorDetail property is a string indicating the WebRTC-specific error code that occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/getBattery",
    "pageType": "web-api-instance-method",
    "summary": "The getBattery() method provides information about the system's battery.\nIt returns a battery promise, which resolves with a BatteryManager object providing some properties to get the battery status also some events you can handle to monitor the battery status.\nThis implements the Battery Status API; see that documentation for additional details, a guide to using the API, and sample code."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCError/sctpCauseCode",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sctpCauseCode property in an\nRTCError object provides the SCTP cause code explaining\nwhy the SCTP negotiation failed, if the RTCError represents an SCTP error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/buildID",
    "pageType": "web-api-instance-property",
    "summary": "Returns the build identifier of the browser. In modern browsers this property now returns a fixed timestamp as a privacy measure, e.g., 20181001000000 in Firefox 64 onwards."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/registerProtocolHandler",
    "pageType": "web-api-instance-method",
    "summary": "The Navigator method registerProtocolHandler() lets websites register their ability to open or handle particular URL schemes (also known as protocols)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCError/receivedAlert",
    "pageType": "web-api-instance-property",
    "summary": "The RTCError read-only property\nreceivedAlert specifies the fatal DTLS\nerror which resulted in an alert being received from the remote peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/vendorSub",
    "pageType": "web-api-instance-property",
    "summary": "The value of the Navigator.vendorSub property is always\nthe empty string, in any browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCError/sdpLineNumber",
    "pageType": "web-api-instance-property",
    "summary": "The RTCError interface's read-only property\nsdpLineNumber specifies the line number within the\nSDP at which a syntax error occurred while parsing it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess",
    "pageType": "web-api-instance-method",
    "summary": "The requestMediaKeySystemAccess() method of the Navigator interface returns a Promise which delivers a MediaKeySystemAccess object that can be used to access a particular media key system, which can in turn be used to create keys for decrypting a media stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBInterface",
    "pageType": "web-api-interface",
    "summary": "The USBInterface interface of the WebUSB API provides information about an interface provided by the USB device. An interface represents a feature of the device which implements a particular protocol and may contain endpoints for bidirectional communication."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/serviceWorker",
    "pageType": "web-api-instance-property",
    "summary": "The serviceWorker read-only property of the Navigator interface returns the ServiceWorkerContainer object for the associated document, which provides access to registration, removal, upgrade, and communication with the ServiceWorker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItemList",
    "pageType": "web-api-interface",
    "summary": "The DataTransferItemList object is a list of DataTransferItem objects representing items being dragged. During a drag operation, each DragEvent has a dataTransfer property and that property is a DataTransferItemList."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/globalPrivacyControl",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.globalPrivacyControl read-only property returns the user's Global Privacy Control setting for the current website.\nThis setting indicates whether the user consents to the website or service selling or sharing their personal information with third parties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItemList/add",
    "pageType": "web-api-instance-method",
    "summary": "The DataTransferItemList.add() method creates a new\nDataTransferItem using the specified data and adds it to the drag data\nlist. The item may be a File or a string of a\ngiven type. If the item is successfully added to the list, the newly-created\nDataTransferItem object is returned."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/doNotTrack",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.doNotTrack property returns the user's Do Not Track setting, which indicates whether the user is requesting websites and advertisers to not track them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/scheduling",
    "pageType": "web-api-instance-property",
    "summary": "The scheduling read-only property of the Navigator interface returns a Scheduling object for the current document, which provides methods and properties to control scheduling tasks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItemList/remove",
    "pageType": "web-api-instance-method",
    "summary": "The DataTransferItemList.remove() method removes the\nDataTransferItem at the specified index from the list. If the index is\nless than zero or greater than one less than the length of the list, the list will not\nbe changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/plugins",
    "pageType": "web-api-instance-property",
    "summary": "Returns a PluginArray object, listing the Plugin objects describing the plugins installed in the application.\nNamed properties of the returned object are not enumerable (except in very old browser versions)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItemList/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property of the\nDataTransferItemList interface returns the number of items currently in\nthe drag item list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/mimeTypes",
    "pageType": "web-api-instance-property",
    "summary": "Returns a MimeTypeArray object, which contains a list of MimeType objects representing the MIME types recognized and supported by the browser.\nThe array can be queried for information about the enabled plugin that is used to handle a file of the specified type.\nNamed properties of the returned object are not enumerable (except in very old browser versions)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DataTransferItemList/clear",
    "pageType": "web-api-instance-method",
    "summary": "The DataTransferItemList method\nclear() removes all DataTransferItem\nobjects from the drag data items list, leaving the list empty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/hid",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.hid\nread-only property returns an HID object providing methods for accessing HID device connections and events that fire when the user agent connects to or disconnects from a device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDeviceInfo",
    "pageType": "web-api-interface",
    "summary": "The MediaDeviceInfo interface of the Media Capture and Streams API contains information that describes a single media input or output device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/credentials",
    "pageType": "web-api-instance-property",
    "summary": "The credentials read-only property of the Navigator interface returns the CredentialsContainer object associated with the current document, which exposes methods to request credentials. The CredentialsContainer interface also notifies the user agent when an interesting event occurs, such as a successful sign-in or sign-out. This interface can be used for feature detection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/webdriver",
    "pageType": "web-api-instance-property",
    "summary": "The webdriver read-only property\nof the navigator interface indicates whether the user agent is\ncontrolled by automation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDeviceInfo/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind read-only property of\nthe MediaDeviceInfo interface returns an enumerated value, that is\neither \"videoinput\", \"audioinput\" or \"audiooutput\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/mediaCapabilities",
    "pageType": "web-api-instance-property",
    "summary": "The mediaCapabilities read-only property of the Navigator interface references a MediaCapabilities object that can expose information about the decoding and encoding capabilities for a given media format and output capabilities."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDeviceInfo/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only\nproperty of the MediaDeviceInfo interface returns a\nstring describing this device (for example\n\"External USB Webcam\")."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/requestMIDIAccess",
    "pageType": "web-api-instance-method",
    "summary": "The requestMIDIAccess() method of the Navigator interface returns a Promise representing a request for access to MIDI devices on a user's system.\nThis method is part of the Web MIDI API, which provides a means for accessing, enumerating, and manipulating MIDI devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDeviceInfo/deviceId",
    "pageType": "web-api-instance-property",
    "summary": "The deviceId read-only property\nof the MediaDeviceInfo interface returns a string\nthat is an identifier for the represented device and is persisted across\nsessions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/geolocation",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.geolocation read-only property returns a\nGeolocation object that gives Web content access to the location of the\ndevice. This allows a website or app to offer customized results based on the user's\nlocation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDeviceInfo/groupId",
    "pageType": "web-api-instance-property",
    "summary": "The groupId read-only property of\nthe MediaDeviceInfo interface returns a string that\nis a group identifier."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/platform",
    "pageType": "web-api-instance-property",
    "summary": "The platform property read-only property of the Navigator interface returns a string identifying the platform on which the user's browser is running."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaDeviceInfo/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the MediaDeviceInfo interface is a serializer; it returns a JSON representation of the MediaDeviceInfo object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/clearAppBadge",
    "pageType": "web-api-instance-method",
    "summary": "The clearAppBadge() method of the Navigator interface clears a badge on the current app's icon by setting it to nothing. The value nothing indicates that no badge is currently set, and the status of the badge is cleared."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/oscpu",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.oscpu property returns a string that identifies the current operating system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardLayoutMap",
    "pageType": "web-api-interface",
    "summary": "The KeyboardLayoutMap interface of the Keyboard API is a read-only object with functions for retrieving the string associated with specific physical keys."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/getVRDisplays",
    "pageType": "web-api-instance-method",
    "summary": "The getVRDisplays() method of the Navigator interface returns a promise that resolves to an array of VRDisplay objects representing any available VR displays connected to the computer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardLayoutMap/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the KeyboardLayoutMap interface returns a new Iterator object that contains the key/value pairs, in the same order as that provided by a for...in loop (the difference being that a for-in loop enumerates properties in the prototype chain as well)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/keyboard",
    "pageType": "web-api-instance-property",
    "summary": "The keyboard read-only property\nof the Navigator interface returns a Keyboard object\nwhich provides access to functions that retrieve keyboard layout maps and toggle\ncapturing of key presses from the physical keyboard."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardLayoutMap/size",
    "pageType": "web-api-instance-property",
    "summary": "The size read-only property of\nthe KeyboardLayoutMap interface returns the number of elements in the\nmap."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/hardwareConcurrency",
    "pageType": "web-api-instance-property",
    "summary": "The navigator.hardwareConcurrency read-only property\nreturns the number of logical processors available to run threads on the user's\ncomputer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/deprecatedReplaceInURN",
    "pageType": "web-api-instance-method",
    "summary": "The deprecatedReplaceInURN() method of the Navigator interface substitutes specified strings inside the mapped URL corresponding to a given opaque URN or FencedFrameConfig's internal url property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardLayoutMap/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the\nKeyboardLayoutMap interface returns the element with the given\nkey."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/userAgentData",
    "pageType": "web-api-instance-property",
    "summary": "The userAgentData read-only property of the Navigator interface returns a NavigatorUAData object\nwhich can be used to access the User-Agent Client Hints API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardLayoutMap/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the\nKeyboardLayoutMap interface returns a boolean indicating whether the\nobject has an element with the specified key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/sendBeacon",
    "pageType": "web-api-instance-method",
    "summary": "The navigator.sendBeacon()\nmethod asynchronously sends an HTTP POST request containing a small amount of data to a web server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardLayoutMap/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the KeyboardLayoutMap interface returns a new Iterator object that contains the keys for each index in the KeyboardLayoutMap object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/javaEnabled",
    "pageType": "web-api-instance-method",
    "summary": "This method always returns false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/wakeLock",
    "pageType": "web-api-instance-property",
    "summary": "The wakeLock read-only property of the Navigator interface returns a WakeLock interface that allows a document to acquire a screen wake lock.\nWhile a screen wake lock is active, the user agent will try to prevent the device from dimming the screen, turning it off completely, or showing a screensaver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardLayoutMap/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the\nKeyboardLayoutMap interface executes a provided function once for\neach element of the map."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/userActivation",
    "pageType": "web-api-instance-property",
    "summary": "The read-only userActivation property of the Navigator interface returns a UserActivation object which contains information about the current window's user activation state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/KeyboardLayoutMap/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the KeyboardLayoutMap interface returns a new Iterator object that contains the values for each index in the KeyboardLayoutMap object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/usb",
    "pageType": "web-api-instance-property",
    "summary": "The usb read-only property of the Navigator interface returns a USB object for the current document, providing access to WebUSB API functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimateTransformElement",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimateTransformElement interface corresponds to the <animateTransform> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/login",
    "pageType": "web-api-instance-property",
    "summary": "The login read-only property of the Navigator interface provides access to the browser's NavigatorLogin object, which a federated identity provider (IdP) can use to set its login status when a user signs into or out of the IdP."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMatrixComponent",
    "pageType": "web-api-interface",
    "summary": "The CSSMatrixComponent interface of the CSS Typed Object Model API represents the matrix() and matrix3d() values of the individual transform property in CSS. It inherits properties and methods from its parent CSSTransformValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/getUserMedia",
    "pageType": "web-api-instance-method",
    "summary": "The deprecated Navigator.getUserMedia() method prompts the user for permission to use up to one video input device (such as a camera or shared screen) and up to one audio input device (such as a microphone) as the source for a MediaStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMatrixComponent/CSSMatrixComponent",
    "pageType": "web-api-constructor",
    "summary": "The CSSMatrixComponent() constructor\ncreates a new CSSMatrixComponent object representing the matrix() and matrix3d() values of the\nindividual transform property in CSS."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/connection",
    "pageType": "web-api-instance-property",
    "summary": "The connection read-only property of the Navigator interface returns a NetworkInformation object containing information about the system's connection, such as the current bandwidth of the user's device or whether the connection is metered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMatrixComponent/matrix",
    "pageType": "web-api-instance-property",
    "summary": "The matrix property of the\nCSSMatrixComponent interface gets and sets a 2d or 3d matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/storage",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.storage\nread-only property returns the singleton StorageManager object used to\naccess the overall storage capabilities of the browser for the current site or app.\nThe returned object lets you examine and configure persistence of data stores and\nlearn approximately how much more space your browser has available for local storage\nuse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrack",
    "pageType": "web-api-interface",
    "summary": "The ImageTrack interface of the WebCodecs API represents an individual image track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/userAgent",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.userAgent read-only property of the Navigator interface returns the User-Agent (UA) string for the current browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrack/repetitionCount",
    "pageType": "web-api-instance-property",
    "summary": "The repetitionCount property of the ImageTrack interface returns the number of repetitions of this track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/contacts",
    "pageType": "web-api-instance-property",
    "summary": "The contacts read-only property of the\nNavigator interface returns a ContactsManager interface\nwhich allows users to select entries from their contact list and share limited details\nof the selected entries with a website or application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrack/animated",
    "pageType": "web-api-instance-property",
    "summary": "The animated property of the ImageTrack interface returns true if the track is animated and therefore has multiple frames."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/getInstalledRelatedApps",
    "pageType": "web-api-instance-method",
    "summary": "The getInstalledRelatedApps() method returns a promise that resolves with an array of objects representing any related platform-specific apps or Progressive Web Apps that the user has installed. This could be used for content personalization such as removing \"install our app\" banners from the web app if the platform-specific app and/or PWA is already installed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrack/frameCount",
    "pageType": "web-api-instance-property",
    "summary": "The frameCount property of the ImageTrack interface returns the number of frames in the track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/product",
    "pageType": "web-api-instance-property",
    "summary": "The value of the Navigator.product property is always\n\"Gecko\", in any browser. This property is kept only for compatibility\npurposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/pdfViewerEnabled",
    "pageType": "web-api-instance-property",
    "summary": "The pdfViewerEnabled read-only property of the Navigator interface indicates whether the browser supports inline display of PDF files when navigating to them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageTrack/selected",
    "pageType": "web-api-instance-property",
    "summary": "The selected property of the ImageTrack interface returns true if the track is selected for decoding."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/unregisterProtocolHandler",
    "pageType": "web-api-instance-method",
    "summary": "The Navigator method unregisterProtocolHandler() removes a protocol handler for a given URL scheme."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDInputReportEvent",
    "pageType": "web-api-interface",
    "summary": "The HIDInputReportEvent interface of the WebHID API is passed to inputreport event of HIDDevice when an input report is received from any associated HID device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/windowControlsOverlay",
    "pageType": "web-api-instance-property",
    "summary": "The windowControlsOverlay read-only property of the Navigator\ninterface returns the WindowControlsOverlay interface, which exposes\ninformation about the title bar geometry in desktop Progressive Web Apps that use the Window Controls Overlay API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDInputReportEvent/data",
    "pageType": "web-api-instance-property",
    "summary": "The data property of the HIDInputReportEvent interface returns a DataView containing the data from the input report, excluding the reportId if the HID interface uses report IDs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/onLine",
    "pageType": "web-api-instance-property",
    "summary": "The onLine property of the Navigator interface returns whether the device is connected to the network, with true meaning online and false meaning offline. The property's value changes after the browser checks its network connection, usually when the user follows links or when a script requests a remote page. For example, the property should return false when users click links soon after they lose internet connection. When its value changes, an online or offline event is fired on the window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDInputReportEvent/reportId",
    "pageType": "web-api-instance-property",
    "summary": "The reportId property of the HIDInputReportEvent interface returns the one-byte identification prefix for this report, or 0 if the HID interface does not use report IDs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/appCodeName",
    "pageType": "web-api-instance-property",
    "summary": "The value of the Navigator.appCodeName property is\nalways \"Mozilla\", in any browser. This property is kept only for\ncompatibility purposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/cookieEnabled",
    "pageType": "web-api-instance-property",
    "summary": "navigator.cookieEnabled returns a Boolean value that indicates whether cookies are enabled or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HIDInputReportEvent/device",
    "pageType": "web-api-instance-property",
    "summary": "The device property of the HIDInputReportEvent interface returns the HIDDevice instance that represents the HID interface that sent the input report."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/appName",
    "pageType": "web-api-instance-property",
    "summary": "The value of the Navigator.appName property is always\n\"Netscape\", in any browser. This property is kept only for compatibility\npurposes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Houdini_APIs",
    "pageType": "guide",
    "summary": "Houdini is a set of low-level APIs that exposes parts of the CSS engine,\ngiving developers the power to extend CSS by hooking into the styling and layout process of a browser's rendering engine.\nHoudini is a group of APIs that give developers direct access to the CSS Object Model (CSSOM),\nenabling developers to write code the browser can parse as CSS,\nthereby creating new CSS features without waiting for them to be implemented natively in browsers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/language",
    "pageType": "web-api-instance-property",
    "summary": "The language read-only property of the Navigator interface returns a string representing the preferred language of the user, usually the language of the browser UI."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGDescElement",
    "pageType": "web-api-interface",
    "summary": "The SVGDescElement interface corresponds to the <desc> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/mediaSession",
    "pageType": "web-api-instance-property",
    "summary": "The mediaSession read-only property of the Navigator\ninterface returns a MediaSession\nobject that can be used to share with the browser metadata and other information about\nthe current playback state of media being handled by a document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/appVersion",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.appVersion read-only property of the Navigator interface returns a string representing version information about the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformanceScriptTiming interface is specified in the Long Animation Frames API and provides metrics on individual scripts that contribute to long animation frames (LoAFs)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/getAutoplayPolicy",
    "pageType": "web-api-instance-method",
    "summary": "The getAutoplayPolicy() method of the Autoplay Policy Detection API provides information about whether autoplay of media elements and audio contexts is allowed, disallowed, or only allowed if the audio is muted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/windowAttribution",
    "pageType": "web-api-instance-property",
    "summary": "The windowAttribution read-only property of the PerformanceScriptTiming interface returns an enumerated value describing the relationship of the container (i.e., either the top-level document or an <iframe>) in which the long animation frame (LoAF)-causing script was executed, relative to the window running the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/vibrate",
    "pageType": "web-api-instance-method",
    "summary": "The vibrate() method of the Navigator interface pulses the vibration\nhardware on the device, if such hardware exists. If the device doesn't support\nvibration, this method has no effect. If a vibration pattern is already in progress when\nthis method is called, the previous pattern is halted and the new one begins instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/window",
    "pageType": "web-api-instance-property",
    "summary": "The window read-only property of the PerformanceScriptTiming interface returns a reference to a Window object representing the window of the container (i.e., either the top-level document or an <iframe>) in which the long animation frame (LoAF)-causing script was executed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/taintEnabled",
    "pageType": "web-api-instance-method",
    "summary": "The Navigator.taintEnabled() method always returns\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/forcedStyleAndLayoutDuration",
    "pageType": "web-api-instance-property",
    "summary": "The forcedStyleAndLayoutDuration read-only property of the PerformanceScriptTiming interface returns a DOMHighResTimeStamp indicating the total time spent, in milliseconds, by the script processing forced layout/style. See Avoid layout thrashing to understand what causes this."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/gpu",
    "pageType": "web-api-instance-property",
    "summary": "The Navigator.gpu read-only property returns the GPU object for the current browsing context, which is the entry point for the WebGPU API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/invokerType",
    "pageType": "web-api-instance-property",
    "summary": "The invokerType read-only property of the PerformanceScriptTiming interface returns a string value indicating the type of feature that, when invoked, ran the script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/languages",
    "pageType": "web-api-instance-property",
    "summary": "The languages read-only property of the Navigator interface\nreturns an array of strings representing the user's preferred\nlanguages. The language is described using a BCP 47 language tag. In the returned\narray they are ordered by preference with the most preferred language first."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Navigator/setAppBadge",
    "pageType": "web-api-instance-method",
    "summary": "The setAppBadge() method of the Navigator interface sets a badge on the icon associated with this app. If a value is passed to the method, this will be set as the value of the badge. Otherwise the badge will display as a dot, or other indicator as defined by the platform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/pauseDuration",
    "pageType": "web-api-instance-property",
    "summary": "The pauseDuration read-only property of the PerformanceScriptTiming interface returns a DOMHighResTimeStamp indicating the total time, in milliseconds, spent by the script on \"pausing\" synchronous operations (for example, Window.alert() calls or synchronous XMLHttpRequests)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetailed",
    "pageType": "web-api-interface",
    "summary": "The ScreenDetailed interface of the Window Management API represents detailed information about one specific screen available to the user's device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/sourceFunctionName",
    "pageType": "web-api-instance-property",
    "summary": "The sourceFunctionName read-only property of the PerformanceScriptTiming interface returns a string representing the name of the function that contributed to the long animation frame (LoAF)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetailed/isPrimary",
    "pageType": "web-api-instance-property",
    "summary": "The isPrimary read-only property of the\nScreenDetailed interface is a boolean indicating whether the screen is set as the operating system (OS) primary screen or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/invoker",
    "pageType": "web-api-instance-property",
    "summary": "The invoker read-only property of the PerformanceScriptTiming interface returns a string value indicating the identity of the feature that, when invoked, ran the script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetailed/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the\nScreenDetailed interface is a string providing a descriptive label for the screen, for example \"Built-in Retina Display\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetailed/left",
    "pageType": "web-api-instance-property",
    "summary": "The left read-only property of the\nScreenDetailed interface is a number representing the x-coordinate (left-hand edge) of the total screen area inside the OS virtual screen arrangement, relative to the multi-screen origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PerformanceScriptTiming interface is a serializer; it returns a JSON representation of the PerformanceScriptTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetailed/top",
    "pageType": "web-api-instance-property",
    "summary": "The top read-only property of the\nScreenDetailed interface is a number representing the y-coordinate (top edge) of the total screen area inside the OS virtual screen arrangement, relative to the multi-screen origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/executionStart",
    "pageType": "web-api-instance-property",
    "summary": "The executionStart read-only property of the PerformanceScriptTiming interface returns a DOMHighResTimeStamp indicating the time when the script compilation finished and execution started."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetailed/devicePixelRatio",
    "pageType": "web-api-instance-property",
    "summary": "The devicePixelRatio read-only property of the\nScreenDetailed interface is a number representing the screen's device pixel ratio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/sourceCharPosition",
    "pageType": "web-api-instance-property",
    "summary": "The sourceCharPosition read-only property of the PerformanceScriptTiming interface returns a number representing the script character position of the script feature that contributed to the long animation frame (LoAF)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetailed/availLeft",
    "pageType": "web-api-instance-property",
    "summary": "The availLeft read-only property of the\nScreenDetailed interface is a number representing the x-coordinate (left-hand edge) of the available screen area inside the OS virtual screen arrangement, relative to the multi-screen origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceScriptTiming/sourceURL",
    "pageType": "web-api-instance-property",
    "summary": "The sourceURL read-only property of the PerformanceScriptTiming interface returns a string representing the URL of the script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetailed/isInternal",
    "pageType": "web-api-instance-property",
    "summary": "The isInternal read-only property of the\nScreenDetailed interface is a boolean indicating whether the screen is internal to the device or external. External devices are generally manufactured separately from the device they are attached to and can be connected and disconnected as needed, whereas internal screens are part of the device and not intended to be disconnected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLQuoteElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLQuoteElement interface provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating quoting elements, like <blockquote> and <q>, but not the <cite> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScreenDetailed/availTop",
    "pageType": "web-api-instance-property",
    "summary": "The availTop read-only property of the\nScreenDetailed interface is a number representing the y-coordinate (top edge) of the available screen area inside the OS virtual screen arrangement, relative to the multi-screen origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPreserveAspectRatio",
    "pageType": "web-api-interface",
    "summary": "The SVGPreserveAspectRatio interface corresponds to the preserveAspectRatio attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLQuoteElement/cite",
    "pageType": "web-api-instance-property",
    "summary": "The cite property of the HTMLQuoteElement interface indicates the URL for the source of the quotation. It reflects the <q> element's cite attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPreserveAspectRatio/align",
    "pageType": "web-api-instance-property",
    "summary": "The align read-only property of the SVGPreserveAspectRatio interface reflects the type of the alignment value as specified by one of the SVG_PRESERVEASPECTRATIO_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPreserveAspectRatio/meetOrSlice",
    "pageType": "web-api-instance-property",
    "summary": "The meetOrSlice read-only property of the SVGPreserveAspectRatio interface reflects the type of the meet-or-slice value as specified by one of the SVG_MEETORSLICE_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList",
    "pageType": "web-api-interface",
    "summary": "The SVGPointList interface represents a list of DOMPoint objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimationElement interface is the base interface for all of the animation element interfaces: SVGAnimateElement, SVGSetElement, SVGAnimateColorElement, SVGAnimateMotionElement and SVGAnimateTransformElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList/getItem",
    "pageType": "web-api-instance-method",
    "summary": "The getItem() method of the SVGPointList interface gets one item from the list at the specified index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/targetElement",
    "pageType": "web-api-instance-property",
    "summary": "The targetElement read-only property of the SVGAnimationElement interface refers to the element which is being animated. If no target element is being animated (for example, because the href attribute specifies an unknown element), the value returned is null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList/appendItem",
    "pageType": "web-api-instance-method",
    "summary": "The appendItem() method of the SVGPointList interface adds a DOMPoint to the end of the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/repeatEvent_event",
    "pageType": "web-api-event",
    "summary": "The repeatEvent event of the SVGAnimationElement interface is fired when the element's local timeline repeats. It will be fired each time the element repeats, after the first iteration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList/removeItem",
    "pageType": "web-api-instance-method",
    "summary": "The removeItem() method of the SVGPointList interface removes a DOMPoint from the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/beginElementAt",
    "pageType": "web-api-instance-method",
    "summary": "The SVGAnimationElement method beginElementAt() creates a begin instance time for the current time plus the specified offset. The new instance time is added to the begin instance times list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList/insertItemBefore",
    "pageType": "web-api-instance-method",
    "summary": "The insertItemBefore() method of the SVGPointList interface inserts a DOMPoint before another item in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/beginEvent_event",
    "pageType": "web-api-event",
    "summary": "The beginEvent event of the SVGAnimationElement interface is fired when the element local timeline begins to play. It will be raised each time the element begins the active duration (i.e., when it restarts, but not when it repeats)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/requiredExtensions",
    "pageType": "web-api-instance-property",
    "summary": "The requiredExtensions read-only property of the SVGAnimationElement interface reflects the requiredExtensions attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList/replaceItem",
    "pageType": "web-api-instance-method",
    "summary": "The replaceItem() method of the SVGPointList interface replaces a DOMPoint in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/endElementAt",
    "pageType": "web-api-instance-method",
    "summary": "The SVGAnimationElement method endElementAt() creates an end instance time for the current time plus the specified offset. The new instance time is added to the end instance times list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList/length",
    "pageType": "web-api-instance-property",
    "summary": "The length read-only property of the SVGPointList interface returns the number of items in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/systemLanguage",
    "pageType": "web-api-instance-property",
    "summary": "The systemLanguage read-only property of the SVGAnimationElement interface reflects the systemLanguage attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/endElement",
    "pageType": "web-api-instance-method",
    "summary": "The SVGAnimationElement method endElement() creates an end instance time for the current time. The new instance time is added to the end instance times list. The behavior of this method is equivalent to endElementAt(0)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList/initialize",
    "pageType": "web-api-instance-method",
    "summary": "The initialize() method of the SVGPointList interface clears the list then adds a single new DOMPoint object to the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/getSimpleDuration",
    "pageType": "web-api-instance-method",
    "summary": "The SVGAnimationElement method getSimpleDuration() returns a float representing the number of seconds for the simple duration for this animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList/clear",
    "pageType": "web-api-instance-method",
    "summary": "The clear() method of the SVGPointList interface removes all items from the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/getStartTime",
    "pageType": "web-api-instance-method",
    "summary": "The SVGAnimationElement method getStartTime() returns a float representing the start time, in seconds, for this animation element's current interval, if it exists, regardless of whether the interval has begun yet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPointList/numberOfItems",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfItems read-only property of the SVGPointList interface returns the number of items in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/beginElement",
    "pageType": "web-api-instance-method",
    "summary": "The SVGAnimationElement method beginElement() creates a begin instance time for the current time. The new instance time is added to the begin instance times list. The behavior of this method is equivalent to beginElementAt(0)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/getCurrentTime",
    "pageType": "web-api-instance-method",
    "summary": "The SVGAnimationElement method getCurrentTime() returns a float representing the current time in seconds relative to time zero for the given time container."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the IDBIndex\ninterface contains a string which names the index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimationElement/endEvent_event",
    "pageType": "web-api-event",
    "summary": "The endEvent event of the SVGAnimationElement interface is fired when at the active end of the animation is reached."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex",
    "pageType": "web-api-interface",
    "summary": "IDBIndex interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisVoice/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the\nSpeechSynthesisVoice interface returns a human-readable name that\nrepresents the voice."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/keyPath",
    "pageType": "web-api-instance-property",
    "summary": "The keyPath property of the IDBIndex\ninterface returns the key path of the current index. If null, this index is not auto-populated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisVoice",
    "pageType": "web-api-interface",
    "summary": "The SpeechSynthesisVoice interface of the Web Speech API represents a voice that the system supports.\nEvery SpeechSynthesisVoice has its own relative speech service including information about language, name and URI."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/objectStore",
    "pageType": "web-api-instance-property",
    "summary": "The objectStore property of the IDBIndex\ninterface returns the object store referenced by the current index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisVoice/localService",
    "pageType": "web-api-instance-property",
    "summary": "The localService read-only property of the\nSpeechSynthesisVoice interface returns a boolean value\nindicating whether the voice is supplied by a local speech synthesizer service\n(true), or a remote speech synthesizer service (false.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/multiEntry",
    "pageType": "web-api-instance-property",
    "summary": "The multiEntry read-only property of the\nIDBIndex interface returns a boolean value that affects how the index\nbehaves when the result of evaluating the index's key path yields an array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisVoice/lang",
    "pageType": "web-api-instance-property",
    "summary": "The lang read-only property of the SpeechSynthesisVoice interface returns a BCP 47 language tag indicating the language of the voice."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisVoice/voiceURI",
    "pageType": "web-api-instance-property",
    "summary": "The voiceURI read-only property of the\nSpeechSynthesisVoice interface returns the type of URI and location of\nthe speech synthesis service for this voice."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/openKeyCursor",
    "pageType": "web-api-instance-method",
    "summary": "The openKeyCursor() method of the\nIDBIndex interface returns an IDBRequest object, and, in\na separate thread, creates a cursor over the specified key range, as arranged by this\nindex."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechSynthesisVoice/default",
    "pageType": "web-api-instance-property",
    "summary": "The default read-only property of the\nSpeechSynthesisVoice interface returns a boolean value\nindicating whether the voice is the default voice for the current app\n(true), or not (false.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/getKey",
    "pageType": "web-api-instance-method",
    "summary": "The getKey() method of the IDBIndex\ninterface returns an IDBRequest object, and, in a separate thread,\nfinds either the primary key that corresponds to the given key in this index or the\nfirst corresponding primary key, if key is set to an\nIDBKeyRange."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext",
    "pageType": "web-api-interface",
    "summary": "The EditContext interface represents the text edit context of an element that was made editable by using the EditContext API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the IDBIndex\ninterface returns an IDBRequest object, and, in a separate thread,\nfinds either the value in the referenced object store that corresponds to the given\nkey or the first corresponding value, if key is set to an\nIDBKeyRange."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/selectionStart",
    "pageType": "web-api-instance-property",
    "summary": "The selectionStart read-only property of the EditContext refers to the offset, within the editable text content, of the start of the current selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/characterBounds",
    "pageType": "web-api-instance-method",
    "summary": "The characterBounds() method of the EditContext interface returns an Array containing the list of bounding rectangles for the characters in the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/unique",
    "pageType": "web-api-instance-property",
    "summary": "The unique read-only property returns a boolean that\nstates whether the index allows duplicate keys."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/selectionEnd",
    "pageType": "web-api-instance-property",
    "summary": "The selectionEnd read-only property of the EditContext refers to the offset, within the editable text content, of the end of the current selection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/getAllRecords",
    "pageType": "web-api-instance-method",
    "summary": "The getAllRecords() method of the IDBIndex\ninterface retrieves all records (including index keys, primary keys, and values) from the index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/characterBoundsRangeStart",
    "pageType": "web-api-instance-property",
    "summary": "The characterBoundsRangeStart read-only property of the EditContext interface indicates the index of the character, within the editable text content, that corresponds to the first item in the characterBounds array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/updateSelectionBounds",
    "pageType": "web-api-instance-method",
    "summary": "The EditContext.updateSelectionBounds() method of the EditContext interface is used to inform the operating system about the bounds of the text selection within the editable region that's associated with the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/isAutoLocale",
    "pageType": "web-api-instance-property",
    "summary": "The isAutoLocale read-only property of the IDBIndex interface returns a boolean value indicating whether the index had a locale value of auto specified upon its creation (see the options parameter to IDBObjectStore.createIndex().)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/updateSelection",
    "pageType": "web-api-instance-method",
    "summary": "The updateSelection() method of the EditContext interface updates the internal state of the selection within the editable text context. This method is used to update the selection state when the user interacts with the text rendering in the EditContext's associated element, such as by clicking or dragging the mouse, or by using the keyboard."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/count",
    "pageType": "web-api-instance-method",
    "summary": "The count() method of the IDBIndex\ninterface returns an IDBRequest object, and in a separate thread,\nreturns the number of records within a key range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/attachedElements",
    "pageType": "web-api-instance-method",
    "summary": "The attachedElements() method of the EditContext interface returns an Array that contains only one item. This item is the element that's associated with the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/locale",
    "pageType": "web-api-instance-property",
    "summary": "The locale read-only property of the IDBIndex interface returns the locale of the index (for example en-US, or pl) if it had a locale value specified upon its creation (see the options parameter to IDBObjectStore.createIndex().) Note that this property always returns the current locale being used in this index, in other words, it never returns \"auto\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/compositionstart_event",
    "pageType": "web-api-event",
    "summary": "The compositionstart event of the EditContext interface fires when composition using an Input Method Editor (IME) window starts."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/openCursor",
    "pageType": "web-api-instance-method",
    "summary": "The openCursor() method of the IDBIndex\ninterface returns an IDBRequest object, and, in a separate thread,\ncreates a cursor over the specified key\nrange."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/characterboundsupdate_event",
    "pageType": "web-api-event",
    "summary": "The characterboundsupdate event fires when the operating system needs to know the bounds of certain characters within editable text region of the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/updateControlBounds",
    "pageType": "web-api-instance-method",
    "summary": "The EditContext.updateControlBounds() method of the EditContext interface is used to inform the operating system about the position and size of the editable text region of the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/getAll",
    "pageType": "web-api-instance-method",
    "summary": "The getAll() method of the IDBIndex\ninterface retrieves all objects that are inside the index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/EditContext",
    "pageType": "web-api-constructor",
    "summary": "The EditContext() constructor returns a new EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/IDBIndex/getAllKeys",
    "pageType": "web-api-instance-method",
    "summary": "The getAllKeys() method of the IDBIndex\ninterface asynchronously retrieves the primary keys of all objects inside the index,\nsetting them as the result of the request object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/text",
    "pageType": "web-api-instance-property",
    "summary": "The text read-only property of the EditContext interface represents the editable content of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/textformatupdate_event",
    "pageType": "web-api-event",
    "summary": "The textformatupdate event of the EditContext interface fires when composition using an Input Method Editor (IME) window is happening."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PermissionStatus/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the\nPermissionStatus interface returns the state of a requested permission.\nThis property returns one of 'granted', 'denied', or\n'prompt'."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/compositionend_event",
    "pageType": "web-api-event",
    "summary": "The compositionend event of the EditContext interface fires when composition using an Input Method Editor (IME) window ends."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PermissionStatus/change_event",
    "pageType": "web-api-event",
    "summary": "The change event of the PermissionStatus interface fires whenever the PermissionStatus.state property changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/textupdate_event",
    "pageType": "web-api-event",
    "summary": "The textupdate event of the EditContext interface fires when the user has made changes to the text or selection of an editable region that's attached to an EditContext instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PermissionStatus/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the PermissionStatus interface returns the name of a requested permission."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/updateCharacterBounds",
    "pageType": "web-api-instance-method",
    "summary": "The EditContext.updateCharacterBounds() method of the EditContext interface should be called as response to a characterboundsupdate event to inform the operating system about the position and size of the characters in the EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PermissionStatus",
    "pageType": "web-api-interface",
    "summary": "The PermissionStatus interface of the Permissions API provides the state of an object and an event handler for monitoring changes to said state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext/updateText",
    "pageType": "web-api-instance-method",
    "summary": "The updateText() method of the EditContext interface updates the internal text content of an EditContext object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InstallEvent",
    "pageType": "web-api-interface",
    "summary": "The parameter passed into an install event handler function, the InstallEvent interface represents an install action that is dispatched on the ServiceWorkerGlobalScope of a ServiceWorker. As a child of ExtendableEvent, it ensures that functional events such as FetchEvent are not dispatched during installation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScriptProcessorNode",
    "pageType": "web-api-interface",
    "summary": "The ScriptProcessorNode interface allows the generation, processing, or analyzing of audio using JavaScript."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InstallEvent/InstallEvent",
    "pageType": "web-api-constructor",
    "summary": "The InstallEvent() constructor creates a new InstallEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScriptProcessorNode/bufferSize",
    "pageType": "web-api-instance-property",
    "summary": "The bufferSize property of the ScriptProcessorNode interface returns an integer representing both the input and output buffer size, in sample-frames. Its value can be a power of 2 value in the range 256 – 16384."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InstallEvent/addRoutes",
    "pageType": "web-api-instance-method",
    "summary": "The addRoutes() method of the InstallEvent interface specifies one or more static routes, which define rules for fetching specified resources that will be used even before service worker startup. This allows you to, for example, bypass a service worker in cases where you always want to fetch a resource from the network or a browser Cache, and avoids the performance overhead of unnecessary service worker cycles."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ScriptProcessorNode/audioprocess_event",
    "pageType": "web-api-event",
    "summary": "The audioprocess event of the ScriptProcessorNode interface is fired when an input buffer of a script processor is ready to be processed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemObserver",
    "pageType": "web-api-interface",
    "summary": "The FileSystemObserver interface of the File System API provides a mechanism to observe changes to the user-observable file system and the Origin Private File System (OPFS). This means web applications don't have to poll the file system to find changes in the files or folder structure, which can be time-consuming and wasteful."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext_API",
    "pageType": "web-api-overview",
    "summary": "The EditContext API can be used to build rich text editors on the web that support advanced text input experiences, such as Input Method Editor (IME) composition, emoji picker, or any other platform-specific editing-related UI surfaces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemObserver/FileSystemObserver",
    "pageType": "web-api-constructor",
    "summary": "The FileSystemObserver() constructor creates a new FileSystemObserver object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EditContext_API/Guide",
    "pageType": "guide",
    "summary": "The EditContext API can be used to build rich text editors on the web that support advanced text input experiences, such as Input Method Editor (IME) composition, emoji picker, or any other platform-specific editing-related UI surfaces."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemObserver/observe",
    "pageType": "web-api-instance-method",
    "summary": "The observe() method of the\nFileSystemObserver interface asks the observer to start observing changes to a given file or directory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbsoluteOrientationSensor",
    "pageType": "web-api-interface",
    "summary": "The AbsoluteOrientationSensor interface of the Sensor APIs describes the device's physical orientation in relation to the Earth's reference coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemObserver/disconnect",
    "pageType": "web-api-instance-method",
    "summary": "The disconnect() method of the\nFileSystemObserver interface stops the observer observing the file system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationReceiver",
    "pageType": "web-api-interface",
    "summary": "The PresentationReceiver interface of the Presentation API provides a means for a receiving browsing context to access controlling browsing contexts and communicate with them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbsoluteOrientationSensor/AbsoluteOrientationSensor",
    "pageType": "web-api-constructor",
    "summary": "The AbsoluteOrientationSensor() constructor creates a new AbsoluteOrientationSensor object which describes the device's physical orientation in relation to the Earth's reference coordinate system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream_Recording_API",
    "pageType": "web-api-overview",
    "summary": "The MediaStream Recording API, sometimes referred to as the Media Recording API or the MediaRecorder API, is closely affiliated with the Media Capture and Streams API and the WebRTC API. The MediaStream Recording API makes it possible to capture the data generated by a MediaStream or HTMLMediaElement object for analysis, processing, or saving to disk. It's also surprisingly easy to work with."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Credential",
    "pageType": "web-api-interface",
    "summary": "The Credential interface of the Credential Management API provides information about an entity (usually a user) normally as a prerequisite to a trust decision."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream_Recording_API/Using_the_MediaStream_Recording_API",
    "pageType": "guide",
    "summary": "The MediaStream Recording API makes it easy to record audio and/or video streams. When used with navigator.mediaDevices.getUserMedia(), it provides an easy way to record from the user's input devices and instantly use the result in web apps."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Credential/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the Credential interface returns a string containing the credential's type. Valid values are password, federated, public-key, identity and otp."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element",
    "pageType": "guide",
    "summary": "While the article Using the MediaStream Recording API demonstrates using the MediaRecorder interface to capture a MediaStream generated by a hardware device, as returned by navigator.mediaDevices.getUserMedia(), you can also use an HTML media element (namely <audio> or <video>) as the source of the MediaStream to be recorded. In this article, we'll look at an example that does just that."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Credential/isConditionalMediationAvailable_static",
    "pageType": "web-api-static-method",
    "summary": "The isConditionalMediationAvailable() static method of the Credential interface returns a Promise which resolves to false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/upY",
    "pageType": "web-api-instance-property",
    "summary": "The upY read-only property of the AudioListener interface is an AudioParam representing the y value of the direction vector defining the up direction the listener is pointing in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Credential/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the Credential interface returns a string containing the credential's identifier. This might be a GUID, username, or email address, or some other value, depending on the type of credential."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/forwardZ",
    "pageType": "web-api-instance-property",
    "summary": "The forwardZ read-only property of the AudioListener interface is an AudioParam representing the z value of the direction vector defining the forward direction the listener is pointing in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener",
    "pageType": "web-api-interface",
    "summary": "The AudioListener interface represents the position and orientation of the unique person listening to the audio scene, and is used in audio spatialization. All PannerNodes spatialize in relation to the AudioListener stored in the BaseAudioContext.listener attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession",
    "pageType": "web-api-interface",
    "summary": "The XRSession interface of the WebXR Device API represents an ongoing XR session, providing methods and properties used to interact with and control the session. To open a WebXR session, use the XRSystem interface's requestSession() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/upZ",
    "pageType": "web-api-instance-property",
    "summary": "The upZ read-only property of the AudioListener interface is an AudioParam representing the z value of the direction vector defining the up direction the listener is pointing in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/forwardY",
    "pageType": "web-api-instance-property",
    "summary": "The forwardY read-only property of the AudioListener interface is an AudioParam representing the y value of the direction vector defining the forward direction the listener is pointing in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/interactionMode",
    "pageType": "web-api-instance-property",
    "summary": "The XRSession interface's read-only interactionMode property\ndescribes the best space (according to the user agent) for the application to draw an interactive UI for the current session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/upX",
    "pageType": "web-api-instance-property",
    "summary": "The upX read-only property of the AudioListener interface is an AudioParam representing the x value of the direction vector defining the up direction the listener is pointing in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/select_event",
    "pageType": "web-api-event",
    "summary": "The WebXR select event is sent to an XRSession when one of the session's input sources has completed a primary action."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/setOrientation",
    "pageType": "web-api-instance-method",
    "summary": "The setOrientation() method of the AudioListener interface defines the orientation of the listener."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/forwardX",
    "pageType": "web-api-instance-property",
    "summary": "The forwardX read-only property of the AudioListener interface is an AudioParam representing the x value of the direction vector defining the forward direction the listener is pointing in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/visibilityState",
    "pageType": "web-api-instance-property",
    "summary": "The read-only visibilityState property of the\nXRSession interface is a string indicating whether the WebXR content is\ncurrently visible to the user, and if it is, whether it's the primary focus."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/positionZ",
    "pageType": "web-api-instance-property",
    "summary": "The positionZ read-only property of the AudioListener interface is an AudioParam representing the z position of the listener in 3D cartesian space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/inputsourceschange_event",
    "pageType": "web-api-event",
    "summary": "The inputsourceschange event is sent to an XRSession when the set of available WebXR input devices changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/setPosition",
    "pageType": "web-api-instance-method",
    "summary": "The setPosition() method of the AudioListener Interface defines the position of the listener."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/positionX",
    "pageType": "web-api-instance-property",
    "summary": "The positionX read-only property of the AudioListener interface is an AudioParam representing the x position of the listener in 3D cartesian space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/preferredReflectionFormat",
    "pageType": "web-api-instance-property",
    "summary": "The read-only preferredReflectionFormat property of the XRSession interface returns this session's preferred reflection format used for lighting estimation texture data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioListener/positionY",
    "pageType": "web-api-instance-property",
    "summary": "The positionY read-only property of the AudioListener interface is an AudioParam representing the y position of the listener in 3D cartesian space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/domOverlayState",
    "pageType": "web-api-instance-property",
    "summary": "The read-only domOverlayState property of an immersive-ar\nXRSession provides information about the DOM overlay, if the feature is enabled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasonDetails",
    "pageType": "web-api-interface",
    "summary": "The NotRestoredReasonDetails interface of the Performance API represents a single reason why a navigated page was blocked from using the back/forward cache (bfcache)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/updateRenderState",
    "pageType": "web-api-instance-method",
    "summary": "The updateRenderState() method of the XRSession interface of the WebXR API schedules changes to be applied to the active render state (XRRenderState) prior to rendering of the next frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasonDetails/reason",
    "pageType": "web-api-instance-property",
    "summary": "The reason read-only property of the\nNotRestoredReasonDetails interface returns a string describing a reason that the page was blocked from using the back/forward cache (bfcache)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/requestLightProbe",
    "pageType": "web-api-instance-method",
    "summary": "The requestLightProbe() method of the\nXRSession interface returns a Promise that resolves with an XRLightProbe object that estimates lighting information at a given point in the user's environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NotRestoredReasonDetails/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the NotRestoredReasonDetails interface is a serializer; it returns a JSON representation of the NotRestoredReasonDetails object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/requestHitTestSource",
    "pageType": "web-api-instance-method",
    "summary": "The requestHitTestSource() method of the\nXRSession interface returns a Promise that resolves with an XRHitTestSource object that can be passed to XRFrame.getHitTestResults()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedTransformList",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedTransformList interface represents attributes which take a list of numbers and which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedTransformList/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal read-only property of the SVGAnimatedTransformList interface represents the animated value of the transform attribute of an SVG element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/requestReferenceSpace",
    "pageType": "web-api-instance-method",
    "summary": "The requestReferenceSpace() method of the\nXRSession interface returns a promise that resolves with\nan instance of either XRReferenceSpace\nor XRBoundedReferenceSpace as appropriate given the type of reference\nspace requested."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedTransformList/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal read-only property of the SVGAnimatedTransformList interface represents the non-animated value of the transform attribute of an SVG element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/environmentBlendMode",
    "pageType": "web-api-instance-property",
    "summary": "The XRSession interface's read-only environmentBlendMode\nproperty identifies if, and to what degree, the computer-generated imagery is overlaid atop the real world."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkletSharedStorage",
    "pageType": "web-api-interface",
    "summary": "The WorkletSharedStorage interface of the Shared Storage API represents the shared storage for a particular origin within a worklet context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/end",
    "pageType": "web-api-instance-method",
    "summary": "The end() method shuts down the\nXRSession on which it's called, returning a promise which resolves once\nthe session has fully shut down."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkletSharedStorage/remainingBudget",
    "pageType": "web-api-instance-method",
    "summary": "The remainingBudget() method of the\nWorkletSharedStorage interface returns the remaining navigation budget for the current origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkletSharedStorage/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the\nWorkletSharedStorage interface returns an async iterator. The iterator provides an array of [key, value] pairs corresponding to the enumerable properties of a WorkletSharedStorage instance. The order of these pairs is similar to that in a for...in loop, though a for...in loop also enumerates properties from the prototype chain."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/cancelAnimationFrame",
    "pageType": "web-api-instance-method",
    "summary": "The cancelAnimationFrame() method of\nthe XRSession interface cancels an animation frame which was previously\nrequested by calling requestAnimationFrame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkletSharedStorage/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the\nWorkletSharedStorage interface retrieves a value from shared storage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/end_event",
    "pageType": "web-api-event",
    "summary": "An end event is fired at an XRSession object when the WebXR session has ended, either because the web application has chosen to stop the session, or because the user agent terminated the session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkletSharedStorage/length",
    "pageType": "web-api-instance-method",
    "summary": "The length() method of the\nWorkletSharedStorage interface returns the number of entries currently stored in shared storage for the current origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkletSharedStorage/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the\nWorkletSharedStorage interface returns an async iterator, which contains the keys for each item in a WorkletSharedStorage instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/squeezestart_event",
    "pageType": "web-api-event",
    "summary": "The WebXR event squeezestart is sent to an XRSession when the user begins a primary squeeze action on one of its input sources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WorkletSharedStorage/context",
    "pageType": "web-api-instance-property",
    "summary": "The context read-only property of the WorkletSharedStorage interface contains contextual data passed into the shared storage worklet from the associated browsing context via the FencedFrameConfig.setSharedStorageContext() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/enabledFeatures",
    "pageType": "web-api-instance-property",
    "summary": "The XRSession interface's read-only enabledFeatures property returns an array of features enabled (granted) for an XRSession. This contains all requiredFeatures and a subset of optionalFeatures that have been requested with XRSystem.requestSession()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the\nHTMLObjectElement interface returns a string that\nreflects the name HTML attribute, specifying the name of\nthe browsing context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/visibilitychange_event",
    "pageType": "web-api-event",
    "summary": "The visibilitychange event is sent to an XRSession to inform it when it becomes visible or hidden, or when it becomes visible but not currently focused. Upon receiving the event, you can check the value of the session's visibilityState property to determine the new visibility state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLObjectElement interface provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <object> element, representing external resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/willValidate",
    "pageType": "web-api-instance-property",
    "summary": "The willValidate read-only property of the HTMLObjectElement interface returns false, because <object> elements are not candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/selectend_event",
    "pageType": "web-api-event",
    "summary": "The WebXR event selectend is sent to an XRSession when one of its input sources ends its primary action or when an input source that's in the process of handling an ongoing primary action is disconnected without successfully completing the action."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the\nHTMLObjectElement interface returns a string that\nreflects the type HTML attribute, specifying the MIME type\nof the resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/requestHitTestSourceForTransientInput",
    "pageType": "web-api-instance-method",
    "summary": "The requestHitTestSourceForTransientInput() method of the\nXRSession interface returns a Promise that resolves with an XRTransientInputHitTestSource object that can be passed to XRFrame.getHitTestResultsForTransientInput()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/validity",
    "pageType": "web-api-instance-property",
    "summary": "The validity read-only property of the HTMLObjectElement interface returns a ValidityState object that represents the validity states this element is in. Although <object> elements are never candidates for constraint validation, the validity state may still be invalid if a custom validity message has been set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/data",
    "pageType": "web-api-instance-property",
    "summary": "The data property of the\nHTMLObjectElement interface returns a string that\nreflects the data HTML attribute, specifying the address\nof a resource's data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/squeeze_event",
    "pageType": "web-api-event",
    "summary": "The WebXR squeeze event is sent to an XRSession when one of the session's input sources has completed a primary squeeze action. Examples of common kinds of primary action are users pressing triggers or buttons, tapping a touchpad, speaking a command, or performing a recognizable gesture when using a video tracking system or handheld controller with an accelerometer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/form",
    "pageType": "web-api-instance-property",
    "summary": "The form read-only property of the HTMLObjectElement interface returns an HTMLFormElement object that owns this <object>, or null if this object element is not owned by any form."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/squeezeend_event",
    "pageType": "web-api-event",
    "summary": "The WebXR event squeezeend is sent to an XRSession when one of its input sources ends its primary action or when an input source that's in the process of handling an ongoing primary action is disconnected without successfully completing the action."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the\nHTMLObjectElement interface Returns a string that\nreflects the height HTML attribute, specifying the\ndisplayed height of the resource in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/setCustomValidity",
    "pageType": "web-api-instance-method",
    "summary": "The setCustomValidity() method of the\nHTMLObjectElement interface sets a custom validity message for the\nelement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/requestAnimationFrame",
    "pageType": "web-api-instance-method",
    "summary": "The XRSession\nmethod requestAnimationFrame(), much like the\nWindow method of the same name, schedules a callback to be executed the\nnext time the browser is ready to paint the session's virtual environment to the XR\ndisplay. The specified callback is executed once before the next repaint; if\nyou wish for it to be executed for the following repaint, you must\ncall requestAnimationFrame() again. This can be done from within the\ncallback itself."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/reportValidity",
    "pageType": "web-api-instance-method",
    "summary": "The reportValidity() method of the HTMLObjectElement interface performs the same validity checking steps as the checkValidity() method. It always returns true because <object> elements are never candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/renderState",
    "pageType": "web-api-instance-property",
    "summary": "The\nread-only renderState property of an\nXRSession object indicates the returns a XRRenderState\nobject describing how the user's environment which should be rendered. The\ninformation provided covers the minimum and maximum distance at which to render objects,\nthe vertical field of view to use when rendering the in the inline session\nmode, and the XRWebGLLayer to render into for inline composition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/contentDocument",
    "pageType": "web-api-instance-property",
    "summary": "The contentDocument read-only property of\nthe HTMLObjectElement interface Returns a Document\nrepresenting the active document of the object element's nested browsing context, if\nany; otherwise null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/depthDataFormat",
    "pageType": "web-api-instance-property",
    "summary": "The read-only depthDataFormat property of an immersive-ar\nXRSession describes which depth sensing data format is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/validationMessage",
    "pageType": "web-api-instance-property",
    "summary": "The validationMessage read-only property\nof the HTMLObjectElement interface returns a string\nrepresenting a localized message that describes the validation constraints that the\ncontrol does not satisfy (if any). This is the empty string if the control is not a\ncandidate for constraint validation (willValidate is false), or it satisfies its\nconstraints."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the\nHTMLObjectElement interface returns a string that\nreflects the width HTML attribute, specifying the\ndisplayed width of the resource in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/selectstart_event",
    "pageType": "web-api-event",
    "summary": "The WebXR selectstart event is sent to an XRSession when the user begins a primary action on one of its input sources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/getSVGDocument",
    "pageType": "web-api-instance-method",
    "summary": "The getSVGDocument() method of the HTMLObjectElement interface returns the Document object of the embedded SVG."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/inputSources",
    "pageType": "web-api-instance-property",
    "summary": "The read-only inputSources property of the\nXRSession interface returns an XRInputSourceArray object\nwhich lists all controllers and input devices which are expressly associated with the\nXR device and are currently available. These controllers may include handheld\ncontrollers, XR-equipped gloves, optically tracked hands, and gaze-based input methods.\nKeyboards, gamepads, and mice are not considered WebXR input sources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/contentWindow",
    "pageType": "web-api-instance-property",
    "summary": "The contentWindow read-only property of\nthe HTMLObjectElement interface returns a WindowProxy\nrepresenting the window proxy of the object element's nested browsing context, if any;\notherwise null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/checkValidity",
    "pageType": "web-api-instance-method",
    "summary": "The checkValidity() method of the HTMLObjectElement interface checks if the element is valid, but always returns true because <object> elements are never candidates for constraint validation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRSession/depthUsage",
    "pageType": "web-api-instance-property",
    "summary": "The read-only depthUsage property of an immersive-ar\nXRSession describes which depth-sensing usage is used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLObjectElement/useMap",
    "pageType": "web-api-instance-property",
    "summary": "The useMap property of the\nHTMLObjectElement interface returns a string that\nreflects the usemap HTML attribute, specifying a\n<map> element to use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CropTarget",
    "pageType": "web-api-interface",
    "summary": "The CropTarget interface of the Screen Capture API provides a static method, fromElement(), which returns a CropTarget instance that can be used to crop a captured video track to the area in which a specified element is rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCubeLayer",
    "pageType": "web-api-interface",
    "summary": "The XRCubeLayer interface of the WebXR Device API is a layer that renders directly from a cubemap and projects it onto the inside faces of a cube."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CropTarget/fromElement_static",
    "pageType": "web-api-static-method",
    "summary": "The fromElement() static method of the CropTarget interface returns a CropTarget instance that can be used to crop a captured video track to the area in which a specified element is rendered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCubeLayer/redraw_event",
    "pageType": "web-api-event",
    "summary": "The redraw event is sent to the XRCubeLayer object when the underlying resources of the layer are lost or when the XR Compositor can no longer reproject the layer. If this event is sent, authors should redraw the content of the layer in the next XR animation frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCubeLayer/space",
    "pageType": "web-api-instance-property",
    "summary": "The space property of the XRCubeLayer interface represents the layer's spatial relationship with the user's physical environment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Painting_API",
    "pageType": "web-api-overview",
    "summary": "The CSS Painting API — part of the CSS Houdini umbrella of APIs — allows developers to write JavaScript functions that can draw directly into an element's background, border, or content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRCubeLayer/orientation",
    "pageType": "web-api-instance-property",
    "summary": "The orientation property of the XRCubeLayer interface represents the orientation relative to the space property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Painting_API/Guide",
    "pageType": "guide",
    "summary": "The CSS Paint API is designed to enable developers to programmatically define images which can then be used anywhere a CSS image can be invoked, such as CSS background-image, border-image, mask-image, etc."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePipeline/getBindGroupLayout",
    "pageType": "web-api-instance-method",
    "summary": "The getBindGroupLayout() method of the\nGPUComputePipeline interface returns the pipeline's GPUBindGroupLayout object with the given index (i.e., included in the originating GPUDevice.createComputePipeline() or GPUDevice.createComputePipelineAsync() call's pipeline layout)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePipeline",
    "pageType": "web-api-interface",
    "summary": "The GPUComputePipeline interface of the WebGPU API represents a pipeline that controls the compute shader stage and can be used in a GPUComputePassEncoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanMakePaymentEvent",
    "pageType": "web-api-interface",
    "summary": "The CanMakePaymentEvent interface of the Payment Handler API is the event object for the canmakepayment event, fired on a payment app's service worker to check whether it is ready to handle a payment. Specifically, it is fired when the merchant website calls the PaymentRequest() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUComputePipeline/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUComputePipeline interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanMakePaymentEvent/CanMakePaymentEvent",
    "pageType": "web-api-constructor",
    "summary": "The CanMakePaymentEvent() constructor creates a new CanMakePaymentEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDataListElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLDataListElement interface provides special properties (beyond the HTMLElement object interface it also has available to it by inheritance) to manipulate <datalist> elements and their content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDataListElement/options",
    "pageType": "web-api-instance-property",
    "summary": "The options read-only property of the HTMLDataListElement interface returns an HTMLCollection of HTMLOptionElement elements contained in a <datalist>. The descendant <option> elements provide predefined options for the <input> control associated with the <datalist>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanMakePaymentEvent/respondWith",
    "pageType": "web-api-instance-method",
    "summary": "The respondWith() method of the CanMakePaymentEvent interface enables the service worker to respond appropriately to signal whether it is ready to handle payments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Geolocation_API",
    "pageType": "web-api-overview",
    "summary": "The Geolocation API allows the user to provide their location to web applications if they so desire. For privacy reasons, the user is asked for permission to report location information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadButton",
    "pageType": "web-api-interface",
    "summary": "The GamepadButton interface defines an individual button of a gamepad or other controller, allowing access to the current state of different types of buttons available on the control device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Geolocation_API/Using_the_Geolocation_API",
    "pageType": "guide",
    "summary": "The Geolocation API is used to retrieve the user's location, so that it can for example be used to display their position using a mapping API. This article explains the basics of how to use it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadButton/touched",
    "pageType": "web-api-instance-property",
    "summary": "The touched property of the\nGamepadButton interface returns a boolean indicating whether\na button capable of detecting touch is currently touched (true) or not touched (false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimateElement",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimateElement interface corresponds to the <animate> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadButton/value",
    "pageType": "web-api-instance-property",
    "summary": "The GamepadButton.value property of the\nGamepadButton interface returns a double value used to represent the\ncurrent state of analog buttons on many modern gamepads, such as the triggers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorageOperation",
    "pageType": "web-api-interface",
    "summary": "The SharedStorageOperation interface of the Shared Storage API represents the base class for all output gate operation types."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadButton/pressed",
    "pageType": "web-api-instance-property",
    "summary": "The GamepadButton.pressed property of the\nGamepadButton interface returns a boolean indicating whether\nthe button is currently pressed (true) or unpressed (false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_compressed_texture_s3tc",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_compressed_texture_s3tc extension is part of the WebGL API and exposes four S3TC compressed texture formats."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRadialGradientElement",
    "pageType": "web-api-interface",
    "summary": "The SVGRadialGradientElement interface corresponds to the <RadialGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventSource/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The readyState read-only property of the\nEventSource interface returns a number representing the state of the\nconnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventSource",
    "pageType": "web-api-interface",
    "summary": "The EventSource interface is web content's interface to server-sent events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRadialGradientElement/fx",
    "pageType": "web-api-instance-property",
    "summary": "The fx read-only property of the SVGRadialGradientElement interface describes the x-axis coordinate of the focal point of the radial gradient as an SVGAnimatedLength. It reflects the computed value of the fx attribute on the <radialGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventSource/withCredentials",
    "pageType": "web-api-instance-property",
    "summary": "The withCredentials read-only property of the\nEventSource interface returns a boolean value indicating whether\nthe EventSource object was instantiated with CORS credentials set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRadialGradientElement/cx",
    "pageType": "web-api-instance-property",
    "summary": "The cx read-only property of the SVGRadialGradientElement interface describes the x-axis coordinate of the center of the radial gradient as an SVGAnimatedLength. It reflects the computed value of the cx attribute on the <radialGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventSource/open_event",
    "pageType": "web-api-event",
    "summary": "The open event of the EventSource interface is fired when a connection with an event source is opened."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRadialGradientElement/r",
    "pageType": "web-api-instance-property",
    "summary": "The r read-only property of the SVGRadialGradientElement interface describes the radius of the radial gradient as an SVGAnimatedLength. It reflects the computed value of the r attribute on the <radialGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventSource/message_event",
    "pageType": "web-api-event",
    "summary": "The message event of the EventSource interface is fired when data is received through an event source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRadialGradientElement/cy",
    "pageType": "web-api-instance-property",
    "summary": "The cy read-only property of the SVGRadialGradientElement interface describes the y-axis coordinate of the center of the radial gradient as an SVGAnimatedLength. It reflects the computed value of the cy attribute on the <radialGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventSource/url",
    "pageType": "web-api-instance-property",
    "summary": "The url read-only property of the\nEventSource interface returns a string representing the\nURL of the source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventSource/EventSource",
    "pageType": "web-api-constructor",
    "summary": "The EventSource()\nconstructor returns a newly-created EventSource, which represents a\nremote resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRadialGradientElement/fr",
    "pageType": "web-api-instance-property",
    "summary": "The fr read-only property of the SVGRadialGradientElement interface describes the radius of the focal circle of the radial gradient as an SVGAnimatedLength. It reflects the computed value of the fr attribute on the <radialGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventSource/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the EventSource\ninterface closes the connection, if one is made, and sets the\nEventSource.readyState attribute to 2 (closed)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGRadialGradientElement/fy",
    "pageType": "web-api-instance-property",
    "summary": "The fy read-only property of the SVGRadialGradientElement interface describes the y-axis coordinate of the focal point of the radial gradient as an SVGAnimatedLength. It reflects the computed value of the fy attribute on the <radialGradient> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EventSource/error_event",
    "pageType": "web-api-event",
    "summary": "The error event of the EventSource API is fired when a connection with an event source fails to be opened."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRule",
    "pageType": "web-api-interface",
    "summary": "The CSSRule interface represents a single CSS rule. There are several types of rules which inherit properties from CSSRule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLActiveInfo/name",
    "pageType": "web-api-instance-property",
    "summary": "The read-only WebGLActiveInfo.name property represents the name of the requested data returned by calling the getActiveAttrib() or getActiveUniform() methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRule/type",
    "pageType": "web-api-instance-property",
    "summary": "The read-only type property of the\nCSSRule interface is a deprecated property that returns an integer\nindicating which type of rule the CSSRule represents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLActiveInfo",
    "pageType": "web-api-interface",
    "summary": "The WebGLActiveInfo interface is part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getActiveAttrib() and WebGLRenderingContext.getActiveUniform() methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRule/cssText",
    "pageType": "web-api-instance-property",
    "summary": "The cssText property of the CSSRule\ninterface returns the actual text of a CSSStyleSheet style-rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLActiveInfo/type",
    "pageType": "web-api-instance-property",
    "summary": "The read-only WebGLActiveInfo.type property represents the type of the requested data returned by calling the getActiveAttrib() or getActiveUniform() methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRule/parentRule",
    "pageType": "web-api-instance-property",
    "summary": "The parentRule property of the CSSRule\ninterface returns the containing rule of the current rule if this exists, or otherwise\nreturns null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGLActiveInfo/size",
    "pageType": "web-api-instance-property",
    "summary": "The read-only WebGLActiveInfo.size property is a Number representing the size of the requested data returned by calling the getActiveAttrib() or getActiveUniform() methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSRule/parentStyleSheet",
    "pageType": "web-api-instance-property",
    "summary": "The parentStyleSheet property of the\nCSSRule interface returns the StyleSheet object in which\nthe current rule is defined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryReader",
    "pageType": "web-api-interface",
    "summary": "The FileSystemDirectoryReader interface of the File and Directory Entries API lets you access the FileSystemFileEntry-based objects (generally FileSystemFileEntry or FileSystemDirectoryEntry) representing each entry in a directory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_multi_draw",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_multi_draw extension is part of the\nWebGL API and allows to render more\nthan one primitive with a single function call. This can improve a WebGL application's performance\nas it reduces binding costs in the renderer and speeds up GPU thread time with uniform data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries",
    "pageType": "web-api-instance-method",
    "summary": "The FileSystemDirectoryReader interface's readEntries() method retrieves the directory entries\nwithin the directory being read and delivers them in an array to a provided callback function."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_multi_draw/multiDrawElementsWEBGL",
    "pageType": "webgl-extension-method",
    "summary": "The WEBGL_multi_draw.multiDrawElementsWEBGL() method of\nthe\nWebGL API renders multiple primitives from\narray data. It is\nidentical to multiple calls to the\ngl.drawElements()\nmethod."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DelegatedInkTrailPresenter",
    "pageType": "web-api-interface",
    "summary": "The DelegatedInkTrailPresenter interface of the Ink API provides the ability to instruct the OS-level compositor to render ink strokes between pointer event dispatches."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_multi_draw/multiDrawArraysInstancedWEBGL",
    "pageType": "webgl-extension-method",
    "summary": "The WEBGL_multi_draw.multiDrawArraysInstancedWEBGL()\nmethod of the\nWebGL API renders multiple primitives from\narray data. It is\nidentical to multiple calls to the\ngl.drawArraysInstanced()\nmethod."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DelegatedInkTrailPresenter/expectedImprovement",
    "pageType": "web-api-instance-property",
    "summary": "The expectedImprovement read-only property of the DelegatedInkTrailPresenter interface returns a value, in milliseconds, indicating the latency improvement that can be expected using this presenter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_multi_draw/multiDrawElementsInstancedWEBGL",
    "pageType": "webgl-extension-method",
    "summary": "The WEBGL_multi_draw.multiDrawElementsInstancedWEBGL() method of\nthe\nWebGL API renders multiple primitives from\narray data. It is\nidentical to multiple calls to the\ngl.drawElementsInstanced()\nmethod."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DelegatedInkTrailPresenter/presentationArea",
    "pageType": "web-api-instance-property",
    "summary": "The presentationArea read-only property of the DelegatedInkTrailPresenter interface returns the Element inside which rendering of ink strokes is confined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DelegatedInkTrailPresenter/updateInkTrailStartPoint",
    "pageType": "web-api-instance-method",
    "summary": "The updateInkTrailStartPoint() method of the DelegatedInkTrailPresenter interface indicates which PointerEvent was used as the last rendering point for the current frame, allowing the OS-level compositor to render a delegated ink trail ahead of the next pointer event being dispatched."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_multi_draw/multiDrawArraysWEBGL",
    "pageType": "webgl-extension-method",
    "summary": "The WEBGL_multi_draw.multiDrawArraysWEBGL() method of the\nWebGL API renders multiple primitives from\narray data. It is\nidentical to multiple calls to the\ngl.drawArrays()\nmethod."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPseudoElement",
    "pageType": "web-api-interface",
    "summary": "The CSSPseudoElement interface represents a pseudo-element that may be the target of an event or animated using the Web Animations API. Instances of this interface may be obtained by calling Element.pseudo()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/InputDeviceCapabilities_API",
    "pageType": "web-api-overview",
    "summary": "The InputDeviceCapabilities API provides details about the underlying sources of input events. The API attempts to describe how the device behaves rather than what it is. For example, the first version of the API indicates whether a device fires touch events rather than whether it is a touch screen."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPseudoElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the\nCSSPseudoElement interface returns the type of the pseudo-element as a\nstring, represented in the form of a CSS selector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPseudoElement/element",
    "pageType": "web-api-instance-property",
    "summary": "The element read-only property of the\nCSSPseudoElement interface returns a reference to the originating element\nof the pseudo-element, in other words its parent element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterBoundsUpdateEvent",
    "pageType": "web-api-interface",
    "summary": "The CharacterBoundsUpdateEvent interface is a DOM event that represents a request from the operating system to know the bounds of certain characters within an editable region that's attached to an EditContext instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SanitizerConfig",
    "pageType": "web-api-interface",
    "summary": "The SanitizerConfig dictionary of the HTML Sanitizer API represents a sanitizer configuration object.\nThe configuration specifies what elements, attributes and comments are allowed or should be removed when inserting strings of HTML into an Element or ShadowRoot, or when parsing an HTML string into a Document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterBoundsUpdateEvent/rangeEnd",
    "pageType": "web-api-instance-property",
    "summary": "The CharacterBoundsUpdateEvent.rangeEnd read-only property represents the offset of the last character within the editable text region for which the operating system needs the bounds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedAngle",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedAngle interface is used for attributes of basic type <angle> which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedAngle/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal read-only property of the SVGAnimatedAngle interface represents the current animated value of the associated <angle> on an SVG element. If the attribute is not currently being animated, animVal will be the same as the baseVal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterBoundsUpdateEvent/CharacterBoundsUpdateEvent",
    "pageType": "web-api-constructor",
    "summary": "The CharacterBoundsUpdateEvent() constructor returns a new CharacterBoundsUpdateEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedAngle/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal read-only property of the SVGAnimatedAngle interface represents the base (non-animated) value of the associated <angle> on an SVG element. This property is used to retrieve the static value of the <angle>, unaffected by any ongoing animations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CharacterBoundsUpdateEvent/rangeStart",
    "pageType": "web-api-instance-property",
    "summary": "The CharacterBoundsUpdateEvent.rangeStart read-only property represents the offset of the first character within the editable text region for which the operating system needs the bounds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceServerTiming/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property returns a\nstring value of the server-specified metric name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceServerTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformanceServerTiming interface surfaces server metrics that are sent with the response in the Server-Timing HTTP header."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionIceEvent",
    "pageType": "web-api-interface",
    "summary": "The RTCPeerConnectionIceEvent interface represents events that occur in relation to ICE candidates with the target, usually an RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceServerTiming/description",
    "pageType": "web-api-instance-property",
    "summary": "The description read-only property returns a\nstring value of the server-specified metric description, or an empty\nstring."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate",
    "pageType": "web-api-instance-property",
    "summary": "The read-only candidate property\nof the RTCPeerConnectionIceEvent interface returns the\nRTCIceCandidate associated with the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceServerTiming/duration",
    "pageType": "web-api-instance-property",
    "summary": "The duration read-only property returns a double that contains the server-specified metric duration, or the value 0.0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceServerTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PerformanceServerTiming interface is a serializer; it returns a JSON representation of the PerformanceServerTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnectionIceEvent/RTCPeerConnectionIceEvent",
    "pageType": "web-api-constructor",
    "summary": "The RTCPeerConnectionIceEvent() constructor creates a new\nRTCPeerConnectionIceEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PaintRenderingContext2D",
    "pageType": "web-api-interface",
    "summary": "The PaintRenderingContext2D interface of the CSS Painting API is the API's rendering context for drawing to the bitmap. It implements a subset of the CanvasRenderingContext2D API, with the following exceptions:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MimeTypeArray",
    "pageType": "web-api-interface",
    "summary": "The MimeTypeArray interface returns an array of MimeType instances, each of which contains information about a supported browser plugins. This object is returned by the deprecated Navigator.mimeTypes property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement",
    "pageType": "web-api-interface",
    "summary": "Implemented by the <video> element, the HTMLVideoElement interface provides special properties and methods for manipulating video objects. It also inherits properties and methods of HTMLMediaElement and HTMLElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UI_Events",
    "pageType": "web-api-overview",
    "summary": "The UI Events API defines a system for handling user interactions such as mouse and keyboard input. This includes:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/videoHeight",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLVideoElement interface's read-only videoHeight property indicates the intrinsic height of the video, expressed in CSS pixels.\nIn simple terms, this is the height of the media in its natural size."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UI_Events/Keyboard_event_code_values",
    "pageType": "guide",
    "summary": "The following tables show what code values are used for each native scancode or virtual keycode on major platforms. The reason is that some browsers choose to interpret physical keys differently, there are some differences in which keys map to which codes. These tables show those variations when known."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/requestPictureInPicture",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLVideoElement method\nrequestPictureInPicture() issues an asynchronous request\nto display the video in picture-in-picture mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/disablePictureInPicture",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLVideoElement disablePictureInPicture property reflects the HTML attribute indicating whether the picture-in-picture feature is disabled for the current element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values",
    "pageType": "guide",
    "summary": "The tables below list the standard values for the KeyboardEvent.key property, with an explanation of what the key is typically used for. Corresponding virtual keycodes for common platforms are included where available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/cancelVideoFrameCallback",
    "pageType": "web-api-instance-method",
    "summary": "The cancelVideoFrameCallback() method of the HTMLVideoElement interface cancels a previously-registered video frame callback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the HTMLVideoElement interface returns an integer that reflects the height attribute of the <video> element, specifying the displayed height of the resource in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The XMLHttpRequest.readyState property returns the state an XMLHttpRequest client is in. An XHR client exists in one of the following states:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/leavepictureinpicture_event",
    "pageType": "web-api-event",
    "summary": "The leavepictureinpicture event is fired when the HTMLVideoElement leaves picture-in-picture mode successfully."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest",
    "pageType": "web-api-interface",
    "summary": "XMLHttpRequest (XHR) objects are used to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the HTMLVideoElement interface returns an integer that reflects the width attribute of the <video> element, specifying the displayed width of the resource in CSS pixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/open",
    "pageType": "web-api-instance-method",
    "summary": "The XMLHttpRequest method open()\ninitializes a newly-created request, or re-initializes an existing one."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/videoWidth",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLVideoElement interface's read-only videoWidth property indicates the intrinsic width of the video, expressed in CSS pixels.\nIn simple terms, this is the width of the media in its natural size."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/enterpictureinpicture_event",
    "pageType": "web-api-event",
    "summary": "The enterpictureinpicture event is fired when the HTMLVideoElement enters picture-in-picture mode successfully."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/withCredentials",
    "pageType": "web-api-instance-property",
    "summary": "The XMLHttpRequest.withCredentials property is a boolean value that indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies, authentication headers or TLS client certificates. Setting withCredentials has no effect on same-origin requests."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/getVideoPlaybackQuality",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLVideoElement method\ngetVideoPlaybackQuality() creates and returns a\nVideoPlaybackQuality object containing metrics including how many\nframes have been lost."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/responseText",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XMLHttpRequest property\nresponseText returns the text received from a server\nfollowing a request being sent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/requestVideoFrameCallback",
    "pageType": "web-api-instance-method",
    "summary": "The requestVideoFrameCallback() method of the HTMLVideoElement interface registers a callback function that runs when a new video frame is sent to the compositor. This enables developers to perform efficient operations on each video frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/status",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XMLHttpRequest.status property returns the numerical HTTP status code of the XMLHttpRequest's response."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/resize_event",
    "pageType": "web-api-event",
    "summary": "The resize event of the HTMLVideoElement interface fires when one or both of the videoWidth and videoHeight properties have just been updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/getResponseHeader",
    "pageType": "web-api-instance-method",
    "summary": "The XMLHttpRequest method\ngetResponseHeader() returns the string containing the\ntext of a particular header's value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLVideoElement/poster",
    "pageType": "web-api-instance-property",
    "summary": "The poster property of the HTMLVideoElement interface is a string that reflects the URL for an image to be shown while no video data is available. If the property does not represent a valid URL, no poster frame will be shown."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/statusText",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XMLHttpRequest.statusText property returns a string containing the response's status message as returned by the HTTP server. Unlike XMLHttpRequest.status which indicates a numerical status code, this property contains the text of the response status, such as \"OK\" or \"Not Found\". If the request's readyState is in UNSENT or OPENED state, the value of statusText will be an empty string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential",
    "pageType": "web-api-interface",
    "summary": "The PublicKeyCredential interface provides information about a public key / private key pair, which is a credential for logging in to a service using an un-phishable and data-breach resistant asymmetric key pair instead of a password. It inherits from Credential, and is part of the Web Authentication API extension to the Credential Management API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/send",
    "pageType": "web-api-instance-method",
    "summary": "The XMLHttpRequest method\nsend() sends the request to the server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/rawId",
    "pageType": "web-api-instance-property",
    "summary": "The rawId read-only property of the\nPublicKeyCredential interface is an ArrayBuffer object\ncontaining the identifier of the credentials."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/timeout",
    "pageType": "web-api-instance-property",
    "summary": "The XMLHttpRequest.timeout property is an unsigned long representing the number of milliseconds a request can take before automatically being terminated. The default value is 0, which means there is no timeout. Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception. When a timeout happens, a timeout event is fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/isUserVerifyingPlatformAuthenticatorAvailable_static",
    "pageType": "web-api-static-method",
    "summary": "The isUserVerifyingPlatformAuthenticatorAvailable() static method of the PublicKeyCredential interface returns a Promise which resolves to true if a user-verifying platform authenticator is present."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/authenticatorAttachment",
    "pageType": "web-api-instance-property",
    "summary": "The authenticatorAttachment read-only property of the PublicKeyCredential interface is a string that indicates the general category of authenticator used during the associated navigator.credentials.create() or navigator.credentials.get() call."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/responseType",
    "pageType": "web-api-instance-property",
    "summary": "The XMLHttpRequest property\nresponseType is an enumerated string value specifying\nthe type of data contained in the response."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/parseRequestOptionsFromJSON_static",
    "pageType": "web-api-static-method",
    "summary": "The parseRequestOptionsFromJSON() static method of the PublicKeyCredential interface converts a JSON type representation into a PublicKeyCredentialRequestOptions instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/XMLHttpRequest",
    "pageType": "web-api-constructor",
    "summary": "The XMLHttpRequest() constructor\ncreates a new XMLHttpRequest."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/signalCurrentUserDetails_static",
    "pageType": "web-api-static-method",
    "summary": "The signalCurrentUserDetails() static method of the PublicKeyCredential interface signals to the authenticator that a particular user has updated their user name and/or display name on the relying party (RP) server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/readystatechange_event",
    "pageType": "web-api-event",
    "summary": "The readystatechange event is fired whenever the readyState property of the XMLHttpRequest changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/getClientExtensionResults",
    "pageType": "web-api-instance-method",
    "summary": "The getClientExtensionResults() method of the PublicKeyCredential interface returns an object mapping the identifiers of extensions requested during credential creation or authentication, and their results after processing by the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/abort",
    "pageType": "web-api-instance-method",
    "summary": "The XMLHttpRequest.abort() method aborts the request if\nit has already been sent. When a request is aborted, its\nreadyState is changed to\nXMLHttpRequest.UNSENT (0) and the request's\nstatus code is set to 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/parseCreationOptionsFromJSON_static",
    "pageType": "web-api-static-method",
    "summary": "The parseCreationOptionsFromJSON() static method of the PublicKeyCredential interface creates a PublicKeyCredentialCreationOptions object from a JSON representation of its properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/overrideMimeType",
    "pageType": "web-api-instance-method",
    "summary": "The XMLHttpRequest method\noverrideMimeType() specifies a MIME type other than the\none provided by the server to be used instead when interpreting the data being\ntransferred in a request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the PublicKeyCredential interface returns a JSON type representation of a PublicKeyCredential."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders",
    "pageType": "web-api-instance-method",
    "summary": "The XMLHttpRequest method\ngetAllResponseHeaders() returns all the response\nheaders, separated by CRLF, as a string, or returns null\nif no response has been received."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/signalUnknownCredential_static",
    "pageType": "web-api-static-method",
    "summary": "The signalUnknownCredential() static method of the PublicKeyCredential interface signals to the authenticator that a credential ID was not recognized by the relying party (RP) server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/getClientCapabilities_static",
    "pageType": "web-api-static-method",
    "summary": "The getClientCapabilities() static method of the PublicKeyCredential interface returns a Promise that resolves with an object that can be used to check whether or not particular WebAuthn client capabilities and extensions are supported."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/setAttributionReporting",
    "pageType": "web-api-instance-method",
    "summary": "The setAttributionReporting() method of the\nXMLHttpRequest interface indicates that you want the request's response to be able to register a JavaScript-based attribution source or attribution trigger."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader",
    "pageType": "web-api-instance-method",
    "summary": "The XMLHttpRequest method setRequestHeader() sets the value of an HTTP request header.\nWhen using setRequestHeader(), you must call it after calling open(), but before calling send().\nIf this method is called several times with the same header, the values are merged into one single request header."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/signalAllAcceptedCredentials_static",
    "pageType": "web-api-static-method",
    "summary": "The signalAllAcceptedCredentials() static method of the PublicKeyCredential interface signals to the authenticator all of the valid credential IDs that the relying party (RP) server still holds for a particular user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/upload",
    "pageType": "web-api-instance-property",
    "summary": "The XMLHttpRequest upload property returns an XMLHttpRequestUpload object that can be observed to monitor an upload's progress."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/isConditionalMediationAvailable_static",
    "pageType": "web-api-static-method",
    "summary": "The isConditionalMediationAvailable() static method of the PublicKeyCredential interface returns a Promise which resolves to true if conditional mediation is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/responseURL",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XMLHttpRequest.responseURL property returns the serialized URL of the response or the empty string if the URL is null. If the URL is returned, any URL fragment present in the URL will be stripped away. The value of responseURL will be the final URL obtained after any redirects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/id",
    "pageType": "web-api-instance-property",
    "summary": "The id read-only property of the\nPublicKeyCredential interface is a string, inherited\nfrom Credential, which represents the identifier of the current\nPublicKeyCredential instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/response",
    "pageType": "web-api-instance-property",
    "summary": "The XMLHttpRequest\nresponse property returns the response's body content as\nan ArrayBuffer, a Blob, a Document,\na JavaScript Object, or a string, depending on the value\nof the request's responseType\nproperty."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest/responseXML",
    "pageType": "web-api-instance-property",
    "summary": "The XMLHttpRequest.responseXML read-only property returns\na Document containing the HTML or XML retrieved by the request; or\nnull if the request was unsuccessful, has not yet been sent, or if the data\ncan't be parsed as XML or HTML."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredential/response",
    "pageType": "web-api-instance-property",
    "summary": "The response read-only property of the\nPublicKeyCredential interface is an AuthenticatorResponse\nobject which is sent from the authenticator to the user agent for the creation/fetching\nof credentials. The information contained in this response will be used by the relying\nparty's server to verify the demand is legitimate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedLength",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedLength interface represents attributes of type <length> which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDocument",
    "pageType": "web-api-interface",
    "summary": "For historical reasons, Window objects have a window.HTMLDocument property whose value is the Document interface. So you can think of HTMLDocument as an alias for Document, and you can find documentation for HTMLDocument members under the documentation for the Document interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedLength/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal property of the SVGAnimatedLength interface contains the current value of an SVG enumeration. If there is no animation, it is the same value as the baseVal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskPriorityChangeEvent",
    "pageType": "web-api-interface",
    "summary": "The TaskPriorityChangeEvent is the interface for the prioritychange event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedLength/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal property of the SVGAnimatedLength interface contains the initial value of an SVG enumeration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskPriorityChangeEvent/previousPriority",
    "pageType": "web-api-instance-property",
    "summary": "The previousPriority read-only property of the TaskPriorityChangeEvent interface returns the priority of the corresponding TaskSignal before it was changed and this prioritychange event was emitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MouseScrollEvent",
    "pageType": "web-api-interface",
    "summary": "The MouseScrollEvent interface represents events that occur due to the user moving a mouse wheel or similar input device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskPriorityChangeEvent/TaskPriorityChangeEvent",
    "pageType": "web-api-constructor",
    "summary": "The TaskPriorityChangeEvent() constructor creates a new TaskPriorityChangeEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadHapticActuator",
    "pageType": "web-api-interface",
    "summary": "The GamepadHapticActuator interface of the Gamepad API represents hardware in the controller designed to provide haptic feedback to the user (if available), most commonly vibration hardware."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadHapticActuator/playEffect",
    "pageType": "web-api-instance-method",
    "summary": "The playEffect() method of the GamepadHapticActuator interface causes the hardware to play a specific vibration effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRPose",
    "pageType": "web-api-interface",
    "summary": "The VRPose interface of the WebVR API represents the state of a VR sensor at a given timestamp (which includes orientation, position, velocity, and acceleration information)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadHapticActuator/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the GamepadHapticActuator interface returns an enumerated value representing the type of the haptic hardware."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRPose/angularAcceleration",
    "pageType": "web-api-instance-property",
    "summary": "The angularAcceleration read-only property of the VRPose interface returns an array representing the angular acceleration vector of the VRDisplay at the current timestamp, in meters per second per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadHapticActuator/pulse",
    "pageType": "web-api-instance-method",
    "summary": "The pulse() method of the GamepadHapticActuator interface makes the hardware pulse at a certain intensity for a specified duration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRPose/position",
    "pageType": "web-api-instance-property",
    "summary": "The position read-only property of the VRPose interface returns the position of the VRDisplay at the current timestamp as a 3D vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadHapticActuator/reset",
    "pageType": "web-api-instance-method",
    "summary": "The reset() method of the GamepadHapticActuator interface stops the hardware from playing an active vibration effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRPose/orientation",
    "pageType": "web-api-instance-property",
    "summary": "The orientation read-only property of the VRPose interface returns the orientation of the sensor at the current timestamp, as a quaternion value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GamepadHapticActuator/effects",
    "pageType": "web-api-instance-property",
    "summary": "The effects read-only property of the GamepadHapticActuator interface returns an array of enumerated values representing the different haptic effects that the actuator supports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRPose/linearAcceleration",
    "pageType": "web-api-instance-property",
    "summary": "The linearAcceleration read-only property of the VRPose interface returns an array representing the linear acceleration vector of the VRDisplay at the current timestamp, in meters per second per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder",
    "pageType": "web-api-interface",
    "summary": "The ImageDecoder interface of the WebCodecs API provides a way to unpack and decode encoded image data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRPose/angularVelocity",
    "pageType": "web-api-instance-property",
    "summary": "The angularVelocity read-only property of the VRPose interface returns an array representing the angular velocity vector of the VRDisplay at the current timestamp, in radians per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the ImageDecoder interface reflects the MIME type configured during construction."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder/tracks",
    "pageType": "web-api-instance-property",
    "summary": "The tracks read-only property of the ImageDecoder interface returns a list of the tracks in the encoded image data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRPose/linearVelocity",
    "pageType": "web-api-instance-property",
    "summary": "The linearVelocity read-only property of the VRPose interface returns an array representing the linear velocity vector of the VRDisplay at the current timestamp, in meters per second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder/decode",
    "pageType": "web-api-instance-method",
    "summary": "The decode() method of the ImageDecoder interface enqueues a control message to decode the frame of an image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder/completed",
    "pageType": "web-api-instance-property",
    "summary": "The completed read-only property of the ImageDecoder interface returns a promise that resolves once encoded data has finished buffering."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_vertex_array_object",
    "pageType": "webgl-extension",
    "summary": "The OES_vertex_array_object extension is part of the WebGL API and provides vertex array objects (VAOs) which encapsulate vertex array states. These objects keep pointers to vertex data and provide names for different sets of vertex data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder/reset",
    "pageType": "web-api-instance-method",
    "summary": "The reset() method of the ImageDecoder interface aborts all pending decode() operations; rejecting all pending promises. All other state will be unchanged. Class methods can continue to be invoked after reset(). E.g., calling decode() after reset() is permitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_vertex_array_object/deleteVertexArrayOES",
    "pageType": "webgl-extension-method",
    "summary": "The OES_vertex_array_object.deleteVertexArrayOES() method\nof the WebGL API deletes a given\nWebGLVertexArrayObject object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder/complete",
    "pageType": "web-api-instance-property",
    "summary": "The complete read-only property of the ImageDecoder interface returns true if encoded data has completed buffering."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_vertex_array_object/bindVertexArrayOES",
    "pageType": "webgl-extension-method",
    "summary": "The OES_vertex_array_object.bindVertexArrayOES() method\nof the WebGL API binds a\npassed WebGLVertexArrayObject object to the buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the ImageDecoder interface ends all pending work and releases system resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_vertex_array_object/isVertexArrayOES",
    "pageType": "webgl-extension-method",
    "summary": "The OES_vertex_array_object.isVertexArrayOES() method of\nthe WebGL API returns true if\nthe passed object is a WebGLVertexArrayObject object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder/ImageDecoder",
    "pageType": "web-api-constructor",
    "summary": "The ImageDecoder() constructor creates a new ImageDecoder object which unpacks and decodes image data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ImageDecoder/isTypeSupported_static",
    "pageType": "web-api-static-method",
    "summary": "The ImageDecoder.isTypeSupported() static method checks if a given MIME type can be decoded by the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_vertex_array_object/createVertexArrayOES",
    "pageType": "webgl-extension-method",
    "summary": "The OES_vertex_array_object.createVertexArrayOES() method\nof the WebGL API creates and initializes a\nWebGLVertexArrayObject object that represents a vertex array object (VAO)\npointing to vertex array data and which provides names for different sets of vertex\ndata."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Presentation_API",
    "pageType": "web-api-overview",
    "summary": "The Presentation API lets a user agent (such as a Web browser) effectively display web content through large presentation devices such as projectors and network-connected televisions. Supported types of multimedia devices include both displays which are wired using HDMI, DVI, or the like, or wireless, using DLNA, Chromecast, AirPlay, or Miracast."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPolygonElement",
    "pageType": "web-api-interface",
    "summary": "The SVGPolygonElement interface provides access to the properties of <polygon> elements, as well as methods to manipulate them."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EyeDropper_API",
    "pageType": "web-api-overview",
    "summary": "The EyeDropper API provides a mechanism for creating an eyedropper tool. Using this tool, users can sample colors from their screens, including outside of the browser window."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPolygonElement/points",
    "pageType": "web-api-instance-property",
    "summary": "The points read-only property of the SVGPolygonElement interface reflects the base (i.e., static) value of the element's points attribute. Modifications via the SVGPointList object are reflected in the points attribute, and vice versa."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchManager",
    "pageType": "web-api-interface",
    "summary": "The BackgroundFetchManager interface of the Background Fetch API is a map where the keys are background fetch IDs and the values are BackgroundFetchRegistration objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPolygonElement/animatedPoints",
    "pageType": "web-api-instance-property",
    "summary": "The animatedPoints read-only property of the SVGPolygonElement interface reflects the animated value of the element's points attribute. If the points attribute is not being animated, it contains the same value as the points property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchManager/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the BackgroundFetchManager interface returns a Promise that resolves with the BackgroundFetchRegistration associated with the provided id or undefined if the id is not found."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchLaterResult",
    "pageType": "web-api-interface",
    "summary": "The FetchLaterResult interface of the fetchLater() API is returned by the Window.fetchLater() method after a deferred fetch has been created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchManager/fetch",
    "pageType": "web-api-instance-method",
    "summary": "The fetch() method of the BackgroundFetchManager interface initiates a background fetch operation, given one or more URLs or Request objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchManager/getIds",
    "pageType": "web-api-instance-method",
    "summary": "The getIds() method of the BackgroundFetchManager interface returns the IDs of all registered background fetches."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FetchLaterResult/activated",
    "pageType": "web-api-instance-property",
    "summary": "The activated read-only property of the FetchLaterResult interface returns a boolean specifying whether the deferred fetch has been sent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_sRGB",
    "pageType": "webgl-extension",
    "summary": "The EXT_sRGB extension is part of the WebGL API and adds sRGB support to textures and framebuffer objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceArray",
    "pageType": "web-api-interface",
    "summary": "The interface XRInputSourceArray represents a live list of WebXR input sources, and is used as the return value of the XRSession property inputSources. Each entry is an XRInputSource representing one input device connected to the WebXR system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BarProp",
    "pageType": "web-api-interface",
    "summary": "The BarProp interface of the Document Object Model represents the web browser user interface elements that are exposed to scripts in web pages. Each of the following interface elements are represented by a BarProp object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceArray/entries",
    "pageType": "web-api-instance-method",
    "summary": "The XRInputSourceArray interface's\nentries() method returns a JavaScript\niterator\nwhich can then be used to iterate over the key/value pairs in the input source\narray. Each item in the array is an XRInputSource object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BarProp/visible",
    "pageType": "web-api-instance-property",
    "summary": "The visible read-only property of the BarProp interface returns true if the user interface element it represents is visible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SnapEvent",
    "pageType": "web-api-interface",
    "summary": "The SnapEvent interface defines the event object for the scrollsnapchanging and scrollsnapchange events. Respectively, these fire on a scroll container when the browser determines that a new scroll snap target is pending (will be selected when the current scroll gesture ends), and when a new snap target is selected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceArray/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property returns an integer value\nindicating the number of items in the input source list represented by\nthe XRInputSourceArray object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SnapEvent/SnapEvent",
    "pageType": "web-api-constructor",
    "summary": "The SnapEvent() constructor creates a new\nSnapEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceArray/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method in the\nXRInputSourceArray interface returns a JavaScript\niterator\nwhich can then be used to iterate over the keys used to reference each item in the array\nof input sources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SnapEvent/snapTargetInline",
    "pageType": "web-api-instance-property",
    "summary": "The snapTargetInline read-only property of the\nSnapEvent interface returns a reference to the element snapped to in the inline direction when the event fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SnapEvent/snapTargetBlock",
    "pageType": "web-api-instance-property",
    "summary": "The snapTargetBlock read-only property of the\nSnapEvent interface returns a reference to the element snapped to in the block direction when the event fired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceArray/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The XRInputSourceArray\nmethod forEach() executes the specified callback once for\neach input source in the array, starting at index 0 and progressing until the end of the\nlist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WakeLock",
    "pageType": "web-api-interface",
    "summary": "The WakeLock interface of the Screen Wake Lock API can be used to request a lock that prevents device screens from dimming or locking when an application needs to keep running."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSourceArray/values",
    "pageType": "web-api-instance-method",
    "summary": "The XRInputSourceArray\nmethod values() returns a JavaScript\niterator\nthat can walk over the list of XRInputSource objects contained in the\narray, from first to last."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WakeLock/request",
    "pageType": "web-api-instance-method",
    "summary": "The request() method of the WakeLock interface returns a Promise that fulfills with a WakeLockSentinel object if the system screen wake lock is granted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageSwapEvent",
    "pageType": "web-api-interface",
    "summary": "The PageSwapEvent event object is made available inside handler functions for the pageswap event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageSwapEvent/viewTransition",
    "pageType": "web-api-instance-property",
    "summary": "The viewTransition read-only property of the PageRevealEvent interface contains a ViewTransition object representing the active view transition for the cross-document navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property readyState returns a string which indicates the state of the data channel's underlying data connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel",
    "pageType": "web-api-interface",
    "summary": "The RTCDataChannel interface represents a network channel which can be used for bidirectional peer-to-peer transfers of arbitrary data. Every data channel is associated with an RTCPeerConnection, and each peer connection can have up to a theoretical maximum of 65,534 data channels (the actual limit may vary from browser to browser)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageSwapEvent/activation",
    "pageType": "web-api-instance-property",
    "summary": "The activation read-only property of the PageSwapEvent interface contains a NavigationActivation object containing the navigation type and current and destination document history entries for a same-origin navigation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/open_event",
    "pageType": "web-api-event",
    "summary": "The WebRTC open event is sent to an RTCDataChannel object's onopen event handler when the underlying transport used to send and receive the data channel's messages is opened or reopened."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PageSwapEvent/PageSwapEvent",
    "pageType": "web-api-constructor",
    "summary": "The PageSwapEvent() constructor creates a new\nPageSwapEvent object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/close_event",
    "pageType": "web-api-event",
    "summary": "The close event is sent to the onclose event handler on an RTCDataChannel instance when the data transport for the data channel has closed. Before any further data can be transferred using RTCDataChannel, a new 'RTCDataChannel' instance must be created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/getNotifications",
    "pageType": "web-api-instance-method",
    "summary": "The getNotifications() method of\nthe ServiceWorkerRegistration interface returns a list of the\nnotifications in the order that they were created from the current origin via the\ncurrent service worker registration. Origins can have many active but\ndifferently-scoped service worker registrations. Notifications created by one service\nworker on the same origin will not be available to other active service workers on\nthat same origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/label",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property label\nreturns a string containing a name describing the data channel. These\nlabels are not required to be unique."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration",
    "pageType": "web-api-interface",
    "summary": "The ServiceWorkerRegistration interface of the Service Worker API represents the service worker registration. You register a service worker to control one or more pages that share the same origin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/scope",
    "pageType": "web-api-instance-property",
    "summary": "The scope read-only property of the ServiceWorkerRegistration interface returns a string representing a URL that defines a service worker's registration scope; that is, the range of URLs a service worker can control. This is set using the scope parameter specified in the call to ServiceWorkerContainer.register() which registered the service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/message_event",
    "pageType": "web-api-event",
    "summary": "The WebRTC message event is sent to the onmessage event handler on an RTCDataChannel object when a message has been received from the remote peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/unregister",
    "pageType": "web-api-instance-method",
    "summary": "The unregister() method of the\nServiceWorkerRegistration interface unregisters the service worker\nregistration and returns a Promise. The promise will resolve to\nfalse if no registration was found, otherwise it resolves to\ntrue irrespective of whether unregistration happened or not (it may not\nunregister if someone else just called ServiceWorkerContainer.register()\nwith the same scope.) The service worker will finish any ongoing operations before it is\nunregistered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/reliable",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property\nreliable indicates whether or not the data channel is\nreliable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification",
    "pageType": "web-api-instance-method",
    "summary": "The showNotification() method of the\nServiceWorkerRegistration interface creates a notification on an active\nservice worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/maxRetransmits",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property\nmaxRetransmits returns the maximum number of times the\nbrowser should try to retransmit a message before giving up, as set when the data\nchannel was created, or null, which indicates that there is no\nmaximum. This can only be set when the RTCDataChannel is created\nby calling RTCPeerConnection.createDataChannel(), using the\nmaxRetransmits field in the specified options."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/paymentManager",
    "pageType": "web-api-instance-property",
    "summary": "The paymentManager read-only property of the\nServiceWorkerRegistration interface returns a payment app's PaymentManager instance, which is used to manage various payment app functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/sync",
    "pageType": "web-api-instance-property",
    "summary": "The sync read-only property of the\nServiceWorkerRegistration interface returns a reference to the\nSyncManager interface, which manages background synchronization\nprocesses."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/binaryType",
    "pageType": "web-api-instance-property",
    "summary": "The property binaryType on the\nRTCDataChannel interface is a string which specifies\nthe type of object which should be used to represent binary data received\non the RTCDataChannel. Values allowed by the\nWebSocket.binaryType property are also permitted here:\nblob if Blob objects are being used or\narraybuffer if ArrayBuffer objects are being used. The\ndefault is arraybuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/cookies",
    "pageType": "web-api-instance-property",
    "summary": "The cookies read-only property of the ServiceWorkerRegistration interface returns a reference to the CookieStoreManager interface, which enables a web app to subscribe to and unsubscribe from cookie change events in a service worker. This is an entry point for the Cookie Store API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/send",
    "pageType": "web-api-instance-method",
    "summary": "The send() method of the\nRTCDataChannel interface sends data across the data channel to the\nremote peer.\nThis can be done any time except during the initial process of\ncreating the underlying transport channel. Data sent before connecting is buffered if\npossible (or an error occurs if it's not possible), and is also buffered if sent while\nthe connection is closing or closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/waiting",
    "pageType": "web-api-instance-property",
    "summary": "The waiting read-only property of the\nServiceWorkerRegistration interface returns a service worker whose\nServiceWorker.state is installed. This property is initially\nset to null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/bufferedAmount",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property\nbufferedAmount returns the number of bytes of data\ncurrently queued to be sent over the data channel. The queue may build up as a\nresult of calls to the send() method. This only\nincludes data buffered by the user agent itself; it doesn't include any framing overhead\nor buffering done by the operating system or network hardware."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/updateViaCache",
    "pageType": "web-api-instance-property",
    "summary": "The updateViaCache read-only property of the ServiceWorkerRegistration interface returns the value of the setting used to determine the circumstances in which the browser will consult the HTTP cache when it tries to update the service worker or any scripts that are imported via importScripts()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property\nprotocol returns a string containing the\nname of the subprotocol in use. If no protocol was specified when the data channel was\ncreated, then this property's value is the empty string (\"\")."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/index",
    "pageType": "web-api-instance-property",
    "summary": "The index read-only property of the\nServiceWorkerRegistration interface returns a reference to the\nContentIndex interface, which allows for indexing of offline content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/close",
    "pageType": "web-api-instance-method",
    "summary": "The RTCDataChannel.close() method closes the\nRTCDataChannel. Either peer is permitted to call this method to initiate\nclosure of the channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/backgroundFetch",
    "pageType": "web-api-instance-property",
    "summary": "The backgroundFetch read-only property of the\nServiceWorkerRegistration interface returns a reference to a\nBackgroundFetchManager object, which can be used to initiate background fetch operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/active",
    "pageType": "web-api-instance-property",
    "summary": "The active read-only property of the\nServiceWorkerRegistration interface returns a service worker whose\nServiceWorker.state is activating or activated.\nThis property is initially set to null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/negotiated",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property\nnegotiated indicates whether the\nRTCDataChannel's connection was negotiated by the Web app\n(true) or by the WebRTC layer (false). The\ndefault is false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/pushManager",
    "pageType": "web-api-instance-property",
    "summary": "The pushManager read-only property of the\nServiceWorkerRegistration interface returns a reference to the\nPushManager interface for managing push subscriptions; this includes\nsupport for subscribing, getting an active subscription, and accessing push permission\nstatus."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/maxPacketLifeTime",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property\nmaxPacketLifeTime returns the amount of time, in\nmilliseconds, the browser is allowed to take to attempt to transmit a message, as set\nwhen the data channel was created, or null. This limits how long\nthe browser can continue to attempt to transmit and retransmit the message before giving\nup."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/updatefound_event",
    "pageType": "web-api-event",
    "summary": "The updatefound event of the\nServiceWorkerRegistration interface is fired any time the ServiceWorkerRegistration.installing property acquires a new service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/bufferedAmountLowThreshold",
    "pageType": "web-api-instance-property",
    "summary": "The RTCDataChannel property\nbufferedAmountLowThreshold is used to specify the number\nof bytes of buffered outgoing data that is considered \"low.\" The default value is\n0. When the number of buffered outgoing bytes, as indicated by the\nbufferedAmount property, falls to or\nbelow this value, a bufferedamountlow event is fired. This event may be\nused, for example, to implement code which queues more messages to be sent whenever\nthere's room to buffer them. Listeners may be added with\nonbufferedamountlow or\naddEventListener()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/navigationPreload",
    "pageType": "web-api-instance-property",
    "summary": "The navigationPreload read-only property of the ServiceWorkerRegistration interface returns the NavigationPreloadManager associated with the current service worker registration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/installing",
    "pageType": "web-api-instance-property",
    "summary": "The installing read-only property of the\nServiceWorkerRegistration interface returns a service worker whose\nServiceWorker.state is installing. This property is\ninitially set to null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/bufferedamountlow_event",
    "pageType": "web-api-event",
    "summary": "A bufferedamountlow event is sent to an RTCDataChannel when the number of bytes currently in the outbound data transfer buffer (bufferedAmount) falls from above to below or equal the threshold specified in bufferedAmountLowThreshold."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/update",
    "pageType": "web-api-instance-method",
    "summary": "The update() method of the\nServiceWorkerRegistration interface attempts to update the service\nworker. It fetches the worker's script URL, and if the new worker is not byte-by-byte\nidentical to the current worker, it installs the new worker. The fetch of the worker\nbypasses any browser caches if the previous fetch occurred over 24 hours ago."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/closing_event",
    "pageType": "web-api-event",
    "summary": "The closing event is sent to an RTCDataChannel just before the channel begins the process of shutting down its underlying data transport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerRegistration/periodicSync",
    "pageType": "web-api-instance-property",
    "summary": "The periodicSync read-only property of\nthe ServiceWorkerRegistration interface returns a reference to the\nPeriodicSyncManager interface, which allows for registering of tasks to\nrun at specific intervals."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/error_event",
    "pageType": "web-api-event",
    "summary": "A WebRTC error event is sent to an RTCDataChannel object's onerror event handler when an error occurs on the data channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedBoolean",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedBoolean interface is used for attributes of type boolean which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/id",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property\nid returns an ID number (between 0 and 65,534) which\nuniquely identifies the RTCDataChannel. This ID is set at the\ntime the data channel is created, either by the user agent (if\nRTCDataChannel.negotiated is false) or by the site or app\nscript (if negotiated is true)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedBoolean/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal read-only property of the SVGAnimatedBoolean interface represents the current animated value of the associated animatable boolean SVG attribute. If the attribute is not animated, animVal is the same as SVGAnimatedBoolean.baseVal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDataChannel/ordered",
    "pageType": "web-api-instance-property",
    "summary": "The read-only RTCDataChannel property ordered indicates\nwhether or not the data channel guarantees in-order delivery of messages;\nthe default is true,\nwhich indicates that the data channel is indeed ordered.\nThis is set when the RTCDataChannel is created,\nby setting the ordered property\non the object passed as RTCPeerConnection.createDataChannel()'s options parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedBoolean/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal property of the SVGAnimatedBoolean interface is the value of the associated animatable boolean SVG attribute in its base (none-animated) state. It reflects the value of the associated animatable boolean attribute when no animations are applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLStyleElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLStyleElement interface represents a <style> element. It inherits properties and methods from its parent, HTMLElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGeometryElement",
    "pageType": "web-api-interface",
    "summary": "The SVGGeometryElement interface represents SVG elements whose rendering is defined by geometry with an equivalent path, and which can be filled and stroked. This includes paths and the basic shapes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLStyleElement/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLStyleElement.disabled property can be used to get and set whether the stylesheet is disabled (true) or not (false)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGeometryElement/getTotalLength",
    "pageType": "web-api-instance-method",
    "summary": "The SVGGeometryElement.getTotalLength() method returns\nthe user agent's computed value for the total length of the path in user units."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGeometryElement/pathLength",
    "pageType": "web-api-instance-property",
    "summary": "The SVGGeometryElement.pathLength property reflects the\npathLength attribute and returns the total length of the path, in user units."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLStyleElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLStyleElement.type property returns the type of the current style.\nThe value mirrors the HTML <style> element's type attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGeometryElement/isPointInStroke",
    "pageType": "web-api-instance-method",
    "summary": "The isPointInStroke() method of the SVGGeometryElement interface determines whether a given point is within the stroke shape of an element. The point argument is interpreted as a point in the local coordinate system of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLStyleElement/blocking",
    "pageType": "web-api-instance-property",
    "summary": "The blocking property of the HTMLStyleElement interface is a string indicating that certain operations should be blocked on the fetching of critical subresources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGeometryElement/getPointAtLength",
    "pageType": "web-api-instance-method",
    "summary": "The\nSVGGeometryElement.getPointAtLength() method returns the\npoint at a given distance along the path."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLStyleElement/sheet",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sheet property of the HTMLStyleElement interface\ncontains the stylesheet associated with that element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGGeometryElement/isPointInFill",
    "pageType": "web-api-instance-method",
    "summary": "The isPointInFill() method of the SVGGeometryElement interface determines whether a given point is within the fill shape of an element. The point argument is interpreted as a point in the local coordinate system of the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDTMFSender",
    "pageType": "web-api-interface",
    "summary": "The RTCDTMFSender interface provides a mechanism for transmitting DTMF codes on a WebRTC RTCPeerConnection. You gain access to the connection's RTCDTMFSender through the RTCRtpSender.dtmf property on the audio track you wish to send DTMF with."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLStyleElement/media",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLStyleElement.media property specifies the\nintended destination medium for style information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDTMFSender/toneBuffer",
    "pageType": "web-api-instance-property",
    "summary": "The RTCDTMFSender interface's toneBuffer property returns a string\ncontaining a list of the DTMF tones currently queued for sending to the\nremote peer over the RTCPeerConnection. To place tones into the buffer,\ncall insertDTMF()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomElementRegistry",
    "pageType": "web-api-interface",
    "summary": "The CustomElementRegistry interface provides methods for registering custom elements and querying registered elements. To get an instance of it, use the window.customElements property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDTMFSender/tonechange_event",
    "pageType": "web-api-event",
    "summary": "The tonechange event is sent to an RTCDTMFSender by the WebRTC API to indicate when DTMF tones previously queued for sending (by calling RTCDTMFSender.insertDTMF()) begin and end."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDTMFSender/canInsertDTMF",
    "pageType": "web-api-instance-property",
    "summary": "The canInsertDTMF read-only property of the RTCDTMFSender interface returns a boolean value which indicates whether the RTCDTMFSender is capable of sending DTMF tones over the RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomElementRegistry/getName",
    "pageType": "web-api-instance-method",
    "summary": "The getName() method of the\nCustomElementRegistry interface returns the name for a\npreviously-defined custom element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCDTMFSender/insertDTMF",
    "pageType": "web-api-instance-method",
    "summary": "The insertDTMF() method of the RTCDTMFSender interface sends DTMF tones to the remote peer over the RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomElementRegistry/upgrade",
    "pageType": "web-api-instance-method",
    "summary": "The upgrade() method of the\nCustomElementRegistry interface upgrades all shadow-containing custom\nelements in a Node subtree, even before they are connected to the main\ndocument."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomElementRegistry/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the\nCustomElementRegistry interface returns the constructor for a\npreviously-defined custom element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/noiseSuppression",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\nnoiseSuppression property is a read-only Boolean value\nwhich is present (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the noiseSuppression\nconstraint. If the constraint isn't supported, it's not included in the list, so this\nvalue will never be false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomElementRegistry/define",
    "pageType": "web-api-instance-method",
    "summary": "The define() method of the CustomElementRegistry interface adds a definition for a custom element to the custom element registry, mapping its name to the constructor which will be used to create it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/logicalSurface",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's logicalSurface property indicates whether or not the logicalSurface constraint is supported by the user agent and the device on which the content is being used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomElementRegistry/whenDefined",
    "pageType": "web-api-instance-method",
    "summary": "The whenDefined() method of the\nCustomElementRegistry interface returns a Promise that\nresolves when the named element is defined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints",
    "pageType": "web-api-interface",
    "summary": "The MediaTrackSupportedConstraints dictionary establishes the list of constrainable properties recognized by the user agent or browser in its implementation of the MediaStreamTrack object. An object conforming to MediaTrackSupportedConstraints is returned by MediaDevices.getSupportedConstraints()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedInteger",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedInteger interface is used for attributes of basic type <integer> which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/restrictOwnAudio",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's restrictOwnAudio property is a read-only boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the restrictOwnAudio constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedInteger/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal property of the SVGAnimatedInteger interface represents the animated value of an <integer>. If no animation is applied, animVal equals baseVal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/sampleRate",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\nsampleRate property is a read-only Boolean value which is\npresent (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the sampleRate constraint. If the\nconstraint isn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedInteger/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal property of the SVGAnimatedInteger interface represents the base (non-animated) value of an animatable <integer>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/deviceId",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\ndeviceId property is a read-only Boolean value which is\npresent (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the deviceId constraint. If the\nconstraint isn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/suppressLocalAudioPlayback",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's suppressLocalAudioPlayback property indicates whether or not the suppressLocalAudioPlayback constraint is supported by the user agent and the device on which the content is being used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTSpanElement",
    "pageType": "web-api-interface",
    "summary": "The SVGTSpanElement interface represents a <tspan> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/frameRate",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's frameRate property is a read-only Boolean value which is\npresent (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the frameRate constraint."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NetworkInformation/change_event",
    "pageType": "web-api-event",
    "summary": "The change event of the NetworkInformation interface fires when connection information changes, and the event is received by the NetworkInformation object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/volume",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\nvolume property is a read-only Boolean value which is\npresent (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the volume constraint. If the\nconstraint isn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NetworkInformation",
    "pageType": "web-api-interface",
    "summary": "The NetworkInformation interface of the Network Information API provides information about the connection a device is using to communicate with the network and provides a means for scripts to be notified if the connection type changes.\nThe NetworkInformation interface cannot be instantiated. It is instead accessed through the connection property of the Navigator interface or the WorkerNavigator interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/latency",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's latency property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the latency constraint.\nIf the constraint isn't supported, it's not included in the list, so this value will never be false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NetworkInformation/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the NetworkInformation interface returns the type of connection a device is using to communicate with the network."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/channelCount",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\nchannelCount property is a read-only Boolean value which\nis present (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the channelCount constraint. If the\nconstraint isn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NetworkInformation/downlinkMax",
    "pageType": "web-api-instance-property",
    "summary": "The downlinkMax read-only property of the NetworkInformation interface returns the maximum downlink speed, in megabits per second (Mbps), for the underlying connection technology."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/echoCancellation",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\nechoCancellation property is a read-only Boolean value\nwhich is present (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the echoCancellation constraint. If the\nconstraint isn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NetworkInformation/downlink",
    "pageType": "web-api-instance-property",
    "summary": "The downlink read-only property of the\nNetworkInformation interface returns the effective bandwidth estimate in\nmegabits per second, rounded to the nearest multiple of 25 kilobits per seconds. This\nvalue is based on recently observed application layer throughput across recently active\nconnections, excluding connections made to a private address space. In the absence of\nrecent bandwidth measurement data, the attribute value is determined by the properties\nof the underlying connection technology."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/sampleSize",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\nsampleSize property is a read-only Boolean value which is\npresent (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the sampleSize constraint. If the\nconstraint isn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NetworkInformation/effectiveType",
    "pageType": "web-api-instance-property",
    "summary": "The effectiveType read-only property of the\nNetworkInformation interface returns the effective type of the connection\nmeaning one of slow-2g, 2g, 3g, or 4g. This value is determined using a\ncombination of recently observed, round-trip time and downlink values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/aspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's aspectRatio property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the aspectRatio constraint.\nIf the constraint isn't supported, it's not included in the list, so this value will never be false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/groupId",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\ngroupId property is a read-only Boolean value which is\npresent (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the groupId constraint. If the\nconstraint isn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NetworkInformation/saveData",
    "pageType": "web-api-instance-property",
    "summary": "The saveData read-only\nproperty of the NetworkInformation interface returns true if the user has set a reduced data usage option on the user agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/height",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\nheight property is a read-only Boolean value which is\npresent (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the height constraint. If the\nconstraint isn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NetworkInformation/rtt",
    "pageType": "web-api-instance-property",
    "summary": "The rtt read-only property of the NetworkInformation interface returns the estimated effective round-trip time of the current connection, rounded to the nearest multiple of 25 milliseconds.\nThis value is based on recently observed application-layer RTT measurements across recently active connections.\nIt excludes connections made to a private address space.\nIf no recent measurement data is available, the value is based on the properties of the underlying connection technology."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/facingMode",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\nfacingMode property is a read-only Boolean value which is\npresent (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the facingMode constraint. If the\nconstraint isn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDetailsElement/name",
    "pageType": "web-api-instance-property",
    "summary": "The name property of the HTMLDetailsElement interface reflects the name attribute of <details> elements. It enables multiple <details> elements to be connected together, where only one for the <details> elements can be open at once. This allows developers to easily create UI features such as accordions without scripting."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/width",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's\nwidth property is a read-only Boolean value which is\npresent (and set to true) in the object returned by\nMediaDevices.getSupportedConstraints() if and only if the\nuser agent supports the width constraint. If the constraint\nisn't supported, it's not included in the list, so this value will never be\nfalse."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDetailsElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLDetailsElement interface provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <details> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/autoGainControl",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's autoGainControl property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the autoGainControl constraint.\nIf the constraint isn't supported, it's not included in the list, so this value will never be false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLDetailsElement/open",
    "pageType": "web-api-instance-property",
    "summary": "The open property of the\nHTMLDetailsElement interface is a boolean value reflecting the\nopen HTML attribute, indicating whether the <details>'s contents (not counting the <summary>) is to be shown to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaTrackSupportedConstraints/displaySurface",
    "pageType": "web-api-instance-property",
    "summary": "The MediaTrackSupportedConstraints dictionary's displaySurface property indicates whether or not the displaySurface constraint is supported by the user agent and the device on which the content is being used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUError",
    "pageType": "web-api-interface",
    "summary": "The GPUError interface of the WebGPU API is the base interface for errors surfaced by GPUDevice.popErrorScope and the uncapturederror event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUSampler",
    "pageType": "web-api-interface",
    "summary": "The GPUSampler interface of the WebGPU API represents an object that can control how shaders transform and filter texture resource data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUError/message",
    "pageType": "web-api-instance-property",
    "summary": "The message read-only property of the\nGPUError interface provides a human-readable message that explains why the error occurred."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUSampler/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUSampler interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Viewport",
    "pageType": "web-api-interface",
    "summary": "The Viewport interface of the Viewport Segments API represents the device's viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue",
    "pageType": "web-api-interface",
    "summary": "The CSSNumericValue interface of the CSS Typed Object Model API represents operations that all numeric values can perform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Viewport/segments",
    "pageType": "web-api-instance-property",
    "summary": "The segments read-only property of the Viewport interface returns an array of DOMRect objects representing the position and dimensions of each viewport segment within the overall display."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/add",
    "pageType": "web-api-instance-method",
    "summary": "The add() method of the\nCSSNumericValue interface adds a supplied number to the\nCSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Idle_Detection_API",
    "pageType": "web-api-overview",
    "summary": "The Idle Detection API provides a means to detect the user's idle status, active, idle, and locked, specifically, and to be notified of changes to idle status without polling from a script."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/type",
    "pageType": "web-api-instance-method",
    "summary": "The type() method of the\nCSSNumericValue interface returns the type of\nCSSNumericValue, one of angle, flex,\nfrequency, length, resolution,\npercent, percentHint, or time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCStatsReport",
    "pageType": "web-api-interface",
    "summary": "The RTCStatsReport interface of the WebRTC API provides a statistics report for a RTCPeerConnection, RTCRtpSender, or RTCRtpReceiver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/toSum",
    "pageType": "web-api-instance-method",
    "summary": "The toSum() method of the\nCSSNumericValue interface converts the object's value to a\nCSSMathSum object to values of the specified unit."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCStatsReport/entries",
    "pageType": "web-api-instance-method",
    "summary": "The entries() method of the RTCStatsReport interface returns a new iterator object that can be used to iterate through the key/value pairs for each element in the RTCStatsReport object, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCStatsReport/size",
    "pageType": "web-api-instance-property",
    "summary": "The size read-only property of the RTCStatsReport interface returns the number of items in the current report."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/min",
    "pageType": "web-api-instance-method",
    "summary": "The min() method of the\nCSSNumericValue interface returns the lowest value from among those\nvalues passed. The passed values must be of the same type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCStatsReport/Symbol.iterator",
    "pageType": "web-api-instance-method",
    "summary": "The [Symbol.iterator]() method of the RTCStatsReport interface implements the iterable protocol and allows statistics reports to be consumed by most syntaxes expecting iterables, such as the spread syntax and for...of loops.\nIt returns an iterator object that yields the key-value pairs of the report in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/mul",
    "pageType": "web-api-instance-method",
    "summary": "The mul() method of the\nCSSNumericValue interface multiplies the CSSNumericValue by\nthe supplied value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/max",
    "pageType": "web-api-instance-method",
    "summary": "The max() method of the\nCSSNumericValue interface returns the highest value from among the values\npassed. The passed values must be of the same type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCStatsReport/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the RTCStatsReport interface returns a specified element from an RTCStatsReport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/equals",
    "pageType": "web-api-instance-method",
    "summary": "The equals() method of the\nCSSNumericValue interface returns a boolean indicating whether the passed\nvalue are strictly equal. To return a value of true, all passed values must\nbe of the same type and value and must be in the same order. This allows structural\nequality to be tested quickly."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCStatsReport/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the RTCStatsReport interface returns a boolean indicating whether a report contains a statistics dictionary with the specified id."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/div",
    "pageType": "web-api-instance-method",
    "summary": "The div() method of the\nCSSNumericValue interface divides the CSSNumericValue by the\nsupplied value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/to",
    "pageType": "web-api-instance-method",
    "summary": "The to() method of the\nCSSNumericValue interface converts a numeric value from one unit to\nanother."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCStatsReport/keys",
    "pageType": "web-api-instance-method",
    "summary": "The keys() method of the RTCStatsReport interface returns a new iterator object that can be used to iterate through the keys for each element in the RTCStatsReport object, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/parse_static",
    "pageType": "web-api-static-method",
    "summary": "The parse() static method of the\nCSSNumericValue interface converts a value string into an object whose\nmembers are value and the units."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCStatsReport/forEach",
    "pageType": "web-api-instance-method",
    "summary": "The forEach() method of the RTCStatsReport interface executes a provided function once for each key/value pair in the RTCStatsReport object, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericValue/sub",
    "pageType": "web-api-instance-method",
    "summary": "The sub() method of the\nCSSNumericValue interface subtracts a supplied number from the\nCSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCStatsReport/values",
    "pageType": "web-api-instance-method",
    "summary": "The values() method of the RTCStatsReport interface returns a new iterator object that can be used to iterate through the values for each element in the RTCStatsReport object, in insertion order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PresentationConnectionCloseEvent",
    "pageType": "web-api-interface",
    "summary": "The PresentationConnectionCloseEvent interface of the Presentation API is fired on a PresentationConnection when it is closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Path2D",
    "pageType": "web-api-interface",
    "summary": "The Path2D interface of the Canvas 2D API is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/border",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.border property represents the\nborder width of the <table> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Path2D/addPath",
    "pageType": "web-api-instance-method",
    "summary": "The Path2D.addPath() method\nof the Canvas 2D API adds one Path2D object to another\nPath2D object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTableElement interface provides special properties and methods (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/align",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.align property represents the\nalignment of the table."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Path2D/Path2D",
    "pageType": "web-api-constructor",
    "summary": "The Path2D() constructor returns a newly instantiated\nPath2D object, optionally with another path as an argument (creates a\ncopy), or optionally with a string consisting of SVG path data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/bgColor",
    "pageType": "web-api-instance-property",
    "summary": "The bgcolor property of the HTMLTableElement represents the\nbackground color of the table."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/createTBody",
    "pageType": "web-api-instance-method",
    "summary": "The createTBody() method of\nHTMLTableElement objects creates and returns a new\n<tbody> element associated with a given <table>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioNode",
    "pageType": "web-api-interface",
    "summary": "The AudioNode interface is a generic interface for representing an audio processing module."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/frame",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement interface's frame\nproperty is a string that indicates which of the table's exterior borders should be\ndrawn."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioNode/numberOfInputs",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfInputs property of\nthe AudioNode interface returns the number of inputs feeding the\nnode. Source nodes are defined as nodes having a numberOfInputs\nproperty with a value of 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/deleteRow",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLTableElement.deleteRow() method removes a\nspecific row (<tr>) from a given <table>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioNode/numberOfOutputs",
    "pageType": "web-api-instance-property",
    "summary": "The numberOfOutputs property of\nthe AudioNode interface returns the number of outputs coming out of\nthe node. Destination nodes — like AudioDestinationNode — have\na value of 0 for this attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/tFoot",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.tFoot property represents the\n<tfoot> element of a <table>. Its value will be\nnull if there is no such element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/createTFoot",
    "pageType": "web-api-instance-method",
    "summary": "The createTFoot() method of\nHTMLTableElement objects returns the <tfoot> element\nassociated with a given <table>. If no footer exists in the table, this\nmethod creates it, and then returns it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioNode/channelCountMode",
    "pageType": "web-api-instance-property",
    "summary": "The channelCountMode property of the AudioNode interface represents an enumerated value describing the way channels must be matched between the node's inputs and outputs."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/caption",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.caption property represents the\ntable caption. If no caption element is associated with the table, this property is\nnull."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioNode/channelCount",
    "pageType": "web-api-instance-property",
    "summary": "The channelCount property of the AudioNode interface represents an integer used to determine how many channels are used when up-mixing and down-mixing connections to any inputs to the node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/deleteTHead",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLTableElement.deleteTHead() removes the\n<thead> element from a given <table>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/deleteTFoot",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLTableElement.deleteTFoot() method removes the\n<tfoot> element from a given <table>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioNode/context",
    "pageType": "web-api-instance-property",
    "summary": "The read-only context property of the\nAudioNode interface returns the associated\nBaseAudioContext, that is the object representing the processing graph\nthe node is participating in."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/rows",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLTableElement\nproperty rows returns a live\nHTMLCollection of all the rows in the table, including the rows\ncontained within any <thead>, <tfoot>, and\n<tbody> elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioNode/channelInterpretation",
    "pageType": "web-api-instance-property",
    "summary": "The channelInterpretation property of the AudioNode interface represents an enumerated value describing how input channels are mapped to output channels when the number of inputs/outputs is different. For example, this setting defines how a mono input will be up-mixed to a stereo or 5.1 channel output, or how a quad channel input will be down-mixed to a stereo or mono output."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/createTHead",
    "pageType": "web-api-instance-method",
    "summary": "The createTHead() method of\nHTMLTableElement objects returns the <thead> element\nassociated with a given <table>. If no header exists in the table, this\nmethod creates it, and then returns it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioNode/connect",
    "pageType": "web-api-instance-method",
    "summary": "The connect() method of the AudioNode interface lets\nyou connect one of the node's outputs to a target, which may be either another\nAudioNode (thereby directing the sound data to the specified node) or an\nAudioParam, so that the node's output data is automatically used to\nchange the value of that parameter over time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/cellSpacing",
    "pageType": "web-api-instance-property",
    "summary": "While you should instead use the CSS\nborder-spacing property, the obsolete HTMLTableElement\ninterface's cellSpacing property represents the spacing\naround the individual <th> and <td> elements\nrepresenting a table's cells. Any two cells are separated by the sum of the\ncellSpacing of each of the two cells."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/cellPadding",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.cellPadding property represents the\npadding around the individual cells of the table."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioNode/disconnect",
    "pageType": "web-api-instance-method",
    "summary": "The disconnect() method of the AudioNode interface lets you disconnect one or more nodes from the node on which the method is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/rules",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.rules property indicates which cell\nborders to render in the table."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VTTRegion",
    "pageType": "web-api-interface",
    "summary": "The VTTRegion interface of the WebVTT API describes a portion of the video to render a VTTCue onto."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.width property represents the\ndesired width of the table."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/tHead",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.tHead represents the\n<thead> element of a <table>. Its value will be\nnull if there is no such element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Keyboard",
    "pageType": "web-api-interface",
    "summary": "The Keyboard interface of the Keyboard API provides functions that retrieve keyboard layout maps and toggle capturing of key presses from the physical keyboard."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/insertRow",
    "pageType": "web-api-instance-method",
    "summary": "The insertRow() method of the HTMLTableElement interface inserts a new row\n(<tr>) in a given <table>, and returns a reference to\nthe new row."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Keyboard/getLayoutMap",
    "pageType": "web-api-instance-method",
    "summary": "The getLayoutMap() method of the\nKeyboard interface returns a Promise that resolves with\nan instance of KeyboardLayoutMap which is a map-like object with\nfunctions for retrieving the strings associated with specific physical keys."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/summary",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.summary property represents the\ntable description."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Keyboard/unlock",
    "pageType": "web-api-instance-method",
    "summary": "The unlock() method of the\nKeyboard interface unlocks all keys captured by the\nKeyboard.lock() method and returns synchronously."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/tBodies",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLTableElement.tBodies read-only property returns a\nlive HTMLCollection of the bodies in a <table>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/createCaption",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLTableElement.createCaption() method returns the\n<caption> element associated with a given <table>.\nIf no <caption> element exists on the table, this method creates\nit, and then returns it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Keyboard/lock",
    "pageType": "web-api-instance-method",
    "summary": "The lock() method of the\nKeyboard interface returns a Promise that resolves after enabling the\ncapture of key presses for any or all of the keys on the physical keyboard. This method\ncan only capture keys that are granted access by the underlying operating\nsystem."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableElement/deleteCaption",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLTableElement.deleteCaption() method removes the\n<caption> element from a given <table>. If there is no\n<caption> element associated with the table, this method does\nnothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData",
    "pageType": "web-api-interface",
    "summary": "The FormData interface provides a way to construct a set of key/value pairs representing form fields and their values, which can be sent using the fetch(), XMLHttpRequest.send() or navigator.sendBeacon() methods. It uses the same format a form would use if the encoding type were set to \"multipart/form-data\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OES_element_index_uint",
    "pageType": "webgl-extension",
    "summary": "The OES_element_index_uint extension is part of the WebGL API and adds support for gl.UNSIGNED_INT types to WebGLRenderingContext.drawElements()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/entries",
    "pageType": "web-api-instance-method",
    "summary": "The FormData.entries() method returns an iterator which iterates through all key/value pairs contained in the FormData. The key of each pair is a string, and the value is either a string or a Blob."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Compute_Pressure_API",
    "pageType": "web-api-overview",
    "summary": "The Compute Pressure API is a JavaScript API that enables you to observe the pressure of system resources such as the CPU."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/set",
    "pageType": "web-api-instance-method",
    "summary": "The set() method of the FormData interface sets a new value for an existing key inside a FormData object, or adds the key/value if it does not already exist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrack",
    "pageType": "web-api-interface",
    "summary": "The AudioTrack interface represents a single audio track from one of the HTML media elements, <audio> or <video>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/get",
    "pageType": "web-api-instance-method",
    "summary": "The get() method of the FormData interface\nreturns the first value associated with a given key from within a FormData\nobject. If you expect multiple values and want all of them, use the\ngetAll() method instead."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrack/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind property contains a\nstring indicating the category of audio contained in the\nAudioTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrack/label",
    "pageType": "web-api-instance-property",
    "summary": "The read-only AudioTrack\nproperty label returns a string specifying the audio\ntrack's human-readable label, if one is available; otherwise, it returns an empty\nstring."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/append",
    "pageType": "web-api-instance-method",
    "summary": "The append() method of the FormData interface appends a new value onto an existing key inside a FormData object, or adds the key if it does not already exist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrack/enabled",
    "pageType": "web-api-instance-property",
    "summary": "The AudioTrack property\nenabled specifies whether or not the described audio\ntrack is currently enabled for use. If the track is disabled by setting\nenabled to false, the track is muted and does not produce\naudio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/has",
    "pageType": "web-api-instance-method",
    "summary": "The has() method of the FormData interface returns whether a FormData object contains a certain key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrack/sourceBuffer",
    "pageType": "web-api-instance-property",
    "summary": "The read-only AudioTrack\nproperty sourceBuffer returns the\nSourceBuffer that created the track, or null if the track was not\ncreated by a SourceBuffer or the SourceBuffer has been\nremoved from the MediaSource.sourceBuffers attribute of its parent\nmedia source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/FormData",
    "pageType": "web-api-constructor",
    "summary": "The FormData() constructor creates a new FormData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrack/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property contains a\nstring which uniquely identifies the track represented by the\nAudioTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioTrack/language",
    "pageType": "web-api-instance-property",
    "summary": "The read-only AudioTrack\nproperty language returns a string identifying the\nlanguage used in the audio track."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/keys",
    "pageType": "web-api-instance-method",
    "summary": "The FormData.keys() method returns an iterator which iterates through all keys contained in the FormData. The keys are strings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Resize_Observer_API",
    "pageType": "web-api-overview",
    "summary": "The Resize Observer API provides a performant mechanism by which code can monitor an element for changes to its size, with notifications being delivered to the observer each time the size changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the FormData interface deletes a key and its value(s) from a FormData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Locks_API",
    "pageType": "web-api-overview",
    "summary": "The Web Locks API allows scripts running in one tab or worker to asynchronously acquire a lock, hold it while work is performed, then release it. While held, no other script executing in the same origin can acquire the same lock, which allows a web app running in multiple tabs or workers to coordinate work and the use of resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/getAll",
    "pageType": "web-api-instance-method",
    "summary": "The getAll() method of the FormData interface returns all the values associated with a given key from within a FormData object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Device_Memory_API",
    "pageType": "web-api-overview",
    "summary": "The capabilities of a client device largely depend on the amount of available RAM. Traditionally, developers had to use heuristics and either benchmark a device or infer device capabilities based on other factors like the device manufacturer or User Agent strings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FormData/values",
    "pageType": "web-api-instance-method",
    "summary": "The FormData.values() method returns an iterator which iterates through all values contained in the FormData. The values are strings or Blob objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEPointLightElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEPointLightElement interface corresponds to the <fePointLight> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEPointLightElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEPointLightElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedNumber."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageEvent",
    "pageType": "web-api-interface",
    "summary": "The StorageEvent interface is implemented by the storage event, which is\nsent to a window\nwhen a storage area the window has access to is changed within the context of another document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEPointLightElement/z",
    "pageType": "web-api-instance-property",
    "summary": "The z read-only property of the SVGFEPointLightElement interface describes the z-axis value of the position of an SVG filter primitive as a SVGAnimatedNumber. A positive Z-axis comes out towards the person viewing the content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageEvent/newValue",
    "pageType": "web-api-instance-property",
    "summary": "The newValue property of the StorageEvent interface returns the new value of the storage item whose value was changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEPointLightElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEPointLightElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedNumber."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageEvent/url",
    "pageType": "web-api-instance-property",
    "summary": "The url property of the StorageEvent interface returns the URL of the document whose storage changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomEvent",
    "pageType": "web-api-interface",
    "summary": "The CustomEvent interface can be used to attach custom data to an event generated by an application."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomEvent/initCustomEvent",
    "pageType": "web-api-instance-method",
    "summary": "The CustomEvent.initCustomEvent() method initializes a CustomEvent object.\nIf the event has already been dispatched, this method does nothing."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageEvent/key",
    "pageType": "web-api-instance-property",
    "summary": "The key property of the StorageEvent interface returns the key for the storage item that was changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomEvent/detail",
    "pageType": "web-api-instance-property",
    "summary": "The read-only detail property of the CustomEvent interface returns any data passed when initializing the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageEvent/StorageEvent",
    "pageType": "web-api-constructor",
    "summary": "The StorageEvent() constructor creates a new StorageEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CustomEvent/CustomEvent",
    "pageType": "web-api-constructor",
    "summary": "The CustomEvent() constructor creates a new CustomEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageEvent/storageArea",
    "pageType": "web-api-instance-property",
    "summary": "The storageArea property of the StorageEvent interface returns the storage object that was affected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageEvent/oldValue",
    "pageType": "web-api-instance-property",
    "summary": "The oldValue property of the StorageEvent interface returns the original value of the storage item whose value changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StorageEvent/initStorageEvent",
    "pageType": "web-api-instance-method",
    "summary": "The StorageEvent.initStorageEvent() method is used to initialize the value of a StorageEvent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/unpackColorSpace",
    "pageType": "web-api-instance-property",
    "summary": "The WebGL2RenderingContext.unpackColorSpace property specifies the color space to convert to when importing textures. Along with the default (srgb), the display-p3 color space can be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFloodElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEFloodElement interface corresponds to the <feFlood> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/bufferSubData",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.bufferSubData() method of the\nWebGL API updates a subset of a buffer\nobject's data store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext",
    "pageType": "web-api-interface",
    "summary": "The WebGL2RenderingContext interface provides the OpenGL ES 3.0 rendering context for the drawing surface of an HTML <canvas> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFloodElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEFloodElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/isQuery",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.isQuery() method of the WebGL 2 API returns true if the\npassed object is a valid WebGLQuery object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFloodElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEFloodElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/vertexAttribI",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.vertexAttribI4[u]i[v]()\nmethods of the WebGL 2 API specify integer\nvalues for generic vertex attributes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFloodElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEFloodElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/copyTexSubImage3D",
    "pageType": "web-api-instance-method",
    "summary": "The copyTexSubImage3D() method of the WebGL2RenderingContext interface of the WebGL API copies pixels from the current WebGLFramebuffer into a 3D texture sub-image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFloodElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEFloodElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getTransformFeedbackVarying",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getTransformFeedbackVarying()\nmethod of the WebGL 2 API returns\ninformation about varying variables from WebGLTransformFeedback buffers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getQuery",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getQuery() method of the WebGL 2 API returns the currently active\nWebGLQuery for the target, or null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFloodElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEFloodElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/drawArraysInstanced",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.drawArraysInstanced() method\nof the WebGL 2 API renders primitives from\narray data like the gl.drawArrays()\nmethod. In addition, it can execute multiple instances of the range of elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGDefsElement",
    "pageType": "web-api-interface",
    "summary": "The SVGDefsElement interface corresponds to the <defs> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getUniformIndices",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getUniformIndices() method of\nthe WebGL 2 API retrieves the indices of a\nnumber of uniforms within a WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRTransientInputHitTestSource",
    "pageType": "web-api-interface",
    "summary": "The XRTransientInputHitTestSource interface of the WebXR Device API handles transient input hit test subscriptions. You can get an XRTransientInputHitTestSource object by calling the XRSession.requestHitTestSourceForTransientInput()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/bindSampler",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.bindSampler() method of the WebGL 2 API binds a\npassed WebGLSampler object to the texture unit at the passed index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRTransientInputHitTestSource/cancel",
    "pageType": "web-api-instance-method",
    "summary": "The cancel() method of the XRTransientInputHitTestSource interface unsubscribes a transient input hit test."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/deleteSampler",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.deleteSampler() method of the\nWebGL 2 API deletes a given\nWebGLSampler object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedLengthList",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedLengthList interface is used for attributes of type SVGLengthList which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/endTransformFeedback",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.endTransformFeedback() method\nof the WebGL 2 API ends a transform feedback\noperation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedLengthList/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal read-only property of the SVGAnimatedLengthList interface represents the animated value of an attribute that accepts a list of <length>, <percentage>, or <number> values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/isTransformFeedback",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.isTransformFeedback() method\nof the WebGL 2 API returns true\nif the passed object is a valid WebGLTransformFeedback object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/isSampler",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.isSampler() method of the WebGL 2 API returns true if the\npassed object is a valid WebGLSampler object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedLengthList/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal read-only property of the SVGAnimatedLengthList interface represents the base (non-animated) value of an animatable attribute that accepts a list of <length>, <percentage>, or <number> values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/texStorage3D",
    "pageType": "web-api-instance-method",
    "summary": "The texStorage3D() method of the WebGL2RenderingContext of the WebGL API specifies all levels of three-dimensional texture storage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/drawRangeElements",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.drawRangeElements() method of\nthe WebGL API renders primitives from array\ndata in a given range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageEvent/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin read-only property of the\nMessageEvent interface is a string representing the\norigin of the message emitter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageEvent",
    "pageType": "web-api-interface",
    "summary": "The MessageEvent interface represents a message received by a target object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/compressedTexImage3D",
    "pageType": "web-api-instance-method",
    "summary": "The compressedTexImage3D() method of the WebGL2RenderingContext interface of the WebGL API specifies a three-dimensional texture image in a compressed format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/drawingBufferColorSpace",
    "pageType": "web-api-instance-property",
    "summary": "The WebGL2RenderingContext.drawingBufferColorSpace property specifies the color space of the WebGL drawing buffer. Along with the default (srgb), the display-p3 color space can be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageEvent/source",
    "pageType": "web-api-instance-property",
    "summary": "The source read-only property of the\nMessageEvent interface is a MessageEventSource (which can be\na WindowProxy, MessagePort, or\nServiceWorker object) representing the message emitter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/clientWaitSync",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.clientWaitSync() method of the\nWebGL 2 API blocks and waits for a\nWebGLSync object to become signaled or a given timeout to be passed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageEvent/ports",
    "pageType": "web-api-instance-property",
    "summary": "The ports read-only property of the\nMessageEvent interface is an array of MessagePort objects\ncontaining all MessagePort objects sent with the message, in order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/bindTransformFeedback",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.bindTransformFeedback() method\nof the WebGL 2 API binds a\npassed WebGLTransformFeedback object to the current GL state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageEvent/data",
    "pageType": "web-api-instance-property",
    "summary": "The data read-only property of the\nMessageEvent interface represents the data sent by the message emitter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/endQuery",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.endQuery() method of the WebGL 2 API marks the end of a given query\ntarget."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageEvent/MessageEvent",
    "pageType": "web-api-constructor",
    "summary": "The MessageEvent() constructor creates a new MessageEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/deleteSync",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.deleteSync() method of the WebGL 2 API deletes a given\nWebGLSync object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MessageEvent/lastEventId",
    "pageType": "web-api-instance-property",
    "summary": "The lastEventId read-only property of the\nMessageEvent interface is a string representing a\nunique ID for the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getInternalformatParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getInternalformatParameter()\nmethod of the WebGL 2 API returns\ninformation about implementation-dependent support for internal formats."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/createSampler",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.createSampler() method of the\nWebGL 2 API creates and initializes\nWebGLSampler objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Local_Font_Access_API",
    "pageType": "web-api-overview",
    "summary": "The Local Font Access API provides a mechanism to access the user's locally installed font data — this includes higher-level details such as names, styles, and families, as well as the raw bytes of the underlying font files."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/bindBufferBase",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.bindBufferBase() method of the\nWebGL 2 API binds a given\nWebGLBuffer to a given binding point (target) at a given\nindex."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack",
    "pageType": "web-api-interface",
    "summary": "The CanvasCaptureMediaStreamTrack interface of the Media Capture and Streams API represents the video track contained in a MediaStream being generated from a <canvas> following a call to HTMLCanvasElement.captureStream()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/createVertexArray",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.createVertexArray() method of\nthe WebGL 2 API creates and initializes a\nWebGLVertexArrayObject object that represents a vertex array object (VAO)\npointing to vertex array data and which provides names for different sets of vertex\ndata."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack/requestFrame",
    "pageType": "web-api-instance-method",
    "summary": "The requestFrame() method of the CanvasCaptureMediaStreamTrack interface requests that a frame be captured from the canvas and sent to the stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/readBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.readBuffer() method of the WebGL 2 API selects a color buffer as the\nsource for pixels for subsequent calls to\ncopyTexImage2D,\ncopyTexSubImage2D,\ncopyTexSubImage3D or\nreadPixels."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack/canvas",
    "pageType": "web-api-instance-property",
    "summary": "The canvas read-only property of the CanvasCaptureMediaStreamTrack interface returns the HTMLCanvasElement from which frames are being captured."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/transformFeedbackVaryings",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.transformFeedbackVaryings()\nmethod of the WebGL 2 API specifies values\nto record in WebGLTransformFeedback buffers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/deleteQuery",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.deleteQuery() method of the WebGL 2 API deletes a given\nWebGLQuery object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpScriptTransformer",
    "pageType": "web-api-interface",
    "summary": "The RTCRtpScriptTransformer interface of the WebRTC API provides a worker-side Stream API interface that a WebRTC Encoded Transform can use to modify encoded media frames in the incoming and outgoing WebRTC pipelines."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/texStorage2D",
    "pageType": "web-api-instance-method",
    "summary": "The texStorage2D() method of the WebGL2RenderingContext of the WebGL API specifies all levels of two-dimensional texture storage."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpScriptTransformer/generateKeyFrame",
    "pageType": "web-api-instance-method",
    "summary": "The generateKeyFrame() method of the RTCRtpScriptTransformer interface causes a video encoder to generate a key frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/invalidateSubFramebuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.invalidateSubFramebuffer()\nmethod of the WebGL 2 API invalidates\nportions of the contents of attachments in a framebuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpScriptTransformer/sendKeyFrameRequest",
    "pageType": "web-api-instance-method",
    "summary": "The sendKeyFrameRequest() method of the RTCRtpScriptTransformer interface may be called by a WebRTC Encoded Transform that is processing incoming encoded video frames, in order to request a key frame from the sender."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getUniformBlockIndex",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getUniformBlockIndex() method\nof the WebGL 2 API retrieves the index of\na uniform block within a WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpScriptTransformer/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable read-only property of the RTCRtpScriptTransformer interface returns a ReadableStream instance is a source for encoded media frames."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/bindBufferRange",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.bindBufferRange() method of\nthe WebGL 2 API binds a range of a given\nWebGLBuffer to a given binding point (target) at a given\nindex."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpScriptTransformer/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable read-only property of the RTCRtpScriptTransformer interface returns a WritableStream instance that can be used as a sink for encoded media frames enqueued on the corresponding RTCRtpScriptTransformer.readable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/pauseTransformFeedback",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.pauseTransformFeedback()\nmethod of the WebGL 2 API pauses a transform\nfeedback operation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpScriptTransformer/options",
    "pageType": "web-api-instance-property",
    "summary": "The options read-only property of the RTCRtpScriptTransformer interface returns the object that was (optionally) passed as the second argument during construction of the corresponding RTCRtpScriptTransform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/copyBufferSubData",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.copyBufferSubData() method of\nthe WebGL 2 API copies part of the data of a\nbuffer to another buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/invalidateFramebuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.invalidateFramebuffer() method\nof the WebGL 2 API invalidates the contents\nof attachments in a framebuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_Periodic_Background_Synchronization_API",
    "pageType": "web-api-overview",
    "summary": "The Web Periodic Background Synchronization API provides a way to register tasks to be run in a service worker at periodic intervals with network connectivity. These tasks are referred to as periodic background sync requests."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/framebufferTextureLayer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.framebufferTextureLayer()\nmethod of the WebGL 2 API attaches a single\nlayer of a texture to a framebuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getIndexedParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getIndexedParameter() method\nof the WebGL 2 API returns indexed\ninformation about a given target."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Pointer_events",
    "pageType": "web-api-overview",
    "summary": "Much of today's web content assumes the user's pointing device will be a mouse. However, since many devices support other types of pointing input devices, such as pen/stylus and touch surfaces, extensions to the existing pointing device event models are needed. Pointer events address that need."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getSamplerParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getSamplerParameter() method\nof the WebGL 2 API returns parameter\ninformation of a WebGLSampler object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Pointer_events/Pinch_zoom_gestures",
    "pageType": "guide",
    "summary": "Adding gestures to an application can significantly improve the user experience. There are many types of gestures, from the simple single-touch swipe gesture to the more complex multi-touch twist gesture, where the touch points (aka pointers) move in different directions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/samplerParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.samplerParameter[if]() methods\nof the WebGL 2 API set\nWebGLSampler parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Pointer_events/Multi-touch_interaction",
    "pageType": "guide",
    "summary": "Pointer events extend DOM input events to support various pointing input devices such as pen/stylus and touch screens as well as mouse. The pointer is a hardware-agnostic device that can target a specific set of screen coordinates. Having a single event model for pointers can simplify creating websites, applications and provide a good user experience regardless of the user's hardware."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/blitFramebuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.blitFramebuffer() method of\nthe WebGL 2 API transfers a block of pixels\nfrom the read framebuffer to the draw framebuffer. Read and draw framebuffers are bound\nusing WebGLRenderingContext.bindFramebuffer()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Pointer_events/Using_Pointer_Events",
    "pageType": "guide",
    "summary": "This guide demonstrates how to use pointer events and the HTML <canvas> element to build a multi-touch enabled drawing application. This example is based on the one in the touch events overview, except it uses the pointer events input event model. Another difference is that because pointer events are pointer device agnostic, the application accepts coordinate-based inputs from a mouse, a pen, or a fingertip using the same code."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getActiveUniformBlockParameter",
    "pageType": "web-api-instance-method",
    "summary": "The\nWebGL2RenderingContext.getActiveUniformBlockParameter()\nmethod of the WebGL 2 API retrieves\ninformation about an active uniform block within a WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNestedDeclarations",
    "pageType": "web-api-interface",
    "summary": "The CSSNestedDeclarations interface of the CSS Rule API is used to group nested CSSRules."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/uniform",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.uniform[1234][uif][v]()\nmethods of the WebGL API specify values of\nuniform variables."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNestedDeclarations/style",
    "pageType": "web-api-instance-property",
    "summary": "The read-only style property of the CSSNestedDeclarations interface represents the styles associated with the nested rules."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/vertexAttribIPointer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.vertexAttribIPointer() method\nof the WebGL 2 API specifies integer data\nformats and locations of vertex attributes in a vertex attributes array."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLayerEvent",
    "pageType": "web-api-interface",
    "summary": "The XRLayerEvent interface of the WebXR Device API is the event type for events related to a change of state of an XRLayer object. These events occur, for example, when the layer needs to be redrawn."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/vertexAttribDivisor",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.vertexAttribDivisor() method\nof the WebGL 2 API modifies the rate at\nwhich generic vertex attributes advance when rendering multiple instances of primitives\nwith gl.drawArraysInstanced() and gl.drawElementsInstanced()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/createTransformFeedback",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.createTransformFeedback()\nmethod of the WebGL 2 API creates and\ninitializes WebGLTransformFeedback objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLayerEvent/XRLayerEvent",
    "pageType": "web-api-constructor",
    "summary": "The XRLayerEvent constructor creates and returns a new XRLayerEvent object. These events relate to a change of state of an XRLayer object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/drawElementsInstanced",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.drawElementsInstanced() method\nof the WebGL 2 API renders primitives from\narray data like the gl.drawElements() method. In addition, it can execute multiple instances of a set\nof elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRLayerEvent/layer",
    "pageType": "web-api-instance-property",
    "summary": "The layer property of the XRLayerEvent interface is a reference to the XRLayer which generated the event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/beginTransformFeedback",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.beginTransformFeedback()\nmethod of the WebGL 2 API starts a transform\nfeedback operation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FileEntrySync",
    "pageType": "web-api-interface",
    "summary": "The FileEntrySync interface represents a file in a file system. It lets you write content to a file."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/deleteVertexArray",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.deleteVertexArray() method of\nthe WebGL 2 API deletes a given\nWebGLVertexArrayObject object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SyncEvent",
    "pageType": "web-api-interface",
    "summary": "The SyncEvent interface of the Background Synchronization API represents a sync action that is dispatched on the ServiceWorkerGlobalScope of a ServiceWorker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/createQuery",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.createQuery() method of the WebGL 2 API creates and initializes\nWebGLQuery objects, which provide ways to asynchronously query for\ninformation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SyncEvent/SyncEvent",
    "pageType": "web-api-constructor",
    "summary": "The SyncEvent() constructor creates a new SyncEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/bufferData",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.bufferData() method of the WebGL API creates and initializes the buffer object's data store."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/drawBuffers",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.drawBuffers() method of the WebGL 2 API defines draw buffers to which\nfragment colors are written into. The draw buffer settings are part of the state of the\ncurrently bound framebuffer or the drawing buffer if no framebuffer is bound."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SyncEvent/lastChance",
    "pageType": "web-api-instance-property",
    "summary": "The lastChance read-only property of the\nSyncEvent interface returns true if the user agent will not\nmake further synchronization attempts after the current attempt. This is the value\npassed in the lastChance parameter of the\nSyncEvent() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/texSubImage3D",
    "pageType": "web-api-instance-method",
    "summary": "The texSubImage3D() method of the WebGL2RenderingContext interface of the WebGL API specifies a three-dimensional sub-rectangle for a texture image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SyncEvent/tag",
    "pageType": "web-api-instance-property",
    "summary": "The tag read-only property of the\nSyncEvent interface returns the developer-defined identifier for\nthis SyncEvent. This is the value passed in the tag parameter\nof the SyncEvent() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getActiveUniformBlockName",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getActiveUniformBlockName()\nmethod of the WebGL 2 API retrieves the name\nof the active uniform block at a given index within a WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIAccess",
    "pageType": "web-api-interface",
    "summary": "The MIDIAccess interface of the Web MIDI API provides methods for listing MIDI input and output devices, and obtaining access to those devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/waitSync",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.waitSync() method of the WebGL 2 API returns immediately, but waits on\nthe GL server until the given WebGLSync object is signaled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIAccess/inputs",
    "pageType": "web-api-instance-property",
    "summary": "The inputs read-only property of the MIDIAccess interface provides access to any available MIDI input ports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getFragDataLocation",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getFragDataLocation() method\nof the WebGL 2 API returns the binding of\ncolor numbers to user-defined varying out variables."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/fenceSync",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.fenceSync() method of the WebGL 2 API creates a new\nWebGLSync object and inserts it into the GL command stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIAccess/sysexEnabled",
    "pageType": "web-api-instance-property",
    "summary": "The sysexEnabled read-only property of the MIDIAccess interface indicates whether system exclusive support is enabled on the current MIDIAccess instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/isVertexArray",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.isVertexArray() method of the\nWebGL API returns true if the\npassed object is a valid WebGLVertexArrayObject object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIAccess/outputs",
    "pageType": "web-api-instance-property",
    "summary": "The outputs read-only property of the MIDIAccess interface provides access to any available MIDI output ports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/isSync",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.isSync() method of the WebGL 2 API returns true if the\npassed object is a valid WebGLSync object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/clearBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.clearBuffer[fiuv]() methods of\nthe WebGL 2 API clear buffers from the\ncurrently bound framebuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIAccess/statechange_event",
    "pageType": "web-api-event",
    "summary": "The statechange event of the MIDIAccess interface is fired when a new MIDI port is added or when an existing port changes state."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/bindVertexArray",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.bindVertexArray() method of\nthe WebGL 2 API binds a\npassed WebGLVertexArrayObject object to the buffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayCapabilities",
    "pageType": "web-api-interface",
    "summary": "The VRDisplayCapabilities interface of the WebVR API describes the capabilities of a VRDisplay — its features can be used to perform VR device capability tests, for example can it return position information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/deleteTransformFeedback",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.deleteTransformFeedback()\nmethod of the WebGL 2 API deletes a given\nWebGLTransformFeedback object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayCapabilities/hasOrientation",
    "pageType": "web-api-instance-property",
    "summary": "The hasOrientation read-only property of the VRDisplayCapabilities interface returns true if the VR display can track and return orientation information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/beginQuery",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.beginQuery() method of the WebGL 2 API starts an asynchronous query. The\ntarget parameter indicates which kind of query to begin."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayCapabilities/maxLayers",
    "pageType": "web-api-instance-property",
    "summary": "The maxLayers read-only property of the VRDisplayCapabilities interface returns a number indicating the maximum number of VRLayerInits that the VR display can present at once (e.g., the maximum length of the array that VRDisplay.requestPresent() can accept.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/texImage3D",
    "pageType": "web-api-instance-method",
    "summary": "The texImage3D() method of the WebGL2RenderingContext interface of the WebGL API specifies a three-dimensional texture image."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayCapabilities/hasExternalDisplay",
    "pageType": "web-api-instance-property",
    "summary": "The hasExternalDisplay read-only property of the VRDisplayCapabilities interface returns true if the VR display is separate from the device's primary display."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/resumeTransformFeedback",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.resumeTransformFeedback()\nmethod of the WebGL 2 API resumes a\ntransform feedback operation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayCapabilities/canPresent",
    "pageType": "web-api-instance-property",
    "summary": "The canPresent read-only property of the VRDisplayCapabilities interface returns a boolean value stating whether the VR display is capable of presenting content (e.g., through an HMD)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/renderbufferStorageMultisample",
    "pageType": "web-api-instance-method",
    "summary": "The\nWebGL2RenderingContext.renderbufferStorageMultisample()\nmethod of the WebGL 2 API returns creates\nand initializes a renderbuffer object's data store and allows specifying a number of\nsamples to be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VRDisplayCapabilities/hasPosition",
    "pageType": "web-api-instance-property",
    "summary": "The hasPosition read-only property of the VRDisplayCapabilities interface returns true if the VR display can track and return position information."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getBufferSubData",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getBufferSubData() method of\nthe WebGL 2 API reads data from a buffer\nbinding point and writes them to an ArrayBuffer or\nSharedArrayBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvas",
    "pageType": "web-api-interface",
    "summary": "When using the <canvas> element or the Canvas API, rendering, animation, and user interaction usually happen on the main execution thread of a web application.\nThe computation relating to canvas animations and rendering can have a significant impact on application performance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/uniformBlockBinding",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.uniformBlockBinding() method\nof the WebGL 2 API assigns binding points\nfor active uniform blocks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvas/convertToBlob",
    "pageType": "web-api-instance-method",
    "summary": "The OffscreenCanvas.convertToBlob() method creates a Blob object representing the image contained in the canvas."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getSyncParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getSyncParameter() method of\nthe WebGL 2 API returns parameter\ninformation of a WebGLSync object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvas/transferToImageBitmap",
    "pageType": "web-api-instance-method",
    "summary": "The OffscreenCanvas.transferToImageBitmap() method creates an ImageBitmap object from the most recently rendered image of the OffscreenCanvas. The OffscreenCanvas allocates a new image for its subsequent rendering."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/compressedTexSubImage3D",
    "pageType": "web-api-instance-method",
    "summary": "The compressedTexSubImage3D() method of the WebGL2RenderingContext interface of the WebGL API specifies a three-dimensional sub-rectangle for a texture image in a compressed format."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvas/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property returns and sets the height of an OffscreenCanvas object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getQueryParameter",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getQueryParameter() method of\nthe WebGL 2 API returns parameter\ninformation of a WebGLQuery object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvas/contextrestored_event",
    "pageType": "web-api-event",
    "summary": "The contextrestored event of the OffscreenCanvas interface is fired if the browser restores an OffscreenCanvasRenderingContext2D context that was previously lost."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/getActiveUniforms",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.getActiveUniforms() method of\nthe WebGL 2 API retrieves information about\nactive uniforms within a WebGLProgram."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvas/OffscreenCanvas",
    "pageType": "web-api-constructor",
    "summary": "The OffscreenCanvas() constructor returns a newly instantiated OffscreenCanvas object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebGL2RenderingContext/uniformMatrix",
    "pageType": "web-api-instance-method",
    "summary": "The WebGL2RenderingContext.uniformMatrix[234]x[234]fv()\nmethods of the WebGL 2 API specify matrix\nvalues for uniform variables."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvas/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property returns and sets the width of an OffscreenCanvas object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectList",
    "pageType": "web-api-interface",
    "summary": "The DOMRectList interface represents a collection of DOMRect objects, typically used to hold the rectangles associated with a particular element, like bounding boxes returned by methods such as getClientRects(). It provides access to each rectangle in the list via its index, along with a length property that indicates the total number of rectangles in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvas/contextlost_event",
    "pageType": "web-api-event",
    "summary": "The contextlost event of the OffscreenCanvas interface is fired if the browser detects that the OffscreenCanvasRenderingContext2D context is lost.\nContexts can be lost for several reasons, such as an associated GPU driver crashes, or the application runs out of memory, and so on."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectList/item",
    "pageType": "web-api-instance-method",
    "summary": "The DOMRectList method\nitem() returns the DOMRect at the specified index within the list, or null if the index is out of range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/OffscreenCanvas/getContext",
    "pageType": "web-api-instance-method",
    "summary": "The OffscreenCanvas.getContext() method returns a drawing context for an offscreen canvas, or null if the context identifier is not supported, or the offscreen canvas has already been set to a different context mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMRectList/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property of the DOMRectList interface returns the number of DOMRect objects in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCAudioSourceStats",
    "pageType": "web-api-interface",
    "summary": "The RTCAudioSourceStats dictionary of the WebRTC API provides statistics information about an audio track (MediaStreamTrack) that is attached to one or more senders (RTCRtpSender)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGUseElement",
    "pageType": "web-api-interface",
    "summary": "The SVGUseElement interface corresponds to the <use> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCAudioSourceStats/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind property of the RTCAudioSourceStats dictionary is a string with the value audio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCAudioSourceStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCAudioSourceStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGUseElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGUseElement interface describes the x-axis coordinate of the start point of the referenced element as an SVGAnimatedLength. It reflects the computed value of the x attribute on the <use> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCAudioSourceStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCAudioSourceStats dictionary is a string with value media-source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGUseElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGUseElement interface describes the height of the referenced element as an SVGAnimatedLength. It reflects the computed value of the height attribute on the <use> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCAudioSourceStats/trackIdentifier",
    "pageType": "web-api-instance-property",
    "summary": "The trackIdentifier property of the RTCAudioSourceStats dictionary contains the id attribute of the associated MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGUseElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGUseElement interface describes the y-axis coordinate of the start point of the referenced element as an SVGAnimatedLength. It reflects the computed value of the y attribute on the <use> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCAudioSourceStats/totalAudioEnergy",
    "pageType": "web-api-instance-property",
    "summary": "The totalAudioEnergy property of the RTCAudioSourceStats dictionary represents the total audio energy of the media source over the lifetime of this stats object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGUseElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGUseElement interface describes the width of the referenced element as an SVGAnimatedLength. It reflects the computed value of the width attribute on the <use> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCAudioSourceStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCAudioSourceStats dictionary is a string which uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGUseElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGUseElement interface reflects the href or xlink:href \nDeprecated\n attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCAudioSourceStats/audioLevel",
    "pageType": "web-api-instance-property",
    "summary": "The audioLevel property of the RTCAudioSourceStats dictionary represents the audio level of the media source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCAudioSourceStats/totalSamplesDuration",
    "pageType": "web-api-instance-property",
    "summary": "The totalSamplesDuration property of the RTCAudioSourceStats dictionary represents the combined duration of all samples produced by the media source over the lifetime of this stats object, in seconds.\nIt does not include samples dropped before reaching this media source. "
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Geometry",
    "pageType": "guide",
    "summary": "At a fundamental level, rendering of scenes for WebXR presentation in either augmented reality or virtual reality contexts is performed using WebGL, so the two APIs share much of the same design language. However, in order to provide the ability to present scenes in true 3D using XR headsets and other such equipment, WebXR has additional concepts that must be understood."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRHitTestResult",
    "pageType": "web-api-interface",
    "summary": "The XRHitTestResult interface of the WebXR Device API contains a single result of a hit test. You can get an array of XRHitTestResult objects for a frame by calling XRFrame.getHitTestResults()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API",
    "pageType": "web-api-overview",
    "summary": "WebXR is a group of standards which are used together to support rendering 3D scenes to hardware designed for presenting virtual worlds (virtual reality, or VR), or for adding graphical imagery to the real world, (augmented reality, or AR). The WebXR Device API implements the core of the WebXR feature set, managing the selection of output devices, render the 3D scene to the chosen device at the appropriate frame rate, and manage motion vectors created using input controllers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRHitTestResult/getPose",
    "pageType": "web-api-instance-method",
    "summary": "The getPose() method of the XRHitTestResult interface returns the XRPose of the hit test result relative to the given base space."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Perspective",
    "pageType": "guide",
    "summary": "Because WebXR uses WebGL to render the views that form the 3D environment displayed using the XR hardware, it's easy to think that the perspective-related matters are identical to those found in any WebGL project. This is largely true, but there are a few specific topics that need to be revisited and some minor additional guidelines considered in order to ensure that your app looks right and, more importantly, that your 3D world doesn't cause people to become ill from vertigo or other effects that can be caused when what's being seen doesn't match what the brain expects from reality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRHitTestResult/createAnchor",
    "pageType": "web-api-instance-method",
    "summary": "The createAnchor() method of the XRHitTestResult interface creates an XRAnchor from a hit test result that is attached to a real-world object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIInput",
    "pageType": "web-api-interface",
    "summary": "The MIDIInput interface of the Web MIDI API receives messages from a MIDI input port."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Permissions_and_security",
    "pageType": "guide",
    "summary": "The WebXR Device API has several areas of security to contend with, from establishing Permissions Policy to ensuring the user intends to use the mixed reality presentation before activating it. Among other things, you need to confirm access to device features such as the microphone and/or camera, get permission to use immersive VR mode (if applicable), and so forth. The variety of hardware and software involved in XR brings multiple APIs and technologies into play. In this guide, we'll cover how to ensure your app has the permissions it needs to provide a secure and private XR experience."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MIDIInput/midimessage_event",
    "pageType": "web-api-event",
    "summary": "The midimessage event of the Web MIDI API is fired when the MIDI port corresponding to this MIDIInput finishes receiving one or more MIDI messages. An instance of MIDIMessageEvent containing the message that was received is passed to the event handler."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Bounded_reference_spaces",
    "pageType": "guide",
    "summary": "Among the various reference spaces available in the WebXR set of APIs, the bounded-floor reference space is somewhat unique. Not only is it represented by a unique subclass, XRBoundedReferenceSpace, but it's the only one which restricts movement based not upon virtual restrictions but upon limitations imposed by the real world. This article examines bounded reference spaces as represented by XRBoundedReferenceSpace, describing what they are and how they're used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WEBGL_compressed_texture_s3tc_srgb",
    "pageType": "webgl-extension",
    "summary": "The WEBGL_compressed_texture_s3tc_srgb extension is part of the WebGL API and exposes four S3TC compressed texture formats for the sRGB colorspace."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammar",
    "pageType": "web-api-interface",
    "summary": "The SpeechGrammar interface of the Web Speech API represents a set of words or patterns of words for the recognition service to recognize."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Inputs",
    "pageType": "guide",
    "summary": "A full WebXR experience isn't just about showing the user a wholly virtual scene or augmenting reality by adding to or altering the world around them. In order to make an experience that's fulfilling and engaging, the user needs to be able to interact with it. To that end, WebXR provides support for a variety of kinds of input devices."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammar/src",
    "pageType": "web-api-instance-property",
    "summary": "The src property of the SpeechGrammar interface\nis used to get or set a string that contains the grammar within the SpeechGrammar object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Fundamentals",
    "pageType": "guide",
    "summary": "WebXR, with the WebXR Device API at its core, provides the functionality needed to bring both augmented and virtual reality (AR and VR) to the web. Together, these technologies are referred to as mixed reality (MR) or cross reality (XR). Mixed reality is a large and complex subject, with much to learn and many other APIs to bring together to create an engaging experience for users."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammar/weight",
    "pageType": "web-api-instance-property",
    "summary": "The optional weight property of the\nSpeechGrammar interface sets and returns the weight of the\nSpeechGrammar object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Lifecycle",
    "pageType": "guide",
    "summary": "In this guide, we'll get a birds-eye view of what's involved in creating and driving a WebXR application, without diving down to the code level in detail. This serves as preparation for the next few articles in these WebXR guides, which cover starting up and shutting down a WebXR session, geometry, simulating cameras, spatial tracking, and more."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SpeechGrammar/SpeechGrammar",
    "pageType": "web-api-constructor",
    "summary": "The SpeechGrammar() constructor of the\nSpeechGrammar interface creates a new SpeechGrammar object\ninstance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Startup_and_shutdown",
    "pageType": "guide",
    "summary": "Assuming you're already familiar with 3D graphics in general and WebGL in particular, taking that next bold step into mixed reality—the idea of presenting artificial scenery or objects in addition to or in place of the real world—is not overly complicated. Before you can begin to render your augmented or virtual reality scenario, you need to create and set up the WebXR session, and you should know how to shut it down properly as well. You will learn how to do these things in this article."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest_API",
    "pageType": "web-api-overview",
    "summary": "The XMLHttpRequest API enables web apps to make HTTP requests to web servers and receive the responses programmatically using JavaScript. This in turn enables a website to update just part of a page with data from the server, rather than having to navigate to a whole new page. This practice is also sometimes known as AJAX."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest_API/Sending_and_Receiving_Binary_Data",
    "pageType": "guide",
    "summary": "The responseType property of the XMLHttpRequest object can be set to change the expected response type from the server. Possible values are the empty string (default), \"arraybuffer\", \"blob\", \"document\", \"json\", and \"text\". The response property will contain the entity body according to responseType, as an ArrayBuffer, Blob, Document, JSON, or string. This is null if the request is not complete or was not successful."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Movement_and_motion",
    "pageType": "guide",
    "summary": "In this article, we'll make use of information introduced in the previous articles in our WebXR tutorial series to construct an example which animates a rotating cube around which the user can move freely using a VR headset, keyboard, and/or mouse. This will help to solidify your understanding of how the geometry of 3D graphics and VR work, as well as to help ensure you understand the way the functions and data that are used during XR rendering work together."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest_API/HTML_in_XMLHttpRequest",
    "pageType": "guide",
    "summary": "The W3C XMLHttpRequest specification adds HTML parsing support to XMLHttpRequest, which originally supported only XML parsing. This feature allows Web apps to obtain an HTML resource as a parsed DOM using XMLHttpRequest."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Cameras",
    "pageType": "guide",
    "summary": "The first and most important thing to understand when considering the code to manage point-of-view and cameras in your application is this: WebXR does not have cameras. There's no magic object provided by either the WebGL or the WebXR API that represents the viewer that you can rotate and move around to automatically change what's seen on the screen. In this guide we show how use WebGL to simulate camera movements without having a camera to move. These techniques can be used in any WebGL (or WebXR) project."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest_API/Using_FormData_Objects",
    "pageType": "guide",
    "summary": "The FormData object lets you compile a set of key/value pairs to send using the Fetch or XMLHttpRequest API. It is primarily intended for use in sending form data, but can be used independently from forms in order to transmit keyed data. The transmitted data is in the same format that the form's submit() method would use to send the data if the form's encoding type were set to multipart/form-data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Rendering",
    "pageType": "guide",
    "summary": "Once your WebXR environment has been set up and an XRSession created to represent an ongoing XR environment session, you need to provide frames of the scene to the XR device for rendering. This article covers the process of driving the frames of the XR scene to the device in the rendering loop, using the XRSession to obtain an XRFrame object representing each frame, which is then used to prepare the framebuffer for delivery to the XR device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest_API/Using_XMLHttpRequest",
    "pageType": "guide",
    "summary": "In this guide, we'll take a look at how to use XMLHttpRequest to issue HTTP requests in order to exchange data between the website and a server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Performance",
    "pageType": "guide",
    "summary": "WebXR applications involve multiple technologies which can be highly sensitive to performance constraints. As such, you may find yourself needing to make adjustments or compromises to optimize the performance of your WebXR application to be as usable as possible on the broadest assortment of target devices. In this guide, we'll examine a variety of suggestions and recommendations that will help you make your WebXR app as performant as possible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XMLHttpRequest_API/Synchronous_and_Asynchronous_Requests",
    "pageType": "guide",
    "summary": "XMLHttpRequest supports both synchronous and asynchronous communications. In general, however, asynchronous requests should be preferred to synchronous requests for performance reasons."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Spatial_tracking",
    "pageType": "guide",
    "summary": "The WebXR APIs used for implementing augmented and virtual reality is designed specifically to provide the ability to insert a human into a virtual environment. To accomplish this, software needs the ability to not only track the locations, orientation, and movements of objects in the virtual world, but the user's location, orientation, and movement as well. But WebXR goes beyond that by adding the ability to track the location, orientation, and motion of the input devices which generate data used to determine the position and movement of individual parts of the viewer's body (with appropriate equipment)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DirectoryEntrySync",
    "pageType": "web-api-interface",
    "summary": "The DirectoryEntrySync interface represents a directory in a file system. It includes methods for creating, reading, looking up, and recursively removing files in a directory."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Targeting",
    "pageType": "guide",
    "summary": "Detection of collisions with virtual objects usually doesn't actually involve testing for intersection of the ray with one of the scene's polygons, as a typical scene may have hundreds or thousands of polygons, which makes direct tracing of rays to polygons impractical in most cases. Instead, most applications find a way to simplify the implementation of their hit testing algorithms."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableSectionElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTableSectionElement interface provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies (<thead>, <tfoot>, and <tbody>, respectively) in an HTML table."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebXR_Device_API/Lighting",
    "pageType": "guide",
    "summary": "Because the WebXR Device API relies on other technologies—namely, WebGL and frameworks based upon it—to perform all rendering, texturing, and lighting of a scene, the same general lighting concepts apply to WebXR settings or scenes as to any other WebGL-generated display."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableSectionElement/align",
    "pageType": "web-api-instance-property",
    "summary": "The align property of the HTMLTableSectionElement interface is a string indicating how to horizontally align text in a <thead>, <tbody> or <tfoot> table section. Individual rows and cells can override it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathMax",
    "pageType": "web-api-interface",
    "summary": "The CSSMathMax interface of the CSS Typed Object Model API represents the CSS max() function. It inherits properties and methods from its parent CSSNumericValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableSectionElement/vAlign",
    "pageType": "web-api-instance-property",
    "summary": "The vAlign property of the HTMLTableSectionElement interface is a string indicating how to vertically align text in a <thead>, <tbody> or <tfoot> table section. Individual rows and cells can override it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathMax/CSSMathMax",
    "pageType": "web-api-constructor",
    "summary": "The CSSMathMax() constructor creates a\nnew CSSMathMax object which represents the CSS max() function."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableSectionElement/deleteRow",
    "pageType": "web-api-instance-method",
    "summary": "The deleteRow() method of the HTMLTableSectionElement interface removes a\nspecific row (<tr>) from a given <section>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathMax/values",
    "pageType": "web-api-instance-property",
    "summary": "The CSSMathMax.values read-only property of the\nCSSMathMax interface returns a CSSNumericArray object\nwhich contains one or more CSSNumericValue objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableSectionElement/chOff",
    "pageType": "web-api-instance-property",
    "summary": "The chOff property of the HTMLTableSectionElement interface does nothing. It reflects the charoff attribute of the section element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFuncBElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEFuncBElement interface corresponds to the <feFuncB> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableSectionElement/rows",
    "pageType": "web-api-instance-property",
    "summary": "The rows read-only property of the HTMLTableSectionElement interface returns a live HTMLCollection containing the rows in the section. The HTMLCollection is live and is automatically updated when rows are added or removed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaCapabilities",
    "pageType": "web-api-interface",
    "summary": "The MediaCapabilities interface of the Media Capabilities API provides information about the decoding abilities of the device, system and browser. The API can be used to query the browser about the decoding abilities of the device based on codecs, profile, resolution, and bitrates. The information can be used to serve optimal media streams to the user and determine if playback should be smooth and power efficient."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableSectionElement/insertRow",
    "pageType": "web-api-instance-method",
    "summary": "The insertRow() method of the HTMLTableSectionElement interface inserts a new row\n(<tr>) in the given table sectioning element (<thead>, <tfoot>, or\n<tbody>), then returns a reference to this new row."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaCapabilities/decodingInfo",
    "pageType": "web-api-instance-method",
    "summary": "The decodingInfo() method of the MediaCapabilities interface returns a promise that fulfils with information about how well the user agent can decode/display media with a given configuration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableSectionElement/ch",
    "pageType": "web-api-instance-property",
    "summary": "The ch property of the HTMLTableSectionElement interface does nothing. It reflects the char attribute of the section element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaCapabilities/encodingInfo",
    "pageType": "web-api-instance-method",
    "summary": "The encodingInfo() method of the MediaCapabilities interface returns a promise that fulfills with the tested media configuration's capabilities for encoding media.\nThis contains the three boolean properties supported, smooth, and powerefficient, which describe how compatible the device is with the type of media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WGSLLanguageFeatures",
    "pageType": "web-api-interface",
    "summary": "The WGSLLanguageFeatures interface of the WebGPU API is a setlike object that reports the WGSL language extensions supported by the WebGPU implementation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS/escape_static",
    "pageType": "web-api-static-method",
    "summary": "The CSS.escape() static method returns a\nstring containing the escaped string passed as parameter, mostly for\nuse as part of a CSS selector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_components",
    "pageType": "web-api-overview",
    "summary": "Web Components is a suite of different technologies allowing you to create reusable custom elements — with their functionality encapsulated away from the rest of your code — and utilize them in your web apps."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS/registerProperty_static",
    "pageType": "web-api-static-method",
    "summary": "The CSS.registerProperty() static method registers\ncustom properties, allowing for property type checking, default\nvalues, and properties that do or do not inherit their value."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS",
    "pageType": "web-api-interface",
    "summary": "The CSS interface holds useful CSS-related methods. No objects with this interface are implemented: it contains only static methods and is therefore a utilitarian interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_components/Using_templates_and_slots",
    "pageType": "guide",
    "summary": "This article explains how you can use the <template> and <slot> elements to create a flexible template that can then be used to populate the shadow DOM of a web component."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS/factory_functions_static",
    "pageType": "web-api-static-method",
    "summary": "The CSS numeric factory\nfunctions, such as CSS.em() and\nCSS.turn() are methods that return CSSUnitValues with the value being\nthe numeric argument and the unit being the name of the method used. These\nfunctions create new numeric values less verbosely than using the\nCSSUnitValue() constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS/supports_static",
    "pageType": "web-api-static-method",
    "summary": "The CSS.supports() static method returns a boolean value\nindicating if the browser supports a given CSS feature, or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_components/Using_shadow_DOM",
    "pageType": "guide",
    "summary": "An important aspect of custom elements is encapsulation, because a custom element, by definition, is a piece of reusable functionality: it might be dropped into any web page and be expected to work. So it's important that code running in the page should not be able to accidentally break a custom element by modifying its internal implementation. Shadow DOM enables you to attach a DOM tree to an element, and have the internals of this tree hidden from JavaScript and CSS running in the page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS/paintWorklet_static",
    "pageType": "web-api-static-property",
    "summary": "The static, read-only paintWorklet property of the CSS interface provides access to the\npaint worklet, which programmatically generates an image where a CSS\nproperty expects a file."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Web_components/Using_custom_elements",
    "pageType": "guide",
    "summary": "One of the key features of web components is the ability to create custom elements: that is, HTML elements whose behavior is defined by the web developer, that extend the set of elements available in the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS/highlights_static",
    "pageType": "web-api-static-property",
    "summary": "The static, read-only highlights property of the CSS interface provides access to the HighlightRegistry used to style arbitrary text ranges using the CSS Custom Highlight API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_texture_norm16",
    "pageType": "webgl-extension",
    "summary": "The EXT_texture_norm16 extension is part of the WebGL API and provides a set of new 16-bit signed normalized and unsigned normalized formats (fixed-point texture, renderbuffer and texture buffer)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRay/origin",
    "pageType": "web-api-instance-property",
    "summary": "The read-only origin property of the XRRay interface is a DOMPointReadOnly representing the 3-dimensional point in space that the ray originates from, in meters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRay",
    "pageType": "web-api-interface",
    "summary": "The XRRay interface of the WebXR Device API is a geometric ray described by an origin point and a direction vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/addstream_event",
    "pageType": "web-api-event",
    "summary": "The obsolete addstream event is sent to an RTCPeerConnection when new media, in the form of a MediaStream object, has been added to it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection",
    "pageType": "web-api-interface",
    "summary": "The RTCPeerConnection interface represents a WebRTC connection between the local computer and a remote peer.\nIt provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRay/XRRay",
    "pageType": "web-api-constructor",
    "summary": "The XRRay() constructor creates a new XRRay object which is a geometric ray described by an origin point and a direction vector."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/setRemoteDescription",
    "pageType": "web-api-instance-method",
    "summary": "The setRemoteDescription() method of the RTCPeerConnection interface sets the specified session description as the remote peer's current offer or answer.\nThe description specifies the properties of the remote end of the connection, including the media format.\nThe method takes a single parameter—the session description—and it returns a Promise which is fulfilled once the description has been changed, asynchronously."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRay/direction",
    "pageType": "web-api-instance-property",
    "summary": "The read-only direction property of the XRRay interface is a DOMPointReadOnly representing the ray's 3-dimensional directional vector, normalized to a unit vector with a length of 1.0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/currentLocalDescription",
    "pageType": "web-api-instance-property",
    "summary": "The currentLocalDescription read-only property of the RTCPeerConnection interface returns an RTCSessionDescription object describing the local end of the connection as it was most recently successfully negotiated since the last time the RTCPeerConnection finished negotiating and connecting to a remote peer.\nAlso included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRRay/matrix",
    "pageType": "web-api-instance-property",
    "summary": "The read-only matrix property of the XRRay interface is a transform that can be used to position objects along the XRRay. This is a 4 by 4 matrix given as a 16 element Float32Array in column major order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/addTransceiver",
    "pageType": "web-api-instance-method",
    "summary": "The addTransceiver() method of the RTCPeerConnection interface creates a new RTCRtpTransceiver and adds it to the set of transceivers associated with the RTCPeerConnection.\nEach transceiver represents a bidirectional stream, with both an RTCRtpSender and an RTCRtpReceiver associated with it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationEvent",
    "pageType": "web-api-interface",
    "summary": "The AnimationEvent interface represents events providing information related to animations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/addIceCandidate",
    "pageType": "web-api-instance-method",
    "summary": "The addIceCandidate() method of the RTCPeerConnection interface adds a new remote candidate to the connection's remote description, which describes the state of the remote end of the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationEvent/pseudoElement",
    "pageType": "web-api-instance-property",
    "summary": "The AnimationEvent.pseudoElement read-only property is a\nstring, starting with '::', containing the name of the pseudo-element the animation runs on.\nIf the animation doesn't run on a pseudo-element but on the element, an empty string: ''."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/createAnswer",
    "pageType": "web-api-instance-method",
    "summary": "The createAnswer() method of the RTCPeerConnection interface creates an SDP answer to an offer received from a remote peer during the offer/answer negotiation of a WebRTC connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationEvent/animationName",
    "pageType": "web-api-instance-property",
    "summary": "The AnimationEvent.animationName read-only property is a\nstring containing the value of the animation-name CSS\nproperty associated with the transition."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event",
    "pageType": "web-api-event",
    "summary": "A signalingstatechange event is sent to an RTCPeerConnection to notify it that its signaling state, as indicated by the signalingState property, has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationEvent/elapsedTime",
    "pageType": "web-api-instance-property",
    "summary": "The AnimationEvent.elapsedTime read-only property is a\nfloat giving the amount of time the animation has been running, in seconds,\nwhen this event fired, excluding any time the animation was paused. For an\nanimationstart event,\nelapsedTime is 0.0 unless there was a negative value for\nanimation-delay, in which case the event will be fired with\nelapsedTime containing (-1 * delay)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/getTransceivers",
    "pageType": "web-api-instance-method",
    "summary": "The getTransceivers() method of the RTCPeerConnection interface returns a list of the RTCRtpTransceiver objects being used to send and receive data on the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AnimationEvent/AnimationEvent",
    "pageType": "web-api-constructor",
    "summary": "The AnimationEvent() constructor returns a new AnimationEvent object, representing an event in relation with an animation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/createDataChannel",
    "pageType": "web-api-instance-method",
    "summary": "The createDataChannel() method of the RTCPeerConnection interface creates a new channel linked with the remote peer, over which any kind of data may be transmitted.\nThis can be useful for back-channel content, such as images, file transfer, text chat, game update packets, and so forth."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History_API",
    "pageType": "web-api-overview",
    "summary": "The History API provides access to the browser's session history (not to be confused with WebExtensions history) through the history global object. It exposes useful methods and properties that let you navigate back and forth through the user's history, and manipulate the contents of the history stack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/getReceivers",
    "pageType": "web-api-instance-method",
    "summary": "The getReceivers() method of the RTCPeerConnection interface returns an array of RTCRtpReceiver objects, each of which represents one RTP receiver.\nEach RTP receiver manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/History_API/Working_with_the_History_API",
    "pageType": "guide",
    "summary": "The History API enables a website to interact with the browser's session history: that is, the list of pages that the user has visited in a given window. As the user visits new pages, for example by clicking links, those new pages are added to the session history. The user can also move back and forth through the history using the browser's \"Back\" and \"Forward\" buttons."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/setIdentityProvider",
    "pageType": "web-api-instance-method",
    "summary": "The setIdentityProvider() method of the RTCPeerConnection interface sets the Identity Provider (IdP) to the triplet given in parameter: its name, the protocol used to communicate with it (optional) and an optional username.\nThe IdP will be used only when an assertion is needed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigatorLogin",
    "pageType": "web-api-interface",
    "summary": "The NavigatorLogin interface of the Federated Credential Management (FedCM) API defines login functionality for federated identity providers (IdPs). Specifically, it enables a federated identity provider (IdP) to set its login status when a user signs into or out of the IdP."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/getSenders",
    "pageType": "web-api-instance-method",
    "summary": "The getSenders() method of the RTCPeerConnection interface returns an array of RTCRtpSender objects, each of which represents the RTP sender responsible for transmitting one track's data.\nA sender object provides methods and properties for examining and controlling the encoding and transmission of the track's data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NavigatorLogin/setStatus",
    "pageType": "web-api-instance-method",
    "summary": "The setStatus() method of the NavigatorLogin interface sets the login status of a federated identity provider (IdP), when called from the IdP's origin. By this, we mean \"whether any users are logged into the IdP on the current browser or not\". This should be called by the IdP site following a user login or logout."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates",
    "pageType": "web-api-instance-property",
    "summary": "The canTrickleIceCandidates read-only property of the RTCPeerConnection interface returns a boolean value which indicates whether or not the remote peer can accept trickled ICE candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_Drag_and_Drop_API",
    "pageType": "web-api-overview",
    "summary": "HTML Drag and Drop interfaces enable applications to use drag-and-drop features in browsers."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/track_event",
    "pageType": "web-api-event",
    "summary": "The track event is sent to the ontrack event handler on RTCPeerConnections after a new track has been added to an RTCRtpReceiver which is part of the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_Drag_and_Drop_API/File_drag_and_drop",
    "pageType": "guide",
    "summary": "As mentioned on the landing page, the Drag and Drop API simultaneously models three use cases: dragging elements within a page, dragging data out of a page, and dragging data into a page. This tutorial demonstrates the third use case: dragging data into a page. We will be implementing a basic drop zone that allows the user to drop image files from the user's operation system file explorer and displays them on the page. For users who can't or don't want to use drag and drop, we also provide the alternative functionality of file selection via an <input> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/createDTMFSender",
    "pageType": "web-api-instance-method",
    "summary": "The createDTMFSender() method of the RTCPeerConnection interface creates a new RTCDTMFSender object associated with the specified MediaStreamTrack, which can be used to send DTMF tones over the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations",
    "pageType": "guide",
    "summary": "Central to the Drag and Drop API are the various drag events that fire in a specific order and are expected to be handled in a specific way. This document describes the steps that occur during a drag and drop operation, and what the application is supposed to do within each handler."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/removeTrack",
    "pageType": "web-api-instance-method",
    "summary": "The removeTrack() method of the RTCPeerConnection interface tells the local end of the connection to stop sending media from the specified track, without actually removing the corresponding RTCRtpSender from the list of senders as reported by RTCPeerConnection.getSenders().\nIf the track is already stopped, or is not in the connection's senders list, this method has no effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_data_store",
    "pageType": "guide",
    "summary": "The DragEvent interface has a dataTransfer property, which is a DataTransfer object. DataTransfer objects represent the main context of the drag operation, and it stays consistent across the firing of different events. It includes the drag data, drag image, drop effect, etc. This article focuses on the data store part of the dataTransfer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event",
    "pageType": "web-api-event",
    "summary": "The WebRTC API event icecandidateerror is sent to an RTCPeerConnection if an error occurs while performing ICE negotiations through a STUN or TURN server. The event object is of type RTCPeerConnectionIceErrorEvent, and contains information describing the error in some amount of detail."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Kanban_board",
    "pageType": "guide",
    "summary": "As mentioned on the landing page, the Drag and Drop API simultaneously models three use cases: dragging elements within a page, dragging data out of a page, and dragging data into a page. This tutorial demonstrates the first use case: dragging elements within a page. We will be implementing a Kanban application, similar to the functionality provided by GitHub projects or Trello."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/addStream",
    "pageType": "web-api-instance-method",
    "summary": "The addStream() method of the RTCPeerConnection interface adds a MediaStream as a local source of audio or video.\nInstead of using this obsolete method, you should instead use addTrack() once for each track you wish to send to the remote peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender",
    "pageType": "web-api-interface",
    "summary": "The RTCRtpSender interface provides the ability to control and obtain details about how a particular MediaStreamTrack is encoded and sent to a remote peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/getIdentityAssertion",
    "pageType": "web-api-instance-method",
    "summary": "The getIdentityAssertion() method of the RTCPeerConnection interface initiates the gathering of an identity assertion.\nThis has an effect only if the signalingState is not \"closed\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/getCapabilities_static",
    "pageType": "web-api-static-method",
    "summary": "The static method RTCRtpSender.getCapabilities() returns an object describing the codec and header extension capabilities supported by the RTCRtpSender."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState",
    "pageType": "web-api-instance-property",
    "summary": "The iceConnectionState read-only property of the RTCPeerConnection interface returns a string which state of the ICE agent associated with the RTCPeerConnection: new, checking, connected, completed, failed, disconnected, and closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/setStreams",
    "pageType": "web-api-instance-method",
    "summary": "The RTCRtpSender method setStreams() associates the sender's track with the specified MediaStream objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/remoteDescription",
    "pageType": "web-api-instance-property",
    "summary": "The remoteDescription read-only property of the RTCPeerConnection interface returns a RTCSessionDescription describing the session (which includes configuration and media information) for the remote end of the connection.\nIf this hasn't been set yet, this is null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/getParameters",
    "pageType": "web-api-instance-method",
    "summary": "The getParameters() method of the RTCRtpSender interface returns an object describing the current configuration for how the sender's track will be encoded and transmitted to a remote RTCRtpReceiver."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/signalingState",
    "pageType": "web-api-instance-property",
    "summary": "The signalingState read-only property of the RTCPeerConnection interface returns a string value describing the state of the signaling process on the local end of the connection while connecting or reconnecting to another peer.\nSee Signaling in our WebRTC session lifetime page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/transport",
    "pageType": "web-api-instance-property",
    "summary": "The read-only transport property of an\nRTCRtpSender object provides the RTCDtlsTransport object\nused to interact with the underlying transport over which the sender is exchanging\nReal-time Transport Control Protocol (RTCP) packets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event",
    "pageType": "web-api-event",
    "summary": "A negotiationneeded event is sent to the RTCPeerConnection when negotiation of the connection through the signaling channel is required.\nThis occurs both during the initial setup of the connection as well as any time a change to the communication environment requires reconfiguring the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/track",
    "pageType": "web-api-instance-property",
    "summary": "The track read-only property of\nthe RTCRtpSender interface returns the MediaStreamTrack\nwhich is being handled by the RTCRtpSender."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/connectionState",
    "pageType": "web-api-instance-property",
    "summary": "The connectionState read-only property of the RTCPeerConnection interface indicates the current state of the peer connection by returning one of the following string values: new, connecting, connected, disconnected, failed, or closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/getStats",
    "pageType": "web-api-instance-method",
    "summary": "The RTCRtpSender method getStats() asynchronously requests an RTCStatsReport object which provides statistics about outgoing traffic on the RTCPeerConnection which owns the sender, returning a Promise which is fulfilled when the results are available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection",
    "pageType": "web-api-constructor",
    "summary": "The RTCPeerConnection() constructor returns a newly-created RTCPeerConnection, which represents a connection between the local device and a remote peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/transform",
    "pageType": "web-api-instance-property",
    "summary": "The transform property of the RTCRtpSender object is used to insert a transform stream (TransformStream) running in a worker thread into the sender pipeline.\nThis allows stream transforms to be applied to encoded video and audio frames after they are output by a codec, and before they are sent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/restartIce",
    "pageType": "web-api-instance-method",
    "summary": "The restartIce() method of the RTCPeerConnection interface allows a web application to request that ICE candidate gathering be redone on both ends of the connection.\nThis simplifies the process by allowing the same method to be used by either the caller or the receiver to trigger an ICE restart."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/replaceTrack",
    "pageType": "web-api-instance-method",
    "summary": "The RTCRtpSender method\nreplaceTrack() replaces the track currently being used\nas the sender's source with a new MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/getConfiguration",
    "pageType": "web-api-instance-method",
    "summary": "The getConfiguration() method of the RTCPeerConnection interface returns an object which indicates the current configuration of the RTCPeerConnection on which the method is called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/dtmf",
    "pageType": "web-api-instance-property",
    "summary": "The read-only dtmf property on the\nRTCRtpSender interface returns a\nRTCDTMFSender object which can be used to send DTMF tones\nover the RTCPeerConnection. See Using DTMF for details on how to\nmake use of the returned RTCDTMFSender object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/pendingRemoteDescription",
    "pageType": "web-api-instance-property",
    "summary": "The pendingRemoteDescription read-only property of the RTCPeerConnection interface returns an RTCSessionDescription object describing a pending configuration change for the remote end of the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCRtpSender/setParameters",
    "pageType": "web-api-instance-method",
    "summary": "The setParameters() method of the RTCRtpSender interface applies changes the configuration of sender's track, which is the MediaStreamTrack for which the RTCRtpSender is responsible."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the RTCPeerConnection interface closes the current peer connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/createOffer",
    "pageType": "web-api-instance-method",
    "summary": "The createOffer() method of the RTCPeerConnection interface initiates the creation of an SDP offer for the purpose of starting a new WebRTC connection to a remote peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BroadcastChannel/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of the BroadcastChannel interface returns a string, which uniquely identifies the given channel with its name. This name is passed to the BroadcastChannel() constructor at creation time and is therefore read-only."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BroadcastChannel",
    "pageType": "web-api-interface",
    "summary": "The BroadcastChannel interface represents a named channel that any browsing context of a given origin can subscribe to. It allows communication between different documents (in different windows, tabs, frames or iframes) of the same origin. Messages are broadcasted via a message event fired at all BroadcastChannel objects listening to the channel, except the object that sent the message."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/datachannel_event",
    "pageType": "web-api-event",
    "summary": "A datachannel event is sent to an RTCPeerConnection instance when an RTCDataChannel has been added to the connection, as a result of the remote peer calling RTCPeerConnection.createDataChannel()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BroadcastChannel/postMessage",
    "pageType": "web-api-instance-method",
    "summary": "The postMessage() method of the BroadcastChannel interface sends a message,\nwhich can be of any kind of Object,\nto each listener in any browsing context with the same origin.\nThe message is transmitted as a message event\ntargeted at each BroadcastChannel bound to the channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/getStats",
    "pageType": "web-api-instance-method",
    "summary": "The getStats() method of the RTCPeerConnection interface returns a promise which resolves with data providing statistics about either the overall connection or about the specified MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BroadcastChannel/message_event",
    "pageType": "web-api-event",
    "summary": "The message event of the BroadcastChannel interface fires when a message arrives on that channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/pendingLocalDescription",
    "pageType": "web-api-instance-property",
    "summary": "The pendingLocalDescription read-only property of the RTCPeerConnection interface returns an RTCSessionDescription object describing a pending configuration change for the local end of the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BroadcastChannel/messageerror_event",
    "pageType": "web-api-event",
    "summary": "The messageerror event of the BroadcastChannel interface fires when a message that can't be deserialized arrives on the channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/generateCertificate_static",
    "pageType": "web-api-static-method",
    "summary": "The generateCertificate() static function of the RTCPeerConnection interface creates an X.509 certificate and corresponding private key, returning a promise that resolves with the new RTCCertificate once it's generated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BroadcastChannel/BroadcastChannel",
    "pageType": "web-api-constructor",
    "summary": "The BroadcastChannel() constructor creates a new\nBroadcastChannel and connects it to the underlying channel."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription",
    "pageType": "web-api-instance-method",
    "summary": "The setLocalDescription() method of the RTCPeerConnection interface changes the local description associated with the connection.\nThis description specifies the properties of the local end of the connection, including the media format.\nThe method takes a single parameter—the session description—and it returns a Promise which is fulfilled once the description has been changed, asynchronously."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BroadcastChannel/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the BroadcastChannel interface terminates the connection to\nthe underlying channel, allowing the object to be garbage collected.\nThis is a necessary step to perform\nas there is no other way for a browser to know\nthat this channel is not needed anymore."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState",
    "pageType": "web-api-instance-property",
    "summary": "The iceGatheringState read-only property of the RTCPeerConnection interface returns a string that describes the overall ICE gathering state for this connection.\nThis lets you detect, for example, when collection of ICE candidates has finished."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GravitySensor",
    "pageType": "web-api-interface",
    "summary": "The GravitySensor interface of the Sensor APIs provides on each reading the gravity applied to the device along all three axes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/removeStream",
    "pageType": "web-api-instance-method",
    "summary": "The removeStream() method of the RTCPeerConnection interface removes a MediaStream as a local source of audio or video.\nIf the negotiation already happened, a new one will be needed for the remote peer to be able to use it.\nBecause this method has been deprecated, you should instead use removeTrack() if your target browser versions have implemented it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GravitySensor/GravitySensor",
    "pageType": "web-api-constructor",
    "summary": "The GravitySensor()\nconstructor creates a new GravitySensor object which\nprovides on each reading the gravity applied to the device along all three axes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event",
    "pageType": "web-api-event",
    "summary": "An icecandidate event is sent to an RTCPeerConnection when:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathValue",
    "pageType": "web-api-interface",
    "summary": "The CSSMathValue interface of the CSS Typed Object Model API a base class for classes representing complex numeric values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/sctp",
    "pageType": "web-api-instance-property",
    "summary": "The sctp read-only property of the RTCPeerConnection interface returns an RTCSctpTransport describing the SCTP transport over which SCTP data is being sent and received.\nIf SCTP hasn't been negotiated, this value is null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSMathValue/operator",
    "pageType": "web-api-instance-property",
    "summary": "The CSSMathValue.operator read-only\nproperty of the CSSMathValue interface indicates the operator that the\ncurrent subtype represents. For example, if the current CSSMathValue\nsubtype is CSSMathSum, this property will return the string\n\"sum\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event",
    "pageType": "web-api-event",
    "summary": "The icegatheringstatechange event is sent to the onicegatheringstatechange event handler on an RTCPeerConnection when the state of the ICE candidate gathering process changes.\nThis signifies that the value of the connection's iceGatheringState property has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchUpdateUIEvent",
    "pageType": "web-api-interface",
    "summary": "The BackgroundFetchUpdateUIEvent interface of the Background Fetch API is an event type for the backgroundfetchsuccess and backgroundfetchfail events, and provides a method for updating the title and icon of the app to inform a user of the success or failure of a background fetch."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/currentRemoteDescription",
    "pageType": "web-api-instance-property",
    "summary": "The currentRemoteDescription read-only property of the RTCPeerConnection interface returns an\nRTCSessionDescription object describing the remote end of the connection as it was most recently successfully negotiated since the last time the RTCPeerConnection finished negotiating and connecting to a remote peer.\nAlso included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchUpdateUIEvent/BackgroundFetchUpdateUIEvent",
    "pageType": "web-api-constructor",
    "summary": "The BackgroundFetchUpdateUIEvent() constructor creates a new BackgroundFetchUpdateUIEvent object. This constructor is not typically used as the browser creates these objects itself and provides them to background fetch event callbacks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/removestream_event",
    "pageType": "web-api-event",
    "summary": "The obsolete removestream event was sent to an RTCPeerConnection to inform it that a MediaStream had been removed from the connection.\nYou can use the RTCPeerConnection interface's onremovestream property to set a handler for this event."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BackgroundFetchUpdateUIEvent/updateUI",
    "pageType": "web-api-instance-method",
    "summary": "The updateUI() method of the BackgroundFetchUpdateUIEvent interface updates the title and icon in the user interface to show the status of a background fetch."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/peerIdentity",
    "pageType": "web-api-instance-property",
    "summary": "The peerIdentity read-only property of the RTCPeerConnection interface returns a JavaScript Promise that resolves to an RTCIdentityAssertion which contains a string identifying the remote peer.\nOnce this promise resolves successfully, the resulting identity is the target peer identity and cannot change for the duration of the connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats",
    "pageType": "web-api-interface",
    "summary": "The RTCVideoSourceStats dictionary of the WebRTC API provides statistics information about a video track (MediaStreamTrack) that is attached to one or more senders (RTCRtpSender)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event",
    "pageType": "web-api-event",
    "summary": "An iceconnectionstatechange event is sent to an RTCPeerConnection object each time the ICE connection state changes during the negotiation process.\nThe new ICE connection state is available in the object's iceConnectionState property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats/kind",
    "pageType": "web-api-instance-property",
    "summary": "The kind property of the RTCVideoSourceStats dictionary is a string with the value video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/addTrack",
    "pageType": "web-api-instance-method",
    "summary": "The addTrack() method of the RTCPeerConnection interface adds a new media track to the set of tracks which will be transmitted to the other peer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats/timestamp",
    "pageType": "web-api-instance-property",
    "summary": "The timestamp property of the RTCVideoSourceStats dictionary is a DOMHighResTimeStamp object specifying the time at which the data in the object was sampled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/localDescription",
    "pageType": "web-api-instance-property",
    "summary": "The localDescription read-only property of the RTCPeerConnection interface returns an RTCSessionDescription describing the session for the local end of the connection.\nIf it has not yet been set, this is null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the RTCVideoSourceStats dictionary is a string with value media-source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/setConfiguration",
    "pageType": "web-api-instance-method",
    "summary": "The setConfiguration() method of the RTCPeerConnection interface sets the current configuration of the connection based on the values included in the specified object.\nThis lets you change the ICE servers used by the connection and which transport policies to use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats/framesPerSecond",
    "pageType": "web-api-instance-property",
    "summary": "The framesPerSecond property of the RTCVideoSourceStats dictionary indicates the number of frames originating from this video source in the last second."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event",
    "pageType": "web-api-event",
    "summary": "The connectionstatechange event is sent to the onconnectionstatechange event handler on an RTCPeerConnection object after a new track has been added to an RTCRtpReceiver which is part of the connection.\nThe new connection state can be found in connectionState, and is one of the string values: new, connecting, connected, disconnected, failed, or closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats/trackIdentifier",
    "pageType": "web-api-instance-property",
    "summary": "The trackIdentifier property of the RTCVideoSourceStats dictionary contains the id attribute of the associated MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats/height",
    "pageType": "web-api-instance-property",
    "summary": "The height property of the RTCVideoSourceStats dictionary indicates the height, in pixels, of the last frame originating from this source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/congestionControl",
    "pageType": "web-api-instance-property",
    "summary": "The congestionControl read-only property of the WebTransport interface indicates the application's preference for either high throughput or low-latency when sending data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats/width",
    "pageType": "web-api-instance-property",
    "summary": "The width property of the RTCVideoSourceStats dictionary indicates the width, in pixels, of the last frame originating from this source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/incomingUnidirectionalStreams",
    "pageType": "web-api-instance-property",
    "summary": "The incomingUnidirectionalStreams read-only property of the WebTransport interface represents one or more unidirectional streams opened by the server. Returns a ReadableStream of WebTransportReceiveStream objects. Each one can be used to reliably read data from the server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats/id",
    "pageType": "web-api-instance-property",
    "summary": "The id property of the RTCVideoSourceStats dictionary is a string which uniquely identifies the object for which this object provides statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/createBidirectionalStream",
    "pageType": "web-api-instance-method",
    "summary": "The createBidirectionalStream() method of the WebTransport interface asynchronously opens and returns a bidirectional stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCVideoSourceStats/frames",
    "pageType": "web-api-instance-property",
    "summary": "The frames property of the RTCVideoSourceStats dictionary indicates the total number of frames originating from this video source over its lifetime."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport",
    "pageType": "web-api-interface",
    "summary": "The WebTransport interface of the WebTransport API provides functionality to enable a user agent to connect to an HTTP/3 server, initiate reliable and unreliable transport in either or both directions, and close the connection once it is no longer needed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AesCtrParams",
    "pageType": "web-api-interface",
    "summary": "The AesCtrParams dictionary of the Web Crypto API represents the object that should be passed as the algorithm parameter into SubtleCrypto.encrypt(), SubtleCrypto.decrypt(), SubtleCrypto.wrapKey(), or SubtleCrypto.unwrapKey(), when using the AES-CTR algorithm."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/reliability",
    "pageType": "web-api-instance-property",
    "summary": "The reliability read-only property of the WebTransport interface indicates whether the connection supports reliable transports only, or whether it also supports unreliable transports (such as UDP)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Encoding_API",
    "pageType": "web-api-overview",
    "summary": "The Encoding API enables web developers to work with text that is represented in character encodings systems other than the encoding used internally by JavaScript strings. In particular, it enables developers to convert text between JavaScript strings and the UTF-8 encoding that is used for most documents on the web."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/datagrams",
    "pageType": "web-api-instance-property",
    "summary": "The datagrams read-only property of the WebTransport interface returns a WebTransportDatagramDuplexStream instance that can be used to send and receive datagrams — unreliable data transmission."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Encoding_API/Encodings",
    "pageType": "guide",
    "summary": "The constructors for the Encoding API interfaces TextDecoder and TextDecoderStream can be passed an optional label argument, which identifies the encoding to be used."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/WebTransport",
    "pageType": "web-api-constructor",
    "summary": "The WebTransport() constructor creates a new WebTransport object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer",
    "pageType": "web-api-interface",
    "summary": "The ServiceWorkerContainer interface of the Service Worker API provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the WebTransport interface closes an ongoing WebTransport session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer/controller",
    "pageType": "web-api-instance-property",
    "summary": "The controller read-only property of the ServiceWorkerContainer interface represents the active service worker controlling the current page (associated with this ServiceWorkerContainer), or null if the page has no active or activating service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/ready",
    "pageType": "web-api-instance-property",
    "summary": "The ready read-only property of the WebTransport interface returns a promise that resolves when the transport is ready to use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer/message_event",
    "pageType": "web-api-event",
    "summary": "The message event is used in a page controlled by a service worker to receive messages from the service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/getStats",
    "pageType": "web-api-instance-method",
    "summary": "The getStats() method of the WebTransport interface asynchronously returns an object containing HTTP/3 connection statistics."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer/getRegistrations",
    "pageType": "web-api-instance-method",
    "summary": "The getRegistrations() method of the\nServiceWorkerContainer interface gets all\nServiceWorkerRegistrations associated with a\nServiceWorkerContainer, in an array. The method returns a\nPromise that resolves to an array of\nServiceWorkerRegistration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/createUnidirectionalStream",
    "pageType": "web-api-instance-method",
    "summary": "The createUnidirectionalStream() method of the WebTransport interface asynchronously opens a unidirectional stream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer/register",
    "pageType": "web-api-instance-method",
    "summary": "The register() method of the ServiceWorkerContainer interface creates or updates a ServiceWorkerRegistration for the given scope.\nIf successful, the registration associates the provided script URL to a scope, which is subsequently used for matching documents to a specific service worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/incomingBidirectionalStreams",
    "pageType": "web-api-instance-property",
    "summary": "The incomingBidirectionalStreams read-only property of the WebTransport interface represents one or more bidirectional streams opened by the server. Returns a ReadableStream of WebTransportBidirectionalStream objects. Each one can be used to reliably read data from the server and write data back to it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer/messageerror_event",
    "pageType": "web-api-event",
    "summary": "The messageerror event is fired to the ServiceWorkerContainer when an incoming message sent to the associated worker can't be deserialized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/WebTransport/closed",
    "pageType": "web-api-instance-property",
    "summary": "The closed read-only property of the WebTransport interface returns a promise that resolves when the transport is closed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer/startMessages",
    "pageType": "web-api-instance-method",
    "summary": "The startMessages() method of\nthe ServiceWorkerContainer interface explicitly starts the flow of\nmessages being dispatched from a service worker to pages under its control (e.g., sent\nvia Client.postMessage()). This can be used to react to sent messages\nearlier, even before that page's content has finished loading."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEFuncAElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEFuncAElement interface corresponds to the <feFuncA> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer/ready",
    "pageType": "web-api-instance-property",
    "summary": "The ready read-only property of the ServiceWorkerContainer interface provides a way of delaying code execution until a service worker is active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ByteLengthQueuingStrategy",
    "pageType": "web-api-interface",
    "summary": "The ByteLengthQueuingStrategy interface of the Streams API provides a built-in byte length queuing strategy that can be used when constructing streams."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer/getRegistration",
    "pageType": "web-api-instance-method",
    "summary": "The getRegistration() method of the\nServiceWorkerContainer interface gets a\nServiceWorkerRegistration object whose scope URL matches the provided\nclient URL. The method returns a Promise that resolves to\na ServiceWorkerRegistration or undefined."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ByteLengthQueuingStrategy/size",
    "pageType": "web-api-instance-method",
    "summary": "The size() method of the\nByteLengthQueuingStrategy interface returns the given chunk's\nbyteLength property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ServiceWorkerContainer/controllerchange_event",
    "pageType": "web-api-event",
    "summary": "The controllerchange event of the ServiceWorkerContainer interface fires when the document's associated ServiceWorkerRegistration acquires a new active worker."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ByteLengthQueuingStrategy/highWaterMark",
    "pageType": "web-api-instance-property",
    "summary": "The read-only ByteLengthQueuingStrategy.highWaterMark property returns the total number of bytes that can be contained in the internal queue before backpressure is applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyMessageEvent",
    "pageType": "web-api-interface",
    "summary": "The MediaKeyMessageEvent interface of the Encrypted Media Extensions API contains the content and related data when the content decryption module generates a message for the session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ByteLengthQueuingStrategy/ByteLengthQueuingStrategy",
    "pageType": "web-api-constructor",
    "summary": "The ByteLengthQueuingStrategy()\nconstructor creates and returns a ByteLengthQueuingStrategy object\ninstance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyMessageEvent/messageType",
    "pageType": "web-api-instance-property",
    "summary": "The MediaKeyMessageEvent.messageType read-only property indicates the\ntype of message. It may be one of license-request,\nlicense-renewal, license-release, or\nindividualization-request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyMessageEvent/MediaKeyMessageEvent",
    "pageType": "web-api-constructor",
    "summary": "The MediaKeyMessageEvent constructor creates a new MediaKeyMessageEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FeaturePolicy/features",
    "pageType": "web-api-instance-method",
    "summary": "The features() method of the\nFeaturePolicy interface returns a list of names of all features\nsupported by the User Agent. Feature whose name appears on the list might not be\nallowed by the Permissions Policy of the current execution context and/or might not be\naccessible because of user's permissions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FeaturePolicy",
    "pageType": "web-api-interface",
    "summary": "The FeaturePolicy interface represents the set of Permissions Policies applied to the current execution context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaKeyMessageEvent/message",
    "pageType": "web-api-instance-property",
    "summary": "The MediaKeyMessageEvent.message read-only property\nreturns an ArrayBuffer with a message from the content decryption module.\nMessages vary by key system."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FeaturePolicy/allowedFeatures",
    "pageType": "web-api-instance-method",
    "summary": "The allowedFeatures() method of\nthe FeaturePolicy interface returns a list of directive names of all\nfeatures allowed by the Permissions Policy. This enables introspection of individual directives\nof the Permissions Policy it is run on. As such, allowedFeatures() method\nreturns a subset of directives returned by features()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentIndex",
    "pageType": "web-api-interface",
    "summary": "The ContentIndex interface of the Content Index API allows developers to register their offline enabled content with the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FeaturePolicy/allowsFeature",
    "pageType": "web-api-instance-method",
    "summary": "The allowsFeature() method of\nthe FeaturePolicy interface enables introspection of individual\ndirectives of the Permissions Policy it is run on. It returns a Boolean\nthat is true if and only if the specified feature is allowed in the\nspecified context (or the default context if no context is specified)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentIndex/add",
    "pageType": "web-api-instance-method",
    "summary": "The add() method of the\nContentIndex interface registers an item with the content index."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/FeaturePolicy/getAllowlistForFeature",
    "pageType": "web-api-instance-method",
    "summary": "The getAllowlistForFeature()\nmethod of the FeaturePolicy interface enables querying of the allowlist for a specific feature for the current Permissions Policy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentIndex/delete",
    "pageType": "web-api-instance-method",
    "summary": "The delete() method of the\nContentIndex interface unregisters an item from the currently indexed\ncontent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ContentIndex/getAll",
    "pageType": "web-api-instance-method",
    "summary": "The getAll() method of the\nContentIndex interface returns a Promise that resolves with\nan iterable list of content index entries."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Text/wholeText",
    "pageType": "web-api-instance-property",
    "summary": "The read-only wholeText property of the Text interface\nreturns the full text of all Text nodes logically adjacent to the node.\nThe text is concatenated in document order.\nThis allows specifying any text node and obtaining all adjacent text as a single string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Text",
    "pageType": "web-api-interface",
    "summary": "The Text interface represents a text node in a DOM tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Text/splitText",
    "pageType": "web-api-instance-method",
    "summary": "The splitText() method of the Text interface\nbreaks the Text node into two nodes at the specified offset,\nkeeping both nodes in the tree as siblings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Text/Text",
    "pageType": "web-api-constructor",
    "summary": "The Text() constructor returns a new Text object\nwith the optional string given in parameter as its textual content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Text/assignedSlot",
    "pageType": "web-api-instance-property",
    "summary": "The read-only assignedSlot property of the Text interface\nreturns the HTMLSlotElement object associated with the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/referrer",
    "pageType": "web-api-instance-property",
    "summary": "The Document.referrer property returns the URI of the page that linked to\nthis page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming",
    "pageType": "web-api-interface",
    "summary": "The PerformanceTiming interface is a legacy interface kept for backwards compatibility and contains properties that offer performance timing information for various events which occur during the loading and use of the current page. You get a PerformanceTiming object describing your page using the window.performance.timing property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/hasFocus",
    "pageType": "web-api-instance-method",
    "summary": "The hasFocus() method of the Document interface returns a boolean value indicating whether the document or any element inside the document has focus.\nThis method can be used to determine whether the active element in a document has focus."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/domainLookupEnd",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.domainLookupEnd\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, where the domain lookup is finished. If a\npersistent connection is used, or the information is stored in a cache or a local\nresource, the value will be the same as PerformanceTiming.fetchStart."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/children",
    "pageType": "web-api-instance-property",
    "summary": "The read-only children property returns a live HTMLCollection\nwhich contains all of the child elements of the document upon which it was called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/unloadEventStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.unloadEventStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, the unload event has been thrown. If\nthere is no previous document, or if the previous document, or one of the needed\nredirects, is not of the same origin, the value returned is 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/adoptNode",
    "pageType": "web-api-instance-method",
    "summary": "Document.adoptNode() transfers a node from another document into the method's document.\nThe adopted node and its subtree are removed from their original document (if any), and their ownerDocument is changed to the current document.\nThe node can then be inserted into the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/requestStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.requestStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, when the browser sent the request to obtain the\nactual document, from the server or from a cache. If the transport layer fails after the\nstart of the request and the connection is reopened, this property will be set to the\ntime corresponding to the new request."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/compatMode",
    "pageType": "web-api-instance-property",
    "summary": "The Document.compatMode read-only property indicates\nwhether the document is rendered in Quirks mode or\nStandards mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/domContentLoadedEventEnd",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.domContentLoadedEventEnd\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, right after all the scripts that need to be\nexecuted as soon as possible, in order or not, has been executed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/getAnimations",
    "pageType": "web-api-instance-method",
    "summary": "The getAnimations() method of the Document interface\nreturns an array of all Animation objects currently in effect whose\ntarget elements are descendants of the document. This array includes CSS Animations, CSS Transitions, and Web Animations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/unloadEventEnd",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.unloadEventEnd\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, the unload event handler finishes. If\nthere is no previous document, or if the previous document, or one of the needed\nredirects, is not of the same origin, the value returned is 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The Document.readyState property describes the loading state of the document.\nWhen the value of this property changes, a readystatechange event fires on the document object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/fetchStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.fetchStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, the browser is ready to fetch the document using\nan HTTP request. This moment is before the check to any application cache."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document",
    "pageType": "web-api-interface",
    "summary": "The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/currentScript",
    "pageType": "web-api-instance-property",
    "summary": "The Document.currentScript property returns the <script> element whose script is currently being processed and isn't a JavaScript module. (For modules use import.meta instead.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/secureConnectionStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.secureConnectionStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, where the secure connection handshake starts. If\nno such connection is requested, it returns 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/getElementById",
    "pageType": "web-api-instance-method",
    "summary": "The getElementById() method of the Document interface returns an Element object representing the element whose id property matches the specified string. Since element IDs are required to be unique if specified, they're a useful way to get access to a specific element quickly."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The legacy toJSON() method of the PerformanceTiming interface is a serializer; it returns a JSON representation of the PerformanceTiming object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/timeline",
    "pageType": "web-api-instance-property",
    "summary": "The timeline readonly property of the Document interface represents the default timeline of the current document. This timeline is a special instance of DocumentTimeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/navigationStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.navigationStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, right after the prompt for unload terminates on\nthe previous document in the same browsing context. If there is no previous document,\nthis value will be the same as PerformanceTiming.fetchStart."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/open",
    "pageType": "web-api-instance-method",
    "summary": "The Document.open() method opens a document for\nwriting."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/connectEnd",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.connectEnd\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, where the connection is opened network. If the\ntransport layer reports an error and the connection establishment is started again, the\nlast connection establishment end time is given. If a persistent connection is used, the\nvalue will be the same as PerformanceTiming.fetchStart. A connection is\nconsidered as opened when all secure connection handshake, or SOCKS authentication, is\nterminated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/selectionchange_event",
    "pageType": "web-api-event",
    "summary": "The selectionchange event of the Selection API is fired when the current Selection of a Document is changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/responseStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.responseStart\nread-only property returns an unsigned long long representing the moment in\ntime (in milliseconds since the UNIX epoch) when the browser received the first byte of\nthe response from the server, cache, or local resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/scrollsnapchanging_event",
    "pageType": "web-api-event",
    "summary": "The scrollsnapchanging event of the Document interface is fired on the scroll container when the browser determines a new scroll snap target is pending, i.e., it will be selected when the current scroll gesture ends."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/loadEventEnd",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.loadEventEnd\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, when the load event handler\nterminated, that is when the load event is completed. If this event has not yet been\nsent, or is not yet completed, it returns 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/afterscriptexecute_event",
    "pageType": "web-api-event",
    "summary": "The afterscriptexecute event fires when a static <script> element finishes executing its script. It does not fire if the element is added dynamically, such as with appendChild()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/domContentLoadedEventStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.domContentLoadedEventStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, right before the parser sent the\nDOMContentLoaded event, that is right after all the scripts that need to be\nexecuted right after parsing has been executed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/prerenderingchange_event",
    "pageType": "web-api-event",
    "summary": "The prerenderingchange event is fired on a prerendered document when it is activated (i.e., the user views the page)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/redirectStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.redirectStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, the first HTTP redirect starts. If there is no\nredirect, or if one of the redirect is not of the same origin, the value returned is\n0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/pointerlockchange_event",
    "pageType": "web-api-event",
    "summary": "The pointerlockchange event is fired when the pointer is locked/unlocked."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/responseEnd",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.responseEnd\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, when the browser received the last byte of the\nresponse, or when the connection is closed if this happened first, from the server from\na cache or from a local resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/querySelector",
    "pageType": "web-api-instance-method",
    "summary": "The Document method querySelector()\nreturns the first Element within the document that matches the specified\nCSS selector, or group of CSS selectors. If no matches are found, null is returned."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/connectStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.connectStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, where the request to open a connection is sent to\nthe network. If the transport layer reports an error and the connection establishment is\nstarted again, the last connection establishment start time is given. If a persistent\nconnection is used, the value will be the same as\nPerformanceTiming.fetchStart."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/exitPointerLock",
    "pageType": "web-api-instance-method",
    "summary": "The exitPointerLock() method of the Document interface asynchronously releases a pointer lock previously requested through Element.requestPointerLock."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/domainLookupStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.domainLookupStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, where the domain lookup starts. If a persistent\nconnection is used, or the information is stored in a cache or a local resource, the\nvalue will be the same as PerformanceTiming.fetchStart."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/DOMContentLoaded_event",
    "pageType": "web-api-event",
    "summary": "The DOMContentLoaded event fires when the HTML document has been completely parsed, and all deferred scripts (<script defer src=\"…\"> and <script type=\"module\">) have downloaded and executed. It doesn't wait for other things like images, subframes, and async scripts to finish loading."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/domInteractive",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.domInteractive\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, when the parser finished its work on the main\ndocument, that is when its Document.readyState changes to\n'interactive' and the corresponding readystatechange event is\nthrown."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/execCommand",
    "pageType": "web-api-instance-method",
    "summary": "The execCommand method implements multiple different commands. Some of them provide access to the clipboard, while others are for editing form inputs, contenteditable elements or entire documents (when switched to design mode)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/loadEventStart",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.loadEventStart\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, when the load event was sent for the\ncurrent document. If this event has not yet been sent, it returns 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/domain",
    "pageType": "web-api-instance-property",
    "summary": "The domain property of the Document\ninterface gets/sets the domain portion of the origin of the current\ndocument, as used by the same-origin policy."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/domLoading",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.domLoading\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, when the parser started its work, that is when its\nDocument.readyState changes to 'loading' and the\ncorresponding readystatechange event is thrown."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/visibilityState",
    "pageType": "web-api-instance-property",
    "summary": "The Document.visibilityState\nread-only property returns the visibility of the document. It can be used to check whether the document is in the background or in a minimized window, or is otherwise not visible to the user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/redirectEnd",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.redirectEnd\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, the last HTTP redirect is completed, that is when\nthe last byte of the HTTP response has been received. If there is no redirect, or if one\nof the redirect is not of the same origin, the value returned is 0."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/pointerLockElement",
    "pageType": "web-api-instance-property",
    "summary": "The pointerLockElement read-only property of the Document interface provides the element set as the target for mouse events while the pointer is locked.\nIt is null if lock is pending, pointer is unlocked, or the target is in another document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PerformanceTiming/domComplete",
    "pageType": "web-api-instance-property",
    "summary": "The legacy\nPerformanceTiming.domComplete\nread-only property returns an unsigned long long representing the moment,\nin milliseconds since the UNIX epoch, when the parser finished its work on the main\ndocument, that is when its Document.readyState changes to\n'complete' and the corresponding readystatechange event is\nthrown."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/pictureInPictureElement",
    "pageType": "web-api-instance-property",
    "summary": "The read-only pictureInPictureElement property of the Document\ninterface returns the Element that is currently being\npresented in picture-in-picture mode in this document, or null if\npicture-in-picture mode is not currently in use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DragEvent",
    "pageType": "web-api-interface",
    "summary": "The DragEvent interface is a DOM event that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/elementFromPoint",
    "pageType": "web-api-instance-method",
    "summary": "The elementFromPoint()\nmethod, available on the Document object, returns the topmost Element at the specified coordinates\n(relative to the viewport)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DragEvent/DragEvent",
    "pageType": "web-api-constructor",
    "summary": "This constructor is used to create a synthetic DragEvent object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/bgColor",
    "pageType": "web-api-instance-property",
    "summary": "The deprecated bgColor property gets or sets the background color of the\ncurrent document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DragEvent/dataTransfer",
    "pageType": "web-api-instance-property",
    "summary": "The DragEvent.dataTransfer read-only property holds the drag\noperation's data (as a DataTransfer object)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/rootElement",
    "pageType": "web-api-instance-property",
    "summary": "Document.rootElement returns the Element\nthat is the root element of the document if it is an\n<svg> element, otherwise null. It is deprecated in favor of\nDocument.documentElement, which returns the root element for all\ndocuments."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBReader/read",
    "pageType": "web-api-instance-method",
    "summary": "The read() method of the ReadableStreamBYOBReader interface is used to read data into a view on a user-supplied buffer from an associated readable byte stream.\nA request for data will be satisfied from the stream's internal queues if there is any data present.\nIf the stream queues are empty, the request may be supplied as a zero-copy transfer from the underlying byte source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createAttribute",
    "pageType": "web-api-instance-method",
    "summary": "The Document.createAttribute() method creates a new\nattribute node, and returns it. The object created is a node implementing the\nAttr interface. The DOM does not enforce what sort of attributes can be\nadded to a particular element in this manner."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBReader",
    "pageType": "web-api-interface",
    "summary": "The ReadableStreamBYOBReader interface of the Streams API defines a reader for a ReadableStream that supports zero-copy reading from an underlying byte source.\nIt is used for efficient copying from underlying sources where the data is delivered as an \"anonymous\" sequence of bytes, such as files."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/head",
    "pageType": "web-api-instance-property",
    "summary": "The head read-only property of\nthe Document interface returns the <head> element of\nthe current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBReader/releaseLock",
    "pageType": "web-api-instance-method",
    "summary": "The releaseLock() method of the ReadableStreamBYOBReader interface releases the reader's lock on the stream.\nAfter the lock is released, the reader is no longer active."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createAttributeNS",
    "pageType": "web-api-instance-method",
    "summary": "The Document.createAttributeNS() method creates a new attribute node\nwith the specified namespace URI and qualified name, and returns it.\nThe object created is a node implementing the\nAttr interface. The DOM does not enforce what sort of attributes can be\nadded to a particular element in this manner."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBReader/cancel",
    "pageType": "web-api-instance-method",
    "summary": "The cancel() method of the ReadableStreamBYOBReader interface returns a Promise that resolves when the stream is canceled.\nCalling this method signals a loss of interest in the stream by a consumer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/write",
    "pageType": "web-api-instance-method",
    "summary": "The write() method of the Document interface writes text in one or more TrustedHTML or string parameters to a document stream opened by document.open()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBReader/ReadableStreamBYOBReader",
    "pageType": "web-api-constructor",
    "summary": "The ReadableStreamBYOBReader() constructor creates and returns a ReadableStreamBYOBReader object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/fullscreen",
    "pageType": "web-api-instance-property",
    "summary": "The obsolete Document interface's fullscreen read-only property reports whether or not the document is currently displaying content in fullscreen mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/ReadableStreamBYOBReader/closed",
    "pageType": "web-api-instance-property",
    "summary": "The closed read-only property of the ReadableStreamBYOBReader interface returns a Promise that fulfills when the stream closes, or rejects if the stream throws an error or the reader's lock is released."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/requestStorageAccessFor",
    "pageType": "web-api-instance-method",
    "summary": "The requestStorageAccessFor() method of the Document interface allows top-level sites to request third-party cookie access on behalf of embedded content originating from another site in the same related website set. It returns a Promise that resolves if the access was granted, and rejects if access was denied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/children",
    "pageType": "web-api-instance-property",
    "summary": "The read-only children property returns a live HTMLCollection\nwhich contains all of the child elements of the document fragment upon which it was called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/requestStorageAccess",
    "pageType": "web-api-instance-method",
    "summary": "The requestStorageAccess() method of the Document interface allows content loaded in a third-party context (i.e., embedded in an <iframe>) to request access to third-party cookies and unpartitioned state. This is relevant to user agents that, by default, block access to third-party, unpartitioned cookies to improve privacy (e.g., to prevent tracking), and is part of the Storage Access API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment",
    "pageType": "web-api-interface",
    "summary": "The DocumentFragment interface represents a minimal document object that has no parent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/writeln",
    "pageType": "web-api-instance-method",
    "summary": "The writeln() method of the Document interface writes text in one or more TrustedHTML or string parameters to a document stream opened by document.open(), followed by a newline character."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/getElementById",
    "pageType": "web-api-instance-method",
    "summary": "The getElementById() method of the DocumentFragment returns an Element object representing the element whose id property matches the specified string. Since element IDs are required to be unique if specified, they're a useful way to get access to a specific element quickly."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/querySelector",
    "pageType": "web-api-instance-method",
    "summary": "The DocumentFragment.querySelector() method returns the\nfirst element, or null if no matches are found, within the\nDocumentFragment (using depth-first pre-order traversal of the\ndocument's nodes) that matches the specified group of selectors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/parseHTML_static",
    "pageType": "web-api-static-method",
    "summary": "The parseHTML() static method of the Document object provides an XSS-safe method to parse and sanitize a string of HTML in order to create a new Document instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/querySelectorAll",
    "pageType": "web-api-instance-method",
    "summary": "The DocumentFragment.querySelectorAll() method returns a\nNodeList of elements within the DocumentFragment (using\ndepth-first pre-order traversal of the document's nodes) that matches the specified\ngroup of selectors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/queryCommandState",
    "pageType": "web-api-instance-method",
    "summary": "The queryCommandState() method will tell you if the current selection has a certain Document.execCommand() command applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/append",
    "pageType": "web-api-instance-method",
    "summary": "The DocumentFragment.append() method\ninserts a set of Node objects or strings after\nthe last child of the document fragment. Strings\nare inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/importNode",
    "pageType": "web-api-instance-method",
    "summary": "The Document object's importNode() method creates a copy of a\nNode or DocumentFragment from another document, to be\ninserted into the current document later."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/DocumentFragment",
    "pageType": "web-api-constructor",
    "summary": "The DocumentFragment() constructor returns a new, empty\nDocumentFragment object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/fgColor",
    "pageType": "web-api-instance-property",
    "summary": "fgColor gets/sets the foreground color, or text color, of\nthe current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/replaceChildren",
    "pageType": "web-api-instance-method",
    "summary": "The DocumentFragment.replaceChildren() method replaces the\nexisting children of a DocumentFragment with a specified new set of children. These\ncan be string or Node objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/fullscreenchange_event",
    "pageType": "web-api-event",
    "summary": "The fullscreenchange event is fired immediately after the browser switches into or out of fullscreen mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/childElementCount",
    "pageType": "web-api-instance-property",
    "summary": "The DocumentFragment.childElementCount read-only property\nreturns the number of child elements of a DocumentFragment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/fullscreenElement",
    "pageType": "web-api-instance-property",
    "summary": "The\nDocument.fullscreenElement read-only\nproperty returns the Element that is currently being presented in\nfullscreen mode in this document, or null if fullscreen mode is not\ncurrently in use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/prepend",
    "pageType": "web-api-instance-method",
    "summary": "The DocumentFragment.prepend() method\ninserts a set of Node objects or strings before\nthe first child of the document fragment. Strings\nare inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/beforescriptexecute_event",
    "pageType": "web-api-event",
    "summary": "The beforescriptexecute event fires when a static <script> is about to start executing. It does not fire if the element is added dynamically, such as with appendChild()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/lastElementChild",
    "pageType": "web-api-instance-property",
    "summary": "The DocumentFragment.lastElementChild read-only property\nreturns the document fragment's last child Element, or null if there\nare no child elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/lastModified",
    "pageType": "web-api-instance-property",
    "summary": "The lastModified property of the Document\ninterface returns a string containing the date and local time on which the current document\nwas last modified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/firstElementChild",
    "pageType": "web-api-instance-property",
    "summary": "The DocumentFragment.firstElementChild read-only property\nreturns the document fragment's first child Element, or null if there\nare no child elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentFragment/moveBefore",
    "pageType": "web-api-instance-method",
    "summary": "The moveBefore() method of the DocumentFragment interface moves a given Node inside the invoking DocumentFragment as a direct child, before a given reference node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/all",
    "pageType": "web-api-instance-property",
    "summary": "The Document interface's read-only all property returns an HTMLAllCollection rooted at the document node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBuffer",
    "pageType": "web-api-interface",
    "summary": "The GPUBuffer interface of the WebGPU API represents a block of memory that can be used to store raw data to use in GPU operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/querySelectorAll",
    "pageType": "web-api-instance-method",
    "summary": "The Document method querySelectorAll()\nreturns a static (not live) NodeList representing a list of the\ndocument's elements that match the specified group of selectors."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBuffer/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUBuffer interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/preferredStyleSheetSet",
    "pageType": "web-api-instance-property",
    "summary": "The preferredStyleSheetSet property returns the preferred style sheet set as set by the page\nauthor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBuffer/getMappedRange",
    "pageType": "web-api-instance-method",
    "summary": "The getMappedRange() method of the\nGPUBuffer interface returns an ArrayBuffer containing the mapped contents of the GPUBuffer in the specified range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/body",
    "pageType": "web-api-instance-property",
    "summary": "The Document.body property represents the\n<body> or <frameset> node of the current document, or\nnull if no such element exists."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBuffer/size",
    "pageType": "web-api-instance-property",
    "summary": "The size read-only property of the\nGPUBuffer interface represents the length of the GPUBuffer's memory allocation, in bytes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/URL",
    "pageType": "web-api-instance-property",
    "summary": "The URL read-only property of the Document\ninterface returns the document location as a string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBuffer/unmap",
    "pageType": "web-api-instance-method",
    "summary": "The unmap() method of the\nGPUBuffer interface unmaps the mapped range of the GPUBuffer, making its contents available for use by the GPU again after it has previously been mapped with GPUBuffer.mapAsync() (the GPU cannot access a mapped GPUBuffer)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/cookie",
    "pageType": "web-api-instance-property",
    "summary": "The Document property cookie lets you read and write cookies associated with the document.\nIt serves as a getter and setter for the actual values of the cookies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBuffer/mapAsync",
    "pageType": "web-api-instance-method",
    "summary": "The mapAsync() method of the\nGPUBuffer interface maps the specified range of the GPUBuffer. It returns a Promise that resolves when the GPUBuffer's content is ready to be accessed. While the GPUBuffer is mapped it cannot be used in any GPU commands."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/linkColor",
    "pageType": "web-api-instance-property",
    "summary": "The Document.linkColor property gets/sets the color of\nlinks within the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBuffer/usage",
    "pageType": "web-api-instance-property",
    "summary": "The usage read-only property of the\nGPUBuffer interface contains the bitwise flags representing the allowed usages of the GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createDocumentFragment",
    "pageType": "web-api-instance-method",
    "summary": "Creates a new empty DocumentFragment into which\nDOM nodes can be added to build an offscreen DOM tree."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBuffer/destroy",
    "pageType": "web-api-instance-method",
    "summary": "The destroy() method of the\nGPUBuffer interface destroys the GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/contentType",
    "pageType": "web-api-instance-property",
    "summary": "The Document.contentType read-only property returns the\nMIME type that the document is being rendered as. This may come from HTTP headers or\nother sources of MIME information, and might be affected by automatic type conversions\nperformed by either the browser or extensions."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUBuffer/mapState",
    "pageType": "web-api-instance-property",
    "summary": "The mapState read-only property of the\nGPUBuffer interface represents the mapped state of the GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/embeds",
    "pageType": "web-api-instance-property",
    "summary": "The embeds read-only property of the\nDocument interface returns a list of the embedded\n<embed> elements within the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericArray",
    "pageType": "web-api-interface",
    "summary": "The CSSNumericArray interface of the CSS Typed Object Model API contains a list of CSSNumericValue objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createTextNode",
    "pageType": "web-api-instance-method",
    "summary": "Creates a new Text node. This method can be used to escape HTML\ncharacters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSNumericArray/length",
    "pageType": "web-api-instance-property",
    "summary": "The read-only length property of the\nCSSNumericArray interface returns the number of\nCSSNumericValue objects in the list."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/designMode",
    "pageType": "web-api-instance-property",
    "summary": "document.designMode controls whether the entire document\nis editable. Valid values are \"on\" and \"off\". According to the\nspecification, this property is meant to default to \"off\". Firefox follows\nthis standard. The earlier versions of Chrome and IE default to \"inherit\".\nStarting in Chrome 43, the default is \"off\" and \"inherit\" is\nno longer supported. In IE6-10, the value is capitalized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CreateMonitor",
    "pageType": "web-api-interface",
    "summary": "The CreateMonitor interface provides information on the progress of an AI model download or some fine-tuning data for the model."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createEvent",
    "pageType": "web-api-instance-method",
    "summary": "Creates an event of the type specified. The\nreturned object should be first initialized and can then be passed to\nEventTarget.dispatchEvent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CreateMonitor/downloadprogress_event",
    "pageType": "web-api-event",
    "summary": "The downloadprogress event of the CreateMonitor interface is fired when progress is made on the AI model download."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/plugins",
    "pageType": "web-api-instance-property",
    "summary": "The plugins read-only property of the\nDocument interface returns an HTMLCollection object\ncontaining one or more HTMLEmbedElements representing the\n<embed> elements in the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePair",
    "pageType": "web-api-interface",
    "summary": "The RTCIceCandidatePair dictionary describes a pair of ICE candidates which together comprise a description of a viable connection between two WebRTC endpoints. It is used as the return value from RTCIceTransport.getSelectedCandidatePair() to identify the currently-selected candidate pair identified by the ICE agent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/browsingTopics",
    "pageType": "web-api-instance-method",
    "summary": "The browsingTopics() method of the Document interface returns a promise that fulfills with an array of objects representing the top topics for the user, one from each of the last three epochs. These topics could then be returned to the ad tech platform in a subsequent fetch request. By default, the method also causes the browser to record the current page visit as observed by the caller, so the page's hostname can later be used in topics calculation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePair/local",
    "pageType": "web-api-instance-property",
    "summary": "The local property of the RTCIceCandidatePair dictionary specifies the RTCIceCandidate which describes the configuration of the local end of a viable WebRTC connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/queryCommandSupported",
    "pageType": "web-api-instance-method",
    "summary": "The Document.queryCommandSupported() method reports\nwhether or not the specified editor command is supported by the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidatePair/remote",
    "pageType": "web-api-instance-property",
    "summary": "The remote property of the\nRTCIceCandidatePair dictionary specifies the\nRTCIceCandidate describing the configuration of the remote end of a\nviable WebRTC connection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createRange",
    "pageType": "web-api-instance-method",
    "summary": "The Document.createRange() method returns a new\nRange object whose start and end are offset 0 of the Document\nobject on which it was called."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableColElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLTableColElement interface provides properties for manipulating single or grouped table column elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/scrollsnapchange_event",
    "pageType": "web-api-event",
    "summary": "The scrollsnapchange event of the Document interface is fired on the document scroll container at the end of a scrolling operation when a new scroll snap target is selected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableColElement/align",
    "pageType": "web-api-instance-property",
    "summary": "The align property of the HTMLTableColElement interface is a string indicating how to horizontally align text in a table <col> column element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createTreeWalker",
    "pageType": "web-api-instance-method",
    "summary": "The Document.createTreeWalker() creator method returns a newly created TreeWalker object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableColElement/vAlign",
    "pageType": "web-api-instance-property",
    "summary": "The vAlign property of the HTMLTableColElement interface is a string indicating how to vertically align text in a table <col> column element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/fonts",
    "pageType": "web-api-instance-property",
    "summary": "The fonts property of the Document interface returns the FontFaceSet interface of the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableColElement/chOff",
    "pageType": "web-api-instance-property",
    "summary": "The chOff property of the HTMLTableColElement interface does nothing. It reflects the charoff attribute of the <col> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/defaultView",
    "pageType": "web-api-instance-property",
    "summary": "In browsers, document.defaultView returns the\nwindow object associated with a document, or null if none is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableColElement/span",
    "pageType": "web-api-instance-property",
    "summary": "The span property of the HTMLTableColElement interface represents the number of columns this <col> or <colgroup> must span; this lets the column occupy space across multiple columns of the table. It reflects the span attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/getElementsByName",
    "pageType": "web-api-instance-method",
    "summary": "The getElementsByName() method\nof the Document object returns a NodeList Collection of\nelements with a given name attribute in the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLTableColElement/ch",
    "pageType": "web-api-instance-property",
    "summary": "The ch property of the HTMLTableColElement interface does nothing. It reflects the char attribute of the <col> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/securitypolicyviolation_event",
    "pageType": "web-api-event",
    "summary": "The securitypolicyviolation event is fired when a Content Security Policy is violated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Topics_API",
    "pageType": "web-api-overview",
    "summary": "The Topics API provides a mechanism for developers to implement use cases such as interest-based advertising (IBA) based on topics collected by the browser as the user navigates different pages, rather than collected by the developer by tracking the user's journey around different sites with third-party cookies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Topics_API/Using",
    "pageType": "web-api-overview",
    "summary": "This page explains how the Topics API works and how it can be used to create an interest-based advertising (IBA) solution."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/prerendering",
    "pageType": "web-api-instance-property",
    "summary": "The prerendering read-only property of the Document interface returns true if the document is currently in the process of prerendering, as initiated via the Speculation Rules API."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoderStream",
    "pageType": "web-api-interface",
    "summary": "The TextDecoderStream interface of the Encoding API converts a stream of text in a binary encoding, such as UTF-8 etc., to a stream of strings.\nIt is the streaming equivalent of TextDecoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/scrollingElement",
    "pageType": "web-api-instance-property",
    "summary": "The scrollingElement read-only property of the\nDocument interface returns a reference to the Element that\nscrolls the document. In standards mode, this is the root element of the\ndocument, document.documentElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoderStream/encoding",
    "pageType": "web-api-instance-property",
    "summary": "The encoding read-only property of the TextDecoderStream interface returns a string containing the name of the encoding algorithm used by the specific decoder."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/ariaNotify",
    "pageType": "web-api-instance-method",
    "summary": "The ariaNotify() method of the Document interface specifies that a given string of text should be announced by a screen reader if available and activated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoderStream/fatal",
    "pageType": "web-api-instance-property",
    "summary": "The fatal read-only property of the TextDecoderStream interface is a boolean indicating if the error mode of the TextDecoderStream object is set to fatal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createCDATASection",
    "pageType": "web-api-instance-method",
    "summary": "createCDATASection() creates a new CDATA section node,\nand returns it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoderStream/readable",
    "pageType": "web-api-instance-property",
    "summary": "The readable read-only property of the TextDecoderStream interface returns a ReadableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/append",
    "pageType": "web-api-instance-method",
    "summary": "The Document.append() method\ninserts a set of Node objects or strings after\nthe last child of the document. Strings\nare inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoderStream/TextDecoderStream",
    "pageType": "web-api-constructor",
    "summary": "The TextDecoderStream() constructor creates a new TextDecoderStream object which is used to convert a stream of text in a binary encoding into strings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/fullscreenEnabled",
    "pageType": "web-api-instance-property",
    "summary": "The read-only fullscreenEnabled\nproperty on the Document interface indicates whether or not fullscreen\nmode is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoderStream/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable read-only property of the TextDecoderStream interface returns a WritableStream."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/hidden",
    "pageType": "web-api-instance-property",
    "summary": "The Document.hidden read-only property returns a Boolean\nvalue indicating if the page is considered hidden or not."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TextDecoderStream/ignoreBOM",
    "pageType": "web-api-instance-property",
    "summary": "The ignoreBOM read-only property of the TextDecoderStream interface is a Boolean indicating whether the byte order mark will be included in the output or skipped over."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/featurePolicy",
    "pageType": "web-api-instance-property",
    "summary": "The featurePolicy read-only property of the Document interface returns the FeaturePolicy interface which provides a simple API for inspecting the Permissions Policies applied to a specific document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQueue/onSubmittedWorkDone",
    "pageType": "web-api-instance-method",
    "summary": "The onSubmittedWorkDone() method of the\nGPUQueue interface returns a Promise that resolves when all the work submitted to the GPU via this GPUQueue at the point the method is called has been processed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQueue",
    "pageType": "web-api-interface",
    "summary": "The GPUQueue interface of the WebGPU API controls execution of encoded commands on the GPU."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createComment",
    "pageType": "web-api-instance-method",
    "summary": "createComment() creates a new comment node, and returns\nit."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQueue/copyExternalImageToTexture",
    "pageType": "web-api-instance-method",
    "summary": "The copyExternalImageToTexture() method of the\nGPUQueue interface copies a snapshot taken from a source image, video, or canvas into a given GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/doctype",
    "pageType": "web-api-instance-property",
    "summary": "The doctype read-only property of the Document interface is a DocumentType object representing the Document Type Declaration (DTD) associated with the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQueue/label",
    "pageType": "web-api-instance-property",
    "summary": "The label read-only property of the\nGPUQueue interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/replaceChildren",
    "pageType": "web-api-instance-method",
    "summary": "The Document.replaceChildren() method replaces the\nexisting children of a Document with a specified new set of children."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQueue/writeTexture",
    "pageType": "web-api-instance-method",
    "summary": "The writeTexture() method of the\nGPUQueue interface writes a provided data source into a given GPUTexture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createExpression",
    "pageType": "web-api-instance-method",
    "summary": "This method compiles an XPathExpression which can then be used for (repeated) evaluations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQueue/writeBuffer",
    "pageType": "web-api-instance-method",
    "summary": "The writeBuffer() method of the\nGPUQueue interface writes a provided data source into a given GPUBuffer."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/location",
    "pageType": "web-api-instance-property",
    "summary": "The Document.location read-only property returns a\nLocation object, which contains information about the URL of the document\nand provides methods for changing that URL and loading another URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUQueue/submit",
    "pageType": "web-api-instance-method",
    "summary": "The submit() method of the\nGPUQueue interface schedules the execution of command buffers represented by one or more GPUCommandBuffer objects by the GPU."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/childElementCount",
    "pageType": "web-api-instance-property",
    "summary": "The Document.childElementCount read-only property\nreturns the number of child elements of the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PublicKeyCredentialRequestOptions",
    "pageType": "web-api-interface",
    "summary": "The PublicKeyCredentialRequestOptions dictionary represents the object passed to CredentialsContainer.get() as the value of the publicKey option."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/queryCommandEnabled",
    "pageType": "web-api-instance-method",
    "summary": "The Document.queryCommandEnabled() method reports whether\nor not the specified editor command is enabled by the browser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGTitleElement",
    "pageType": "web-api-interface",
    "summary": "The SVGTitleElement interface corresponds to the <title> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/parseHTMLUnsafe_static",
    "pageType": "web-api-static-method",
    "summary": "The parseHTMLUnsafe() static method of the Document object is used to parse HTML input, optionally filtering unwanted HTML elements and attributes, in order to create a new Document instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeIterator",
    "pageType": "web-api-interface",
    "summary": "The NodeIterator interface represents an iterator to traverse nodes of a DOM subtree in document order."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/exitPictureInPicture",
    "pageType": "web-api-instance-method",
    "summary": "The exitPictureInPicture() method of the Document interface\nrequests that a video contained\nin this document, which is currently floating, be taken out of picture-in-picture\nmode, restoring the previous state of the screen. This usually reverses the\neffects of a previous call to HTMLVideoElement.requestPictureInPicture()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeIterator/whatToShow",
    "pageType": "web-api-instance-property",
    "summary": "The NodeIterator.whatToShow read-only property represents\nan unsigned integer representing a bitmask signifying what types of nodes\nshould be returned by the NodeIterator."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/getElementsByTagName",
    "pageType": "web-api-instance-method",
    "summary": "The getElementsByTagName method of\nDocument interface returns an\nHTMLCollection of elements with the given tag name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeIterator/filter",
    "pageType": "web-api-instance-property",
    "summary": "The NodeIterator.filter read-only property returns a\nNodeFilter object, that is an object which implements an\nacceptNode(node) method, used to screen nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/close",
    "pageType": "web-api-instance-method",
    "summary": "The Document.close() method finishes writing to a\ndocument, opened with Document.open()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeIterator/pointerBeforeReferenceNode",
    "pageType": "web-api-instance-property",
    "summary": "The NodeIterator.pointerBeforeReferenceNode read-only\nproperty returns a boolean flag that indicates whether the\nNodeFilter is anchored before (if this value is true) or\nafter (if this value is false) the anchor node indicated by the\nNodeIterator.referenceNode property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/Document",
    "pageType": "web-api-constructor",
    "summary": "The Document constructor creates a new\nDocument object that is a web page loaded in the browser and serving as\nan entry point into the page's content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeIterator/referenceNode",
    "pageType": "web-api-instance-property",
    "summary": "The NodeIterator.referenceNode read-only property returns the\nNode to which the iterator is anchored; as new nodes are inserted, the\niterator remains anchored to the reference node as specified by this property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/styleSheets",
    "pageType": "web-api-instance-property",
    "summary": "The styleSheets read-only property of the Document interface returns a StyleSheetList of CSSStyleSheet objects, for stylesheets explicitly linked into or embedded in a document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeIterator/previousNode",
    "pageType": "web-api-instance-method",
    "summary": "The NodeIterator.previousNode() method returns the\nprevious node in the set represented by the NodeIterator and moves the\nposition of the iterator backwards within the set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/images",
    "pageType": "web-api-instance-property",
    "summary": "The images read-only property of the Document interface returns a collection of the images in the current HTML document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeIterator/detach",
    "pageType": "web-api-instance-method",
    "summary": "The NodeIterator.detach() method is a no-op, kept for\nbackward compatibility only."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/links",
    "pageType": "web-api-instance-property",
    "summary": "The links read-only property of the Document interface returns a collection of all <area> elements and <a> elements in a document with a value for the href attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeIterator/root",
    "pageType": "web-api-instance-property",
    "summary": "The NodeIterator.root read-only property represents the\nNode that is the root of what the NodeIterator\ntraverses."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/readystatechange_event",
    "pageType": "web-api-event",
    "summary": "The readystatechange event is fired when the readyState attribute of a document has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/NodeIterator/nextNode",
    "pageType": "web-api-instance-method",
    "summary": "The NodeIterator.nextNode() method returns the next node\nin the set represented by the NodeIterator and advances the position of\nthe iterator within the set. The first call to nextNode() returns the\nfirst node in the set."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/lastStyleSheetSet",
    "pageType": "web-api-instance-property",
    "summary": "The Document.lastStyleSheetSet property returns the last enabled style sheet set. This property's\nvalue changes whenever the document.selectedStyleSheetSet property is\nchanged."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPositionValue",
    "pageType": "web-api-interface",
    "summary": "The CSSPositionValue interface of the CSS Typed Object Model API represents values for properties that take a position, for example object-position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/prepend",
    "pageType": "web-api-instance-method",
    "summary": "The Document.prepend() method\ninserts a set of Node objects or strings before\nthe first child of the document. Strings\nare inserted as equivalent Text nodes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPositionValue/x",
    "pageType": "web-api-instance-property",
    "summary": "The x property of the\nCSSPositionValue interface returns the item's position along the web\npage's horizontal axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/scrollend_event",
    "pageType": "web-api-event",
    "summary": "The scrollend event fires when the document view has completed scrolling.\nScrolling is considered completed when the scroll position has no more pending updates and the user has completed their gesture."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPositionValue/CSSPositionValue",
    "pageType": "web-api-constructor",
    "summary": "The CSSPositionValue() constructor\ncreates a new CSSPositionValue object which represents values for\nproperties that take a position, for example object-position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/getSelection",
    "pageType": "web-api-instance-method",
    "summary": "The getSelection() method of the Document interface returns the Selection object associated with this document, representing the range of text selected by the user, or the current position of the caret."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPositionValue/y",
    "pageType": "web-api-instance-property",
    "summary": "The y property of the\nCSSPositionValue interface returns the item's position along the\nvertical axis."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/enableStyleSheetsForSet",
    "pageType": "web-api-instance-method",
    "summary": "Enables the style sheets matching the specified name in the current style sheet set,\nand disables all other style sheets (except those without a title, which are always\nenabled)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createTouchList",
    "pageType": "web-api-instance-method",
    "summary": "The Document.createTouchList() method creates and returns a new TouchList object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CryptoKey/extractable",
    "pageType": "web-api-instance-property",
    "summary": "The read-only extractable property of the CryptoKey interface indicates whether or not the key may be extracted using SubtleCrypto.exportKey() or SubtleCrypto.wrapKey()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CryptoKey",
    "pageType": "web-api-interface",
    "summary": "The CryptoKey interface of the Web Crypto API represents a cryptographic key obtained from one of the SubtleCrypto methods generateKey(), deriveKey(), importKey(), or unwrapKey()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/lastElementChild",
    "pageType": "web-api-instance-property",
    "summary": "The Document.lastElementChild read-only property\nreturns the document's last child Element, or null if there\nare no child elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CryptoKey/type",
    "pageType": "web-api-instance-property",
    "summary": "The read-only type property of the CryptoKey interface indicates which kind of key is represented by the object. It can have the following values:"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/visibilitychange_event",
    "pageType": "web-api-event",
    "summary": "The visibilitychange event is fired at the document when the contents of its tab have become visible or have been hidden."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CryptoKey/algorithm",
    "pageType": "web-api-instance-property",
    "summary": "The read-only algorithm property of the CryptoKey interface returns an object describing the algorithm for which this key can be used, and any associated extra parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/clear",
    "pageType": "web-api-instance-method",
    "summary": "The Document.clear() method does nothing, but doesn't raise any error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CryptoKey/usages",
    "pageType": "web-api-instance-property",
    "summary": "The read-only usages property of the CryptoKey interface indicates what can be done with the key."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/alinkColor",
    "pageType": "web-api-instance-property",
    "summary": "Returns or sets the color of an active link in the document body. A link is active\nduring the time between mousedown and mouseup events."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/getElementsByClassName",
    "pageType": "web-api-instance-method",
    "summary": "The getElementsByClassName method of\nDocument interface returns an array-like object\nof all child elements which have all of the given class name(s)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskSignal/prioritychange_event",
    "pageType": "web-api-event",
    "summary": "The prioritychange event is sent to a TaskSignal if its priority is changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskSignal",
    "pageType": "web-api-interface",
    "summary": "The TaskSignal interface of the Prioritized Task Scheduling API represents a signal object that allows you to communicate with a prioritized task, and abort it or change the priority (if required) via a TaskController object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/applets",
    "pageType": "web-api-instance-property",
    "summary": "The applets property of the Document returns an empty HTMLCollection. This property is kept only for compatibility reasons; in older versions of browsers, it returned a list of the applets within a document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskSignal/any_static",
    "pageType": "web-api-static-method",
    "summary": "The TaskSignal.any() static method takes an iterable of AbortSignal objects and returns a TaskSignal. The returned task signal is aborted when any of the abort signals is aborted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createElementNS",
    "pageType": "web-api-instance-method",
    "summary": "Creates an element with the specified namespace URI and qualified name."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/TaskSignal/priority",
    "pageType": "web-api-instance-property",
    "summary": "The read-only priority property of the TaskSignal interface indicates the signal priority."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/xmlEncoding",
    "pageType": "web-api-instance-property",
    "summary": "Returns the encoding as determined by the XML declaration. Should be null if unspecified or unknown."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_color_buffer_float",
    "pageType": "webgl-extension",
    "summary": "The EXT_color_buffer_float extension is part of WebGL and adds the ability to render a variety of floating point formats."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createProcessingInstruction",
    "pageType": "web-api-instance-method",
    "summary": "createProcessingInstruction() generates a new processing instruction node and returns it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PasswordCredential/name",
    "pageType": "web-api-instance-property",
    "summary": "The name read-only property of\nthe PasswordCredential interface returns a string\ncontaining a human-readable public name for display in a credential chooser."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/evaluate",
    "pageType": "web-api-instance-method",
    "summary": "The evaluate() method of the Document interface selects elements based on the XPath\nexpression given in parameters."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PasswordCredential",
    "pageType": "web-api-interface",
    "summary": "The PasswordCredential interface of the Credential Management API provides information about a username/password pair. In supporting browsers an instance of this class may be passed in the credential member of the init object for global fetch()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/firstElementChild",
    "pageType": "web-api-instance-property",
    "summary": "The Document.firstElementChild read-only property\nreturns the document's first child Element, or null if there\nare no child elements."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PasswordCredential/iconURL",
    "pageType": "web-api-instance-property",
    "summary": "The iconURL read-only property\nof the PasswordCredential interface returns a string\ncontaining a URL pointing to an image for an icon. This image is intended for display\nin a credential chooser. The URL must be accessible without authentication."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/documentURI",
    "pageType": "web-api-instance-property",
    "summary": "The documentURI read-only property of the\nDocument interface returns the document location as a string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PasswordCredential/PasswordCredential",
    "pageType": "web-api-constructor",
    "summary": "The PasswordCredential() constructor creates a new PasswordCredential object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/scroll_event",
    "pageType": "web-api-event",
    "summary": "The scroll event fires when the document view has been scrolled.\nTo detect when scrolling has completed, see the scrollend event of Document.\nFor element scrolling, see scroll event of Element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/PasswordCredential/password",
    "pageType": "web-api-instance-property",
    "summary": "The password read-only property\nof the PasswordCredential interface returns a string\ncontaining the password of the credential."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/selectedStyleSheetSet",
    "pageType": "web-api-instance-property",
    "summary": "The selectedStyleSheetSet property indicates the name of the style sheet set that's currently in use."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/implementation",
    "pageType": "web-api-instance-property",
    "summary": "The Document.implementation property returns a\nDOMImplementation object associated with the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor/clearParameters",
    "pageType": "web-api-instance-method",
    "summary": "The clearParameters() method of the XSLTProcessor interface removes all parameters (<xsl:param>) and their values from the stylesheet imported in the processor. The XSLTProcessor will then use the default values specified in the XSLT stylesheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor",
    "pageType": "web-api-interface",
    "summary": "An XSLTProcessor applies an XSLT stylesheet transformation to an XML document to\nproduce a new XML document as output. It has methods to load the XSLT stylesheet, to\nmanipulate <xsl:param> parameter values, and to apply the\ntransformation to documents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/moveBefore",
    "pageType": "web-api-instance-method",
    "summary": "The moveBefore() method of the Document interface moves a given Node inside the Document DOM node as a direct child, before a given reference node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor/importStylesheet",
    "pageType": "web-api-instance-method",
    "summary": "The importStylesheet() method of the XSLTProcessor interface imports an XSLT stylesheet for the processor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/characterSet",
    "pageType": "web-api-instance-property",
    "summary": "The Document.characterSet\nread-only property returns the character encoding of the\ndocument that it's currently rendered with."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor/getParameter",
    "pageType": "web-api-instance-method",
    "summary": "The getParameter() method of the XSLTProcessor interface returns the value of a parameter (<xsl:param>) from the stylesheet imported in the processor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/hasStorageAccess",
    "pageType": "web-api-instance-method",
    "summary": "The hasStorageAccess() method of the Document interface returns a Promise that resolves with a boolean value indicating whether the document has access to third-party, unpartitioned cookies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor/setParameter",
    "pageType": "web-api-instance-method",
    "summary": "The setParameter() method of the XSLTProcessor interface sets the value of a parameter (<xsl:param>) in the stylesheet imported in the processor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/anchors",
    "pageType": "web-api-instance-property",
    "summary": "The anchors read-only property of the\nDocument interface returns a list of all of the anchors in the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor/removeParameter",
    "pageType": "web-api-instance-method",
    "summary": "The removeParameter() method of the XSLTProcessor interface removes the parameter (<xsl:param>) and its value from the stylesheet imported in the processor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/activeElement",
    "pageType": "web-api-instance-property",
    "summary": "The activeElement read-only property of the Document interface returns the Element within the DOM that is receiving keyboard events such as keydown and keyup. This is usually analogous to the focused element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor/reset",
    "pageType": "web-api-instance-method",
    "summary": "The reset() method of the XSLTProcessor interface removes all parameters (<xsl:param>) and the XSLT stylesheet from the processor. The XSLTProcessor will then be in its original state when it was created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/scripts",
    "pageType": "web-api-instance-property",
    "summary": "The scripts property of the Document\ninterface returns a list of the <script>\nelements in the document. The returned object is an\nHTMLCollection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor/transformToFragment",
    "pageType": "web-api-instance-method",
    "summary": "The transformToFragment() method of the XSLTProcessor interface transforms a provided Node source to a DocumentFragment using the XSLT stylesheet associated with the XSLTProcessor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/hasUnpartitionedCookieAccess",
    "pageType": "web-api-instance-method",
    "summary": "The hasUnpartitionedCookieAccess() method of the Document interface returns a Promise that resolves with a boolean value indicating whether the document has access to third-party, unpartitioned cookies."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor/XSLTProcessor",
    "pageType": "web-api-constructor",
    "summary": "The XSLTProcessor() constructor creates a new XSLTProcessor object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/fullscreenerror_event",
    "pageType": "web-api-event",
    "summary": "The fullscreenerror event is fired when the browser cannot switch to fullscreen mode."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XSLTProcessor/transformToDocument",
    "pageType": "web-api-instance-method",
    "summary": "The transformToDocument() method of the XSLTProcessor interface transforms the provided Node source to a Document using the XSLT stylesheet associated with XSLTProcessor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createTouch",
    "pageType": "web-api-instance-method",
    "summary": "The Document.createTouch() method creates and returns a new Touch object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorageSelectURLOperation",
    "pageType": "web-api-interface",
    "summary": "The SharedStorageSelectURLOperation interface of the Shared Storage API represents a URL Selection output gate operation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/getElementsByTagNameNS",
    "pageType": "web-api-instance-method",
    "summary": "Returns a list of elements with the given tag name belonging to the given namespace.\nThe complete document is searched, including the root node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SharedStorageSelectURLOperation/run",
    "pageType": "web-api-instance-method",
    "summary": "The run() method of the SharedStorageSelectURLOperation interface defines the structure to which the run() method defined inside a URL Selection output gate operation should conform."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/elementsFromPoint",
    "pageType": "web-api-instance-method",
    "summary": "The elementsFromPoint() method\nof the Document interface returns an array of all elements\nat the specified coordinates (relative to the viewport).\nThe elements are ordered from the topmost to the bottommost box of the viewport."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Compression_Streams_API",
    "pageType": "web-api-overview",
    "summary": "The Compression Streams API provides a JavaScript API for compressing and decompressing streams of data using the gzip or deflate formats."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/forms",
    "pageType": "web-api-instance-property",
    "summary": "The forms read-only property of the Document interface returns an HTMLCollection listing all the <form> elements contained in the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/toFloat32Array",
    "pageType": "web-api-instance-method",
    "summary": "The toFloat32Array() method of the DOMMatrixReadOnly interface returns a new Float32Array containing all 16 elements (m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44) which comprise the matrix. The elements are stored into the array as single-precision floating-point numbers in column-major (colexographical access, or \"colex\") order. (In other words, down the first column from top to bottom, then the second column, and so forth.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/xmlVersion",
    "pageType": "web-api-instance-property",
    "summary": "Returns the version number as specified in the XML declaration (e.g., <?xml version=\"1.0\"?>) or \"1.0\" if the declaration is absent."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/isIdentity",
    "pageType": "web-api-instance-property",
    "summary": "The readonly isIdentity property of the DOMMatrixReadOnly interface is a Boolean whose value is true if the matrix is the identity matrix."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly",
    "pageType": "web-api-interface",
    "summary": "The DOMMatrixReadOnly interface represents a read-only 4×4 matrix, suitable for 2D and 3D operations. The DOMMatrix interface — which is based upon DOMMatrixReadOnly—adds mutability, allowing you to alter the matrix after creating it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/adoptedStyleSheets",
    "pageType": "web-api-instance-property",
    "summary": "The adoptedStyleSheets property of the Document interface is used for setting an array of constructed stylesheets to be used by the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/scale3d",
    "pageType": "web-api-instance-method",
    "summary": "The scale3d() method of the DOMMatrixReadOnly interface creates a new matrix which is the result of a 3D scale transform being applied\nto the matrix. It returns a new DOMMatrix created by scaling the source 3d matrix by the given scale factor centered on the origin point specified by the origin parameters, with a default origin of (0, 0, 0). The original matrix is not modified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createNSResolver",
    "pageType": "web-api-instance-method",
    "summary": "The createNSResolver() method of the Document interface used to create a custom XPathNSResolver object. It now returns the input as-is and is only kept for compatibility reasons."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/multiply",
    "pageType": "web-api-instance-method",
    "summary": "The multiply() method of the DOMMatrixReadOnly interface creates and returns a new matrix which is the dot product of the matrix and the otherMatrix parameter. If otherMatrix is omitted, the matrix is multiplied by a matrix in which every element is 0 except the bottom-right corner and the element immediately above and to its left: m33 and m34. These have the default value of 1. The original matrix is not modified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/mozSetImageElement",
    "pageType": "web-api-instance-method",
    "summary": "The Document.mozSetImageElement() method changes the\nelement being used as the CSS background for a background with a given background\nelement ID."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/skewX",
    "pageType": "web-api-instance-method",
    "summary": "The skewX() method of the DOMMatrixReadOnly interface returns a new DOMMatrix created by applying the specified skew transformation to the source matrix along its x-axis. The original matrix is not modified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/dir",
    "pageType": "web-api-instance-property",
    "summary": "The Document.dir property is a string\nrepresenting the directionality of the text of the document, whether left to right\n(default) or right to left. Possible values are 'rtl', right to left, and\n'ltr', left to right."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/skewY",
    "pageType": "web-api-instance-method",
    "summary": "The skewY() method of the DOMMatrixReadOnly interface returns a new DOMMatrix created by applying the specified skew transformation to the source matrix along its y-axis. The original matrix is not modified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/caretPositionFromPoint",
    "pageType": "web-api-instance-method",
    "summary": "The caretPositionFromPoint() method of the Document interface returns a CaretPosition object, containing the DOM node, along with the caret and caret's character offset within that node."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/transformPoint",
    "pageType": "web-api-instance-method",
    "summary": "The transformPoint method of the\nDOMMatrixReadOnly interface creates a new DOMPoint object, transforming a specified point by the matrix. Neither the matrix nor the original point are altered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createElement",
    "pageType": "web-api-instance-method",
    "summary": "In an HTML document, the document.createElement() method creates the HTML element specified by localName, or an HTMLUnknownElement if localName isn't recognized."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/scale",
    "pageType": "web-api-instance-method",
    "summary": "The scale() method of the\nDOMMatrixReadOnly interface creates a new matrix being the result of the\noriginal matrix with a scale transform applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/toFloat64Array",
    "pageType": "web-api-instance-method",
    "summary": "The toFloat64Array() method of the DOMMatrixReadOnly interface returns a new Float64Array containing all 16 elements (m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44) which comprise the matrix. The elements are stored into the array as double-precision floating-point numbers in column-major (colexographical access, or \"colex\") order. (In other words, down the first column from top to bottom, then the second column, and so forth.)"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/fragmentDirective",
    "pageType": "web-api-instance-property",
    "summary": "The fragmentDirective read-only property of the Document interface returns the FragmentDirective for the current document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/translate",
    "pageType": "web-api-instance-method",
    "summary": "The translate() method of the DOMMatrixReadOnly interface\ncreates a new matrix being the result of the original matrix with a translation applied."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/createNodeIterator",
    "pageType": "web-api-instance-method",
    "summary": "The Document.createNodeIterator() method returns a new NodeIterator object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/fromFloat32Array_static",
    "pageType": "web-api-static-method",
    "summary": "The fromFloat32Array() static method of the DOMMatrixReadOnly interface creates a new DOMMatrixReadOnly object given an array of single-precision (32-bit) floating-point values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/caretRangeFromPoint",
    "pageType": "web-api-instance-method",
    "summary": "The caretRangeFromPoint() method of the\nDocument interface returns a Range object for the document\nfragment under the specified coordinates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/rotateAxisAngle",
    "pageType": "web-api-instance-method",
    "summary": "The rotateAxisAngle() method of the DOMMatrixReadOnly interface returns a new DOMMatrix created by rotating the source matrix by the given vector and angle. The original matrix is not altered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/pointerlockerror_event",
    "pageType": "web-api-event",
    "summary": "The pointerlockerror event is fired when locking the pointer failed (for technical reasons or because the permission was denied)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/rotateFromVector",
    "pageType": "web-api-instance-method",
    "summary": "The rotateFromVector() method of the DOMMatrixReadOnly interface is returns a new DOMMatrix created by rotating the source matrix by the angle between the specified vector and (1, 0). The rotation angle is determined by the angle between the vector (1,0)T and (x,y)T in the clockwise direction, or (+/-)arctan(y/x). If x and y are both 0, the angle is specified as 0. The original matrix is not altered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/styleSheetSets",
    "pageType": "web-api-instance-property",
    "summary": "The styleSheetSets read-only property returns a live list of all of the currently-available style sheet sets."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/inverse",
    "pageType": "web-api-instance-method",
    "summary": "The inverse() method of the DOMMatrixReadOnly interface creates a new matrix which is the inverse of the original matrix. If the matrix cannot be inverted, the new matrix's components are all set to NaN and its is2D property is set to false. The original matrix is not changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/documentElement",
    "pageType": "web-api-instance-property",
    "summary": "The documentElement read-only property of the Document interface returns the\nElement that is the root element of the document (for\nexample, the <html> element for HTML documents)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/is2D",
    "pageType": "web-api-instance-property",
    "summary": "The readonly is2D property of the DOMMatrixReadOnly interface is a Boolean flag that is true when the matrix is 2D. The value is true if the matrix was initialized as a 2D matrix and only 2D transformation operations were applied. Otherwise, the matrix is defined in 3D, and is2D is false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/DOMMatrixReadOnly",
    "pageType": "web-api-constructor",
    "summary": "The DOMMatrixReadOnly() constructor creates a new DOMMatrixReadOnly object which represents a 4x4 matrix, suitable for 2D and 3D operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/title",
    "pageType": "web-api-instance-property",
    "summary": "The document.title property gets or sets the current title of the document.\nWhen present, it defaults to the value of the <title>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/rotate",
    "pageType": "web-api-instance-method",
    "summary": "The rotate() method of the DOMMatrixReadOnly interface returns a new DOMMatrix created by rotating the source matrix around each of its axes by the specified number of degrees. The original matrix is not altered."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/startViewTransition",
    "pageType": "web-api-instance-method",
    "summary": "The startViewTransition() method of the Document interface starts a new same-document (SPA) view transition and returns a ViewTransition object to represent it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The toJSON() method of the DOMMatrixReadOnly interface creates and returns a JSON object. The JSON object includes the 2D matrix elements a through f, the 16 elements of the 4X4 3D matrix, m[1-4][1-4], the boolean is2D property, and the boolean isIdentity property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/vlinkColor",
    "pageType": "web-api-instance-property",
    "summary": "The Document.vlinkColor property gets/sets the color of\nlinks that the user has visited in the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/flipY",
    "pageType": "web-api-instance-method",
    "summary": "The flipY() method of the DOMMatrixReadOnly interface creates a new matrix being the result of the original matrix flipped about the y-axis. This is equivalent to multiplying the matrix by DOMMatrix(1, 0, 0, -1, 0, 0). The original matrix is not modified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/releaseCapture",
    "pageType": "web-api-instance-method",
    "summary": "The releaseCapture() method releases mouse capture if\nit's currently enabled on an element within this document.\nOnce mouse capture is released, mouse events will no longer all be directed to the element on which capture is enabled."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/fromFloat64Array_static",
    "pageType": "web-api-static-method",
    "summary": "The fromFloat64Array() static method of the DOMMatrixReadOnly interface creates a new DOMMatrixReadOnly object given an array of double-precision (64-bit) floating-point values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/pictureInPictureEnabled",
    "pageType": "web-api-instance-property",
    "summary": "The read-only\npictureInPictureEnabled property of the\nDocument interface indicates whether or not picture-in-picture mode is\navailable."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/flipX",
    "pageType": "web-api-instance-method",
    "summary": "The flipX() method of the DOMMatrixReadOnly interface creates a new matrix being the result of the original matrix flipped about the x-axis. This is equivalent to multiplying the matrix by DOMMatrix(-1, 0, 0, 1, 0, 0). The original matrix is not modified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Document/exitFullscreen",
    "pageType": "web-api-instance-method",
    "summary": "The Document method\nexitFullscreen() requests that the element on this\ndocument which is currently being presented in fullscreen mode be taken out of\nfullscreen mode, restoring the previous state of the screen. This usually\nreverses the effects of a previous call to Element.requestFullscreen()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/fromMatrix_static",
    "pageType": "web-api-static-method",
    "summary": "The fromMatrix() static method of the DOMMatrixReadOnly interface creates a new DOMMatrixReadOnly object given an existing matrix or an object which provides the values for its properties."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DOMMatrixReadOnly/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() stringifier of the DOMMatrixReadOnly interface returns the value of the matrix as a string in the form of a matrix() or matrix3d() CSS transform function; comma-separated lists of 6 or 16 coordinate values, prepended by \"matrix( or \"matrix3d( respectively, appended by )\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement",
    "pageType": "web-api-interface",
    "summary": "The SVGPatternElement interface corresponds to the <pattern> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Typed_OM_API",
    "pageType": "web-api-overview",
    "summary": "The CSS Typed Object Model API simplifies CSS property manipulation by exposing CSS values as typed JavaScript objects rather than strings. This not only simplifies CSS manipulation, but also lessens the negative impact on performance as compared to HTMLElement.style."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/preserveAspectRatio",
    "pageType": "web-api-instance-property",
    "summary": "The preserveAspectRatio read-only property of the SVGPatternElement interface reflects the preserveAspectRatio attribute of the given element. It defines how the pattern's content should be scaled to fit the given space, preserving its aspect ratio."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSS_Typed_OM_API/Guide",
    "pageType": "guide",
    "summary": "The CSS Typed Object Model API exposes CSS values as typed JavaScript objects to allow their performant manipulation."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGPatternElement interface describes the x-axis coordinate of the start point of the pattern as an SVGAnimatedLength. It reflects the computed value of the x attribute on the <pattern> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformComponent",
    "pageType": "web-api-interface",
    "summary": "The CSSTransformComponent interface of the CSS Typed Object Model API is part of the CSSTransformValue interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/patternUnits",
    "pageType": "web-api-instance-property",
    "summary": "The patternUnits read-only property of the SVGPatternElement interface reflects the patternUnits attribute of the given <pattern> element. It specifies the coordinate system for the pattern content and takes one of the constants defined in SVGUnitTypes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformComponent/is2D",
    "pageType": "web-api-instance-property",
    "summary": "The is2D read-only property of the CSSTransformComponent interface indicates where the transform is 2D or 3D."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGPatternElement interface describes the height of the pattern as an SVGAnimatedLength. It reflects the computed value of the height attribute on the <pattern> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformComponent/toMatrix",
    "pageType": "web-api-instance-method",
    "summary": "The toMatrix() method of the\nCSSTransformComponent interface returns a DOMMatrix\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGPatternElement interface describes the y-axis coordinate of the start point of the pattern as an SVGAnimatedLength. It reflects the computed value of the y attribute on the <pattern> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSTransformComponent/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() method of the CSSTransformComponent interface is a stringifier returning a CSS Transforms function."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGPatternElement interface describes the width of the pattern as an SVGAnimatedLength. It reflects the computed value of the width attribute on the <pattern> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/EXT_texture_compression_rgtc",
    "pageType": "webgl-extension",
    "summary": "The EXT_texture_compression_rgtc extension is part of the WebGL API and exposes 4 RGTC compressed texture formats. RGTC is a block-based texture compression format suited for unsigned and signed red and red-green textures (Red-Green Texture Compression)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/patternContentUnits",
    "pageType": "web-api-instance-property",
    "summary": "The patternContentUnits read-only property of the SVGPatternElement interface reflects the patternContentUnits attribute of the given <pattern> element. It specifies the coordinate system for the pattern content and takes one of the constants defined in SVGUnitTypes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSource",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API's XRInputSource interface describes a single source of control input which is part of the user's WebXR-compatible virtual or augmented reality system. The device is specific to the platform being used, but provides the direction in which it is being aimed and optionally may generate events if the user triggers performs actions using the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/viewBox",
    "pageType": "web-api-instance-property",
    "summary": "The viewBox read-only property of the SVGPatternElement interface reflects the viewBox attribute of the given element. It represents the x, y, width, and height values defining the area to be used for the pattern's viewBox."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSource/profiles",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRInputSource property profiles returns an array of strings, each describing a configuration profile for the input source. The profile strings are listed in order of specificity, with the most specific profile listed first."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/href",
    "pageType": "web-api-instance-property",
    "summary": "The href read-only property of the SVGPatternElement interface reflects the href or xlink:href \nDeprecated\n attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSource/handedness",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRInputSource property\nhandedness indicates which of the user's hands the WebXR\ninput source is associated with, or if it's not associated with a hand at all."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGPatternElement/patternTransform",
    "pageType": "web-api-instance-property",
    "summary": "The patternTransform read-only property of the SVGPatternElement interface reflects the patternTransform attribute of the given <pattern> element. This property holds the transformation applied to the pattern itself, allowing for operations like translate, rotate, scale, and skew."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSource/gripSpace",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRInputSource property gripSpace returns an XRSpace whose native origin tracks the pose used to render virtual objects so they appear to be held in (or part of) the user's hand. For example, if a user were holding a virtual straight rod, the native origin of this XRSpace would be located at the approximate center of mass of the user's fist."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fence",
    "pageType": "web-api-interface",
    "summary": "The Fence interface of the Fenced Frame API contains several functions relevant to <fencedframe> functionality."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSource/targetRaySpace",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRInputSource property\ntargetRaySpace returns an XRSpace\n(typically an XRReferenceSpace) representing the position and\norientation of the target ray in the virtual space. Its native origin tracks\nthe position of the origin point of the target ray, and its orientation indicates the\norientation of the controller device itself. These values, interpreted in the context of\nthe input source's targetRayMode, can be\nused both to fully interpret the device as an input source."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fence/getNestedConfigs",
    "pageType": "web-api-instance-method",
    "summary": "The getNestedConfigs() method of the\nFence interface returns the FencedFrameConfigs loaded into <fencedframe>s embedded inside the current <fencedframe>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSource/targetRayMode",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRInputSource\nproperty targetRayMode indicates the method by which the\ntarget ray for the input source should be generated and how it should be presented to\nthe user."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSource/hand",
    "pageType": "web-api-instance-property",
    "summary": "The read-only hand property of the XRInputSource interface is a XRHand object providing access to a hand-tracking device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fence/reportEvent",
    "pageType": "web-api-instance-method",
    "summary": "The reportEvent() method of the\nFence interface triggers the submission of report data via a beacon to one or more specific URLs registered via the registerAdBeacon() method of the Protected Audience API, for the purpose of collecting ad auction results."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRInputSource/gamepad",
    "pageType": "web-api-instance-property",
    "summary": "The read-only XRInputSource property gamepad returns a Gamepad object describing the state of the buttons and axes on the XR input source, if it is a gamepad or comparable device. If the device isn't a gamepad-like device, this property's value is null."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Fence/setReportEventDataForAutomaticBeacons",
    "pageType": "web-api-instance-method",
    "summary": "The setReportEventDataForAutomaticBeacons() method of the\nFence interface specifies event data that will be sent when a navigation occurs inside a <fencedframe>. This data will be sent via an automatic beacon to one or more specific URLs registered via the registerAdBeacon() method of the Protected Audience API, for the purpose of collecting reporting data for ad auction results."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaError",
    "pageType": "web-api-interface",
    "summary": "The MediaError interface represents an error which occurred while handling media in an HTML media element based on HTMLMediaElement, such as <audio> or <video>."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaError/code",
    "pageType": "web-api-instance-property",
    "summary": "The read-only property MediaError.code returns a numeric\nvalue which represents the kind of error that occurred on a media element. To get a text\nstring with specific diagnostic information, see MediaError.message."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate",
    "pageType": "web-api-interface",
    "summary": "The RTCIceCandidate interface—part of the WebRTC API—represents a candidate Interactive Connectivity Establishment (ICE) configuration which may be used to establish an RTCPeerConnection."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaError/message",
    "pageType": "web-api-instance-property",
    "summary": "The read-only property MediaError.message returns a human-readable string offering specific diagnostic details related to the error described by the MediaError object, or an empty string (\"\") if no diagnostic information can be determined or provided."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/relatedPort",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidate interface's read-only relatedPort property indicates the port number of reflexive or relay candidates."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPageRule",
    "pageType": "web-api-interface",
    "summary": "CSSPageRule represents a single CSS @page rule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/type",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidate interface's read-only type specifies the type of candidate the object represents."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPageRule/selectorText",
    "pageType": "web-api-instance-property",
    "summary": "The selectorText property of the CSSPageRule interface gets and sets the selectors associated with the CSSPageRule."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/sdpMid",
    "pageType": "web-api-instance-property",
    "summary": "The read-only property sdpMid on the RTCIceCandidate interface returns a string\nspecifying the media stream identification tag of the media component with which the candidate is associated.\nThis ID uniquely identifies a given stream for the component with which the candidate is associated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CSSPageRule/style",
    "pageType": "web-api-instance-property",
    "summary": "The style read-only property of the CSSPageRule interface returns a CSSPageDescriptors object.\nThis represents a CSS declaration block for a CSS @page at-rule, and exposes style information and various style-related methods and properties for the page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/component",
    "pageType": "web-api-instance-property",
    "summary": "The read-only component property\non the RTCIceCandidate interface is a string which indicates whether\nthe candidate is an RTP or\nan RTCP candidate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUExternalTexture",
    "pageType": "web-api-interface",
    "summary": "The GPUExternalTexture interface of the WebGPU API represents a wrapper object containing an HTMLVideoElement snapshot that can be used as a texture in GPU rendering operations."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/tcpType",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidate interface's read-only tcpType property is included on TCP candidates to provide additional details about the candidate type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUExternalTexture/label",
    "pageType": "web-api-instance-property",
    "summary": "The label property of the\nGPUExternalTexture interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/usernameFragment",
    "pageType": "web-api-instance-property",
    "summary": "The read-only usernameFragment property on the RTCIceCandidate interface is a string indicating the\nusername fragment (\"ufrag\") that uniquely identifies a single ICE interaction session."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBConnectionEvent",
    "pageType": "web-api-interface",
    "summary": "The USBConnectionEvent interface of the WebUSB API is the event type passed to USB connect and disconnect events when the user agent detects that a new USB device has been connected or disconnected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidate interface's read-only protocol property is a string\nwhich indicates whether the candidate uses UDP or TCP as its transport protocol."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBConnectionEvent/USBConnectionEvent",
    "pageType": "web-api-constructor",
    "summary": "The USBConnectionEvent() constructor creates a new USBConnectionEvent object.\nThis constructor is not typically used,\nit is created by the browser in response to the connection and disconnection of a USB device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/candidate",
    "pageType": "web-api-instance-property",
    "summary": "The read-only property candidate on the RTCIceCandidate interface returns a string describing the candidate in detail.\nMost of the other properties of RTCIceCandidate are actually extracted from this string."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/USBConnectionEvent/device",
    "pageType": "web-api-instance-property",
    "summary": "The device read-only property of the USBConnectionEvent interface returns a USBDevice object representing the device being connected or disconnected."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/port",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidate interface's read-only port property contains the port\nnumber on the device at the address given by RTCIceCandidate.address at which the candidate's peer can be reached."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Worklet",
    "pageType": "web-api-interface",
    "summary": "The Worklet interface is a lightweight version of Web Workers and gives developers access to low-level parts of the rendering pipeline."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/RTCIceCandidate",
    "pageType": "web-api-constructor",
    "summary": "The\nRTCIceCandidate()\nconstructor creates and returns a new RTCIceCandidate object, which can\nbe configured to represent a single ICE candidate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Worklet/addModule",
    "pageType": "web-api-instance-method",
    "summary": "The addModule() method of the\nWorklet interface loads the module in the given JavaScript file and\nadds it to the current Worklet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/foundation",
    "pageType": "web-api-instance-property",
    "summary": "The foundation read-only property of the RTCIceCandidate interface is a string that allows correlation of candidates from a common network path on multiple RTCIceTransport objects."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Server-sent_events",
    "pageType": "web-api-overview",
    "summary": "Traditionally, a web page has to send a request to the server to receive new data; that is, the page requests data from the server. With server-sent events, it's possible for a server to send new data to a web page at any time, by pushing messages to the web page. These incoming messages can be treated as Events + data inside the web page."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/toJSON",
    "pageType": "web-api-instance-method",
    "summary": "The RTCIceCandidate method toJSON() converts the RTCIceCandidate on which it's called into JSON."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events",
    "pageType": "guide",
    "summary": "Developing a web application that uses server-sent events is straightforward. You'll need a bit of code on the server to stream events to the front-end, but the client side code works almost identically to websockets in part of handling incoming events. This is a one-way connection, so you can't send events from a client to a server."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/relatedAddress",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidate interface's read-only relatedAddress property is a string indicating the related address of a relay or reflexive candidate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam",
    "pageType": "web-api-interface",
    "summary": "The Web Audio API's AudioParam interface represents an audio-related parameter, usually a parameter of an AudioNode (such as GainNode.gain)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/address",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidate interface's read-only address property is a string providing the IP address of the device which is the source of the candidate.\nThe address is null by default if not otherwise specified."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/exponentialRampToValueAtTime",
    "pageType": "web-api-instance-method",
    "summary": "The exponentialRampToValueAtTime() method of the AudioParam Interface schedules a gradual exponential change in the value of the AudioParam.\nThe change starts at the time specified for the previous event, follows an exponential ramp to the new value given in the value parameter, and reaches the new value at the time given in the\nendTime parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/priority",
    "pageType": "web-api-instance-property",
    "summary": "The RTCIceCandidate interface's read-only priority property specifies the candidate's priority according to the remote peer; the higher this value is, the better the remote peer considers the candidate to be."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/cancelScheduledValues",
    "pageType": "web-api-instance-method",
    "summary": "The cancelScheduledValues() method of the AudioParam\nInterface cancels all scheduled future changes to the AudioParam."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/RTCIceCandidate/sdpMLineIndex",
    "pageType": "web-api-instance-property",
    "summary": "The read-only sdpMLineIndex property on the RTCIceCandidate interface\nis a zero-based index of the m-line describing the media associated with the candidate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/minValue",
    "pageType": "web-api-instance-property",
    "summary": "The minValue\nread-only property of the AudioParam interface represents the minimum\npossible value for the parameter's nominal (effective) range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/value",
    "pageType": "web-api-instance-property",
    "summary": "The value property of the AudioParam interface gets or sets the value of this AudioParam at the current time.\nInitially, the value is set to AudioParam.defaultValue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController",
    "pageType": "web-api-interface",
    "summary": "The CaptureController interface provides methods that can be used to further manipulate a captured display surface (captured via MediaDevices.getDisplayMedia())"
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/setValueAtTime",
    "pageType": "web-api-instance-method",
    "summary": "The setValueAtTime() method of the\nAudioParam interface schedules an instant change to the\nAudioParam value at a precise time, as measured against\nAudioContext.currentTime. The new value is given in the value parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController/decreaseZoomLevel",
    "pageType": "web-api-instance-method",
    "summary": "The CaptureController interface's decreaseZoomLevel() method decreases the captured display surface's zoom level by one increment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/maxValue",
    "pageType": "web-api-instance-property",
    "summary": "The maxValue\nread-only property of the AudioParam interface represents the maximum\npossible value for the parameter's nominal (effective) range."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController/setFocusBehavior",
    "pageType": "web-api-instance-method",
    "summary": "The CaptureController interface's setFocusBehavior() method controls whether the captured tab or window will be focused when an associated MediaDevices.getDisplayMedia() Promise fulfills, or whether the focus will remain with the tab containing the capturing app."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/linearRampToValueAtTime",
    "pageType": "web-api-instance-method",
    "summary": "The linearRampToValueAtTime() method of the AudioParam\nInterface schedules a gradual linear change in the value of the\nAudioParam. The change starts at the time specified for the\nprevious event, follows a linear ramp to the new value given in the\nvalue parameter, and reaches the new value at the time given in the\nendTime parameter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController/forwardWheel",
    "pageType": "web-api-instance-method",
    "summary": "The CaptureController interface's forwardWheel() method starts forwarding wheel events fired on the referenced element to the viewport of an associated captured display surface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/setTargetAtTime",
    "pageType": "web-api-instance-method",
    "summary": "The setTargetAtTime() method of the\nAudioParam interface schedules the start of a gradual change to the\nAudioParam value. This is useful for decay or release portions of ADSR\nenvelopes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController/getSupportedZoomLevels",
    "pageType": "web-api-instance-method",
    "summary": "The CaptureController interface's getSupportedZoomLevels() method returns the different zoom levels that the captured display surface supports."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/defaultValue",
    "pageType": "web-api-instance-property",
    "summary": "The defaultValue\nread-only property of the AudioParam interface represents the initial\nvalue of the attributes as defined by the specific AudioNode creating\nthe AudioParam."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController/CaptureController",
    "pageType": "web-api-constructor",
    "summary": "The CaptureController constructor creates a new CaptureController object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/setValueCurveAtTime",
    "pageType": "web-api-instance-method",
    "summary": "The\nsetValueCurveAtTime() method of the\nAudioParam interface schedules the parameter's value to change\nfollowing a curve defined by a list of values."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController/resetZoomLevel",
    "pageType": "web-api-instance-method",
    "summary": "The CaptureController interface's resetZoomLevel() method resets the captured display surface's zoom to its initial level, which is 100."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AudioParam/cancelAndHoldAtTime",
    "pageType": "web-api-instance-method",
    "summary": "The cancelAndHoldAtTime() method of the\nAudioParam interface cancels all scheduled future changes to the\nAudioParam but holds its value at a given time until further changes are\nmade using other methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController/zoomLevel",
    "pageType": "web-api-instance-property",
    "summary": "The zoomLevel read-only property of the CaptureController interface returns the captured display surface's current zoom level."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedEnumeration",
    "pageType": "web-api-interface",
    "summary": "The SVGAnimatedEnumeration interface describes attribute values which are constants from a particular enumeration and which can be animated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController/increaseZoomLevel",
    "pageType": "web-api-instance-method",
    "summary": "The CaptureController interface's increaseZoomLevel() method increases the captured display surface's zoom level by one increment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedEnumeration/animVal",
    "pageType": "web-api-instance-property",
    "summary": "The animVal property of the SVGAnimatedEnumeration interface contains the current value of an SVG enumeration. If there is no animation, it is the same value as the baseVal."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/CaptureController/zoomlevelchange_event",
    "pageType": "web-api-event",
    "summary": "The zoomlevelchange event of the CaptureController interface is fired when the captured display surface's zoom level changes."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGAnimatedEnumeration/baseVal",
    "pageType": "web-api-instance-property",
    "summary": "The baseVal property of the SVGAnimatedEnumeration interface contains the initial value of an SVG enumeration."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Geolocation",
    "pageType": "web-api-interface",
    "summary": "The Geolocation interface represents an object able to obtain the position of the device programmatically. It gives Web content access to the location of the device. This allows a website or app to offer customized results based on the user's location."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties/read",
    "pageType": "web-api-instance-property",
    "summary": "The read read-only property of the\nBluetoothCharacteristicProperties interface returns a\nboolean that is true if the reading of the characteristic\nvalue is permitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Geolocation/getCurrentPosition",
    "pageType": "web-api-instance-method",
    "summary": "The getCurrentPosition() method of the Geolocation interface is used to get the current position of the device."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties",
    "pageType": "web-api-interface",
    "summary": "The BluetoothCharacteristicProperties interface of the Web Bluetooth API provides the operations that are valid on the given BluetoothRemoteGATTCharacteristic."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Geolocation/watchPosition",
    "pageType": "web-api-instance-method",
    "summary": "The watchPosition() method of the Geolocation interface is used to register a handler function that will be called automatically each time the position of the device changes.\nYou can also, optionally, specify an error handling callback function."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties/write",
    "pageType": "web-api-instance-property",
    "summary": "The write read-only property of the\nBluetoothCharacteristicProperties interface returns a\nboolean that is true if the writing to the characteristic with\nresponse is permitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Geolocation/clearWatch",
    "pageType": "web-api-instance-method",
    "summary": "The clearWatch() method of the Geolocation interface is used to unregister location/error monitoring handlers previously installed using Geolocation.watchPosition()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties/indicate",
    "pageType": "web-api-instance-property",
    "summary": "The indicate read-only property of the\nBluetoothCharacteristicProperties interface returns a\nboolean that is true if indications of the characteristic\nvalue with acknowledgement is permitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLSpanElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLSpanElement interface represents a <span> element and derives from the HTMLElement interface, but without implementing any additional properties or methods."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties/writeWithoutResponse",
    "pageType": "web-api-instance-property",
    "summary": "The writeWithoutResponse read-only\nproperty of the BluetoothCharacteristicProperties interface returns a\nboolean that is true if the writing to the characteristic\nwithout response is permitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/GPUSupportedFeatures",
    "pageType": "web-api-interface",
    "summary": "The GPUSupportedFeatures interface of the WebGPU API is a Set-like object that describes additional functionality supported by a GPUAdapter."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties/writableAuxiliaries",
    "pageType": "web-api-instance-property",
    "summary": "The writableAuxiliaries read-only\nproperty of the BluetoothCharacteristicProperties interface returns a\nboolean that is true if reliable writes to the characteristic\ndescriptor is permitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEColorMatrixElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEColorMatrixElement interface corresponds to the <feColorMatrix> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties/authenticatedSignedWrites",
    "pageType": "web-api-instance-property",
    "summary": "The authenticatedSignedWrites read-only\nproperty of the BluetoothCharacteristicProperties interface returns a\nboolean that is true if signed writing to the characteristic\nvalue is permitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEColorMatrixElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEColorMatrixElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEColorMatrixElement/type",
    "pageType": "web-api-instance-property",
    "summary": "The type read-only property of the SVGFEColorMatrixElement interface reflects the type attribute of the given element. It takes one of the SVG_FECOLORMATRIX_TYPE_* constants defined on this interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties/notify",
    "pageType": "web-api-instance-property",
    "summary": "The notify read-only property of the\nBluetoothCharacteristicProperties interface returns a\nboolean that is true if notifications of the characteristic\nvalue without acknowledgement is permitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEColorMatrixElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEColorMatrixElement interface reflects the in attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties/broadcast",
    "pageType": "web-api-instance-property",
    "summary": "The broadcast read-only property of the\nBluetoothCharacteristicProperties interface returns a\nboolean that is true if the broadcast of the characteristic\nvalue is permitted using the Server Characteristic Configuration Descriptor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEColorMatrixElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEColorMatrixElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEColorMatrixElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEColorMatrixElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/BluetoothCharacteristicProperties/reliableWrite",
    "pageType": "web-api-instance-property",
    "summary": "The reliableWrite read-only property of\nthe BluetoothCharacteristicProperties interface returns a\nboolean that is true if reliable writes to the characteristic\nis permitted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEColorMatrixElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEColorMatrixElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackGenerator",
    "pageType": "web-api-interface",
    "summary": "The MediaStreamTrackGenerator interface of the Insertable Streams for MediaStreamTrack API creates a WritableStream that acts as a MediaStreamTrack source.\nThe object consumes a stream of media frames as input, which can be audio or video frames."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEColorMatrixElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEColorMatrixElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackGenerator/MediaStreamTrackGenerator",
    "pageType": "web-api-constructor",
    "summary": "The MediaStreamTrackGenerator() constructor creates a new MediaStreamTrackGenerator object which consumes a stream of media frames and exposes a MediaStreamTrack."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEColorMatrixElement/values",
    "pageType": "web-api-instance-property",
    "summary": "The values read-only property of the SVGFEColorMatrixElement interface reflects the values attribute of the given element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/MediaStreamTrackGenerator/writable",
    "pageType": "web-api-instance-property",
    "summary": "The writable property of the MediaStreamTrackGenerator interface returns a WritableStream. This allows the writing of media frames to the MediaStreamTrackGenerator. The frames will be audio or video. The type is dictated by the kind of MediaStreamTrackGenerator that was created."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Metadata",
    "pageType": "web-api-interface",
    "summary": "The Metadata interface contains information about a file system entry. This metadata includes the file's size and modification date and time."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Metadata/size",
    "pageType": "web-api-instance-property",
    "summary": "The read-only size property of\nthe Metadata interface specifies the size, in bytes, of the referenced\nfile or other file system object on disk."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Metadata/modificationTime",
    "pageType": "web-api-instance-property",
    "summary": "The read-only modificationTime\nproperty of the Metadata interface is a Date object which\nspecifies the date and time the file system entry (or the data referenced by the\nentry) was last modified. A file system entry is considered to have been\nmodified if the metadata or the contents of the referenced file (or directory, or\nwhatever other kind of file system entry might exist on the platform in use) has\nchanged."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/muted",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.muted property indicates whether the media\nelement is muted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentTimeline",
    "pageType": "web-api-interface",
    "summary": "The DocumentTimeline interface of the Web Animations API represents animation timelines, including the default document timeline (accessed via Document.timeline)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/readyState",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.readyState property indicates the\nreadiness state of the media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/DocumentTimeline/DocumentTimeline",
    "pageType": "web-api-constructor",
    "summary": "The DocumentTimeline() constructor of the Web Animations API creates a new instance of the DocumentTimeline object associated with the active document of the current browsing context."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement",
    "pageType": "web-api-interface",
    "summary": "The HTMLMediaElement interface adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheet",
    "pageType": "web-api-interface",
    "summary": "An object implementing the StyleSheet interface represents a single style sheet. CSS style sheets will further implement the more specialized CSSStyleSheet interface."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/addTextTrack",
    "pageType": "web-api-instance-method",
    "summary": "The addTextTrack() method of the HTMLMediaElement interface creates a new TextTrack object and adds it to the media element. It fires an addtrack event on this media element's textTracks. This method can't be used on a TextTrackList interface, only an HTMLMediaElement."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheet/disabled",
    "pageType": "web-api-instance-property",
    "summary": "The disabled property of the\nStyleSheet interface determines whether the style sheet is prevented from\napplying to the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/durationchange_event",
    "pageType": "web-api-event",
    "summary": "The durationchange event is fired when the duration attribute has been updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheet/type",
    "pageType": "web-api-instance-property",
    "summary": "The type property of the StyleSheet\ninterface specifies the style sheet language for the given style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/src",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.src property reflects the value of\nthe HTML media element's src attribute, which indicates the URL of a media\nresource to use in the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheet/parentStyleSheet",
    "pageType": "web-api-instance-property",
    "summary": "The parentStyleSheet property of the\nStyleSheet interface returns the style sheet, if any, that is including\nthe given style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/controller",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.controller property represents the media controller assigned to the element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheet/ownerNode",
    "pageType": "web-api-instance-property",
    "summary": "The ownerNode property of the\nStyleSheet interface returns the node that associates this style sheet\nwith the document."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/seeking_event",
    "pageType": "web-api-event",
    "summary": "The seeking event is fired when a seek operation starts, meaning the Boolean seeking attribute has changed to true and the media is seeking a new position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheet/media",
    "pageType": "web-api-instance-property",
    "summary": "The media property of the StyleSheet interface specifies the intended destination media for style information. It is a read-only, array-like MediaList object and can be removed with deleteMedium() and added with appendMedium()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheet/href",
    "pageType": "web-api-instance-property",
    "summary": "The href property of the StyleSheet\ninterface returns the location of the style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/mediaGroup",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.mediaGroup property reflects the mediagroup HTML attribute, which indicates the name of the group of elements it belongs to. A group of media elements shares a common controller."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/StyleSheet/title",
    "pageType": "web-api-instance-property",
    "summary": "The title property of the StyleSheet interface returns the advisory title of the current style sheet."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/ratechange_event",
    "pageType": "web-api-event",
    "summary": "The ratechange event is fired when the playback rate has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notifications_API",
    "pageType": "web-api-overview",
    "summary": "The Notifications API allows web pages to control the display of system notifications to the end user. These are outside the top-level browsing context viewport, so therefore can be displayed even when the user has switched tabs or moved to a different app. The API is designed to be compatible with existing notification systems, across different platforms."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/error",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.error property is the\nMediaError object for the most recent error, or null if\nthere has not been an error. When an error event is received by the\nelement, you can determine details about what happened by examining this object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API",
    "pageType": "guide",
    "summary": "The Notifications API lets a web page or app send notifications that are displayed outside the page at the system level; this lets web apps send information to a user even if the application is idle or in the background. This article looks at the basics of using this API in your own apps."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/timeupdate_event",
    "pageType": "web-api-event",
    "summary": "The timeupdate event is fired when the time indicated by the currentTime attribute has been updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/seeking",
    "pageType": "web-api-instance-property",
    "summary": "The seeking read-only property of the HTMLMediaElement interface is a Boolean indicating whether the resource, the <audio> or <video>, is in the process of seeking to a new position."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/origin",
    "pageType": "web-api-instance-property",
    "summary": "The origin read-only property of the Location interface returns a string containing the Unicode serialization of the origin of the location's URL."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location",
    "pageType": "web-api-interface",
    "summary": "The Location interface represents the location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the Document and Window interface have such a linked Location, accessible via Document.location and Window.location respectively."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/canPlayType",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLMediaElement method canPlayType() reports how likely it is that the current browser will be able to play media of a given MIME type."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/pathname",
    "pageType": "web-api-instance-property",
    "summary": "The pathname property of the Location\ninterface is a string containing the path of the URL for the location. If there is no path, pathname will be empty: otherwise, pathname contains an initial '/' followed by the path of the URL, not including the query string or fragment."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/audioTracks",
    "pageType": "web-api-instance-property",
    "summary": "The read-only audioTracks\nproperty on HTMLMediaElement objects returns\nan AudioTrackList object listing all of the AudioTrack\nobjects representing the media element's audio tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/ancestorOrigins",
    "pageType": "web-api-instance-property",
    "summary": "The ancestorOrigins read-only\nproperty of the Location interface is a static\nDOMStringList containing, in reverse order, the origins of all ancestor\nbrowsing contexts of the document associated with the given Location\nobject."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/suspend_event",
    "pageType": "web-api-event",
    "summary": "The suspend event is fired when the user agent is intentionally not fetching media data, in which case HTMLMediaElement.networkState is set to HTMLMediaElement.NETWORK_IDLE. This can happen if there's no more data to load, or if loading is unnecessary; for example, the browser may decide to only buffer 5 minutes of a video in advance, in which case loading is suspended until the user watches more of the video."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/host",
    "pageType": "web-api-instance-property",
    "summary": "The host property of the Location interface is a string containing the host, which is the hostname, and then, if the port of the URL is nonempty, a \":\", followed by the port of the URL. If the URL does not have a hostname, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/captureStream",
    "pageType": "web-api-instance-method",
    "summary": "The captureStream() method of the HTMLMediaElement interface returns a MediaStream object which is streaming a real-time capture of the content being rendered in the media element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/protocol",
    "pageType": "web-api-instance-property",
    "summary": "The protocol property of the Location interface is a string containing the protocol or scheme of the location's URL, including the final \":\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/mediaKeys",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLMediaElement.mediaKeys property returns a MediaKeys object, that is a set of keys that the element can use for decryption of media data during playback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/search",
    "pageType": "web-api-instance-property",
    "summary": "The search property of the Location interface is a search string, also called a query string, that is a string containing a \"?\" followed by the parameters of the location's URL. If the URL does not have a search query, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/playing_event",
    "pageType": "web-api-event",
    "summary": "The playing event is fired after playback is first started, and whenever it is restarted. For example it is fired when playback resumes after having been paused or delayed due to lack of data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/hostname",
    "pageType": "web-api-instance-property",
    "summary": "The hostname property of the Location interface is a string containing either the domain name or IP address of the location URL. If the URL does not have a hostname, this property contains an empty string, \"\". IPv4 and IPv6 addresses are normalized, such as stripping leading zeros, and domain names are converted to IDN."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/play",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLMediaElement\nplay() method attempts to begin playback of the media.\nIt returns a Promise which is resolved when playback has been\nsuccessfully started."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/port",
    "pageType": "web-api-instance-property",
    "summary": "The port property of the Location interface is a string containing the port number of the location's URL. If the port is the default for the protocol (80 for ws: and http:, 443 for wss: and https:, and 21 for ftp:), this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/volume",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.volume property sets the volume at\nwhich the media will be played."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/assign",
    "pageType": "web-api-instance-method",
    "summary": "The assign() method of the Location\ninterface causes the window to load\nand display the document at the URL specified. After the navigation occurs, the user can\nnavigate back to the page that called Location.assign() by pressing the \"back\" button."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/loop",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.loop property reflects the loop HTML attribute, which controls whether the media element should start over when it reaches the end."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/hash",
    "pageType": "web-api-instance-property",
    "summary": "The hash property of the Location interface is a string containing a \"#\" followed by the fragment identifier of the location URL. If the URL does not have a fragment identifier, this property contains an empty string, \"\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/defaultPlaybackRate",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.defaultPlaybackRate property indicates the default playback rate for the media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/reload",
    "pageType": "web-api-instance-method",
    "summary": "The reload() method of the Location interface reloads the current URL, like the Refresh button."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/autoplay",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.autoplay\nproperty reflects the autoplay HTML attribute, indicating\nwhether playback should automatically begin as soon as enough media is available to do\nso without interruption."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/href",
    "pageType": "web-api-instance-property",
    "summary": "The href property of the Location\ninterface is a stringifier that returns a string containing the whole\nURL, and allows the href to be updated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/preload",
    "pageType": "web-api-instance-property",
    "summary": "The preload property of the HTMLMediaElement interface is a string that provides a hint to the browser about what the author thinks will lead to the best user experience."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/replace",
    "pageType": "web-api-instance-method",
    "summary": "The replace() method of the Location\ninterface replaces the current resource with the one at the provided URL. The difference\nfrom the assign() method is that after using\nreplace() the current page will not be saved in session History,\nmeaning the user won't be able to use the back button to navigate to it.\nNot to be confused with the String method String.prototype.replace()."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/encrypted_event",
    "pageType": "web-api-event",
    "summary": "The encrypted event is fired when initialization data is found in the media that indicates it is encrypted."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/Location/toString",
    "pageType": "web-api-instance-method",
    "summary": "The toString() stringifier method of the\nLocation interface returns a string containing the\nwhole URL. It is a read-only version of Location.href."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/defaultMuted",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.defaultMuted property reflects the muted HTML attribute, which indicates whether the media element's audio output should be muted by default. This property has no dynamic effect. To mute and unmute the audio output, use the muted property."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/state",
    "pageType": "web-api-instance-property",
    "summary": "The state read-only property of the VideoEncoder interface returns the current state of the underlying codec."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/controlsList",
    "pageType": "web-api-instance-property",
    "summary": "The controlsList property of the\nHTMLMediaElement interface returns a DOMTokenList that helps the user\nagent select what controls to show on the media element whenever the user agent shows\nits own set of controls. The DOMTokenList takes one or more of three possible values:\nnodownload, nofullscreen, and noremoteplayback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder",
    "pageType": "web-api-interface",
    "summary": "The VideoEncoder interface of the WebCodecs API encodes VideoFrame objects into EncodedVideoChunks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/seekToNextFrame",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLMediaElement.seekToNextFrame() method\nasynchronously advances the current play position to the next frame in the media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/dequeue_event",
    "pageType": "web-api-event",
    "summary": "The dequeue event of the VideoEncoder interface fires to signal a decrease in VideoEncoder.encodeQueueSize."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/canplay_event",
    "pageType": "web-api-event",
    "summary": "The canplay event is fired when the user agent can play the media, but estimates that not enough data has been loaded to play the media up to its end without having to stop for further buffering of content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/reset",
    "pageType": "web-api-instance-method",
    "summary": "The reset() method of the VideoEncoder interface synchronously cancels all pending encodes and callbacks, frees all underlying resources and sets the state to \"unconfigured\".\nAfter calling reset(), configure() must be called before resuming encode() calls."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/paused",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLMediaElement.paused property\ntells whether the media element is paused."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/isConfigSupported_static",
    "pageType": "web-api-static-method",
    "summary": "The isConfigSupported() static method of the VideoEncoder interface checks if VideoEncoder can be successfully configured with the given config."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/flush",
    "pageType": "web-api-instance-method",
    "summary": "The flush() method of the VideoEncoder interface forces all pending encodes to complete."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/disableRemotePlayback",
    "pageType": "web-api-instance-property",
    "summary": "The disableRemotePlayback property of the HTMLMediaElement interface determines whether the media element is allowed to have a remote playback UI."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/VideoEncoder",
    "pageType": "web-api-constructor",
    "summary": "The VideoEncoder() constructor creates a new VideoEncoder object with the provided options.output callback assigned as the output callback, the provided options.error callback as the error callback, and sets the VideoEncoder.state to \"unconfigured\"."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/progress_event",
    "pageType": "web-api-event",
    "summary": "The progress event is fired periodically as the browser loads a resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/close",
    "pageType": "web-api-instance-method",
    "summary": "The close() method of the VideoEncoder interface ends all pending work and releases system resources."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/volumechange_event",
    "pageType": "web-api-event",
    "summary": "The volumechange event is fired when either the volume attribute or the muted attribute has changed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/configure",
    "pageType": "web-api-instance-method",
    "summary": "The configure() method of the VideoEncoder interface changes the state of the encoder to \"configured\" and asynchronously prepares the encoder to accept VideoEncoders for encoding with the specified parameters. If the encoder doesn't support the specified parameters or can't be initialized for other reasons an error will be reported via the error callback provided to the VideoEncoder constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/waiting_event",
    "pageType": "web-api-event",
    "summary": "The waiting event is fired when playback has stopped because of a temporary lack of data."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/encodeQueueSize",
    "pageType": "web-api-instance-property",
    "summary": "The encodeQueueSize read-only property of the VideoEncoder interface returns the number of pending encode requests in the queue."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/loadeddata_event",
    "pageType": "web-api-event",
    "summary": "The loadeddata event is fired when the frame at the current playback position of the media has finished loading; often the first frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/VideoEncoder/encode",
    "pageType": "web-api-instance-method",
    "summary": "The encode() method of the VideoEncoder interface asynchronously encodes a VideoFrame.\nEncoded data (EncodedVideoChunk) or an error will eventually be returned via the callbacks provided to the VideoEncoder constructor."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/preservesPitch",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.preservesPitch property determines whether or not the browser should adjust the pitch of the audio to compensate for changes to the playback rate made by setting HTMLMediaElement.playbackRate."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortController",
    "pageType": "web-api-interface",
    "summary": "The AbortController interface represents a controller object that allows you to abort one or more Web requests as and when desired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/currentSrc",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.currentSrc property contains the\nabsolute URL of the chosen media resource. This could happen, for example, if the web\nserver selects a media file based on the resolution of the user's display. The value\nis an empty string if the networkState property is EMPTY."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortController/signal",
    "pageType": "web-api-instance-property",
    "summary": "The signal read-only property of the AbortController interface returns an AbortSignal object instance, which can be used to communicate with/abort an asynchronous operation as desired."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/videoTracks",
    "pageType": "web-api-instance-property",
    "summary": "The read-only videoTracks\nproperty on HTMLMediaElement objects returns a\nVideoTrackList object listing all of the VideoTrack\nobjects representing the media element's video tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortController/AbortController",
    "pageType": "web-api-constructor",
    "summary": "The AbortController() constructor creates a new AbortController object instance."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/duration",
    "pageType": "web-api-instance-property",
    "summary": "The read-only HTMLMediaElement\nproperty duration indicates the length of the element's\nmedia in seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/AbortController/abort",
    "pageType": "web-api-instance-method",
    "summary": "The abort() method of the AbortController interface aborts an asynchronous operation before it has completed.\nThis is able to abort fetch requests, the consumption of any response bodies, or streams."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/sinkId",
    "pageType": "web-api-instance-property",
    "summary": "The sinkId read-only property of the HTMLMediaElement interface returns a string that is the unique ID of the device to be used for playing audio output."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRView",
    "pageType": "web-api-interface",
    "summary": "The WebXR Device API's XRView interface describes a single view into the XR scene for a specific frame, providing orientation and position information for the viewpoint. You can think of it as a description of a specific eye or camera and how it views the world. A 3D frame will involve two views, one for each eye, separated by an appropriate distance which approximates the distance between the viewer's eyes. This allows the two views, when projected in isolation into the appropriate eyes, to simulate a 3D world."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/pause",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLMediaElement.pause() method will pause playback\nof the media, if the media is already in a paused state this method will have no effect."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRView/recommendedViewportScale",
    "pageType": "web-api-instance-property",
    "summary": "The read-only recommendedViewportScale property of the XRView interface is the recommended viewport scale value that you can use for XRView.requestViewportScale() if the user agent has such a recommendation; null otherwise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/srcObject",
    "pageType": "web-api-instance-property",
    "summary": "The srcObject property of the\nHTMLMediaElement interface sets or returns the object which serves as\nthe source of the media associated with the HTMLMediaElement, or null if not assigned."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRView/transform",
    "pageType": "web-api-instance-property",
    "summary": "The read-only transform property of the\nXRView interface is an XRRigidTransform object which\nprovides the position and orientation of the viewpoint relative to the\nXRReferenceSpace specified when the\nXRFrame.getViewerPose() method was called to obtain the view object."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/canplaythrough_event",
    "pageType": "web-api-event",
    "summary": "The canplaythrough event is fired when the user agent can play the media, and estimates that enough data has been loaded to play the media up to its end without having to stop for further buffering of content."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRView/projectionMatrix",
    "pageType": "web-api-instance-property",
    "summary": "The XRView interface's read-only\nprojectionMatrix property specifies the projection matrix\nto apply to the underlying view. This should be used to integrate perspective to\neverything in the scene, in order to ensure the result is consistent with what the eye\nexpects to see."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/play_event",
    "pageType": "web-api-event",
    "summary": "The play event is fired when the paused property is changed from true to false, as a result of the play method, or the autoplay attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRView/requestViewportScale",
    "pageType": "web-api-instance-method",
    "summary": "The requestViewportScale() method of the XRView interface requests that the user agent sets the requested viewport scale for this viewport to the given value. This is used for dynamic viewport scaling which allows rendering to a subset of the WebXR viewport using a scale factor that can be changed every animation frame."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event",
    "pageType": "web-api-event",
    "summary": "The loadedmetadata event is fired when the metadata has been loaded."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRView/eye",
    "pageType": "web-api-instance-property",
    "summary": "The XRView interface's read-only eye\nproperty is a string indicating which eye's viewpoint the XRView represents: left or\nright. For views which represent neither eye, such as monoscopic views,\nthis property's value is none."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/XRView/isFirstPersonObserver",
    "pageType": "web-api-instance-property",
    "summary": "The XRView interface's read-only isFirstPersonObserver property is a boolean indicating if the XRView is a first-person observer view."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/networkState",
    "pageType": "web-api-instance-property",
    "summary": "The\nHTMLMediaElement.networkState property indicates the\ncurrent state of the fetching of media over the network."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement",
    "pageType": "web-api-interface",
    "summary": "The SVGFEDropShadowElement interface corresponds to the <feDropShadow> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/load",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLMediaElement method\nload() resets the media element to its initial state and\nbegins the process of selecting a media source and loading the media in preparation\nfor playback to begin at the beginning."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/x",
    "pageType": "web-api-instance-property",
    "summary": "The x read-only property of the SVGFEDropShadowElement interface describes the horizontal coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/seekable",
    "pageType": "web-api-instance-property",
    "summary": "The seekable read-only property of HTMLMediaElement objects returns a new static normalized TimeRanges object that represents the ranges of the media resource, if any, that the user agent is able to seek to at the time seekable property is accessed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/dx",
    "pageType": "web-api-instance-property",
    "summary": "The dx read-only property of the SVGFEDropShadowElement interface reflects the dx attribute of the given <feDropShadow> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/setSinkId",
    "pageType": "web-api-instance-method",
    "summary": "The setSinkId() method of the HTMLMediaElement interface sets the ID of the audio device to use for output and returns a Promise."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/in1",
    "pageType": "web-api-instance-property",
    "summary": "The in1 read-only property of the SVGFEDropShadowElement interface reflects the in attribute of the given <feDropShadow> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/pause_event",
    "pageType": "web-api-event",
    "summary": "The pause event is sent when a request to pause an activity is handled and the activity has entered its paused state, most commonly after the media has been paused through a call to the element's pause() method."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/height",
    "pageType": "web-api-instance-property",
    "summary": "The height read-only property of the SVGFEDropShadowElement interface describes the vertical size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/remote",
    "pageType": "web-api-instance-property",
    "summary": "The remote read-only property of the HTMLMediaElement interface returns the RemotePlayback object associated with the media element. The RemotePlayback object allow the control of remote devices playing the media."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/y",
    "pageType": "web-api-instance-property",
    "summary": "The y read-only property of the SVGFEDropShadowElement interface describes the vertical coordinate of the position of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/waitingforkey_event",
    "pageType": "web-api-event",
    "summary": "The waitingforkey event is fired at a media element when it is first unable to play because it needs a key to decode the following data, and playback is stopped."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/setStdDeviation",
    "pageType": "web-api-instance-method",
    "summary": "The setStdDeviation() method of the SVGFEDropShadowElement interface sets the values for the stdDeviation attribute."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/playbackRate",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.playbackRate property sets the rate at which the media is being played back. This is used to implement user controls for fast forward, slow motion, and so forth. The normal playback rate is multiplied by this value to obtain the current rate, so a value of 1.0 indicates normal speed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/stdDeviationY",
    "pageType": "web-api-instance-property",
    "summary": "The stdDeviationY read-only property of the SVGFEDropShadowElement interface reflects the (possibly automatically computed) Y component of the stdDeviation attribute of the given <feDropShadow> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/controls",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.controls property reflects the\ncontrols HTML attribute, which controls whether user\ninterface controls for playing the media item will be displayed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/dy",
    "pageType": "web-api-instance-property",
    "summary": "The dy read-only property of the SVGFEDropShadowElement interface reflects the dy attribute of the given <feDropShadow> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/crossOrigin",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.crossOrigin property is the CORS setting for this media element. See CORS settings attributes for details."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/width",
    "pageType": "web-api-instance-property",
    "summary": "The width read-only property of the SVGFEDropShadowElement interface describes the horizontal size of an SVG filter primitive as a SVGAnimatedLength."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/ended",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement.ended property indicates whether the media\nelement has ended playback."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/stdDeviationX",
    "pageType": "web-api-instance-property",
    "summary": "The stdDeviationX read-only property of the SVGFEDropShadowElement interface reflects the (possibly automatically computed) X component of the stdDeviation attribute of the given <feDropShadow> element."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/error_event",
    "pageType": "web-api-event",
    "summary": "The error event is fired when the resource could not be loaded due to an error (for example, a network connectivity problem)."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/SVGFEDropShadowElement/result",
    "pageType": "web-api-instance-property",
    "summary": "The result read-only property of the SVGFEDropShadowElement interface describes the assigned name of an SVG filter primitive as a SVGAnimatedString."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/currentTime",
    "pageType": "web-api-instance-property",
    "summary": "The HTMLMediaElement interface's\ncurrentTime property specifies the current playback time\nin seconds."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/textTracks",
    "pageType": "web-api-instance-property",
    "summary": "The read-only textTracks\nproperty on HTMLMediaElement objects returns a\nTextTrackList object listing all of the TextTrack\nobjects representing the media element's text tracks, in the same order as in\nthe list of text tracks."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/ended_event",
    "pageType": "web-api-event",
    "summary": "The ended event is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/played",
    "pageType": "web-api-instance-property",
    "summary": "The played read-only property of the HTMLMediaElement interface indicates the time ranges the resource, an <audio> or <video> media file, has played. It returns a new TimeRanges object that contains the ranges of the media source that the browser has played, if any, at the time the attribute is evaluated."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/seeked_event",
    "pageType": "web-api-event",
    "summary": "The seeked event is fired when a seek operation completed, the current playback position has changed, and the Boolean seeking attribute is changed to false."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/abort_event",
    "pageType": "web-api-event",
    "summary": "The abort event is fired when the resource was not fully loaded, but not as the result of an error."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/stalled_event",
    "pageType": "web-api-event",
    "summary": "The stalled event is fired when the user agent is trying to fetch media data, but data is unexpectedly not forthcoming."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/buffered",
    "pageType": "web-api-instance-property",
    "summary": "The buffered read-only property of HTMLMediaElement objects returns a new static normalized TimeRanges object that represents the ranges of the media resource, if any, that the user agent has buffered at the moment the buffered property is accessed."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/emptied_event",
    "pageType": "web-api-event",
    "summary": "The emptied event is fired when the media has become empty; for example, this event is sent if the media has already been loaded (or partially loaded), and the load() method is called to reload it."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/fastSeek",
    "pageType": "web-api-instance-method",
    "summary": "The HTMLMediaElement.fastSeek() method quickly seeks the\nmedia to the new time with precision tradeoff."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/loadstart_event",
    "pageType": "web-api-event",
    "summary": "The loadstart event is fired when the browser has started to load a resource."
  },
  {
    "mdn_url": "/en-US/docs/Web/API/HTMLMediaElement/setMediaKeys",
    "pageType": "web-api-instance-method",
    "summary": "The setMediaKeys() method of the HTMLMediaElement interface sets the MediaKeys that will be used to decrypt media during playback."
  }
]