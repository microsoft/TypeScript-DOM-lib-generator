{
    "dir": "Returns the html element's dir attribute's value, if any.\n\nCan be set, to either \"ltr\", \"rtl\", or \"auto\" to replace the html element's dir attribute's value.\n\nIf there is no html element, returns the empty string and ignores new values.",
    "dataset": "Returns a DOMStringMap object for the element's data-* attributes.\n\nHyphenated names become camel-cased. For example, data-foo-bar=\"\" becomes element.dataset.fooBar.",
    "htmlhyperlinkelementutils-href": "Returns the hyperlink's URL.\n\nCan be set, to change the URL.",
    "htmlhyperlinkelementutils-origin": "Returns the hyperlink's URL's origin.",
    "htmlhyperlinkelementutils-protocol": "Returns the hyperlink's URL's scheme.\n\nCan be set, to change the URL's scheme.",
    "htmlhyperlinkelementutils-username": "Returns the hyperlink's URL's username.\n\nCan be set, to change the URL's username.",
    "htmlhyperlinkelementutils-password": "Returns the hyperlink's URL's password.\n\nCan be set, to change the URL's password.",
    "htmlhyperlinkelementutils-host": "Returns the hyperlink's URL's host and port (if different from the default port for the scheme).\n\nCan be set, to change the URL's host and port.",
    "htmlhyperlinkelementutils-hostname": "Returns the hyperlink's URL's host.\n\nCan be set, to change the URL's host.",
    "htmlhyperlinkelementutils-port": "Returns the hyperlink's URL's port.\n\nCan be set, to change the URL's port.",
    "htmlhyperlinkelementutils-pathname": "Returns the hyperlink's URL's path.\n\nCan be set, to change the URL's path.",
    "htmlhyperlinkelementutils-search": "Returns the hyperlink's URL's query (includes leading \"?\" if non-empty).\n\nCan be set, to change the URL's query (ignores leading \"?\").",
    "htmlhyperlinkelementutils-hash": "Returns the hyperlink's URL's fragment (includes leading \"#\" if non-empty).\n\nCan be set, to change the URL's fragment (ignores leading \"#\").",
    "image": "Returns a new img element, with the width and height attributes set to the values passed in the relevant arguments, if applicable.",
    "audio": "Returns a new audio element, with the src attribute set to the value passed in the argument, if applicable.",
    "option": "Returns a new option element.\n\nThe text argument sets the contents of the element.\n\nThe value argument sets the value attribute.\n\nThe defaultSelected argument sets the selected attribute.\n\nThe selected argument sets whether or not the element is selected. If it is omitted, even if the defaultSelected argument is true, the element is not selected.",
    "textarea": "Selects everything in the text control.",
    "click": "Acts as if the element was clicked.",
    "documentorshadowroot-activeelement": "Returns the deepest element in the document through which or to which key events are being routed. This is, roughly speaking, the focused element in the document.\n\nFor the purposes of this API, when a child browsing context is focused, its container is focused in the parent browsing context. For example, if the user moves the focus to a text control in an iframe, the iframe is the element returned by the activeElement API in the iframe's node document.\n\nSimilarly, when the focused element is in a different node tree than documentOrShadowRoot, the element returned will be the host that's located in the same node tree as documentOrShadowRoot if documentOrShadowRoot is a shadow-including inclusive ancestor of the focused element, and null if not.",
    "focus": "Moves the focus to the element.\n\nIf the element is a browsing context container, moves the focus to its nested browsing context instead.\n\nBy default, this method also scrolls the element into view. Providing the preventScroll option and setting it to true prevents this behavior.",
    "blur": "Moves the focus to the viewport. Use of this method is discouraged; if you want to focus the viewport, call the focus() method on the Document's document element.\n\nDo not use this method to hide the focus ring if you find the focus ring unsightly. Instead, use a CSS rule to override the 'outline' property, and provide a different way to show what element is focused. Be aware that if an alternative focusing style isn't made available, the page will be significantly less usable for people who primarily navigate pages using a keyboard, or those with reduced vision who use focus outlines to help them navigate the page.\n\nFor example, to hide the outline from links and instead use a yellow background to indicate focus, you could use:\n\n```\n:link:focus, :visited:focus { outline: none; background: yellow; color: black; }\n```",
    "spellcheck": "Returns true if the element is to have its spelling and grammar checked; otherwise, returns false.\n\nCan be set, to override the default and set the spellcheck content attribute.",
    "autocapitalize": "Returns the current autocapitalization state for the element, or an empty string if it hasn't been set. Note that for input and textarea elements that inherit their state from a form element, this will return the autocapitalization state of the form element, but for an element in an editable region, this will not return the autocapitalization state of the editing host (unless this element is, in fact, the editing host).\n\nCan be set, to set the autocapitalize content attribute (and thereby change the autocapitalization behavior for the element).",
    "draggable": "Returns true if the element is draggable; otherwise, returns false.\n\nCan be set, to override the default and set the draggable content attribute.",
    "top": "Returns the WindowProxy for the top-level browsing context.",
    "opener": "Returns the WindowProxy for the opener browsing context.\n\nReturns null if there isn't one or if it has been set to null.\n\nCan be set to null.",
    "parent": "Returns the WindowProxy for the parent browsing context.",
    "window": "These attributes all return window.",
    "frames": "These attributes all return window.",
    "self": "These attributes all return window.",
    "open": "Opens a window to show url (defaults to about:blank), and returns it. The target argument gives the name of the new window. If a window exists with that name already, it is reused. The features argument can be used to influence the rendering of the new window.",
    "name": "Returns the name of the window.\n\nCan be set, to change the name.",
    "length": "Returns the number of document-tree child browsing contexts.",
    "history": "Returns the number of entries in the joint session history.",
    "location": "Returns a Location object with the current page's location.\n\nCan be set, to navigate to another page.",
    "origin": "Returns the global object's origin, serialized as string.",
    "btoa": "Takes the input data, in the form of a Unicode string containing only characters in the range U+0000 to U+00FF, each representing a binary byte with values 0x00 to 0xFF respectively, and converts it to its base64 representation, which it returns.\n\nThrows an \"InvalidCharacterError\" DOMException exception if the input string contains any out-of-range characters.",
    "atob": "Takes the input data, in the form of a Unicode string containing base64-encoded binary data, decodes it, and returns a string consisting of characters in the range U+0000 to U+00FF, each representing a binary byte with values 0x00 to 0xFF respectively, corresponding to that binary data.\n\nThrows an \"InvalidCharacterError\" DOMException if the input string is not valid base64 data.",
    "alert": "Displays a modal alert with the given message, and waits for the user to dismiss it.",
    "confirm": "Displays a modal OK/Cancel prompt with the given message, waits for the user to dismiss it, and returns true if the user clicks OK and false if the user clicks Cancel.",
    "prompt": "Displays a modal text control prompt with the given message, waits for the user to dismiss it, and returns the value that the user entered. If the user cancels the prompt, then returns null instead. If the second argument is present, then the given value is used as a default.",
    "print": "Prompts the user to print the page.",
    "navigator": "Returns the string \"Mozilla\".",
    "plugin-name": "Returns the plugin's name.",
    "plugin-description": "Returns the plugin's description.",
    "plugin-filename": "Returns the plugin library's filename, if applicable on the current platform.",
    "plugin-length": "Returns the number of MIME types, represented by MimeType objects, supported by the plugin.",
    "plugin-item": "Returns the specified MimeType object.",
    "mimetype-type": "Returns the MIME type.",
    "mimetype-description": "Returns the MIME type's description.",
    "mimetype-suffixes": "Returns the MIME type's typical file extensions, in a comma-separated list.",
    "mimetype-enabledplugin": "Returns the Plugin object that implements this MIME type.",
    "worker": "Returns a new Worker object. scriptURL will be fetched and executed in the background, creating a new global environment for which worker represents the communication channel. options can be used to define the name of that global environment via the name option, primarily for debugging purposes. It can also ensure this new global environment supports JavaScript modules (specify type: \"module\"), and if that is specified, can also be used to specify how scriptURL is fetched through the credentials option."
}